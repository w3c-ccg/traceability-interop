{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b658c884-8677-49f8-aa2b-13fad0990869",
        "name": "Clear Cache",
        "item": [
          {
            "id": "75ad151a-6122-4e40-8253-7b9090e4058c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e532288-a652-49d7-86c7-ed2384a9e1e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ccf4e45-49f5-487d-97c6-3a37761f297e"
                }
              }
            ]
          },
          {
            "id": "d22f2019-9be3-4c3f-be53-d70223f7d00f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08bcd954-076e-4e2f-af11-2b63a61e708a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6a9f92e-da5b-4512-a3ef-b887950a364c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "847f6530-e9da-4039-a39d-a331b72314b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "73aa3ca7-b7f6-432d-b39b-00c22dac5b02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fed12990-f845-4958-b357-924e4074c162",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df444a63-21aa-4a8d-93ff-b22b461e455e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5915b512-1609-413b-b76f-2f7526e66a27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "717486c2-9990-4c10-ac52-e604d6be1c34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84c3a95a-e7eb-4a86-9eac-843b006e9eca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de588dab-dbdf-44cb-9d2e-d07999b04afe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6effb836-e0c1-4f07-9511-7b708e9ab36d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd95afd7-5e69-4bf2-bb55-296f0bfc4970",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b20887fb-6b7e-4dda-ae41-91b3bfe64e2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28a0d303-9860-42e0-b870-81954bd7038a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31de8126-07b5-4666-ba8c-75c3c50f730e"
            }
          }
        ]
      },
      {
        "id": "e93bb343-1297-4d0c-a912-81caf838bd9a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d548bafb-ed5a-45be-a3e6-d0f59070137c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3336add-dcd9-483a-a2dd-e502db5510d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86eb9931-d751-4388-9d7a-5ab0ec5240a6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e902f9-9c5d-4863-b288-18344f280d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fef6c8a7-1150-4c0b-9a57-991e919c58bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab48cc1-beda-4d69-b9c8-9c8c60a7eab1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31bacd5-4fe9-46df-b3dc-196c603326fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b018c2d-0277-4f96-a512-c49aa64764e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c28cc0-6488-4bf3-bbba-949ab7a19744",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230dc9d7-3a04-41fc-abe6-8d86fc25e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "895b6bca-c5db-47dc-8cf8-8d06849500ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0440d57c-0782-4e0b-b02d-0ef4fab4d59e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1a53cb4-87b9-4b27-80f7-c81618793d2f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00196e-7a76-453b-90f2-5a8baf5e7c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fbdefa7-374c-430f-a788-10a008ebfedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d30dc1-3de3-4d82-9782-2a8180eb8382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104b42ee-d8b4-4aa1-bd4d-b5cd8343b1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6948d5cc-d86d-4ff5-ba8a-2b02098d74ba",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a19d7d3-5868-47e7-837e-678519675326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "457dd54d-6c0b-4348-ac89-90f96f2b7908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d50603b-d9fc-4185-a971-0cd36e23af27",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d65652bf-e863-4007-836a-da94af6ef158"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "05e1463c-ef46-496a-9f1d-d1b5c6401cd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ee61d01-73e7-49d6-adea-e8b42cd0307f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7281c8db-4e0d-459a-8088-df2597d97f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "863c7746-1766-4c67-87cb-943412bb102d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c86db946-0b5c-46e5-acf2-68179ee9838c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fd401994-2573-40fa-bbbc-bf25f201af8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b49b64e9-367b-4753-8d2d-3171d629e0cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "474abdab-2eaf-475e-aba1-deda2d81ec0f"
            }
          }
        ]
      },
      {
        "id": "7374d361-2d09-4304-8eda-200f2b189df1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7eb295a4-2062-4620-9201-0e8418842318",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b23db1-64dd-4ea3-8836-09ca30e9e3ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2696fd73-8891-4ed7-8f0a-6aeec59b4105",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceca833-7a66-47e9-bf8c-9944cd4827ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7efd93-db99-477d-ad32-c253e3a5f019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390708a5-a3aa-45f6-bec3-5dc733fa9544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe160b85-f0a8-4b6f-93d5-369cb75f2340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc81543-71d1-4b11-a70f-90a48ae85364",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db8a39c-e67a-49d9-971f-e9e23376e37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3657289-dc1a-4279-9bac-36c07bc88140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a491f92-71fc-4013-9fc5-ac38bea2ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a0a82ed-8e69-4c98-960a-f8193a09688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f1c3fb-c719-4d48-a65c-b5ab9352a1ff",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea32735c-327d-4fb8-8d80-395efa461997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ddfbf5-1df0-4dea-b306-8d35ea089cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f2c90c-70ba-4187-9993-3a5c33c4789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2c3ff8-8a0b-4757-a2ed-bb7dc8f9e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41afd32-4d17-473e-beb1-de263cf49b8d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec5e3e4-9b0e-4eb7-80b6-57565b7f78e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b0c458-c64a-4349-a9cf-5e7377d839b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91499c3b-1743-4a50-a64d-19d49aec24e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59b7a17d-4bb8-4289-963b-367df28e357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b443157-300d-43b4-9988-4e06110b187c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac0d0ef-0992-4a5d-b9ba-ff35d6831d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bedbb51-9b4a-438f-808a-688f44504f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca36c274-5409-46b3-9ac2-19326807ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2babb1fd-3adf-4cf2-9dd4-8220ee10213a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d9171b-2452-4107-97f0-00d05677a57f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee11111-2d33-48b5-b30d-492582661acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e18482b-373f-47e7-be3b-3b27b97bba20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f31799-30bd-4135-ae49-585d6414c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9632f4c0-9449-4c1c-a25b-0d25d39d3c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cdec18-c6c6-4ea0-a987-191b6d8c1ddb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd9e2f2-f767-499c-a5d8-4c90c416eb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37be9348-f7d7-4a8a-a96d-0c4ab33646e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cec7e6-4e49-47c8-b2c9-677bea6dedb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4163e66-767c-4f48-ad2a-386928e04449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97542fc6-225b-404a-b1c2-1c9d3e1e548f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7346b78a-45f6-483f-a2a1-5bc3b8f90863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5299c863-63bd-4410-9bb6-81324d133a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92253643-6987-4ff7-820a-2612b8157fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54e23356-b2b7-4b08-81f4-ca958a1945e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df1de7e-3e5c-4e01-a8c1-aa2c59bc1e6f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3852fb8-180d-4ac2-8a6d-b9e32c435d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c4714-f74a-47b7-977b-1bc054c8fb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6a5538-6bcb-46da-9f5d-508f2d9d39b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73d28f1e-6e2f-4f83-b974-314756040ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f295fb7-a049-4aac-b6a8-2bfe0cbed629",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e8ca5f-5d85-422b-88ff-a36d9ffb97bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985c0f7b-f245-4bdc-b35f-27af728f8d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b3b34-6d56-4c53-9e0d-f952fe372925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5631c1b2-7833-4f56-8249-948b7f1862ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c838c321-a01f-41c7-9fc3-211eda37cf82",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6816bfb4-d592-4e4b-a509-bed7241359a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfc90ee-f568-4483-ac89-29b795435755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28488f66-168e-434a-b21e-20f6e07965b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77361cf5-ca3f-4c47-b2ed-e4fd8ae988d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb5f320-f455-4c99-bf5d-e6b31dbb2d69",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3111dd-9dbe-4e83-ad4e-c1499982d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b73c1da-8ca4-45a1-971f-a609d0bee852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d72228-8a9e-4d91-9f11-4283f329f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff83431b-fae7-4b9b-92bc-fb343fba851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b4632a-6ed9-4330-a470-14cedfcda930",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000b666e-46cf-4fd8-b416-6a41e3c58f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4722f5-1b62-4172-9d86-552b6e512e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9917d94-2dbc-4be5-9609-68d0af3fe1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999bf04f-cdea-4968-ba91-3d117f179eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7302f06a-ef08-4625-863d-d1d333527866",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b696754d-9adb-4451-9a7f-9f8a81011702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40866354-e861-491c-8e58-34f5eb466418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0befcd1-fb44-4f38-a947-58243ac08458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11a14ef3-ec93-4b63-93b0-7ac899c8b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3da51d-87d9-4de4-b5a2-fbeaa3ffc226",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a16a8a-33aa-4fdd-aedc-3ebd212dc9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093faf68-1f3a-448b-b712-8a75d450ebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e8a624-2c0f-4e50-8f51-f4b9c2d02705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "134e2f63-abb8-4a81-8c7d-c99f1f07b751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897c6049-9582-4be8-902f-abab3fac8940",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5b893b-470d-45a5-b18c-7ce5a3932097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a8a57d-d94e-4f2f-b99c-b7e45d1aca05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8779d69f-9237-48f3-b9d9-82b2eb9276d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50407a08-bc62-4a9d-806f-7822f161fd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c0d379-eec2-4bb3-8ae9-88fc2ca561e7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab3018a-1b53-4571-98ee-ba15b1329e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaca6bd-d446-4d03-8784-0ff5078c3d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04fe961-ee5a-4762-bd54-2dd6d0034029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53fa8be1-56e8-4bf7-b185-02b153d632ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa78f81-9886-4cad-a0ac-4828d2b6900d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b0ca60-213f-4fa7-bf5b-15ebd3eb756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3980dcd-92c0-4aaa-ad44-cadd0c1183e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267c6089-d38f-4566-8318-35148b8fe057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3900a67e-1167-45e0-8662-72537d7f2534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acbd84e-b02f-4a76-90dd-2a8023e2071c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2b9a3-5b54-4623-80bc-aed34b302aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31c66ef-b86f-448e-a1c6-101d7c4ec641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef8bb7a-3b53-446a-9378-50acd9321321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f71614f-1a29-498a-92f7-dcea9717bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a636310-bb90-49d4-95f2-cf38a06c9a90",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8265f1-498d-4486-ac88-7b50bab34d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4af60c-5987-482c-8d03-d8b65e0bac8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9349dfe5-fe6c-408d-a473-49d7eff6f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff066b52-ff57-49d4-99d3-7a9fb3cb2a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3180d4-9627-4f89-b48b-e2d146120c25",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cb3c7e-c593-42da-aa33-d3788f223a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e66ed3-1a55-41a6-910e-eb7458d91958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc89ff-9407-4d45-a3f3-e2059c6b6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d56748e-5981-4ff0-8af4-11ba143fef2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8481384e-1ca5-4e7d-a0f9-9696e0b9e253",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b13a572-4c43-4733-aa4c-fae589bf1e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699fbec8-bdcf-42dc-a537-785968cf4375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c708d2db-0d1d-4d57-b82f-5cbf926cff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52892aa2-e207-41ba-b25f-2e8a8fbc3710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09751837-b479-4519-be0e-ccee26047e3d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a946ae-e358-4098-ab21-f848f9a89c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96ef0c7-a48d-4bd3-b5de-4a2ae4e875c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e83261-62e0-45af-9789-58e6ab4e2669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7da6601-47c4-424f-b708-5b4529b242bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0865a78f-acda-4aed-8097-a8b5f87fc5a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637e67e-d824-42cd-8428-91e5e0aa3abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043960aa-5980-48fe-a970-d9e1e8cdf166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafe43fc-3f76-499c-9131-26761165a2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d698cb0b-37ad-456d-af20-11a3ded2b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8715e269-9f63-4753-861c-1533ff93fefa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26752509-32e7-4d05-ab42-683b4d7fa81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f4da4f-c159-462f-bf09-1ae7fc17baed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c9b52-52d5-45ff-b534-f9708dc1da9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "581648ff-86cd-49fb-b920-10e4d649c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358f707b-3f87-4e38-925e-4f614a9c39d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d067af2-a4cc-4098-a03d-8b7058f672c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbc8e5c-c11f-43e7-b353-3dd072774950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe08311-755a-42ca-b901-0b8ea7dcf280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7db806ad-79d8-467a-bfb6-23eaf12cf267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39345352-34b4-4f4d-899b-2deb0b165e4a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd724987-173f-4bd2-9955-1ee4bf1adcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b59e15b-40d9-4964-b837-f6dd8ac263f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6956698-b484-4585-8ff3-5995962b1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2334564a-332e-4e95-974a-6df17b8a9a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c17c3-f31b-4a25-9fa5-44b8005cc78e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234e7c57-df50-4403-b8d9-4ae9b953e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14e9d56-f83f-4588-9fdc-16a1af0daeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c23ad0-5282-4944-9f0a-080a7e7a6687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a46570b-4be8-41d5-9983-f4b6b8bd6ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e0a465-fcd9-412e-be7d-fe737bba3e2c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ebfe9e-f286-4675-aac2-de5c24ac790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316c1d58-f434-4e79-be5f-e24b54d8a46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0913d8-cf7b-4407-a42d-5ac405ca2493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90cc581-d6e8-4262-bfd0-6e365ab095b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e4282a-4e9a-4073-9d6d-3c2a3dcb9a73",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8977dc-4a2d-47de-b4f8-7880940f94f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2585b96d-26e8-4147-a291-8a3a292025a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8b27ca-8768-4ace-9857-ba99f97f5090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8d9e1d-f1df-48fc-a936-485fbc139e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcbd965-1c2c-4c50-8dbc-b60e8434df7e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75edc1d-d5d7-4b20-8b4f-0d6f472b5bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458d6fb4-d2ca-4b6e-b2dd-f19246b1e902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46ef709-5faf-4c79-bca0-c295e731bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "717bb487-20c0-42a4-9318-b8cffc93df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3550e56c-e01a-4a92-8d0e-2dbc56dd9659",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb46db7-46b8-4dea-9f91-cd2aebadf5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cbabfc-7987-4be4-bce1-0b280b5c8bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338fca9d-eef5-4868-a2b5-ef69d3a79e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6540c1-1544-43e4-9ff7-0b03f71757b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7b8a1-df79-488b-8824-ebe6af699bfd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa4bd36-0f46-4fda-b2fc-8c7833c11b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fb27c2-06ea-4a1a-9981-aadd6daa6698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0570224c-66ed-41f3-9ab1-ec09e972b398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18aa53c8-09c9-4845-907a-e5cbe142101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04707c9a-06a0-4a4d-b1c9-539e156920f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66fc5ac-4731-4b97-9c93-4318a226c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7dc5e9-a40b-4aef-aba9-88076dda01e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0af88e-19ba-476e-99a9-7deee950a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cab792-931a-4402-b2f0-0440fbd097d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003acb30-83d3-4a4d-9b88-5e6abc35d327",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25543587-d51d-4503-bd41-809d38f810d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158d4edb-0803-4212-8a07-ccf81f8f855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb0c589-7891-47c4-9f74-d324bf4aed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ce21f4-6db4-4b89-b6c6-782b596bdda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c003121-a451-4f46-8548-61cef68eed1c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f2614-c9e8-4230-b860-8507301e3111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ba93f3d-87b1-4db8-b49d-a3115c755bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c2c2c-7b3e-43b7-ae7a-7fd649f8b57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1233170-80cc-4e0d-b8c2-4bf318cf11bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d50179-e92e-4e85-8aef-3aa551706de6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e83d7f1-cdb3-4eec-bb47-3e2e4f430f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16811349-2415-41d5-b757-80c8504528d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06e41a-37dc-401f-a029-876e977f35ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9fd2c8-a02c-4e4c-818b-4d00fb1b3ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f21133e-07ee-4850-b20f-8a9784c83a04",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8c6043-e636-4cfe-8b0d-7f71d654ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7d490-275f-4e27-b075-2ec8422a1ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb2b90d-bd1c-4855-9056-1d281ff07c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9608424-6e05-471e-9bd4-add45a31cb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daad9184-36e8-4de6-915e-530ca1041678",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a574ee79-5e64-4930-99ce-69358355eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7fcfee-2afe-489f-99a4-3089ceb520f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f212087a-123e-426e-b52f-6272ffd45ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a52d452-b242-4496-9ee7-1774318f3db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e73208-4824-4a5a-bcf6-d3ce16bc9ea4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fd0e36-1fb6-4801-a539-614a157ac60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245d0c7c-0e4a-47ff-83e0-bdd9f3addc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70472d2-f479-4949-a9cd-4c3fc13cb72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "479e998f-ddb6-4102-9122-fcd494b7d9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9599cccc-1e25-4487-b556-cef0f85aca7c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f1fc7-1bc0-4aed-8d8c-7eefd0a87693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9980f940-e1b9-4cba-b49f-a5a78fb6b8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed804377-cf2e-4770-b930-704c25007b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f578899d-1c27-4de2-8df4-8c5c03e470eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf8fc98-7b83-4018-af8c-90ba5d471646",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856156d3-5466-4629-8a56-a5bcf2fe5bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13873b2-bd44-4bb1-8122-24eac1d77b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff72948-4c56-4ef1-ae35-a54e43c3b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c402fad3-0ad8-4897-8b7e-0f5a0343aa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5b64c9-e1bf-4d95-89b9-028343700195",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3835b93d-708e-4542-a570-ee77c41af235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e151b6-b995-495d-8ca0-abee69a8da01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f889227-7cc7-4bda-8bdc-b27a5712577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7ba81f-e9af-4aae-aa97-18eb36e265a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2242e30-351d-4e6f-9021-2164cedbc5b0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7107b4-3d39-4817-8f62-31ca389177c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b26dae-470f-4883-a30c-b80dd4e18802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d15c5a-f887-4317-a628-f745b85a155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e107ea04-5c7f-4034-9401-a095aa3c5e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a2382a-b53a-4383-9b54-00a063845409",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f55409c-f01a-434f-9ac5-f1a3a56b7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7591435-87fb-47f4-a05c-2a6d74a86858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c92ac00-3261-4465-8ec3-c1c5729a6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92db5d6-e080-4064-a30f-b9a35f13c58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59fe606-f8a6-433f-8561-749d6ae01645",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae516d-c526-4ba4-8f40-13c5a7706a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea2eee6-5ea9-4124-a916-3de2beea283f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514dd0fb-b2c3-4c7b-8e2c-91b4986fa304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5d8133-3ced-4cb9-b93c-c43997ed35be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6da7c5d-a440-4191-b450-64176287cf49",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f80fb6-08dc-447e-b903-002a414bc897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9f511d-ed29-47a3-a5dc-ed9ceb4353e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b4fb69-c7ce-433d-81a3-4a5874749525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebe91e7-1a36-4526-981a-dc216783380e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d86e0-bd8a-4962-be81-cc54d9d6d644",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec8e43e-0310-4ddd-81e9-7c5c2bdeacbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac421b73-02d9-4319-af09-660653fb30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5974258e-ad8f-445e-b8a9-57fe69d4add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7779f843-d657-44d5-b92b-57f531f8f417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42312c66-666a-46af-b25e-7a32860914f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6378ad51-95dc-4650-a854-ae56e0ad4407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fa2131-5246-4115-b206-3fb7d03cc2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bbd0f2-eb05-4c70-912e-24ab371f24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbea731c-ed6b-4705-b259-bcf320183353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab08aa2e-86f8-4e4b-b2cb-8ca93f20d45e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0da4d1-fc56-47e7-b396-112300f30fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdb0995-b6ed-4ac5-8f10-b9163373d729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3caee6c-b61c-4c70-a12d-c04f7ed27c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "224dbd84-5de3-47e1-b577-22f8ac58a028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423bd931-92fb-4cef-9686-3cd73fb0d633",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df609b5-5c81-48f3-8e62-e5093f1da421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62f5441-74b2-4a1c-80a9-ba410cb43dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80fd282-59bd-462c-a3b3-bb35310438d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f562235a-7929-421f-a4df-80619391bcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af1655e-6760-444b-88f2-27a2893b6bfe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b72450-fe1c-41a6-ba41-4af51af9dc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31afb1d-e65d-4100-acd1-0e6aaf11073c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b50463-824f-4035-a0d4-a188427263f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3ad067-cff2-4f21-99a8-614faa956327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128da5fb-3a96-4490-95a7-8dbf7bebb16e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b4526b-2bfb-4794-a0e1-c446909b3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2d4c4f-8d1a-4877-b573-e90456b26be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d46c8-6288-43db-a6fb-80499e6f61aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a131bc-f397-47a8-9400-f596195fb0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa493a-be6f-4d4f-ad1d-51d579e40c2a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab132b1b-a06b-41f8-aaae-cf56950a9dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db9993f-85cc-432c-9c8b-07ddba9d6d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746fa27e-edb2-40e4-924f-b41a22295641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8054874-536c-4787-be37-c0bb1a2e62a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879b486c-7781-426a-81d0-dd6e31010dc2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4119842-a7f8-42b0-af10-230de75f5325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cd108e-5d9e-4d26-ae2b-117dd39b6827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712937bf-4e17-4554-a4d4-6cfd5943dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14533e8e-6aac-417c-aa37-e7b6075153d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e8eba0-b134-41f9-a004-425d4738664b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00484379-6000-4b4b-9b33-5b7368d563a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85ae84a-667c-499d-9af7-c095fa096eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbf013e-532a-4be4-b6c0-2c057bf51d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7a863df0-d416-42da-af8d-08ddfd81b87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373683e8-817c-4b70-a9a2-8f28ef34a03e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af8bb96-5fd8-43a7-af42-3017f03b539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78314f1a-ee0a-40a6-b124-1326cd0012d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2635a6b-f0af-4034-ac51-3ba9ab52dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaed5ddb-748f-4570-9fb0-1d919b5c6af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fae4781-5c74-4450-af09-a7dac4b20686",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41813965-8496-4f94-bed0-6fbe85e9be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe7ebd5-8e2f-4852-96e2-7a3d15027ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dce09b-61e9-45ab-a08b-80ba4587f8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca83b432-6daf-4422-8091-20579648f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeded00-080d-4e62-9cc1-c6e88edc6694",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39463865-4431-44ed-b642-ce6717600683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e554e5-c8d5-4349-bf99-71661e71998d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d3a50-1ff6-4315-9fae-efdc46c7446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f999d0d7-617a-4a1b-a43a-44a287ac41b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae06fa7-1c05-47c0-8322-9e978275359c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235a5e16-9d69-458e-8b5d-111eed3b4fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab56ce93-1f8d-45d3-b836-415d73552317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9344b6-a37b-4705-8577-bead94fdefc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "065c2e56-e916-4fd2-acdb-9c96b6b83370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8be4ce-0139-4fb7-b21a-0574cb7c14ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b52ec5-7091-461a-b1e9-4065f6e41741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3943e6a4-0ef0-4f1a-b642-69b0f5c78168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00483c9-ba84-4aa1-bc2e-ce1c6fe81227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "091b2871-9680-4a9f-b073-95725d22f36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2f2ae-378d-452b-b2bb-6aa887aff57b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa22567-37cf-4fe3-8398-97aa81ddaf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df057aa7-7703-461e-a96d-c9db5d615178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494dc1d7-9467-49c7-92cc-190a6fcd9e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8fb0ff-7c8d-4f70-a4b5-490e26a35aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a4c453-43d9-40e2-8bfc-d1a3ec1a7752",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcaf13e-c135-4f05-8302-fecc953ef3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6020a966-ddf2-4bf2-94d4-2c9bce3d0b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfba462-2197-454f-8945-a93aad821e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa11667-3dcd-43cf-847d-21951b04a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087e311e-b3b2-401d-987f-d4c63698f87e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eb32ad-7471-4c0a-a143-3412cfb04c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6c4355-abb8-4d03-a6cf-01b93e95e162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593b13dc-384a-4f3a-830c-00ebf9783d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac5af5a-783d-4977-ade6-d21597e55a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d549d5c-bb32-417c-8747-9ccffa805ce7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ece4df3-ab3e-4262-8b48-fbaa1f1de78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911bfa12-4156-4c6e-a3b2-2fb4ba995b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51de6a5-9e9d-4b00-8c7a-8f24905e3447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a396c0-328a-4d26-9553-a74e4c869217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402745bd-3ad6-4e7e-bb63-61fe53f47a39",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089ac1e-a963-46b6-b445-19a33e3ce7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05af140f-2115-474b-a12f-dc1f97f276e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaf07a4-7631-4cf3-b463-e46cf49cb4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62482ac8-e5ff-4d9d-9baf-7615356ef892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21872653-1bb7-4819-ae1a-e5c8b663789f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba50de34-9e1e-40a4-b7cd-0d5237377e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dcfe07-728a-42aa-90e6-d716f7a037c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a69f4-4e43-4ba9-94d7-df69bc71097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0fe516-e4f4-4a82-8e65-dd180f1dff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a91bf3-7a3c-42d2-ac46-007e6a1e2d9b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b021340-7a11-433e-b1e7-02ffbaa6e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416cd393-e07f-458b-ae52-0c95afa2e8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec81d1d4-8455-4b7e-8e3f-cdd6261db60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9b224c-f181-4de5-a0fa-9ed2f374846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e8f75e-c59f-4a36-a2ca-9a174a6c8f44",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ad1b90-dcda-4760-8010-3861e6665f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5ed03c-1bb0-4ec6-9e72-881330b22cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11ecd6e-3a53-4162-8422-0ffb72b70a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec7a545-9214-42a1-9022-c7daa179e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd20e53-7fae-4a44-85cf-321fb2c4ce47",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a390765-ca37-47f3-9dd7-a159907bb060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefa1118-c1ed-431b-80fc-8e4a243ba73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b070b32-2d3a-4002-a803-c037e4994b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d752249-c4f1-405a-a17a-c5e80f5c8ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe2e7a4-7e35-4f17-8a3e-c164075c308d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed31fe-d54f-4e80-9247-2d549f355999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5458015e-632f-41c3-a8fe-210ebdc55cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735b88fb-a384-4488-af06-791eeb9e27cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "562a03fd-2a42-47bf-96b7-1c1e7ff7eab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd886b14-c3fc-4cd2-9689-cbd033da4f73",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867ef368-755b-4a7d-859d-8fc36963712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d98b2-c332-4e6c-b182-8ea84ffa5568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911e9c47-3dce-45b5-bb1d-26b95153f170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca1f99e-6d6b-4d4b-8225-00129a96ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005a8e6d-6f28-46f6-b1c0-a24c3b3d16c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b5106f-62e5-4193-a355-9f3be4768f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f669cc6a-2e89-46ff-b5ef-6872594a2f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87488402-30e0-4b2e-aac8-4c08e8e68204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80d0384d-3b40-46fc-85ba-b49db3bf8a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a19f187-b99e-4c1a-b8db-f0f3049a7d6a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5456d8a-0922-4674-a69d-efd67c03f312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa983e85-1124-4e31-b21f-e60bb1c46223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe2e138-ac70-4f31-9089-80c1f46d6ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21ddf4a1-d084-4e61-9a3c-950e4a6011a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18ec3f3-2445-4e31-b974-250e5c6b5990",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0848962-8995-478c-8fd8-f57b2593ff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a6291d-984a-46cc-9974-ded75a9499a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b273fd-fd63-42cb-bcd6-1f323d1022c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7c541f-5963-48ad-a3de-34ad9031f3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4522b75-2603-4be0-b33a-8e5553157391",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996c953-7ae5-44e9-b4a7-2d3d6e1f72a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1aa00c-b6c9-4aed-9e12-c04c248d0bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a512ff-c027-460c-b067-abfb0480c1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5df40c-b272-4c02-a070-43c90f9c6699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797ff246-b8e9-4112-a7e8-37fc2a23d671",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d47f280-7847-4674-adb4-d5c1d03b7830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dcfc4e-2f80-4165-ad72-15a738ae2811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8278e9-00dd-43ac-8d0e-3fe97af4a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "153196a2-9410-42a3-90be-247454cada16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f0615f-966f-4f05-922d-31853027fbed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980bc598-5ffa-4556-9ec6-0046503492c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd97a26d-9dec-4aee-a13b-e106bfb21d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c844cdac-8df9-439e-9fb7-45a499231f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3024d45b-163f-4a84-a824-9f6a91ccb65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad402ea-521f-4c4f-9755-c082a895869b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92ee546-033f-4626-9a73-a2bdfb7d7cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71aa8de5-8a51-49d7-aea4-21236bd26530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b6f16e-2332-4645-a85b-05fa9d1e8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6453d8a6-63b3-4c92-a960-3477776a0c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64862e-3e8c-4e0c-b729-e06656112837",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1b47b-3cfb-415f-bd24-3f8b4122a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a196df-d0c4-4561-be29-366bdfb13f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e2b583-dea2-4429-9420-6caa218fa1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e58540d-3923-420a-8789-b6ee77e898cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdffb27-8664-4a1e-8b6d-32a975cd857e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc98673e-fc24-4ff9-b4ea-03093b3daaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd6684a-967d-45d0-b420-ddb915c710a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b6089-fdce-45a6-9b54-7fa5ebdea820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea25e95-4426-4510-a71b-e35b98a6f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1162b7b-20a5-49be-b88b-1cfe6a81547d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b9dd74-684d-4936-acbb-46778e9f5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368ac934-dbbe-49eb-a8d9-59b83a24ebdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c044b08e-71a7-4859-b84f-e842ac599800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fedfc7-38cb-4ba6-a230-b01474fa726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd050b-d9b1-42b3-881f-379fed3ee3b0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526192d5-77e9-4df6-b9ad-4042910ab0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152f375c-ea9e-45c9-9afd-e804cd14adf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573408d7-0935-4946-9842-423d9964168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e43260-8fc1-4c20-beaa-281cbed685c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3704ebfc-378e-4dea-b391-72952780f482",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b89ffb8-c88c-4dea-b722-8cee7e36149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02509cd4-4f62-4ba4-bd1e-fe5e1c4f18f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03152ea8-599d-44af-837c-45829c4c1ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de6bcc3-9356-4ea8-af7b-3724c43ec0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9d0624-a1b6-475c-9594-39e79f821010",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14194b00-bad0-4630-8e1c-fa52e403cd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d3f4de-609c-4e47-aa31-b35e2e455fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d521ca52-4a15-4f56-88cd-1bbd4486a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09141a8d-f3d2-440b-af3a-a47e3d368ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26ccad-5544-4c1a-9a50-e274275d524e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a2a61-97c1-4ef2-a385-34a843105b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e7fe83-3686-4a43-a95e-f06c63b96f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd613070-071a-47a1-a099-c0c42e014446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84048b4a-c897-4a9e-9213-24c73aded609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e19cfa7-9502-41f4-874f-df34de1cb82b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8059bd-63d2-4601-858d-05316a30cb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b963922-0bdd-4fb1-a34e-3ba10e13b38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd199be-c9d1-48fa-96e2-a255884e463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2752ef-4e4a-4795-b1ad-585d7704ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97009d-e0cd-4121-a6cb-bd9f0715d49c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f3ada4-f593-4589-bdd2-76b37a9fe3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c774009-ed04-47e4-898d-72a3f759301d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bcc088-9879-4ca7-9a4f-d41a65fc2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26a2614f-dd67-4cc8-8a31-fb1f11b7b9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a72410-61c7-4a99-9d62-03e889e7235e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd4e247-111d-4e1e-bf1b-94788b6e76fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ae1485-08d6-48a4-a1ce-833ba4a9eb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35517f99-8640-4fe6-93e2-c809f2fb8fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a74c7447-591c-43a4-a913-9de1ebe7562b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084c8651-71e1-450f-a164-5155fda30945",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07a90b0-394f-4e15-8807-73662fd8ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d462c934-1692-4d2a-a2ed-94f6a00e2d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe17a1-9485-41ef-90ed-19f125c7fc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e62c6f0-cf7e-4a05-b917-756039681b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67776615-404b-487b-8c75-27c65a7e683a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b264e1-cbbe-4289-8b92-2914fa2d9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f0bb7e-94b7-4631-9f48-e295731e528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc333a-272a-4595-8a14-5c6fb9b1af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80bcb1ca-3451-4d00-bea6-48155cd45ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d060e31-857f-4e79-bf40-d1683e8c7814",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76676885-3a7b-43cc-9653-fb33402935b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e1cf1b8-d115-4503-8f0e-31cda16341de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7841aff1-ee1f-47a3-9c21-a94f62104b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4fc1a9-bcd1-4f61-b258-409d4486d787"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3e27bf3-49f1-4ccb-adda-5912dd798060",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24b15ce9-b4d5-41b0-b63f-0e8f0981eefb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f60376-1571-4049-8e37-5fa8818b605a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2060ade-5405-4373-8dee-657d86776119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21adae39-34a1-44a2-9df8-9e87190cce52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877a11d1-d4eb-4306-95b2-6f2f2b9d4cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c6e1aa-0062-4fe3-acad-c0e5b233d54d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a24b01d-5cdf-46e6-8227-9e85f8166805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01ed1590-715d-486a-8585-ac51021345ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db90a8d-ad01-48e9-8f2e-b7bb5c665a97",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "518e67a3-3477-43f0-bd87-a0c9f92521cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a676ef2a-b58d-42e2-9c2b-2cb576d25e7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25c369ce-08c9-4be0-8ff6-84ead11ee30c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef55af86-3d55-42d3-9a94-3c13c5fb4c06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e85da9b6-2fc4-4f3f-947e-0779fa9be438"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75d5cab4-5031-46bc-801f-757324f54208",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00158536-14c0-4a34-b86a-a22b6c62538a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e16b313b-08d5-410d-bc08-addac597f523",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a450bb73-310e-448d-87aa-d90f08215eae"
                }
              }
            ]
          },
          {
            "id": "a73214b2-d371-4f10-92f4-77e625c8580c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3517e3ce-7213-40e1-8c33-fde827a59d0f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5320de7-0420-4832-9bc2-4b0e80f39254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbce775b-7e14-463d-86f1-697d7a7f0361"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c403247a-4160-4739-bc96-0366b2b782ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e08e8d9d-a676-4a1d-a0e1-13fb1949c494"
                    }
                  }
                ]
              },
              {
                "id": "54537433-2edd-4ea9-808d-50bab3160fe5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce22ace6-5ad1-41a2-b30d-e2074bcd19c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adeadd9d-94c4-4b5c-860a-0ee0167d4651"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "449328c2-54d9-40e3-95b2-7ce229d174b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b204a071-6992-4287-87f5-9042449daf65"
                    }
                  }
                ]
              },
              {
                "id": "2f771529-2b45-4804-8848-7a577db4b158",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e1b0d9-15ab-4916-8f45-1eaee44b6400",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f09f4f2f-f549-424d-a7b3-1da0a99d1c3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2136f1f4-2e50-44f8-8597-fe00efd6cb81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6c67467-7138-4e95-b956-8a267998d7e4"
                    }
                  }
                ]
              },
              {
                "id": "39f5db42-055a-4c85-9c9e-87b9c6a1b3d1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f82f88e2-b600-4bda-8efa-d7e98756c5b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0878a2c5-3c4d-41ca-ab41-dcb02b2c413d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4f5fa4f-a0b1-472f-a298-f908b0cae32e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5219194c-fab8-4829-8008-a2265088e0c3"
                    }
                  }
                ]
              },
              {
                "id": "6866602f-09da-45fc-8e39-169a0249a7d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5297ac88-fd81-463e-9c43-dc0a0c9c5328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62f91518-6258-4639-8b0a-130e48240242"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adeeedd4-4b3e-4ff0-83ec-ffc96274627b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4f920a79-e023-4d53-9c5b-5569d4392f31"
                    }
                  }
                ]
              },
              {
                "id": "3fb6e95a-90d8-4e28-be5e-3f21fb754deb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d49f66bd-219d-48a4-bf6f-f96a72c30482",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82a54b7e-3e89-4baf-92db-acb9369674e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddcce991-dcc1-4c8c-b63b-88062eaf9da0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c8c25d1-3b75-4956-ac88-c78b40d59f36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10dd5d58-e464-438b-b4bb-bd56c9c6c6fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcedbfa7-7eef-400c-8ecc-87eec0146790"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fc78968-9305-457c-bf1f-52758807cb54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57a37b99-f39a-497e-8fa1-dda7107dadcf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1e42e04-8e37-4f95-93ca-3c455528007f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d694d50a-1c20-47bd-acc7-d1948d105251"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6877f99d-bf95-4662-b969-f38f373ada95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fd7dc09-81d5-42bf-9c8b-9528da78273e"
            }
          }
        ]
      },
      {
        "id": "6c563ce8-ad2d-47fa-81fb-e59feebb9610",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "416c6d67-4474-48b3-971c-28635145153e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "feb0181a-6eeb-4a33-92c2-1c29e80b9beb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07c23b3c-b6ac-4e2e-9264-086ef64ceecb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e803485f-9332-421f-adc1-27e713ad2a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a1cd3e-6ff3-44ee-a9f4-8de295e427ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755165d-7363-43d3-8e1e-32fe412179e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b74fa02-9424-4044-86e3-bf46fe74f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d86ffa-a433-419c-bffa-a643761683dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ff548-5347-4cab-aad1-e5db3acf0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd19907c-5909-42ff-b4cf-949a716ae2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b89a82-093c-4232-9068-bda96c3d7d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaf169e-db90-4187-bfec-686a0c6887d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c030e92f-3db9-4d95-bb52-34c1c52f5f31",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58c0a4-2456-4d40-8e46-abee47f585aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113a4bd0-3701-4466-85eb-960c3327bdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9ffbcb-643f-4d23-a166-e4005271148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17aa6519-a058-4c0f-a3b2-6682e502047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c34a61f-d4f1-4e63-ab79-82786709a8cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6948791-ca13-4977-ba58-cf53fe3151d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545ab35d-d4bc-4b9e-a772-11b9da281d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f26aba7-5272-4d0e-95b1-64128d42460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf39e11-122a-41b6-bc70-accc97885536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a3d5e3-d5dc-4b0d-86e1-54b8e6e19b40",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8af539-5b35-4708-9f8a-643ef5f59477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ca4107-c3f7-4e7c-bf54-18b547c5e833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52992d09-9d23-4573-9706-3841905a9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4feaa82-5b31-477a-a616-b86facdd2586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54708485-b77f-4576-b1d3-747492e61fe8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e0459b-5a6c-4260-9b75-9120d9920fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9fb804-22fe-4caf-ac7e-7eca90d342ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f4ebc-058a-4e7d-89e8-30bb7fa8ef79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e287e898-fa20-468c-8ff1-4b26a1da1a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b68b62-a741-475b-8571-ede97a6dfeb3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d7f658-1249-47bb-9c15-c00c7ccb35f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255c2f66-142c-4012-af07-99589e8361b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2678888a-3c1a-4498-939e-c3baebd0cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3351130d-81d4-456e-b4ea-265063a99ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a604edc-7ab1-42aa-87aa-9ba9ec2d2009",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f8568f-9822-4fa2-9805-54f89243b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624543f5-1bba-499a-8f31-90b47451739c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f81161-e07c-4adf-a903-6e50ceb3ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "867c948c-7f8a-45bb-ba85-1027e5e2722d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9809b1a-cb57-46e1-83c9-da12e9cf6805",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac6ae52-6bbf-4fc4-99e0-dbda44bb842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a94de0-e19f-456a-af48-70aa77b03fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1253a1f4-3957-483f-9773-9bf84bb973ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bba3155-3d1c-44f0-a3c6-7ae8d61c3c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989fef8e-b12f-44f9-b137-27fc20e23b77",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6477be-38a5-4f61-aa73-ce0355560721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a2aaa8-40ef-491b-97bf-20c2d8317454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e16804c-bd1c-4d42-812e-61587f3c7b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9148ec4-f2e2-4929-8352-1ef2c122154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a18dd-dfbc-4d20-be54-eb3afd554ef9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff38c36a-42bc-468f-87cb-c2e3cb6019c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a61844-86f8-4dbf-8709-360c0f989dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5609ab12-a1f0-4fb5-bce7-59a3b5aefb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3308640d-985e-4597-8e56-dc73fd25036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04a9076-d49e-4ab1-afa7-fcb7bc1584f1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366444c7-dd04-4759-83ec-42a30d77f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3502b64d-a0ca-44a8-99a0-1aeb43d4b4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3184fcc8-b08f-4432-bd90-542e6c09ed8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d60b982-ce28-4fc6-b449-2dbac8f1cdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e255c1-df72-4722-9581-44d5131f6280",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2e8d59-209c-4be4-8074-7af8463cce73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da50cfe7-c1f3-478d-b6df-30d8c64b75a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc2551c-f3c4-4b18-a1d0-90336802162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5c2c45-7062-4844-9dc6-4b6c96579bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ea87b6-b385-4f89-8e7b-e4b19741d587",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ae9cd1-f3bc-4294-86bc-5bede3af94e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f019b0ff-6473-4a44-a677-dcef436ab128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93e0648-d251-4ac1-a79b-b687fcdd677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79846818-5509-4b36-a8ee-ce96d8873363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de40d1f0-d0cc-48d7-be12-c23b272a98c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afcdf7f-8cea-4918-9b11-3769a5e2fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8dafe2-8091-454a-b1e2-b6f0af732d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e1ed54-d458-4d3f-b6fb-2d17465bbdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "674a34f3-b1dc-4641-ae96-8dd538f4972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d078b4ec-9672-478c-bbae-c19a30cbfb88",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d93ae06-0755-4009-9eb7-615056f5c8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46eb3fe-c09f-48da-b2c9-c55862d031e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8e30b1-36d8-4b0c-b5b3-98a24839efb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0802ae-ed4e-441e-9720-9d3a17f1a690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e27a82a-9e92-4f57-8634-56c24e18f57c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f01b1e7-afd1-4863-9004-190ec70924b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6331238f-4843-47d2-8cea-d7b5f9645d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195cd954-ac71-4afe-acf8-e7b9bdf22520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a19d29-dd1a-4097-9ec9-6e6a345a6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4226fb8f-1a97-4295-9595-f00186211757",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2018b301-c196-47ea-92cc-cc94297022fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e791ebba-d29d-441e-b140-c90909493887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b616f-51cf-4f75-8189-1b199a443007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b84eabf-8c83-4f5c-82cf-11dafc958b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29b54a4-d8d3-4ab1-8e1c-51a9c901601c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0346f35-f274-4937-8fd9-6339001f0087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08fcd2e-ca7a-4ffe-bc67-8192b4be7e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed23b03-e20b-43a1-a1c1-16d3badf5ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f3fc2c-6f69-4f29-a646-31566b0404b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06917322-8d06-41b7-a824-d52df584b538",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0003a594-8633-451d-b850-7967f5ed95de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70efd16-577b-4f18-b592-638eb22d74aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b51f52-d5fd-4b6f-a0e2-3dd3b8b2539b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7d9f62-1275-49b1-a1b6-c56d85d2f0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879632de-f1dd-451c-b7ae-ddc308425e33",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90951d2-9678-444b-9584-1ed9f915844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6633336d-68d2-44e5-9e0b-99018c8dac24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f0b557-fc78-4e2d-8bce-da1321cdac41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5c3dd6-55ba-4996-8427-c7285a25346e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e6173e-b3a2-4c20-b7d5-e808a1700005",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8773c00-26e0-4a21-9e63-56cfca111b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d628f86c-ae98-44a3-8585-aa79d783ca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b344558-4e0c-4c2a-a140-5576d0f0330b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9948823b-ac98-48ac-9e1a-756e76fc1c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e5f8f-7dda-441f-87fa-1042656f1348",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35461d2c-fad5-4b7e-8675-3608f6e023cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe41f929-aefe-4964-b83d-f078316620f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043d2417-fe79-4055-8c68-777fa8676bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c119965c-83e7-4834-839c-2cc424a64c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c0c080-e818-495f-b257-4c61190aa4c2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28312c-71d5-4b0f-916f-aaad778277b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c1a123-8830-47bc-aad2-706ad438081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf1c1a8-384b-45b0-b7a8-578659532969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ec7e65-7d84-4fd9-9e52-79e0ab830f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091bb7e7-811d-4a69-8f7c-9432879da20e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f8f33f-eb2c-48a5-a892-986e86392749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badae7e8-e844-4513-afa9-0a02c7bfc153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9480cb-7aa7-46fb-b52b-222fa4a44dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bfb7ad-3f50-469b-82f7-d895eb58a099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a53c5f-0d37-4c64-ade1-01128804e2a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976f20fb-1a70-4f1e-ae0f-c10cffe19319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57302511-fe10-449f-b730-020487fb8fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0317661-bad1-465e-a754-2675f773be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "345fdfcc-d219-4117-8f62-897782c0e2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c20690-78e2-4b28-801d-d06f51d9836e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cfe1a3-1164-4c69-8ec0-ca3d66fa8bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb6be23-eec0-414a-a6a7-8e919072853c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761e5eb-23ea-434d-82da-58609ff3779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b63609-70f7-476f-8972-f3c81b44b50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90662aec-155b-478d-a5f2-e35afe3b8567",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f2ff20-0d9e-4fa0-8b3c-475f1c21c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60de11c6-7240-4a46-8105-9fc81c395cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a458d5-d4a2-4509-a8eb-f1c86bf3a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09368bc4-6398-41d8-bd93-8ed485e62063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f2ff6d-515b-4b32-b3ca-c790d532eecf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64d3cd1-f8c6-4064-ba38-21f0d2e69811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06cfd73-1fce-43a3-a7e3-499a2ba7f70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f94352-7eaa-429b-918a-a1625985e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67d0572-7df9-4f55-8891-3d7d7fea836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068c9446-3c9d-4541-a2ce-8c062b5ae956",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd8d069-5fbe-499d-a0b0-3e36161da2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a5b700-52de-440f-8814-108e79c98b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f9e467-4915-454a-88d6-8ca259d09f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e88446-5d28-45a7-99df-6a91286dd366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c40b4cb-1568-4295-a633-f792c8e7093a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6bbfb3-c25c-41a0-bb6e-2d19eea7ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac6d0df-23eb-47b7-8613-56d48540cde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b11f7a-6a9b-4fd6-a343-84b87d2d54d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f28dfde-2933-414b-acd5-cca4acf410e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b15b92f-3a26-491e-b05c-fc8b828067ce",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77571dd5-7eab-4dca-8181-4ea9f224c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b95b96-1aec-4948-b190-80778741be2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf4657-a82e-4f25-a08d-3af29233cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf906ca-3601-4843-b5df-adaa5f1648f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b183d74d-cd1a-4b18-9cbc-91af1866b817",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c660381-f4a3-4c32-863b-fed3d223c598",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d1fa58-fc83-4692-ba0a-f9c7f8d51692",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f4c534-ec4f-416b-aeeb-7beeca671000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe28005e-2336-4643-a1e9-1655dc12ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e8b7037-82da-402f-89fc-6070030491ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f9a8ad-09df-45c6-bd7e-b87f694b73cc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0689b660-b4e2-4690-86f2-352f45c7ece6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c25b37c5-322d-46ca-a45c-8c8f5cbd0e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9379f849-8bb0-49e3-87fe-95bee2aae18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6aec194-0faf-4387-a200-f9c210d2a60d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ff1d09c-ed9b-455d-92e4-4c020e4dd25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49cb1076-659b-408c-b8c4-b83f26d8ad41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8bd6cde-3901-4c52-945b-7a39727f49b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50b42e08-5ee3-4316-bbf3-35a9a8f3b393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5efd3e0f-df0c-46ff-97ec-e0488602d458",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44d6cf49-7851-4c10-8895-fb2a9f2e4afc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e266349-5e80-4e6a-9398-228ffcff2e7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fdc38ee-c1cc-4943-b61f-01881d8cbbfb"
            }
          }
        ]
      },
      {
        "id": "40ca5eaa-0ca6-44aa-8841-959511798c68",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "66482147-3b51-4cd1-a282-0084512c99b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb6782a2-bf88-49c8-b9fd-5425f0986c2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9591b45e-dc2e-4026-b479-0b3ae8f53825",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68e9ddd-d402-48c5-b909-f7e48c22d9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111bca75-697b-4566-8fed-cf8dc0ecd392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea932ec0-0048-450a-bdf7-e7d13c4881e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f422e8f-0e30-494f-ba72-6dd10094eae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a6f431-42bf-464c-a947-c8715144d0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad25936-ac5d-437d-850e-1b16f65e94c7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65554473-66c8-4b35-a14d-91fced215eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6621942b-4ca3-4f8e-a300-94d8a51208ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799c096d-93d4-48dd-a588-3b4858270228",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b36789-f90d-4b8c-933c-57d2916949e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8de44c-08e2-4907-b12e-65ae3d6a4472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3b679-8683-45ba-bfba-440618a8512c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf93c62-708d-4c4e-bfea-618e0b474193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc88c7d7-060a-40cf-aacf-d8f0711892bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edb4899-e159-4925-8e6d-255c2eecf1af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80cc1b-d365-4fbd-8ea2-533d39c98a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d723071-89fa-4648-b44a-9342ef889baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa4fed-b0fa-4ff1-a42e-65e820b6afc4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4ff646-6951-4a49-88a3-d91d85beed27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d31b9a-4500-46bc-a806-ffd613fbe237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bad332-5ac8-4765-b7de-528b2bb7888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e4dffc-2095-42c9-b192-26e1fe91fa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf767e74-daac-4348-8da8-804b94428a66",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d92688b-3f88-4473-93a6-bc9175da5fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bf3192-2f99-46f1-a9e2-001a63ca5f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734a3c5f-eb54-495b-8b72-21838f46fad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a5c394-311a-4f6d-bdfd-5a1e671695b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839b81e0-e694-423e-9c83-6dfc7de163a9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae2370a-5a92-4d41-9e3b-3a698f53eaca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4236933-95bc-4993-8473-29820107cafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4755bac-a6c2-4cbf-bc22-dbd505ac58f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f6fab1-7741-4092-87b5-4ffb2efafc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b76ab92-99c8-40e5-aaf4-011b13f7e51e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f1f36c-fa85-4056-870b-80190ae359a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79c8095-c73c-4a65-9ffc-2af9d444f086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704e495e-f5bf-435c-b26e-6cb236f095e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973ddac9-79e8-4530-84ad-587a9ad392f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5457eb6e-dfe7-477e-938b-535a45932025",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d14658-4a0e-4d73-87eb-2b8edd442dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95ae168-176e-4661-acee-2cc65e269d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255f43da-3670-433b-8990-01314c880bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b2b1ca-7308-470c-9f7c-7eccf9ba39d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ab216b-a5ba-44bb-9141-93960e1e48b5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0968da0-bfdb-4f90-880e-6b24700c4a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a08517-a00d-4c20-a8c7-f6802cb76cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd1f801-e5a9-456a-b342-e792941d3cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ad436a-dba4-46be-970b-39a69da80186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6680761-ffba-4dba-993b-03472c403575",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3233446e-519b-47a4-a4c1-c382a351715d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e93cedc-d84e-414d-8e55-76c9bee36f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e9bf9-4dce-4a61-857d-0c0ba4db9039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea18e2b1-fc5e-47b0-87f6-f93020fd7da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d48365-cb31-460d-b0ba-ad6f44e03d0d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76105483-6f7e-4058-819b-fff3ed0cf473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3773cc-0318-4ab7-b667-09287ba2ac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b186b7a-c752-4e84-acf3-f756d9aa873a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f966f5-7167-4c42-aab9-6d7aeb189772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7125173b-5554-4ea5-8624-5934de107fe4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46e8d1b-a1c7-4249-bd88-b59dc5d0db7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f070ae49-e83e-457b-9dff-a02f727c1533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f8d9be-a84c-4c88-b3cc-9afd26463042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1073058b-e60e-41f3-bea3-4a63d66626f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c2f731-84ba-43e9-85d0-70b62016ae6e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a34902f-009b-454a-9435-b9998411c56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "173c5634-c410-4179-9caa-c58381b2ce18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da52e4a-cb4f-45ad-bb72-61a45842f171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b22bb5-1242-44a2-90d8-5cc1e0b117cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa43668f-a4e3-41ac-af62-8f8e8d0796f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c0b6da-aab7-414e-9129-d2a28d1dd8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e631e60-11e0-4395-ae7e-bb59e35dad02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5465e347-1383-427f-8194-68f052bab558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4443c98-35fc-4dee-8599-b527d7b6ca14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f235fcd6-65a3-4c40-853f-e908806201da",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e918e75-ac8f-4114-adbd-c570901150ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fc9f85-5636-463b-9a94-e55e1dd7bb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0c42c-2e99-4fc0-a456-cf6e146a98c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfbe3b7-78da-4d7c-9877-ba5b336d93be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a07986-8858-40be-aaa5-f63106628872",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afd6227-1355-4977-9673-200492f0e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6b1a6c-4749-4056-a710-9a2363b82d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b5beff-4a12-40ac-bad2-052920f3fe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a193a50f-c246-45ca-bf59-55b1b661087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ac28ad-9e5f-4e0f-869d-0eeb277ae231",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab2ac15-c8c2-4ec1-8d06-2c8e40baa8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ba63c5-58c1-45bf-9525-4ef2e829799d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55029845-5ed5-4bfa-89f4-b3b0b9031415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c180fc8-9763-4bb6-a2e9-f7cfb5ee8b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1ed066-d934-4fa2-9039-dc4f2734f5b6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516210d9-cbb9-4da8-9782-60646ae39655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7833425-22e0-4309-ab7f-7022477f4565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16f0b0-84c6-4ea1-9923-aad8af265940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2effd0d8-3e91-4c8a-82ce-d7f09b6c9686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f62c758-8590-48d1-a12a-19a4e1409d2c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2773a8b-d6b4-471f-8258-8db13519e295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cd469a-bc60-4ba5-b211-5ac7ae1acd4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e49999-2f18-4f22-b310-084f0758450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e9aa02-b56c-420a-8097-3b33d7be3d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf263e7-c0d9-4a2f-9cbe-0df231392108",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724602c0-653f-4e5d-8107-99151c0b1a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65193e33-f183-4ee6-bb92-34c65a52a206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f4adcb-7d7e-45ea-8116-03fdce01ce9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256555e9-74d3-41ff-bbf7-1793e5bbca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9929e8b2-c03b-44f2-ba71-d97bc65014ac",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bea5d6-177f-4091-9465-60bff7b45878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2b0e1b-94f7-4b43-b4cf-a6ba01eb5b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5558a37c-855d-43ce-90f2-55cbd806693d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b217f63-bf76-4c6e-bce0-c19ba6d50d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60151e7d-0efb-4218-999f-2aef43b12f09",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef884c0-77f0-4f1c-9268-7087081c9a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da0c489-5ea8-4afc-82af-fe875cd0f624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b5c719-ce00-49b5-b3a0-bc22d776dde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0653aa40-59f2-4cee-9b7d-3887fb2c3752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbc1e5b-8cf5-445b-be87-2971519b2ba3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0e18df-5221-4678-9906-d8fb0501b569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a7c774-48b5-4a39-b883-99d37350114f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7783ee53-6093-4d0f-afad-ba9b34a698b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b6e198-3aa3-44a9-b35a-c412e0e05444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da3fd76-ea52-4341-be79-e32b8cb63e3a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d332e2c1-2bb6-42a5-80d7-6bb63277ecb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bfd69e9-f360-4f43-9426-f35a1a2659bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cd7fdf-37cd-4727-b0a8-2759003dd526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0883744-ed70-4d3e-81c2-bf273fd8b730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b47040-eb39-4e44-b9a8-6ca4755bf77a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c4b148-ea6f-4710-b62b-80c478dfa4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68aedc8-9925-4652-9581-78d5003239f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622af88c-aa98-4520-9eec-72c67e52a7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa4809d-9f49-43f2-9c80-2713bcda53ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdecdc6-bdeb-4bd4-af63-ac3d5f07497a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bebd325-816f-45a9-bbc9-72f49143ecb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55305320-dedf-4286-b5e0-2f032cc3ce14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6673643b-740c-4da1-b53a-802da2608795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7643539-e382-4270-9fb8-3e31be350cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d71d98a-f595-46ba-9b5d-16968a2badfd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a864d59e-f4e3-44f1-9815-7332d2f49179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3bf6b5-19a7-4905-8352-f0be0ca1d0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3151ee2-e44e-400f-ac2f-d4320df944e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5987dbf-83c5-49be-92f0-aa7541c81c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13cdaa-6363-4e15-8918-f53f6df46e7d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb396455-af5d-469b-aee7-e87c0685607e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fde9eb-d050-42a4-afe1-8428cdf93aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a14f0b9-83a4-4e43-83aa-a17f815e88fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ac7af8-6b95-4942-acd4-c1aeefb8dd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9964e257-dc6e-4019-a127-a6a5a382b67d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f42056-31a1-4400-8931-64d353c1a0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdcde10c-57cc-4dc7-a848-8331468d1db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5fc55f-0f65-4518-a3f1-1a0e11755c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6602bf6-e9ce-46d0-8d38-bd217bf7a6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6305032-78bf-4ee4-9472-aea53a1232d4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b8ced3-5353-4827-973d-084b653cf3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563ff0ba-96bc-4def-9c03-26f9032921ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca549e2e-55c4-4e83-afd7-46a8a6fbe8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e71e247-ffe3-4e95-85fa-54698d48242f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b948ff4-3af2-4107-a554-80ecbe060a3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc258e6c-1f42-48dd-af02-81b884426228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4c761d-b85e-4291-8113-cf5818616316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08354349-bb14-400b-8c66-871ce91f6bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb5458c-bf79-4ab9-8ba1-7735f3fe0593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7313e1-a88e-4e39-bfff-590a361e935c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb098e-b746-4ecc-b4fb-3d9c14624002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12acc5c-1beb-4878-aee5-232fccc469fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db650d43-943c-4e86-99e0-1e1be2400f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c6a9be-aa06-4512-a990-e54fe5187c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8039e9f1-2bdc-47e9-ac4e-aa9f990127d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8263ea2-5a1a-4e36-a6d7-c43fb0a6b8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff60162-61b1-4d7d-a7df-9368a1e206aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4861a0-f54e-43e9-92f3-17000d4dc5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a531bf8-a525-4707-94c0-a9987094dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104d9da0-7d8e-45db-8d9e-e4744a595e43",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a501d0-4f2b-4e6b-8daf-46a41839b4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0696aa5-930d-4b85-b5cd-99277e77c851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc96de7-adcb-4f4d-9e62-3174285b12c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165eb113-a739-4bd6-a4ae-b2288e0d43f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7388b-d663-4496-9a40-f4b33e800ba0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed071d-82c8-4094-9d95-edee66c12e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c418dfaa-9002-4e5c-861a-ea982ba8c928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0442dc2-7231-4110-b87b-ab2eae5b2c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbe5413-7041-4ad9-b0cc-2ad746727eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60f26a5-3f0b-4d9b-833d-d409be494d86",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04ca88c-e28f-492a-9ab4-b7df37d8042c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3e7c60-9f9c-4059-8a5a-ba0ada0f0de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a7b0d-03c3-41c4-a77f-5f5ac3d4d720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17b539a-f39e-4440-a14f-eaee23596bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b43547-102b-43bb-900f-dd79c9e1e128",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a2e6c-ad7c-46d9-a7a7-8069a71e3f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316aa131-c75a-41c1-bc30-7d20c0a2e064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8934f49b-40c6-4d1f-b7cc-d6d3c1af4f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e965511-24e8-499b-8561-a007b54ff661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850dd76a-22f8-4752-9285-d4950e78a884",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee581064-fee2-46d9-b609-a451aafee48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafaebc9-e9e6-4f43-87b9-99f38fc39cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef576eb1-dd9b-428c-b101-0a18c859ed07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549dbbee-966c-4914-9f40-df747cf04242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b81ac3-4d49-450d-9de4-bbb2bddc3415",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865b4def-f772-4ea9-a91c-237b8e6846a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304ef485-912d-46c9-9f4c-23230334e4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3cc0f6-2275-413a-be6b-7b8250abff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32f8e7b-037b-4b0d-925b-f9f24dcbede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11697f67-2598-4a0b-b8a9-4ffa600bfced",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724c659c-8aae-4693-a480-468186e2a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa37e61a-e40a-4f25-835b-ad9dfc70f114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d9b6b-8d37-4322-8c31-d81e55c7a0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92dc4d7-8ff6-4dca-a33f-37f008393e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46282d0-7076-4f3c-9958-cf98e3698a05",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70be0921-21ea-43b1-b0e7-343750c0b7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a47eaaf-39c0-4e2f-b6ff-4d7bbd260014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b3317-46da-43eb-ba7e-47ac4543c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7e5818-75ee-420f-a81e-ebe0a7c408e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0a5ce3-f034-4ab8-b8e7-d3baef9faf37",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65ab74c-608d-4afb-9716-774b3b44c7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086a29c9-017d-4d28-8a0d-4ecf7cdcf800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af876e9-9992-40f3-acfd-edc7f9249ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3828e714-2db2-4e5e-9957-30b0937bb631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79377f8a-e156-4835-a097-6205d8047f92",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aebfd2e-2d0a-4b8b-947c-c2a93912aec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b75a2e-be1a-46c1-9c86-c9335e6f1a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c58c4c-b06b-4f78-a872-f5ef250a01ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841a70ee-b299-4f4e-b33d-226d9c7f9075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3603da50-46c2-4f51-b47b-515149c05be6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee6e0f3-d91c-48fb-93b6-f5a4f01d2395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19052e4d-9f11-4dd0-88e7-3685acad564c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30edffb-46d2-4d85-9944-2d1ef36be0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a762b8-f1e8-4993-b33b-451f71256c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff8feb-f23a-439a-8cb3-62d57077da45",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c59064-3244-4067-a2cb-01073866d59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3116518d-8af3-4318-8628-d6f88638fe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf30219-8f4a-40a6-b84c-f91427bf7a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a66821c-8aa5-4d81-82aa-74bdc2b91f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fef7e4a-a60a-4531-bf2c-f670d744f3ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fb639d-99a2-4f4c-b846-3d964ed5f561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab0ead0-1a93-461b-a7e0-6c756bd5b751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936f9b9-ca80-47e5-bfc9-fbb91555e3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74187989-1b6e-4d8f-b2d1-fee2da1d4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc45b6-aa39-4baa-ab34-2f36693a86a2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae54fd-8393-4b06-917c-9c1a67a5c112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a714aaf-e62f-446c-a822-7225e47181c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eddf11-ed21-4a9b-a3c6-2f94f886827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c012888f-7e7a-4a51-becf-8c9fbd8d88c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdf9fb8-5f5a-4cdc-a470-c499c7449f48",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ca7ff9-ca0f-45d2-ae75-c973df038bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cf47bd-978d-4ead-8064-d128d2ef78c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed5b09-c44f-49d2-a0b7-2a1cbc6889a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1409c3-6989-4480-864b-ae9a43c8aa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e2f005-73f9-4176-b8d9-281863038c8b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa054fc4-75fd-494b-bd02-0168e7277ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bcc960-a5fa-46e4-ac22-f26769cb7e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dd7f75-1fa9-49b5-9776-ca5cde411e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb22e80-5019-434a-a9b4-31a401ae7fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f822d3-399f-4609-91a8-b5f5a32b21ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c9e43b-5b97-4b8c-b86a-c250cc3b75d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20daed8-1a49-4f1c-890f-ab2e7b4f51f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27473d1b-16dc-4fe8-8fc2-ad519137dca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8f1c5a-aa94-48d4-b8d8-7665675d71e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faf331b-739f-45ee-b91f-21fb0d2ec67c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f57b26-0ac2-40a5-a58f-33552d9f4ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480a28ae-3a05-45fa-85c6-d6cd846202f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedde801-36c9-4b62-b169-8142408deadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88550ea-6a40-4595-b5f6-8ffbb0fb3b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8fe626-4205-47b2-98d3-429cca44dccb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc954cb-ef55-406b-a876-9744ea51597c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca63eda-cd3b-4a3b-befa-726b2e794e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af90490-c664-4ac2-8d3c-c44b88adbc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ad4bd6-3c53-4fcc-ba31-801737882bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58732de2-0e6c-4a30-ad6a-6b740ecfd541",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6db0887-c9ce-4890-b5db-0cef110fe2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb7b57c-9714-471b-9d87-7958ecdf4ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db46869-67a4-4a72-8339-41dfdc71b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cc0687-d4f7-40e9-b6c4-24bec4667241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14367dd9-c841-46f4-9ca6-e16b9c3fb748",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5188de3-c1f6-4ab2-8a2b-ac56bf94031d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56aadf9-a9b9-4265-9fe9-7f18b54b89ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c135f559-5618-4da3-9cda-448b023513ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818d48cc-0977-40ec-bd30-7dc7636cc9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba64b91-bc1e-473d-845c-fa017aa33d52",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d486c745-8173-44fe-b92f-a92736bbdcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad6af20-e5d2-4397-b368-ef54f51c09ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b2d376-225f-45d0-b6d5-20266fd4e9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca3f2ce-92a9-4053-bbf6-0fc9ae70e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ded3415-6bcd-4866-abbc-d183a44762ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d358fbf3-467d-480f-831c-91474618aaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992c714e-cad5-4c2b-846d-d850a33ae8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ae011e-3581-434c-bff6-3522c078a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29beddf-449b-4304-b381-7298f4932414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9e3681-f23f-4985-af23-229f26693e2e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7395f96-7b40-4a69-9d6a-0c16c2494084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbd0210-e8c5-45c3-9448-97f0f41829f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bf4228-a014-4219-8044-a6196fd07ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05a1420-ee91-4053-b02c-9bde6a7bce31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9554dd34-e155-42cc-83b2-7f1d15df48d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac3a7d4-09b2-4d20-9d5c-59ed2324eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ba4a50-f812-4bea-ae4c-74be2390ad19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77eb296c-4737-4769-887d-9ba0e90484eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f71a6ab-1499-4286-aed4-f8431a641b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540147e-b37e-414a-aea6-34d026ff46b1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4ff9d-6aae-4888-8dda-a9dc71022d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80750e1-3707-4387-b2c1-09dc8f59c32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14578bd-3bcf-44d5-9713-5367b96e4a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfdb511-0e6c-43b0-985d-12dd758defd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddcc6a6-7426-48bd-87c3-01c43ce8f739",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e735ee1-a75d-495d-83fc-9a19cf98dbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc715e2-3893-4eaf-8169-044ffcfa1101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e31167-4cbd-434a-a7a9-39e213547504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a221dc-dea3-45a7-8b24-28f7b50650bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbc24a7-290a-4bed-a1be-5c859199a703",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9a69f-f62e-4759-a853-eca9efa2c23b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df38618-c9a7-49fc-985e-4d58fbb4cb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddc93e8-a2a6-42ea-9247-d465bd35f36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa026ab1-2297-4be7-b255-bf4c31e1b150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef917f51-8e2b-4cb0-8504-399e74d67f4d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7254258d-3737-4d24-bf1e-3692d6b30c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f146a2-b264-461f-bba7-de1a8d11b47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63817b6-8129-4ad9-a1bb-bfd4264015e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6348f0c-63c6-4a0e-8943-b1131ca0b610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156aa32f-95a4-4e8d-b856-f9530a40a4a0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cfe942-8e7d-43d7-b770-dacdd7f5c972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8840b4c8-8d5c-4e8e-b6d4-1c2634caf885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d6d278-ce65-41ee-9da5-6766b42cf4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a8661-e93a-498b-b475-c07d04074080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44254d73-7a76-4e00-bfb1-f137d2710d0b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beefd9a4-14a0-4a25-9734-75ee51cc0162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbcffb9d-5639-43d3-ab02-0c0720338e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3dcd48-2c67-4b88-aa66-a3ec550e4b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858a282f-9427-4445-8a87-72630ac44ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c5d9ed-7281-4ef3-8691-ccdbd96851c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9391d39a-7457-45c3-8e27-2aeb2079ef68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8909946c-64ca-4399-a50f-39d7e4114b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529d2896-fe37-418f-a4a2-b576820862c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1302b45-ad74-436d-962d-c7c5efa25c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc12621f-0c5f-48a7-b5f5-f72a38e696b3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bfc5bc-db10-4d05-8798-68dbcfb27b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc26f31a-1364-48c2-accf-b9b9eb75b335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba91a738-0190-4b87-a3a3-1ff72e97f32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1267a9-8075-4808-892e-2c05c85ae504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29a4354-a936-4b8a-91ea-6a6fbef0a99f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67d7733-6e57-4211-8b50-09100f2fbf51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0e8cdc-2282-4893-a989-3794f9e4443a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6b3cc-6501-4687-88b6-f4d499a120c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c47ef4-ef21-4cc8-9144-ae59b156b8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f164266-857e-4257-9ade-f9726d36857c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c95b56-5dbd-4ebf-85a3-bbf9eef6d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f070c70-fb0b-4bb9-93bf-7d33b2539fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08cbb81-4288-4929-8043-72d78862c23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1aed8f-33eb-4da8-9f3e-bd843e22d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d7e91-fb14-403d-82e6-e7e6a210c518",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b44c07a-2d82-4a6b-aced-3d03a303770d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad932ee-3b0d-4105-af01-2ca04e336567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6393e9-38c7-433a-8605-02919bc31b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1152a7a9-f5ef-4ae3-8159-82a4bb3a6868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39804923-4b1a-44d7-a3f2-185d17a4faa9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b85327-2c4c-4f38-b0e7-037d0720261a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcb553c-86ea-4a67-9403-1ecc6efe2d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4a1122-8e7f-47ba-ba32-aa4ed0116a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2fd5e1-4fff-4430-b920-6e7865496200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9ffbfa-0f49-4559-86b4-b2847637213b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba2397a-ddba-4418-bdc9-9905791a7b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d2be0d-46e4-42d0-b7b0-8f365e17374b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536186b8-9c06-41d1-a51c-de0cf3a46fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4449d42f-3ff8-4f54-a015-ae87e326de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef5df20-c6da-4e29-9826-b28552224ee5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41bc47b-c166-4624-ba43-e9f59465e077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d07787-92c9-4d3d-908d-1035367bd190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463ad05b-7608-4461-a859-08136cf08ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f546b1d0-5f02-4d81-96ac-1dbd139a12a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d27f4d-d89e-48ee-b2fc-a12d89d4544f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc8f9c0-7d19-4ba3-9ff6-30dd72116553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95621850-486f-40af-9e30-7159f9f33cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e76a8f-e857-4b3c-ae1b-573f3f710bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a35072-a8c6-46fa-82b2-d13c9a88f9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0084ba5-2b20-4589-8f4e-59b67eb455cc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9593e1b8-2111-4170-b2af-11edb4203a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1023f2dd-e34b-4b3f-a7f5-fed5438df2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4d1c4-e0f1-409e-84fb-fc1e5c7556d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d5d84f-b32f-4b98-9426-4b1262caac8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35a30ba-3cc0-4c08-82c2-241dddf30036",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d247181b-c869-42f6-80cd-6d22f902fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa5335c4-01e5-4229-9f1f-a270ca31f2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc266d6f-7ab2-4b61-9438-f3be6cc74ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e41ddee-bdab-4254-bc07-8cf6fcd5c17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb36399-4ff2-42b8-b180-c4a0aceacc80",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33058f3-0fc0-4e18-a350-ddc7afcf1f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4c57f4-924e-4154-8026-3c6e481cc290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1999bfc-e59d-4aa1-b94a-2742c1722376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d40845-3a4d-4b39-9cd1-bb635baac561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1829dcb8-0377-49e4-b205-2f802bab0c88",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d809ae4-8f51-4b3b-be15-826887d3dfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71aa7395-2bc7-4a21-ba80-034fb0702612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8499e4c1-d5d6-4038-b87f-44346b52fa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7303b4c7-77cd-40fb-a702-d636b6d74c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcdbef9-6f8d-4978-a4ec-44c31379184a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6fadbf-ae96-49a6-bb1a-4a7e5f38dbde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9eb372-8d25-44e8-bf11-9094fb356c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263be322-bca9-45d0-999c-2f3af71ecf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c91ea0-4eee-4863-bfa6-5d8006e54dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3345f5-9a99-474a-b4ac-48bdad5089f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1578acd-ec37-4428-9509-587cd696517c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b012a95-2bb1-4770-a1c5-6d65982d0b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e605d390-00bd-403c-8849-4a413fd40638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68da4736-378a-4812-9e0b-befd83f5dec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a75a92-9cab-4a50-b5f7-9c811f66e8f0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f87f02e-7a8f-40f0-88ae-8deff5777861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d0308e-a36b-4fd2-9fd7-92fda4955ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e156de-7b6d-423f-a2a5-bdb2b048b8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cab5622-0c66-4130-b5c9-693d506cc690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f9ec7e-b003-48b4-a053-fe3638112b42",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff8c14e-116c-498e-b5cd-d3d80e870430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d677cd41-f636-48e6-b3b8-9571fcdcfa18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eedee0-d090-4dca-ac52-5bc8faa07d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d800151-a557-442e-bf66-e376e62cfde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcbe0da-0da2-4ed6-b79a-4daebcd3f97f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740b328-1ef9-47ec-86d3-714aa0d31613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d9361d-0b62-4c16-8e5c-de320a36dc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2004eef2-8b02-4e35-ad05-f3489564b347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec4409a-ed47-4ff4-b5e5-b1c6ba64c238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6add83ab-aaa1-41eb-9dab-2e4c6d428ea7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3c82f-57f6-459f-a0ac-f174eb39d0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7838cf1b-064e-463a-a317-e60568c9e292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8036883d-25a0-4846-8bc0-a03013ede9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d90d8b-5b0d-4183-8bb9-e0bba94ac62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1d0f1-9ec8-406e-9f52-16887f6d24ad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7f1df6-225f-4abb-a3cd-fc9367d9ce32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52be44d-cee1-4422-9a6f-295fa9351b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98da8741-177a-4d9b-9834-0a2d7c51f6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c4f232-c11b-4c82-b563-9be34a69f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa85b68-f76d-4ed4-bb22-43918ba2a781",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a3ba2-3984-4be6-9ba6-b58a36959098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a942e4-f219-4d32-929a-3f664f88b467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f62b7f5-85e0-42c1-8c3d-73604a7b5f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8909f9c5-056e-44fd-bc36-8594750e5390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722ef0ae-0652-4743-9524-03ea61a326d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5e499c-28a0-4458-8db1-369b50c3a057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59505482-ede2-43ad-b8b1-9fc69200d5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69194b01-4228-4d42-ac83-ad937a3976cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eb88e2-883d-4189-9b3b-a4a67f0a0983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b257d780-acdf-432e-96bf-442671eaa695",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd058ce-b0f2-4c99-b50f-e96125ada511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4545c80c-5b32-4d49-b0ca-31d270ce21b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb83882-32ba-45af-9f21-bfe4c631bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5da6ae-084b-441a-82c2-dca6de3af15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f83a9-17fb-4cf1-90bf-47c5064621db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9873ac25-3e02-4039-844b-cc0d50e1b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cc7630-1893-46d9-b340-b9eba748989a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfe290a-bca3-4c2c-8df3-de9ffe340249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed617f9-92c8-41f0-9ffc-12a7c0f943f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25978d7d-3029-441d-a94c-07d875912c4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a3c325-80b5-4e11-8c42-f9824773ea68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cedc1f-87b3-43f4-ab2d-c384efcbe5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a0264-530f-47ef-98be-8d8cb458a33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b222464-27a1-44cb-b2b3-7f5364f4f288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44022dd-9ad0-4975-9b6e-485ef93a0ce4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc7e5e6-3e6d-4166-bf74-4c99980a816a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e21301d-51c1-47cc-bfeb-79b421de6d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb2a109-28df-4bf9-a706-f2eebff4742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f13cab6-5b12-47af-9cc0-3493df916205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceafae7b-7fca-4ea0-9575-0cee151fc52b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785f1927-4113-4031-a765-dbf8205af31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98453dc8-8506-43a7-90ef-7d7fa420334c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030420eb-de5e-416f-b633-9c5caf6f5643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a00e2c8-fd87-4d16-9bcf-e61e9ce90898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1172e8b3-4b32-4dd1-81fd-9a3a0922838e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296eb2cc-7398-486c-8f9f-6cea4ef165e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17b1bf8-c87f-438d-bdf5-793d13f3eea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20095350-cca1-404e-83a0-090a19ea3db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb809678-b88a-4805-b286-a0e1af7b7a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ab757-9c75-4105-a546-82e015d5a1ab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd4d546-4695-4b76-9115-2277bd67794d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050bf45f-bffa-480d-bafd-625f27e9c431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d1b074-7930-4b56-8b4d-3caf8e2f7488",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350a2187-c380-495e-8fc1-8ff7685e41cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d92b68-5fab-4148-960a-86fb28bee11d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61dacc4-50fb-404f-b77b-55419846f254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9720a29d-598e-4e0b-a026-af2e3246f5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71eb1f9-63f8-4501-bff0-29e4fdf5a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05942cc-aa52-464f-895e-b9a912a817eb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b366059b-eb4f-455b-9676-c3948c195f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11b4a9fa-1df8-4230-8814-3a7770acd247"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6035f0fb-ed70-4aee-a5af-8da7ef06b341",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f938085a-8e1c-471a-a95d-45550f9142bf"
                    }
                  }
                ]
              },
              {
                "id": "397939a4-bea5-4b28-abb5-0509eb2fffb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56a1ad79-74c9-456b-9f3a-169c09879e30",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae53b6-815d-41ef-a6b4-1365ce50ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e268cd5-4b2b-42b8-858d-8baa83ecc613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2656fd-1b20-4c0d-8997-a9d8b69cbdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a00f952a-753c-4556-9b6c-1ad9b5b172cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c854af20-9aed-4763-8310-25ffd7514398",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858b6ffd-f97f-4062-9605-7918f314aada",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c5bfd074-6c51-401c-93a6-0df883791989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23db929c-5781-4e93-b66d-962ada1b364e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "743a24b4-1e9c-4c59-b33b-d071385f9a97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67b0a5c1-d7f3-44dd-9146-0c1f84d8f767",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8abe0036-64ac-47c9-ad33-c2ffbfd9e8bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a914e655-5969-4d9b-b131-6550bc66ff64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f11955bd-a71b-46b9-9566-7f46f8e6e26c"
                    }
                  }
                ]
              },
              {
                "id": "29ec9518-eaf0-4bb7-aa02-15325f66e9b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5dee261a-ea2e-414c-aaef-8885e2b7c718",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934b401-67b3-40a1-800d-666347e2a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7088fa70-fd92-4741-b99f-aad5bddadf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28213f4-ad53-476f-936c-0ade5cc08be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c826750-29cb-4379-8b42-89784f956138"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7bb57ed7-e9a4-49f6-96fc-a47f83941e2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb7883e5-02fc-4b5d-808d-7cb63992415c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a950079f-7469-4c62-b1a7-6c43c6717a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3fe963a-18cd-482b-a0cf-e8ef4ad378d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22eebd20-819e-4877-9caa-fd4ff4d8dfe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b66bee00-5333-4f41-94f2-e6b8ec399eee"
                    }
                  }
                ]
              },
              {
                "id": "1e96f13a-93f6-47fc-bde7-3e2ff30f21c2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0de89b5a-c6c0-4f80-a2e0-cfd7234ec799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "875f73ed-2784-4369-abc3-4db0daf76dbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1233bd-946f-42e9-af6a-417dc111c153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fda0904-e569-4b2d-aa76-e7abdb037d6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfa54a4c-a764-49d2-a5fb-d61379ad8cfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a13663ff-8b4f-4bfb-a340-a4f7cab2385b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a57bc0-1e50-419c-9ccb-5c3a525e4b28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3192fa1-554f-4243-8f7a-1ebe902418ac"
            }
          }
        ]
      },
      {
        "id": "637380bd-a091-408b-842e-050ab20d6f1f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb3d82ad-75b7-4bec-a31b-145de456e384",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4953c82e-7061-45e6-94fc-184b16e0c40c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c132f45-97a6-43a8-9d65-8489c2c10026",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9ea1da88-0cc0-49cf-a6b5-36049303debb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc82c17-2031-437b-9a05-34fdc86ffe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a8f34f4-0dc8-45ce-89e7-131e69b9e406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e046ef6f-2ee6-4073-9e7f-212412592c88",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c63894-26bc-4bd6-b2e8-0fc6451065ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "88327a6a-6d75-4bc2-8675-1074427d3a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f40f013-b54f-417b-95e5-375e302ecce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7283ab62-3899-4832-9669-39665a726bd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c2b5910-62ee-49a2-89f7-efe63b9e6a6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9494138d-e2e3-4386-8fe7-209c82aab7ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8558fdac-e0a1-4dd7-b1e8-74391d9b4b5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a26a1ac-520b-4990-9817-7a0d0544e929"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "075a792a-ce57-4baa-8c3d-807ff8577924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "62395c39-225f-4212-a00a-20d2af1c5efc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b80098a3-6fcd-4924-bc67-c29186fb902c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf5e4c70-0989-4e6c-9da8-52ffa0d440b7"
            }
          }
        ]
      },
      {
        "id": "d34c7649-3a19-4377-8b44-4c373e495e40",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "89db6fdf-a933-4889-a05e-edbba83b13fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bac6a4fd-b060-4a21-994b-1bb661d02bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c89f96fb-3699-4817-aa14-d729189d7b5a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e00063-200e-4f77-9248-e0451d555360",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4352569a-87cf-4f8c-834d-85fee6723d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a133d25-b6c6-4a8a-a161-17671ee454c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3640da72-00aa-4c0d-b20f-64406001c39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013dc0c-09a1-4d67-9286-afebdacb6f4c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b1112a-1fc0-4c25-87d2-a213c095e223",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0a3042-36a5-4ed5-9661-9332e97f7d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c994b-32d3-4a48-b8ea-58472435c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e53ff743-494f-430c-a01f-4adb2bc96316"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274c94cb-c6a7-4e34-a157-eb48e5b04cd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a73ad3-a62f-4fc8-b412-0ea416a078b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1428195-5b03-44a8-9960-0b848e57dc45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be63c2f1-5fb1-40ef-83d9-0eefe29f00c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "014d85f7-83cc-4d64-9752-a82c6738aae1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd16c53e-5045-4e8c-8cc0-877e97ce24a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04d425a6-4938-4937-8b16-9feadac5a7ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9142515c-1bc1-47fa-af48-44be78e93571"
            }
          }
        ]
      },
      {
        "id": "47f1f477-0555-4f20-804c-33a5474193fa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cf068b0b-9d55-41e8-9b33-f57f7b88edb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11afc937-8a01-4323-9f3e-c8288c9cd592",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcaef1c7-d1a5-4ebf-b234-a79d4cfe65c6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3887f977-8df1-411b-9356-15bf2d9fb38c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5baf6a8d-6c46-4408-8520-95b9a073a47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21ff33a-7342-4ad1-be6f-21b47aa5d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "238e1165-8b7b-4292-8c64-6c9795318c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdb09ed-f4f1-49fe-b31e-d93a774d8c83",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa2baa-ec71-4c3f-af09-9b914b899240",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c067ab13-8ba8-4943-aebb-c71a9cc2ae21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366d6a42-d239-4c40-a714-3d7b11db1bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a1da180-1db3-43a1-afde-864cc610ae70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "220c3ddc-a85c-4080-b655-8226cf77fc21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1be789e0-1837-4523-8ac8-6a4cb3e5c88f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b445147-4c2b-4821-bda8-7d6e4b56f4f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f0a906-9c69-47b0-af7c-c7831941660e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac846a59-5353-4008-9969-1aa44c861079",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "532c464a-6f03-414b-a24b-f840e172d40e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bf59f47-4493-4d38-843f-dcb57ffff538",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b13bf66b-c277-467e-86db-4e6de7b2a81b"
            }
          }
        ]
      },
      {
        "id": "1f7dd418-0148-4815-9988-90c41e27ed78",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76299fc1-4883-408a-9bb8-c1928e971152",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38036f8b-281b-4dee-a8f5-3209611960b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e837f6d0-4c1f-40c6-89c0-8f487185ea86",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97cdd4a9-eb49-4a12-885a-f0bd3562e668",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9d07ff3-9452-4428-b749-3489767600d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1024.1576923076925,
      "responseMin": 10,
      "responseMax": 9929,
      "responseSd": 1206.2200184151493,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682987840984,
      "completed": 1682988117806
    },
    "executions": [
      {
        "id": "75ad151a-6122-4e40-8253-7b9090e4058c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d7b38204-649d-461c-befe-9c26c5161c78",
          "httpRequestId": "17d4b06d-82f9-4d48-a8f3-db9808dd6440"
        },
        "item": {
          "id": "75ad151a-6122-4e40-8253-7b9090e4058c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78c1f9ab-ba9f-49f3-97f5-116d31e8a77b",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "d22f2019-9be3-4c3f-be53-d70223f7d00f",
        "cursor": {
          "ref": "4d7dcac2-9eae-4152-8a6e-b6d0076d73d6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "471a324a-dd8b-427c-880e-e89a8a58b245"
        },
        "item": {
          "id": "d22f2019-9be3-4c3f-be53-d70223f7d00f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "85af5b47-5cc3-4f0c-9b71-f8fcbb6e1563",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "fed12990-f845-4958-b357-924e4074c162",
        "cursor": {
          "ref": "a2e78e61-f804-49fb-a92d-c1eca24af78e",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "48f3fa66-0e11-4b04-be65-1ca2e260c62e"
        },
        "item": {
          "id": "fed12990-f845-4958-b357-924e4074c162",
          "name": "did_json"
        },
        "response": {
          "id": "857fa360-8b04-42ad-b4f2-e7ae2b2b6bb6",
          "status": "OK",
          "code": 200,
          "responseTime": 1065,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eb9931-d751-4388-9d7a-5ab0ec5240a6",
        "cursor": {
          "ref": "b240b544-6681-4722-bf5a-0be7a683ae3e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e035326-2c79-4647-ba0e-26622f4579f5"
        },
        "item": {
          "id": "86eb9931-d751-4388-9d7a-5ab0ec5240a6",
          "name": "did:invalid"
        },
        "response": {
          "id": "9858d445-8b67-4ff1-a87f-04c1ce916b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eb9931-d751-4388-9d7a-5ab0ec5240a6",
        "cursor": {
          "ref": "b240b544-6681-4722-bf5a-0be7a683ae3e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e035326-2c79-4647-ba0e-26622f4579f5"
        },
        "item": {
          "id": "86eb9931-d751-4388-9d7a-5ab0ec5240a6",
          "name": "did:invalid"
        },
        "response": {
          "id": "9858d445-8b67-4ff1-a87f-04c1ce916b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab48cc1-beda-4d69-b9c8-9c8c60a7eab1",
        "cursor": {
          "ref": "a0b090fe-9978-48f3-be0c-652536e7f57f",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "30914b27-f8e7-4661-9ce0-f4bdeea7366e"
        },
        "item": {
          "id": "cab48cc1-beda-4d69-b9c8-9c8c60a7eab1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3caa9602-eb61-45f8-9c33-4ad37fb9a395",
          "status": "Not Found",
          "code": 404,
          "responseTime": 962,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c28cc0-6488-4bf3-bbba-949ab7a19744",
        "cursor": {
          "ref": "e4a63005-c441-47cb-b841-47f2749c1c93",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "78b33989-e50a-4871-90f9-c5a6f7bde908"
        },
        "item": {
          "id": "06c28cc0-6488-4bf3-bbba-949ab7a19744",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f6aaa33f-d7b3-4365-a3c3-a6b1a1d81cb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 817,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a53cb4-87b9-4b27-80f7-c81618793d2f",
        "cursor": {
          "ref": "c1b2a2a2-2050-4d61-98ad-2a71f49dd5ac",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b25d811-f8ac-4351-85f8-3994700060b3"
        },
        "item": {
          "id": "f1a53cb4-87b9-4b27-80f7-c81618793d2f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38cda785-c95d-47cb-bf2c-ed4f91ae3c9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6948d5cc-d86d-4ff5-ba8a-2b02098d74ba",
        "cursor": {
          "ref": "5a75b4d8-1eac-4209-b0df-0448643acad9",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "216aff20-b65b-43d9-aeee-013aeef85001"
        },
        "item": {
          "id": "6948d5cc-d86d-4ff5-ba8a-2b02098d74ba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d95879c0-dbe4-4a6d-8560-81fdfb1daba4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 803,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6948d5cc-d86d-4ff5-ba8a-2b02098d74ba",
        "cursor": {
          "ref": "5a75b4d8-1eac-4209-b0df-0448643acad9",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "216aff20-b65b-43d9-aeee-013aeef85001"
        },
        "item": {
          "id": "6948d5cc-d86d-4ff5-ba8a-2b02098d74ba",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d95879c0-dbe4-4a6d-8560-81fdfb1daba4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 803,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee61d01-73e7-49d6-adea-e8b42cd0307f",
        "cursor": {
          "ref": "3b26422d-bf8b-4fbd-b805-fdee06b3ac76",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "96dbf0d5-b8fa-4f15-8749-6154244edb03"
        },
        "item": {
          "id": "4ee61d01-73e7-49d6-adea-e8b42cd0307f",
          "name": "identifiers"
        },
        "response": {
          "id": "ac3421d8-6d60-4f9e-8b29-8a18358c2870",
          "status": "OK",
          "code": 200,
          "responseTime": 1406,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2696fd73-8891-4ed7-8f0a-6aeec59b4105",
        "cursor": {
          "ref": "4f70cc07-b2e7-48c6-9498-f887f718a986",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "767c87f3-fa99-40a2-8e5a-c37765b827e7"
        },
        "item": {
          "id": "2696fd73-8891-4ed7-8f0a-6aeec59b4105",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "445a3c2b-0332-4bf5-a0b9-dfd8761d005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2696fd73-8891-4ed7-8f0a-6aeec59b4105",
        "cursor": {
          "ref": "4f70cc07-b2e7-48c6-9498-f887f718a986",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "767c87f3-fa99-40a2-8e5a-c37765b827e7"
        },
        "item": {
          "id": "2696fd73-8891-4ed7-8f0a-6aeec59b4105",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "445a3c2b-0332-4bf5-a0b9-dfd8761d005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc81543-71d1-4b11-a70f-90a48ae85364",
        "cursor": {
          "ref": "e0aebcaf-a115-496f-bbe4-ae3b758a9585",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2700b97b-e847-4af2-9504-70ca0bcf898e"
        },
        "item": {
          "id": "7dc81543-71d1-4b11-a70f-90a48ae85364",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1c0c2e14-eaf2-40b4-99f2-11dbe0391e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1c3fb-c719-4d48-a65c-b5ab9352a1ff",
        "cursor": {
          "ref": "ecfe42c8-9973-43c2-ac58-d0c17d6da241",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b7af498e-8784-4382-8a79-b8964e4fd2b7"
        },
        "item": {
          "id": "11f1c3fb-c719-4d48-a65c-b5ab9352a1ff",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "16e96aa3-0c26-4f45-b531-98941452ee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41afd32-4d17-473e-beb1-de263cf49b8d",
        "cursor": {
          "ref": "42ce2aeb-8b9d-4c9e-82a1-0306b417278c",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3473e191-821e-4d37-bb22-ade01d902285"
        },
        "item": {
          "id": "c41afd32-4d17-473e-beb1-de263cf49b8d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a0e1d2e-3110-4fb5-89aa-f79b6ad1211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b443157-300d-43b4-9988-4e06110b187c",
        "cursor": {
          "ref": "e9f6ad57-daed-4f1f-8475-9f8b51b4c092",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "624f212f-1d54-4bb9-b53c-58aecf339bf8"
        },
        "item": {
          "id": "1b443157-300d-43b4-9988-4e06110b187c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05d20152-afde-4528-b347-36487d3718db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d9171b-2452-4107-97f0-00d05677a57f",
        "cursor": {
          "ref": "612dd277-5770-4d15-819c-ff27284db25e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cb88806a-c092-47b4-ab0e-9c445b734111"
        },
        "item": {
          "id": "89d9171b-2452-4107-97f0-00d05677a57f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d860058e-d255-48bc-9923-59db5b257107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cdec18-c6c6-4ea0-a987-191b6d8c1ddb",
        "cursor": {
          "ref": "cb219e13-c243-4d79-99bd-6298afad4848",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dd951b8c-1149-47f4-b4e6-5077b2d0b308"
        },
        "item": {
          "id": "a3cdec18-c6c6-4ea0-a987-191b6d8c1ddb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0f83c0ae-aac6-418a-944c-a9627adfbbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97542fc6-225b-404a-b1c2-1c9d3e1e548f",
        "cursor": {
          "ref": "8ac0392c-d4a5-4bd9-a704-5ae4158f0953",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ae80e0a9-4b79-4aa3-822c-7504f137e888"
        },
        "item": {
          "id": "97542fc6-225b-404a-b1c2-1c9d3e1e548f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fc62d845-9986-4e24-a626-4b432ff6a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df1de7e-3e5c-4e01-a8c1-aa2c59bc1e6f",
        "cursor": {
          "ref": "76b689dd-ba88-4ab1-8383-d162e07ab799",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "94a7a43e-b2b8-4aef-8a83-c74d46f5762c"
        },
        "item": {
          "id": "0df1de7e-3e5c-4e01-a8c1-aa2c59bc1e6f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "acae7007-1dc5-424b-a1fc-cd768e71b4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f295fb7-a049-4aac-b6a8-2bfe0cbed629",
        "cursor": {
          "ref": "4dd0d40f-914e-4e05-8f0f-96140de9da82",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c674f393-57db-4fcd-af79-d97d02095da4"
        },
        "item": {
          "id": "9f295fb7-a049-4aac-b6a8-2bfe0cbed629",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ad0c2cc-7e09-4e43-8938-ca068f5dc684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c838c321-a01f-41c7-9fc3-211eda37cf82",
        "cursor": {
          "ref": "26bc5bcf-e8db-48d0-a4be-04e3bde6d4c8",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89b01330-6f0b-4b71-bbd2-1b2457d64a04"
        },
        "item": {
          "id": "c838c321-a01f-41c7-9fc3-211eda37cf82",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "49169f76-80d4-4a99-af66-7d611eccc916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb5f320-f455-4c99-bf5d-e6b31dbb2d69",
        "cursor": {
          "ref": "19a0e499-9777-4a85-8b98-d25cd3d124a3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1654684f-5ae4-43b4-beec-f4752458d61b"
        },
        "item": {
          "id": "4bb5f320-f455-4c99-bf5d-e6b31dbb2d69",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "37654e60-2727-4cea-bb7f-49a929c818ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b4632a-6ed9-4330-a470-14cedfcda930",
        "cursor": {
          "ref": "077b70b3-9561-4ce6-9e6b-0c4e91ae5991",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "040a669e-44b4-46ee-85ab-67df0411e7cc"
        },
        "item": {
          "id": "58b4632a-6ed9-4330-a470-14cedfcda930",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd77ceeb-9cde-48cb-9a6b-93c62c19f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1431,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7302f06a-ef08-4625-863d-d1d333527866",
        "cursor": {
          "ref": "c85a524f-4814-4102-8577-85852b0e330b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "472ca311-8be1-4341-be90-1423e12818e4"
        },
        "item": {
          "id": "7302f06a-ef08-4625-863d-d1d333527866",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f40170a7-6457-4158-a4b6-c34702ef3d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1579,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3da51d-87d9-4de4-b5a2-fbeaa3ffc226",
        "cursor": {
          "ref": "031b9f93-6d8b-41d0-8f95-8f431f10d3d9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "92784ad6-904d-429e-b38f-27d4c6d49a2a"
        },
        "item": {
          "id": "2c3da51d-87d9-4de4-b5a2-fbeaa3ffc226",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a53d384-7c24-4dd4-8474-d2be118b60d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1354,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897c6049-9582-4be8-902f-abab3fac8940",
        "cursor": {
          "ref": "81d22e85-3b79-4d1e-afb5-14763f74b07f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f29e1fd5-4fd9-4072-814b-a11ca9cb8f57"
        },
        "item": {
          "id": "897c6049-9582-4be8-902f-abab3fac8940",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7f2ab0bb-8cf4-4aba-a74f-837e95448487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c0d379-eec2-4bb3-8ae9-88fc2ca561e7",
        "cursor": {
          "ref": "c3b08f53-37e0-407b-ad59-dccb013dfa7e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "edc9d566-f3ca-4bad-b324-76c76e9d9732"
        },
        "item": {
          "id": "d0c0d379-eec2-4bb3-8ae9-88fc2ca561e7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e63055ce-cda7-41ff-942b-0e3e8ef922e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa78f81-9886-4cad-a0ac-4828d2b6900d",
        "cursor": {
          "ref": "5f2c92e1-a720-4ac3-9c6b-407535f9a35f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2d1b322f-8492-4f29-b6a2-a4d5ec9f09e5"
        },
        "item": {
          "id": "0fa78f81-9886-4cad-a0ac-4828d2b6900d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "77a605da-6a1f-4e26-9306-8bdbc95f3abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acbd84e-b02f-4a76-90dd-2a8023e2071c",
        "cursor": {
          "ref": "fcb8cb85-1d8f-4f3f-b23a-dc91cec9d243",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07683f95-43d9-42fd-a00e-bb0b4f9a2dcf"
        },
        "item": {
          "id": "7acbd84e-b02f-4a76-90dd-2a8023e2071c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9d544e99-b303-471d-912f-73bf5fb55182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1430,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a636310-bb90-49d4-95f2-cf38a06c9a90",
        "cursor": {
          "ref": "186427e9-7bdd-40d4-a179-99abda636549",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2cc8c48c-2958-4e5d-97b5-9529ff26acc6"
        },
        "item": {
          "id": "0a636310-bb90-49d4-95f2-cf38a06c9a90",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "87442a48-03fa-44b4-b689-d8c9eda8714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1564,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3180d4-9627-4f89-b48b-e2d146120c25",
        "cursor": {
          "ref": "f6b6d960-8a7e-42d2-976f-f339785fe719",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "994c60dd-bca6-46a4-9c6c-3588d58d60f5"
        },
        "item": {
          "id": "af3180d4-9627-4f89-b48b-e2d146120c25",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "caec4cf4-3627-4f94-b1d2-518ca6ac9fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1340,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8481384e-1ca5-4e7d-a0f9-9696e0b9e253",
        "cursor": {
          "ref": "5f1a9b17-2a62-43c3-bb95-924f623f5472",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "af046f0c-cab0-48f1-a723-565947adc10d"
        },
        "item": {
          "id": "8481384e-1ca5-4e7d-a0f9-9696e0b9e253",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "19bccac0-59c6-497a-8501-df67bb718617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09751837-b479-4519-be0e-ccee26047e3d",
        "cursor": {
          "ref": "d0ac5656-8256-4719-bc45-dd20d668c289",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "45d7e747-d0cc-4147-9a2d-38f2a1e71b1f"
        },
        "item": {
          "id": "09751837-b479-4519-be0e-ccee26047e3d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fac5ab3-4c18-4158-82c6-d76635368528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0865a78f-acda-4aed-8097-a8b5f87fc5a7",
        "cursor": {
          "ref": "6d9b89d5-6e16-40ef-a82d-b1015acdf17b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "824e39b7-ae58-4196-b00b-b57a3a699714"
        },
        "item": {
          "id": "0865a78f-acda-4aed-8097-a8b5f87fc5a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5e13fb8b-fa08-4658-8971-c3efffe1d076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8715e269-9f63-4753-861c-1533ff93fefa",
        "cursor": {
          "ref": "ee65b71f-dc0f-4ba3-a148-a622e7661169",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0d0953a4-a72a-4df9-bdf4-0a74231ff621"
        },
        "item": {
          "id": "8715e269-9f63-4753-861c-1533ff93fefa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c88e3002-f9f8-420e-a05d-27455c75ede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f707b-3f87-4e38-925e-4f614a9c39d3",
        "cursor": {
          "ref": "740b4730-05b7-438a-a8bd-17b2ab12d604",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6c96f2c2-a7d2-4436-a18b-9b3adc5d01e9"
        },
        "item": {
          "id": "358f707b-3f87-4e38-925e-4f614a9c39d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cb6d8496-34a4-40e6-acf5-65350638afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39345352-34b4-4f4d-899b-2deb0b165e4a",
        "cursor": {
          "ref": "5b9efbc0-aeca-4807-ac67-104f40c3c251",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ddd687bb-4903-4c56-b829-56e9990d4f8a"
        },
        "item": {
          "id": "39345352-34b4-4f4d-899b-2deb0b165e4a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1cb2121-1321-45eb-a9dd-45795fae00f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c17c3-f31b-4a25-9fa5-44b8005cc78e",
        "cursor": {
          "ref": "35382e3b-24e3-4891-bee0-d3ee5aa8d3a3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc446884-7891-40e9-a6ec-4334f1997f0e"
        },
        "item": {
          "id": "db3c17c3-f31b-4a25-9fa5-44b8005cc78e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d2ef1742-874b-4999-9870-76b6f310ff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e0a465-fcd9-412e-be7d-fe737bba3e2c",
        "cursor": {
          "ref": "3843d5ed-c2de-4392-afc7-a01f3febf63b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d9b7b20-feee-4e23-a32f-c9f9cecc7bc5"
        },
        "item": {
          "id": "41e0a465-fcd9-412e-be7d-fe737bba3e2c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "61533b13-0a6d-458f-ade8-cd90707c8776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e4282a-4e9a-4073-9d6d-3c2a3dcb9a73",
        "cursor": {
          "ref": "99eef3e5-78fc-4c1a-8e1c-e1f1e4404378",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ae77a497-be86-4871-8bf3-05c22b0b0d83"
        },
        "item": {
          "id": "50e4282a-4e9a-4073-9d6d-3c2a3dcb9a73",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8acc43ee-b797-4aff-82cd-1e61782d714e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcbd965-1c2c-4c50-8dbc-b60e8434df7e",
        "cursor": {
          "ref": "766ad08f-f0f7-4692-8f1e-017db434d6f0",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "34c443dc-2551-4d33-8e81-5d29e242a2aa"
        },
        "item": {
          "id": "5dcbd965-1c2c-4c50-8dbc-b60e8434df7e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "588e02b8-b3e4-4fa7-a151-29c983fae011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3550e56c-e01a-4a92-8d0e-2dbc56dd9659",
        "cursor": {
          "ref": "6bdf63a9-9869-4e25-a26d-833aa0a1e45f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "57711f57-9885-487e-86a4-b9044a4417d3"
        },
        "item": {
          "id": "3550e56c-e01a-4a92-8d0e-2dbc56dd9659",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88e81cec-dbfb-4b15-bfe8-46ba82c3d93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7b8a1-df79-488b-8824-ebe6af699bfd",
        "cursor": {
          "ref": "f3148edf-fe55-4afb-9d0f-be0fb30a315b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "37f2fb10-6e50-4015-8dc2-a3aeaf1b4486"
        },
        "item": {
          "id": "acc7b8a1-df79-488b-8824-ebe6af699bfd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ba3bae5e-f75b-495f-9f7e-4cbddd5a231c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04707c9a-06a0-4a4d-b1c9-539e156920f2",
        "cursor": {
          "ref": "96ff29f7-64f9-4b61-86ec-2577da0fbaf8",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a9c1cc74-ada8-438e-9ac0-e369ec97c45d"
        },
        "item": {
          "id": "04707c9a-06a0-4a4d-b1c9-539e156920f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "36cd35f5-647a-4eea-98f9-8ba5d98438d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003acb30-83d3-4a4d-9b88-5e6abc35d327",
        "cursor": {
          "ref": "7e714ad6-20ee-4923-abfb-d819c908db0e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0050c767-b3e1-416f-bd02-3c24af6c9498"
        },
        "item": {
          "id": "003acb30-83d3-4a4d-9b88-5e6abc35d327",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a76bc408-b635-4ed2-bb18-c28dad50eda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1597,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c003121-a451-4f46-8548-61cef68eed1c",
        "cursor": {
          "ref": "8ab8bf8f-f610-4507-88c6-281ff21e5875",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7a6f2d4-6f8b-498a-bfdb-fce1c90f548b"
        },
        "item": {
          "id": "5c003121-a451-4f46-8548-61cef68eed1c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "12afe3b0-50ee-4ca6-8fd5-bcf094f7b380",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1529,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d50179-e92e-4e85-8aef-3aa551706de6",
        "cursor": {
          "ref": "0be63d79-d98c-473e-912d-7185598ebeea",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e6f33b31-0f25-4a47-bb8f-5211691f0749"
        },
        "item": {
          "id": "20d50179-e92e-4e85-8aef-3aa551706de6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "79507df3-e2c7-4d1b-82c4-3826640bfd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1871,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f21133e-07ee-4850-b20f-8a9784c83a04",
        "cursor": {
          "ref": "4fe4d756-6097-43a8-816e-dafb7bb8c37e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bb5203b4-8074-49fe-8ce2-f348380581b4"
        },
        "item": {
          "id": "1f21133e-07ee-4850-b20f-8a9784c83a04",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1cf71c1-2b85-4c89-9686-03d6e9415518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1320,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daad9184-36e8-4de6-915e-530ca1041678",
        "cursor": {
          "ref": "c5992096-45ed-4c43-b095-4d9bd1960977",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bfaaf9c4-caf7-4427-9d2c-23fa9fb8da47"
        },
        "item": {
          "id": "daad9184-36e8-4de6-915e-530ca1041678",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3c3186c4-5166-49ed-b124-1a56440ed374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1456,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e73208-4824-4a5a-bcf6-d3ce16bc9ea4",
        "cursor": {
          "ref": "c62e217a-027c-4d97-8a8e-7a71b23d437d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98964b03-d934-4101-90a9-4d08cc217027"
        },
        "item": {
          "id": "78e73208-4824-4a5a-bcf6-d3ce16bc9ea4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1aeaad75-8f92-418b-813f-a5d05f914cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1085,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9599cccc-1e25-4487-b556-cef0f85aca7c",
        "cursor": {
          "ref": "82ed6722-3c54-4638-a309-2f7927c2891a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3bed7e08-b9e3-40f2-aa1e-c7432930deec"
        },
        "item": {
          "id": "9599cccc-1e25-4487-b556-cef0f85aca7c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19ffe6d3-c185-451a-9ab7-c34a905b5500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf8fc98-7b83-4018-af8c-90ba5d471646",
        "cursor": {
          "ref": "148b4b1a-6df5-4d59-ae00-78e775e39999",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9d8fe35a-ef44-4eca-883e-01c7d2f930f4"
        },
        "item": {
          "id": "8bf8fc98-7b83-4018-af8c-90ba5d471646",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ebf7fb9e-5347-455a-8f6d-906e6ccdd71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5b64c9-e1bf-4d95-89b9-028343700195",
        "cursor": {
          "ref": "c11886bc-6183-440e-b0a4-0a1c144a8f89",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ed25493-f37f-4e9a-bef7-e5a9c7ef5809"
        },
        "item": {
          "id": "eb5b64c9-e1bf-4d95-89b9-028343700195",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6398c995-53ef-4d2c-bfa7-226e9b17cada",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 919,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2242e30-351d-4e6f-9021-2164cedbc5b0",
        "cursor": {
          "ref": "7b057918-3e5b-46c6-8357-0d2dfaca0aaf",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6e0bf0ad-372b-4ee4-91a2-0b484dec1b81"
        },
        "item": {
          "id": "d2242e30-351d-4e6f-9021-2164cedbc5b0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9bb5f0cb-af13-4c8b-b0a8-8061d409ce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a2382a-b53a-4383-9b54-00a063845409",
        "cursor": {
          "ref": "e0d97140-6ada-4849-9aa0-47f46bbca4d7",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d162a36f-e99e-4ec1-9dda-2b9950711fad"
        },
        "item": {
          "id": "00a2382a-b53a-4383-9b54-00a063845409",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2feb7a1a-3a1a-449f-a71d-2682691b2755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59fe606-f8a6-433f-8561-749d6ae01645",
        "cursor": {
          "ref": "5dac9629-47c5-4508-bf9a-2b65255963f2",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8439f90d-a781-4276-9d10-9804584c2dcb"
        },
        "item": {
          "id": "d59fe606-f8a6-433f-8561-749d6ae01645",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "34d624e6-8144-4293-996b-950d45811651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1529,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6da7c5d-a440-4191-b450-64176287cf49",
        "cursor": {
          "ref": "c86feb4e-d471-443a-b9f8-96c18737e6ea",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ac82d01c-fa9d-4b1e-a393-55eb59e88af7"
        },
        "item": {
          "id": "e6da7c5d-a440-4191-b450-64176287cf49",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af2758d3-9bff-453f-9f09-0830e2feaed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1297,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d86e0-bd8a-4962-be81-cc54d9d6d644",
        "cursor": {
          "ref": "b5f3466c-bfa8-48fe-92c7-f5b9ab220aa7",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4f302780-6959-443b-b6b3-5f3fdaab8245"
        },
        "item": {
          "id": "509d86e0-bd8a-4962-be81-cc54d9d6d644",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d5de2036-0753-47ca-a274-0ae6716a190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1383,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42312c66-666a-46af-b25e-7a32860914f7",
        "cursor": {
          "ref": "ee6d453e-7a7f-4a3e-8f05-586ed2743b31",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aefadd17-7844-4136-9d24-21c4efaf3af4"
        },
        "item": {
          "id": "42312c66-666a-46af-b25e-7a32860914f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c4b102bf-72d2-475d-8fc0-397f10179d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab08aa2e-86f8-4e4b-b2cb-8ca93f20d45e",
        "cursor": {
          "ref": "355eaec8-2df4-48e0-9180-f6334c2c3544",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e45f0ff5-053d-4d50-b1a4-459bee8bc9f1"
        },
        "item": {
          "id": "ab08aa2e-86f8-4e4b-b2cb-8ca93f20d45e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "68f1640f-05ac-4532-8d9d-9c03c410a08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423bd931-92fb-4cef-9686-3cd73fb0d633",
        "cursor": {
          "ref": "a27878c2-1c36-4c4e-b9b5-1ca17133fd72",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bbb9ba93-92a9-49be-9ea3-8080dd9114c4"
        },
        "item": {
          "id": "423bd931-92fb-4cef-9686-3cd73fb0d633",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ee2786f1-9c2d-4ad5-9ce2-30a59fae8a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af1655e-6760-444b-88f2-27a2893b6bfe",
        "cursor": {
          "ref": "197372b3-958e-4307-a438-edb98458ea2a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d1c29df5-7082-4531-b824-2160d259ed5a"
        },
        "item": {
          "id": "0af1655e-6760-444b-88f2-27a2893b6bfe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "27c32f40-3906-43a8-bcfe-f01996de481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128da5fb-3a96-4490-95a7-8dbf7bebb16e",
        "cursor": {
          "ref": "9cd32a46-91e5-4e85-b6c6-06465bf28726",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "173f7b7f-96f4-481d-a0c6-2961a5271397"
        },
        "item": {
          "id": "128da5fb-3a96-4490-95a7-8dbf7bebb16e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6c6a6eec-de37-46d8-a34d-3279ba9dcd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa493a-be6f-4d4f-ad1d-51d579e40c2a",
        "cursor": {
          "ref": "59df31a9-21a6-4e99-b183-798e542efe6c",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "40aff925-15ae-4cb2-a981-af4fd4196b7f"
        },
        "item": {
          "id": "82fa493a-be6f-4d4f-ad1d-51d579e40c2a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a466ed06-2a6b-479e-83fc-ddb38f87879e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879b486c-7781-426a-81d0-dd6e31010dc2",
        "cursor": {
          "ref": "d686d978-66fc-4f12-bccb-6d58d72c3b35",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6923a65b-28c6-40ab-b205-d23fc266307c"
        },
        "item": {
          "id": "879b486c-7781-426a-81d0-dd6e31010dc2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8bcb1296-013d-4785-9382-856918dfb31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e8eba0-b134-41f9-a004-425d4738664b",
        "cursor": {
          "ref": "dca8306d-7f0b-4394-822d-6245b3f52dcd",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e43bb4c3-237f-4fab-8f3a-497a71fef18b"
        },
        "item": {
          "id": "61e8eba0-b134-41f9-a004-425d4738664b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8c48eb09-9d31-41e5-993a-401c00152c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373683e8-817c-4b70-a9a2-8f28ef34a03e",
        "cursor": {
          "ref": "8b229504-4523-4cec-b07a-8057825bf98f",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4684e7bc-17f5-4370-a7a1-1fb5c4c0513c"
        },
        "item": {
          "id": "373683e8-817c-4b70-a9a2-8f28ef34a03e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da96f6cb-b43a-4b9b-b2ba-349fb2a1bf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fae4781-5c74-4450-af09-a7dac4b20686",
        "cursor": {
          "ref": "10e67325-dc6d-46fc-9f7d-e6101f9e8c4e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7cb57b82-9988-4506-a62d-5da15f5bcaa7"
        },
        "item": {
          "id": "5fae4781-5c74-4450-af09-a7dac4b20686",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f3de06b8-15fd-4176-af2c-b950824b3716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeded00-080d-4e62-9cc1-c6e88edc6694",
        "cursor": {
          "ref": "e3544bcd-d980-4721-8518-4ce34c962292",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8c614d60-1b54-4848-ab56-32e8f6d281dd"
        },
        "item": {
          "id": "cbeded00-080d-4e62-9cc1-c6e88edc6694",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce11f9a2-7ebb-4d5c-a147-e5748e7a6edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae06fa7-1c05-47c0-8322-9e978275359c",
        "cursor": {
          "ref": "c441dfae-4ffc-4f8a-9186-4f2b309db501",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0b9ce64a-261e-4358-b189-d148eb6ec6c9"
        },
        "item": {
          "id": "aae06fa7-1c05-47c0-8322-9e978275359c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd56ba30-5835-4d89-bc1a-fb0651950d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8be4ce-0139-4fb7-b21a-0574cb7c14ab",
        "cursor": {
          "ref": "f1c19114-40a0-4976-9122-060073520f70",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "beaf3fcc-c926-4e42-ba22-cf74f0eb6571"
        },
        "item": {
          "id": "0e8be4ce-0139-4fb7-b21a-0574cb7c14ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "38d1e09f-0268-414c-8f23-ec5ffae57a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2f2ae-378d-452b-b2bb-6aa887aff57b",
        "cursor": {
          "ref": "38ae8f5c-4950-4464-9859-cffa701f2e2a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52cbaf13-a3ea-4293-ab73-b9f951a92b43"
        },
        "item": {
          "id": "a0f2f2ae-378d-452b-b2bb-6aa887aff57b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d9ca387-9d00-45a5-90f6-d1815bd03c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a4c453-43d9-40e2-8bfc-d1a3ec1a7752",
        "cursor": {
          "ref": "4d8886d5-e593-4465-a65c-15e0840b15b1",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4ec2caa4-47ba-4e48-b6de-9b826cdd4235"
        },
        "item": {
          "id": "51a4c453-43d9-40e2-8bfc-d1a3ec1a7752",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0bb6525b-d6c0-4b28-8afa-026d4635460f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087e311e-b3b2-401d-987f-d4c63698f87e",
        "cursor": {
          "ref": "41ae2593-954e-4ee2-ba61-ae962f882d92",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c4d5bd99-b45c-4906-bb63-a5cd08d05e46"
        },
        "item": {
          "id": "087e311e-b3b2-401d-987f-d4c63698f87e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be556ba0-6cfa-41e3-bf4b-94dfd64b93c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d549d5c-bb32-417c-8747-9ccffa805ce7",
        "cursor": {
          "ref": "a0f87da0-2efc-4f19-9472-849b428ee71c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f1595932-8e34-4893-9650-7b0838e4f691"
        },
        "item": {
          "id": "0d549d5c-bb32-417c-8747-9ccffa805ce7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9a1e3f2c-e85c-4359-9d23-2decc7370fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402745bd-3ad6-4e7e-bb63-61fe53f47a39",
        "cursor": {
          "ref": "ff046152-0116-4f14-a074-0e7d9dcefdff",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "73a9e172-c3b5-496f-89f4-d7dbd0275acb"
        },
        "item": {
          "id": "402745bd-3ad6-4e7e-bb63-61fe53f47a39",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38d43e76-9560-4bb0-87d5-33393eca8c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21872653-1bb7-4819-ae1a-e5c8b663789f",
        "cursor": {
          "ref": "21e156cd-3308-4cd6-9297-2ac3a90aee9b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6b58cb90-dab0-4c08-8396-5066574fe89b"
        },
        "item": {
          "id": "21872653-1bb7-4819-ae1a-e5c8b663789f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e5d750d4-505b-4209-8517-7578c46ace10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a91bf3-7a3c-42d2-ac46-007e6a1e2d9b",
        "cursor": {
          "ref": "b5f9e94f-c59c-4cf1-ab0d-708eebbaba69",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e091496c-59b8-4217-b98c-06ecc8f4f136"
        },
        "item": {
          "id": "99a91bf3-7a3c-42d2-ac46-007e6a1e2d9b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c7a95b1a-35b4-417d-b3c2-55ad6af27799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e8f75e-c59f-4a36-a2ca-9a174a6c8f44",
        "cursor": {
          "ref": "30999619-2384-4a47-adf8-4f91c5eae455",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b05f5c5d-ead7-4dce-904f-d2ce0de0f850"
        },
        "item": {
          "id": "f5e8f75e-c59f-4a36-a2ca-9a174a6c8f44",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9fbfee72-248c-4e59-adca-f4eff2f5fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd20e53-7fae-4a44-85cf-321fb2c4ce47",
        "cursor": {
          "ref": "5733ce7b-5b06-4859-a331-2b2b49f4f1bb",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c57b1cad-fb06-450b-830d-1dff8fa51aa5"
        },
        "item": {
          "id": "9bd20e53-7fae-4a44-85cf-321fb2c4ce47",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8ea9e555-aad3-4b4c-a192-8b1031f6ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe2e7a4-7e35-4f17-8a3e-c164075c308d",
        "cursor": {
          "ref": "9c30c1ad-43fc-4e24-bb76-7dce0bec0e0e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e8a9e4fb-cc6d-4f21-9571-042498710059"
        },
        "item": {
          "id": "0fe2e7a4-7e35-4f17-8a3e-c164075c308d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "de36f55b-d763-41bd-9047-22b9021a0b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd886b14-c3fc-4cd2-9689-cbd033da4f73",
        "cursor": {
          "ref": "32b6ecef-4904-469f-b963-f0b66e9d3984",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "533773f5-62cb-4e7c-9fdb-f4f8cb2f8607"
        },
        "item": {
          "id": "fd886b14-c3fc-4cd2-9689-cbd033da4f73",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3d8fbed8-8e57-44bb-8014-829ec5c41e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005a8e6d-6f28-46f6-b1c0-a24c3b3d16c5",
        "cursor": {
          "ref": "3daf70d8-6545-45a9-b89d-20cf981b7640",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "27b4b64c-9155-4a2e-95da-71f1f61d3406"
        },
        "item": {
          "id": "005a8e6d-6f28-46f6-b1c0-a24c3b3d16c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b73793ba-6c30-4829-b869-2f0d8bd1ded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a19f187-b99e-4c1a-b8db-f0f3049a7d6a",
        "cursor": {
          "ref": "35d0b11a-6535-4a92-addf-fc5c9f4b6857",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "38a9a908-83bb-4827-89f4-051f9cafda80"
        },
        "item": {
          "id": "5a19f187-b99e-4c1a-b8db-f0f3049a7d6a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b9711a6-92f6-4e10-8b3b-fa85b0390a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18ec3f3-2445-4e31-b974-250e5c6b5990",
        "cursor": {
          "ref": "3e6283ab-55c0-403a-a17b-94f99b10e6fe",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f6257bf8-2186-47c1-93f8-7a501a19f8c2"
        },
        "item": {
          "id": "b18ec3f3-2445-4e31-b974-250e5c6b5990",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2cc677b7-7fdc-48d5-9886-f3e7ead1ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4522b75-2603-4be0-b33a-8e5553157391",
        "cursor": {
          "ref": "147fc37c-8ebf-4c24-b638-c9625a4efbee",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "01198858-538d-4b9a-b255-c292fc216033"
        },
        "item": {
          "id": "a4522b75-2603-4be0-b33a-8e5553157391",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e51983a-bd4b-4a28-bfa0-47e52bc5f1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797ff246-b8e9-4112-a7e8-37fc2a23d671",
        "cursor": {
          "ref": "f023b239-8c4d-445e-9fde-1220d14c17e9",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1752b240-86bc-4aaa-be5a-7a0216ad1143"
        },
        "item": {
          "id": "797ff246-b8e9-4112-a7e8-37fc2a23d671",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3a9530a7-92d4-4fef-a09d-ba8d8581b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f0615f-966f-4f05-922d-31853027fbed",
        "cursor": {
          "ref": "ff0fe95c-86dd-489c-9d17-5ed8b3beff1a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56e7f98f-330a-4c2c-9390-101be6706671"
        },
        "item": {
          "id": "73f0615f-966f-4f05-922d-31853027fbed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a4fec637-fda3-4429-b4c7-452300291720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad402ea-521f-4c4f-9755-c082a895869b",
        "cursor": {
          "ref": "9240057d-adb9-4a69-b7e1-89a0096f6dd7",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02cdce2f-1d77-4e2a-a1ee-94a698985081"
        },
        "item": {
          "id": "3ad402ea-521f-4c4f-9755-c082a895869b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7708af1f-7b75-4501-804c-52d09cb67cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64862e-3e8c-4e0c-b729-e06656112837",
        "cursor": {
          "ref": "addac8ab-a264-4571-9f28-6c6672939ac3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c07eb632-5ab3-4c5f-b04d-88a11af9ac96"
        },
        "item": {
          "id": "ab64862e-3e8c-4e0c-b729-e06656112837",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6ebf0178-0f4a-4fb3-977d-3b780f06bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdffb27-8664-4a1e-8b6d-32a975cd857e",
        "cursor": {
          "ref": "bab23286-9fdc-4ca6-9529-ca93227ea3ba",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82235c74-8d07-462d-86d6-5196ecd73246"
        },
        "item": {
          "id": "4bdffb27-8664-4a1e-8b6d-32a975cd857e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c2f8615f-992b-4992-839f-892b142956fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1162b7b-20a5-49be-b88b-1cfe6a81547d",
        "cursor": {
          "ref": "726e12a3-5c03-475e-9b10-fe8223ef200e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "584a554e-67e1-42e5-81a9-770540c8d916"
        },
        "item": {
          "id": "f1162b7b-20a5-49be-b88b-1cfe6a81547d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b3f644e-56a4-4b05-abe3-22198e2ed73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd050b-d9b1-42b3-881f-379fed3ee3b0",
        "cursor": {
          "ref": "4effe048-94db-4e52-9098-73bf60f836e8",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c4da2fe4-e398-4a4a-8268-b337315e76c6"
        },
        "item": {
          "id": "03cd050b-d9b1-42b3-881f-379fed3ee3b0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "479f0a89-1421-4ddf-8f54-caccef8d6fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3704ebfc-378e-4dea-b391-72952780f482",
        "cursor": {
          "ref": "f2217ef3-27cc-4bd6-bbcb-134f314c7c13",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1902c61a-ec38-49a8-825e-48de1bdb880b"
        },
        "item": {
          "id": "3704ebfc-378e-4dea-b391-72952780f482",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "135612fe-f94b-498f-8dd9-20b08ec5b469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1402,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9d0624-a1b6-475c-9594-39e79f821010",
        "cursor": {
          "ref": "9b40da71-d45d-4943-b883-1ff9d915907d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a9abbd5f-d06f-4968-abbf-49dbdbf81be0"
        },
        "item": {
          "id": "ee9d0624-a1b6-475c-9594-39e79f821010",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b3de4fe3-9008-45f4-873c-d821a0e49fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26ccad-5544-4c1a-9a50-e274275d524e",
        "cursor": {
          "ref": "3f6abe2e-4463-488a-8674-127520e2ba92",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9429eb35-439d-459d-8bdd-8adda5db81c3"
        },
        "item": {
          "id": "2d26ccad-5544-4c1a-9a50-e274275d524e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fa39f381-0e46-4473-a0ed-06d08f5f77f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1393,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e19cfa7-9502-41f4-874f-df34de1cb82b",
        "cursor": {
          "ref": "bbb7ebe1-327e-4421-825e-584d89225f3f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1524baa6-6032-4679-a342-ebd22e7b4b7b"
        },
        "item": {
          "id": "2e19cfa7-9502-41f4-874f-df34de1cb82b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d5d7134c-e01b-468b-99b4-bc6fce2d5193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97009d-e0cd-4121-a6cb-bd9f0715d49c",
        "cursor": {
          "ref": "2b5369d9-87e4-44cd-8d35-c1a8b9fb2949",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c06d212e-d48e-4660-bb4c-07739dfae39e"
        },
        "item": {
          "id": "6e97009d-e0cd-4121-a6cb-bd9f0715d49c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "70d20bda-b4d6-4728-911b-79386ce32093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a72410-61c7-4a99-9d62-03e889e7235e",
        "cursor": {
          "ref": "d26245f7-c505-484c-92a9-1e4b99a2ebf9",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "85f2bc31-aab4-40d0-b35d-f75a9cd140ed"
        },
        "item": {
          "id": "30a72410-61c7-4a99-9d62-03e889e7235e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d46e0396-c156-4a38-9d9a-a446a1659d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084c8651-71e1-450f-a164-5155fda30945",
        "cursor": {
          "ref": "92efe356-0b11-42a5-8f6b-b4952c41de57",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b1a575bd-9b25-4584-9945-10289002cdf6"
        },
        "item": {
          "id": "084c8651-71e1-450f-a164-5155fda30945",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "93a47d9c-71f9-46de-b0fb-9a7522517890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1397,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67776615-404b-487b-8c75-27c65a7e683a",
        "cursor": {
          "ref": "2a221803-5727-4550-a201-8d6fb935b18e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "de3f5ad1-0a4d-477b-80e9-3dd998c0cc3e"
        },
        "item": {
          "id": "67776615-404b-487b-8c75-27c65a7e683a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5b05878d-a462-400f-88ff-43ba7098da72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1374,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d060e31-857f-4e79-bf40-d1683e8c7814",
        "cursor": {
          "ref": "849e78e6-a928-4e3b-87e7-8ca3eae03b7e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "80a3ba05-32a5-41e5-831c-7b2e4a56d9bf"
        },
        "item": {
          "id": "9d060e31-857f-4e79-bf40-d1683e8c7814",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bf82a2ef-091e-4419-9f31-07274a14a72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1291,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b15ce9-b4d5-41b0-b63f-0e8f0981eefb",
        "cursor": {
          "ref": "f8aa2c42-8065-4df4-9f07-2b28641f6725",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2d55edc2-3ae3-43e8-933d-6c68e8486671"
        },
        "item": {
          "id": "24b15ce9-b4d5-41b0-b63f-0e8f0981eefb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "83d28199-fa8d-405c-93dc-09e1c970f8d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c6e1aa-0062-4fe3-acad-c0e5b233d54d",
        "cursor": {
          "ref": "dc4a6dbd-db44-47db-9a6b-01e52b7fe504",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5e2f5005-b213-403c-abd2-2ae73be332ac"
        },
        "item": {
          "id": "88c6e1aa-0062-4fe3-acad-c0e5b233d54d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4d379715-9bd9-43dc-8114-20519e978eeb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 802,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517e3ce-7213-40e1-8c33-fde827a59d0f",
        "cursor": {
          "ref": "295bf9ce-5525-40be-947e-4059337ace34",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "80df647a-b112-4778-b007-03b12a333751"
        },
        "item": {
          "id": "3517e3ce-7213-40e1-8c33-fde827a59d0f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8b915c43-1fa3-4dc5-b98c-24ee386eced9",
          "status": "Created",
          "code": 201,
          "responseTime": 7934,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "54537433-2edd-4ea9-808d-50bab3160fe5",
        "cursor": {
          "ref": "a707c0c2-76fa-4b5b-b2bb-5615ab3d1f32",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e7a6818e-2bf2-4328-a90b-c5463c4c9231"
        },
        "item": {
          "id": "54537433-2edd-4ea9-808d-50bab3160fe5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f6ce2bbc-0e57-4fae-b68b-ff4d2855cfbf",
          "status": "Created",
          "code": 201,
          "responseTime": 6689,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f771529-2b45-4804-8848-7a577db4b158",
        "cursor": {
          "ref": "b801f9bd-0a1f-4d25-a75f-b48608104c3c",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "781fb869-3129-48e1-972f-633d5a83d248"
        },
        "item": {
          "id": "2f771529-2b45-4804-8848-7a577db4b158",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "321e21e7-8a83-4d00-8618-93fe38831838",
          "status": "Created",
          "code": 201,
          "responseTime": 8656,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f5db42-055a-4c85-9c9e-87b9c6a1b3d1",
        "cursor": {
          "ref": "f576d90b-30dc-4848-a962-f90417662a63",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "728998dc-4faf-49b5-a639-4f1b8562982c"
        },
        "item": {
          "id": "39f5db42-055a-4c85-9c9e-87b9c6a1b3d1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d92519e8-41f0-44af-93c9-e69c11a515f3",
          "status": "Created",
          "code": 201,
          "responseTime": 8640,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6866602f-09da-45fc-8e39-169a0249a7d0",
        "cursor": {
          "ref": "895b0a34-a75a-4202-9545-03eca1bbae3d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0fc87455-ee76-47c8-aeca-4b7411895b60"
        },
        "item": {
          "id": "6866602f-09da-45fc-8e39-169a0249a7d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "508d05cc-24bb-416d-870b-f08d0f7a2ade",
          "status": "Created",
          "code": 201,
          "responseTime": 8131,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb6e95a-90d8-4e28-be5e-3f21fb754deb",
        "cursor": {
          "ref": "64f5330f-a8ee-466e-a27b-235206723ca9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "32180986-fa50-45fb-9062-349d14efde54"
        },
        "item": {
          "id": "3fb6e95a-90d8-4e28-be5e-3f21fb754deb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0371a48e-8bb2-43eb-8fb7-b82656fd5a45",
          "status": "Created",
          "code": 201,
          "responseTime": 9929,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c23b3c-b6ac-4e2e-9264-086ef64ceecb",
        "cursor": {
          "ref": "d1ade69a-5243-4cd3-94b0-115d1645e286",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6ea7c26d-5820-4a51-8a7e-2aedc203ea47"
        },
        "item": {
          "id": "07c23b3c-b6ac-4e2e-9264-086ef64ceecb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6f9f669-885b-4011-996a-8d64fa6da451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c23b3c-b6ac-4e2e-9264-086ef64ceecb",
        "cursor": {
          "ref": "d1ade69a-5243-4cd3-94b0-115d1645e286",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6ea7c26d-5820-4a51-8a7e-2aedc203ea47"
        },
        "item": {
          "id": "07c23b3c-b6ac-4e2e-9264-086ef64ceecb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6f9f669-885b-4011-996a-8d64fa6da451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d86ffa-a433-419c-bffa-a643761683dd",
        "cursor": {
          "ref": "82539a5c-5280-4ed1-a5d2-a1ebedc3dfac",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4da3daca-1eab-43ff-a040-c4f0700ba31f"
        },
        "item": {
          "id": "c5d86ffa-a433-419c-bffa-a643761683dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0efcd26c-0862-4d8a-868a-4b91a1e7c44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c030e92f-3db9-4d95-bb52-34c1c52f5f31",
        "cursor": {
          "ref": "fc139e6d-ec00-4049-8cf0-53c1544c6b52",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a41bd749-6a7f-48b1-97eb-582cb22c79be"
        },
        "item": {
          "id": "c030e92f-3db9-4d95-bb52-34c1c52f5f31",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "acc3d60e-380b-4f6d-9819-d0f9b3a6020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c34a61f-d4f1-4e63-ab79-82786709a8cb",
        "cursor": {
          "ref": "cd3cdb4c-f3b2-49a0-b85d-36692dc38924",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "25a35bf1-2d57-4faf-8e3e-d7c44a0d49d1"
        },
        "item": {
          "id": "5c34a61f-d4f1-4e63-ab79-82786709a8cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3090dd7d-a204-4639-9690-68e2243b20c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a3d5e3-d5dc-4b0d-86e1-54b8e6e19b40",
        "cursor": {
          "ref": "ea5b50aa-db3e-4cb8-b665-6379516e44f7",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b725db7-f0ef-4892-a5f0-75b538c78cb8"
        },
        "item": {
          "id": "07a3d5e3-d5dc-4b0d-86e1-54b8e6e19b40",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51686191-cff9-4816-84d4-e4c0d1f99cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54708485-b77f-4576-b1d3-747492e61fe8",
        "cursor": {
          "ref": "437be8f2-1325-471d-bbe8-9b4ed4ce5685",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cb142513-4be3-4ad9-a7a0-ca2816688bfd"
        },
        "item": {
          "id": "54708485-b77f-4576-b1d3-747492e61fe8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dec60635-6aa8-4f26-a15e-d41b74dcc14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b68b62-a741-475b-8571-ede97a6dfeb3",
        "cursor": {
          "ref": "77120434-33b7-4ead-ad00-b1bd782aab17",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1f6a0203-88fe-41d9-af60-d98179a38a79"
        },
        "item": {
          "id": "a9b68b62-a741-475b-8571-ede97a6dfeb3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e059a1ae-c1b3-495a-bbdf-3bcf20b23173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a604edc-7ab1-42aa-87aa-9ba9ec2d2009",
        "cursor": {
          "ref": "6b4ebaa0-dccc-4446-821a-dc51deedf1af",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4c872dce-7aaa-43f6-b376-f9065339c99c"
        },
        "item": {
          "id": "1a604edc-7ab1-42aa-87aa-9ba9ec2d2009",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "30de4ce3-7534-4698-ba20-a002c536ec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9809b1a-cb57-46e1-83c9-da12e9cf6805",
        "cursor": {
          "ref": "5a889228-4479-4392-b957-0247134d0c91",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "900f0461-a5d6-4a70-87f6-dcb4f6104d06"
        },
        "item": {
          "id": "c9809b1a-cb57-46e1-83c9-da12e9cf6805",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2606094c-fce5-493b-8c13-7229c442ce96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989fef8e-b12f-44f9-b137-27fc20e23b77",
        "cursor": {
          "ref": "d2ef5474-fd07-433f-be06-8794fcd58401",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "270324fe-bdd8-4e71-9e1f-e9748971c57b"
        },
        "item": {
          "id": "989fef8e-b12f-44f9-b137-27fc20e23b77",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "585f877d-b7d4-4cf0-8da6-192a7d698fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1394,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a18dd-dfbc-4d20-be54-eb3afd554ef9",
        "cursor": {
          "ref": "ba58c4c5-51e2-4445-b16d-4490b3859aca",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2660fa7-9bb9-44de-8792-b0ab5cc79d26"
        },
        "item": {
          "id": "802a18dd-dfbc-4d20-be54-eb3afd554ef9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "be566ded-4d8c-4f06-bf67-8008b4756732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1695,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04a9076-d49e-4ab1-afa7-fcb7bc1584f1",
        "cursor": {
          "ref": "44ca96bd-a5c6-4acf-94f6-8315a14102f2",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7b87d80a-5c17-44fd-b3c4-dce7e4901b75"
        },
        "item": {
          "id": "e04a9076-d49e-4ab1-afa7-fcb7bc1584f1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca2079ad-bb7e-4af6-9507-66682da9a102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2142,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e255c1-df72-4722-9581-44d5131f6280",
        "cursor": {
          "ref": "0d43dde5-656c-472f-b39e-7b04a1101e73",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ef4028b4-0208-4a8b-8d91-b185b75e4c04"
        },
        "item": {
          "id": "a8e255c1-df72-4722-9581-44d5131f6280",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2de73cb-693e-4fde-a0b5-7deff8cb8b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2490,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ea87b6-b385-4f89-8e7b-e4b19741d587",
        "cursor": {
          "ref": "a01ddd1b-21a9-457b-a94a-5f47da96327b",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "45cfe566-71a2-4326-bba6-3d5a42985d09"
        },
        "item": {
          "id": "85ea87b6-b385-4f89-8e7b-e4b19741d587",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "63a88925-84f7-4ece-a1a8-9c24a6671f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2598,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de40d1f0-d0cc-48d7-be12-c23b272a98c0",
        "cursor": {
          "ref": "9eb5800a-a709-424c-868c-ffbbf3ffbc4e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "06c1e0bd-590b-4bcd-ac4f-d77d0e3464c1"
        },
        "item": {
          "id": "de40d1f0-d0cc-48d7-be12-c23b272a98c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d8f72153-6400-40ed-9997-95b369277e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1798,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d078b4ec-9672-478c-bbae-c19a30cbfb88",
        "cursor": {
          "ref": "e61f188f-3138-4883-96ca-be72b7962993",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cd239d4a-2ce2-4a1e-bbdd-e30b9e449d84"
        },
        "item": {
          "id": "d078b4ec-9672-478c-bbae-c19a30cbfb88",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8e5b27a-91ed-4459-a8eb-bda81c82f72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1266,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e27a82a-9e92-4f57-8634-56c24e18f57c",
        "cursor": {
          "ref": "2e094e2b-4e81-4fd1-80f7-52e618d86da6",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9dafd62c-67ec-4f7d-8168-e3bae7fe53f8"
        },
        "item": {
          "id": "2e27a82a-9e92-4f57-8634-56c24e18f57c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fd30bd50-1af6-4cba-8ce7-b3c0afd36509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4226fb8f-1a97-4295-9595-f00186211757",
        "cursor": {
          "ref": "1fa4cb87-9c67-4b1b-be3e-01cbeadd39fd",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3991d224-f335-4a20-921e-da96c4117dad"
        },
        "item": {
          "id": "4226fb8f-1a97-4295-9595-f00186211757",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5da5ddf-856a-4e68-8f20-841aff5dc926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29b54a4-d8d3-4ab1-8e1c-51a9c901601c",
        "cursor": {
          "ref": "bf3b30a6-9cd8-4807-9244-5ce73ecbd5b0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b5b8d26b-ad52-4b46-89bf-4628f65d11d1"
        },
        "item": {
          "id": "e29b54a4-d8d3-4ab1-8e1c-51a9c901601c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b6e954b9-0183-4d41-b3de-819d29b64171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06917322-8d06-41b7-a824-d52df584b538",
        "cursor": {
          "ref": "875769d4-0028-4437-9adf-64b60659c17b",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fdc2b721-1b37-4783-ada1-35736b22da97"
        },
        "item": {
          "id": "06917322-8d06-41b7-a824-d52df584b538",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f03cf5f-33e8-41c3-8aff-d02d2b1b6bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879632de-f1dd-451c-b7ae-ddc308425e33",
        "cursor": {
          "ref": "4a102a4d-8b08-4d3d-80d2-1051703da91f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e82f371-e83e-4ab0-bf9c-a09e6dd0cf0d"
        },
        "item": {
          "id": "879632de-f1dd-451c-b7ae-ddc308425e33",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba771f4b-5cdc-4085-8464-53b30c0faeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e6173e-b3a2-4c20-b7d5-e808a1700005",
        "cursor": {
          "ref": "dcb7fa9a-3762-4e8d-8bc3-397c8ee97289",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5558cdec-197e-4ab2-bd91-d4c399708662"
        },
        "item": {
          "id": "b4e6173e-b3a2-4c20-b7d5-e808a1700005",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bbc23260-03e5-4224-b609-bbef9e02bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e5f8f-7dda-441f-87fa-1042656f1348",
        "cursor": {
          "ref": "878311ad-6cc6-4b40-9c29-dd11faf6241e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0817216f-14d6-43cc-8903-f8b5b7bc6ac8"
        },
        "item": {
          "id": "d39e5f8f-7dda-441f-87fa-1042656f1348",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "46e49753-23ab-4a10-b7d3-0dbc69e7825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c0c080-e818-495f-b257-4c61190aa4c2",
        "cursor": {
          "ref": "e45c06b0-b972-4478-9bf2-30abf6a3ead7",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1e5c25fc-0050-49af-8019-43fc7b42688f"
        },
        "item": {
          "id": "24c0c080-e818-495f-b257-4c61190aa4c2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b064e41b-28ab-4363-9c8d-0a74a40758fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091bb7e7-811d-4a69-8f7c-9432879da20e",
        "cursor": {
          "ref": "8e732af7-d6eb-4dd6-a779-21d2c5840d9c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "adf4fa2f-ff20-439d-b62f-787fb3c4ad70"
        },
        "item": {
          "id": "091bb7e7-811d-4a69-8f7c-9432879da20e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c7b936a-6931-4263-beaa-fa167366b8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a53c5f-0d37-4c64-ade1-01128804e2a8",
        "cursor": {
          "ref": "4b4a9312-5be7-48ef-8b07-2154e85d2a36",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "68cbf92d-e74b-49ff-82b2-33aeace94fa6"
        },
        "item": {
          "id": "29a53c5f-0d37-4c64-ade1-01128804e2a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12bd4143-ef2f-4fb6-b486-cc1ce4d2e41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c20690-78e2-4b28-801d-d06f51d9836e",
        "cursor": {
          "ref": "318a0687-c814-4dd3-a159-44dea114e123",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b308c826-dbd9-4cd4-ae3c-9bf60b120e37"
        },
        "item": {
          "id": "c6c20690-78e2-4b28-801d-d06f51d9836e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac8d953d-2603-46e8-b54c-f3375ae7605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90662aec-155b-478d-a5f2-e35afe3b8567",
        "cursor": {
          "ref": "8cc9435c-df03-478a-89d4-e28dfe589e8c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d55b6481-65dc-4bff-9579-4979a518d7c7"
        },
        "item": {
          "id": "90662aec-155b-478d-a5f2-e35afe3b8567",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bb22fe96-e8a2-49be-85b5-81e1f8bdac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f2ff6d-515b-4b32-b3ca-c790d532eecf",
        "cursor": {
          "ref": "20fd351c-5530-4979-a813-57203a863e8d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a58d7166-6692-4d5d-ade3-a7d3bc19fffe"
        },
        "item": {
          "id": "b9f2ff6d-515b-4b32-b3ca-c790d532eecf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b01089f-ed86-4061-899f-893ad0efbd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068c9446-3c9d-4541-a2ce-8c062b5ae956",
        "cursor": {
          "ref": "62f854b7-5589-43d5-a1ce-8bdc8afad0e9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "695f6a0e-9fea-4aa9-8703-48e2c327a186"
        },
        "item": {
          "id": "068c9446-3c9d-4541-a2ce-8c062b5ae956",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d5a74323-35e6-4aaf-8d57-fde27da00376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c40b4cb-1568-4295-a633-f792c8e7093a",
        "cursor": {
          "ref": "13e2a8a8-9d9c-44df-a35c-f05226b42878",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "888fa420-50d0-45be-9ae1-19294d0db593"
        },
        "item": {
          "id": "6c40b4cb-1568-4295-a633-f792c8e7093a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d04370e-d35f-4c81-9616-110a5a457086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b15b92f-3a26-491e-b05c-fc8b828067ce",
        "cursor": {
          "ref": "af23e0e1-0d19-42bd-a72c-34dcecec28a1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a8b69c5-3300-43ce-9653-f2b29b68b755"
        },
        "item": {
          "id": "8b15b92f-3a26-491e-b05c-fc8b828067ce",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7b75c48b-53fc-4317-9fc0-409ae6ee5f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c660381-f4a3-4c32-863b-fed3d223c598",
        "cursor": {
          "ref": "04578023-3dcc-4b3f-b645-abbb99666a19",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e7862fe-269d-4aa2-9561-f78d5138ebc6"
        },
        "item": {
          "id": "4c660381-f4a3-4c32-863b-fed3d223c598",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54522ffe-ec75-46f3-8450-86aabd94ad3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f9a8ad-09df-45c6-bd7e-b87f694b73cc",
        "cursor": {
          "ref": "572aa6ef-e76c-4c9b-a457-38b785cf7ebb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd3c2519-3586-47c6-8fb6-28a6a77f32fa"
        },
        "item": {
          "id": "b8f9a8ad-09df-45c6-bd7e-b87f694b73cc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "76cbc1fa-0043-4b45-87ef-cd0bb3c4319e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 872,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591b45e-dc2e-4026-b479-0b3ae8f53825",
        "cursor": {
          "ref": "7cc0d5df-d0eb-43d6-bfb2-29db36f4a725",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "800aa1f0-b963-4b18-8686-4a48cc6aac71"
        },
        "item": {
          "id": "9591b45e-dc2e-4026-b479-0b3ae8f53825",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6244ded0-b1a8-4402-a4ef-f5b83e92cd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591b45e-dc2e-4026-b479-0b3ae8f53825",
        "cursor": {
          "ref": "7cc0d5df-d0eb-43d6-bfb2-29db36f4a725",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "800aa1f0-b963-4b18-8686-4a48cc6aac71"
        },
        "item": {
          "id": "9591b45e-dc2e-4026-b479-0b3ae8f53825",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6244ded0-b1a8-4402-a4ef-f5b83e92cd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea932ec0-0048-450a-bdf7-e7d13c4881e8",
        "cursor": {
          "ref": "ab488731-be3e-447f-b0eb-1cd6bec5d143",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3bf41877-51af-4f6b-bad9-ff0b3f6e7fd8"
        },
        "item": {
          "id": "ea932ec0-0048-450a-bdf7-e7d13c4881e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c3ad0b92-eb3b-4267-9a38-1b1036c5df63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad25936-ac5d-437d-850e-1b16f65e94c7",
        "cursor": {
          "ref": "98c06d75-8bc4-430d-bb8b-47ce6df7439c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aeb85d17-a357-453f-b102-93eeae4b8d26"
        },
        "item": {
          "id": "4ad25936-ac5d-437d-850e-1b16f65e94c7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0d4e7f20-8fae-4216-815f-73fc47f5f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799c096d-93d4-48dd-a588-3b4858270228",
        "cursor": {
          "ref": "4cd7e697-57fc-45e8-9361-23088f8dd8b3",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "413f045b-1d41-4707-91c7-97b7ecc330f9"
        },
        "item": {
          "id": "799c096d-93d4-48dd-a588-3b4858270228",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4548936c-c6ed-46de-8556-6f33950f2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3b679-8683-45ba-bfba-440618a8512c",
        "cursor": {
          "ref": "238e33d4-049b-43b5-a17b-af58926a0930",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bb2e80b-9d26-42bc-af78-b6b170d465bf"
        },
        "item": {
          "id": "2dc3b679-8683-45ba-bfba-440618a8512c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8bc94a38-996a-43cb-8b5b-acebfa3b607e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edb4899-e159-4925-8e6d-255c2eecf1af",
        "cursor": {
          "ref": "4b49a95d-b021-4380-b275-e3e612e14c78",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "53a67e62-36d2-4b33-b67f-74769f11029a"
        },
        "item": {
          "id": "9edb4899-e159-4925-8e6d-255c2eecf1af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d4ebb7da-a3c0-44fd-8e4d-b1d0e1644ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa4fed-b0fa-4ff1-a42e-65e820b6afc4",
        "cursor": {
          "ref": "88eebacd-b87d-43ad-b921-81d43766005e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "820e2b43-8157-41ff-9d22-a3fa49e5f453"
        },
        "item": {
          "id": "b3fa4fed-b0fa-4ff1-a42e-65e820b6afc4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fdedc506-76ee-43ba-af80-89ac750867df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf767e74-daac-4348-8da8-804b94428a66",
        "cursor": {
          "ref": "26941212-6a93-4dd1-b49d-4103f14f43bd",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e417503d-514b-4247-a242-35486cbe2d0e"
        },
        "item": {
          "id": "cf767e74-daac-4348-8da8-804b94428a66",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e106a904-7407-474f-9c7a-71295dc2a1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839b81e0-e694-423e-9c83-6dfc7de163a9",
        "cursor": {
          "ref": "448db735-7731-485d-abdb-3f8dbd1ee2f0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "95f7edb7-ce9f-4179-9815-9e0b9b521464"
        },
        "item": {
          "id": "839b81e0-e694-423e-9c83-6dfc7de163a9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a739ad3-fa74-42f2-ab9a-262c0d0bf78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b76ab92-99c8-40e5-aaf4-011b13f7e51e",
        "cursor": {
          "ref": "d2391b84-1536-4808-96c8-2f5a3cae9744",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2ccb58ab-0dab-41b6-83c8-0e075f061769"
        },
        "item": {
          "id": "8b76ab92-99c8-40e5-aaf4-011b13f7e51e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "85bd2ecb-1fa4-4b98-b5df-b8442cf533ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5457eb6e-dfe7-477e-938b-535a45932025",
        "cursor": {
          "ref": "8cdaa594-e1ed-4124-90ff-7bcb345b6361",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "263f5462-0b95-4947-959e-ff951168828b"
        },
        "item": {
          "id": "5457eb6e-dfe7-477e-938b-535a45932025",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f0e50574-e3ca-4127-8800-a35b033f9795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ab216b-a5ba-44bb-9141-93960e1e48b5",
        "cursor": {
          "ref": "66c7c609-94ce-48da-a421-fae6908e69e3",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fceaedd3-6476-4afe-b096-f50e6d9ff92c"
        },
        "item": {
          "id": "c8ab216b-a5ba-44bb-9141-93960e1e48b5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "32591938-8c0d-4331-86cf-39e2b0f05d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6680761-ffba-4dba-993b-03472c403575",
        "cursor": {
          "ref": "eb6a48cb-2fab-437b-afa5-b53af8e646d1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "394facc1-2fae-4b74-8295-14934a29e73c"
        },
        "item": {
          "id": "c6680761-ffba-4dba-993b-03472c403575",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5a88fe0a-bbfd-4e62-9da6-dd183b8fdfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d48365-cb31-460d-b0ba-ad6f44e03d0d",
        "cursor": {
          "ref": "d4ece02b-e4b3-46e4-8a11-c98e7ed0384b",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1d38f552-1115-4a9d-9fd2-b8ce39180cdb"
        },
        "item": {
          "id": "80d48365-cb31-460d-b0ba-ad6f44e03d0d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f5ca526-93e7-4945-aa8d-1fc6fd562020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7125173b-5554-4ea5-8624-5934de107fe4",
        "cursor": {
          "ref": "b36b34cd-7de1-48b8-8fda-e537d0f92a09",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2e1cadcb-c621-40ce-aecc-eaad9e564eb9"
        },
        "item": {
          "id": "7125173b-5554-4ea5-8624-5934de107fe4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ac353e6-679f-42b0-b59c-f81ea6bcc5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c2f731-84ba-43e9-85d0-70b62016ae6e",
        "cursor": {
          "ref": "73daf50d-00aa-4dcf-bb9b-2e1bca279d14",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98bfb517-aab4-479a-95e0-478bf917e73a"
        },
        "item": {
          "id": "26c2f731-84ba-43e9-85d0-70b62016ae6e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0ffc4515-57f0-4acb-8d9b-2fdb8dbf526e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa43668f-a4e3-41ac-af62-8f8e8d0796f1",
        "cursor": {
          "ref": "458f62f6-ffed-42fe-b3f8-08763a9680df",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "16714369-e5ba-4e53-9b97-bd22047391ba"
        },
        "item": {
          "id": "fa43668f-a4e3-41ac-af62-8f8e8d0796f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b6816ec3-1d06-48fc-a48b-eec146092d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235fcd6-65a3-4c40-853f-e908806201da",
        "cursor": {
          "ref": "9868d1f2-e930-458f-994f-8f7681434ab3",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4b14f8e0-7a45-49f4-9924-f679ff1eace5"
        },
        "item": {
          "id": "f235fcd6-65a3-4c40-853f-e908806201da",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b4b657b-2ab6-4533-83a8-51f25a15a7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a07986-8858-40be-aaa5-f63106628872",
        "cursor": {
          "ref": "ca700338-9853-4cc1-85f4-277bd93d8f7e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6bb6e57e-bd1f-4335-b557-76db934cd709"
        },
        "item": {
          "id": "f2a07986-8858-40be-aaa5-f63106628872",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fdb03a5a-9740-4c92-b21a-adad2b13cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ac28ad-9e5f-4e0f-869d-0eeb277ae231",
        "cursor": {
          "ref": "e846b46b-bf25-4519-a778-f0259ec8459d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "07fa05f8-98e7-4d00-aea4-d972a55b072d"
        },
        "item": {
          "id": "57ac28ad-9e5f-4e0f-869d-0eeb277ae231",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9f5d14e-5401-4fd4-8ce5-e6d89db24b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1ed066-d934-4fa2-9039-dc4f2734f5b6",
        "cursor": {
          "ref": "6525debb-cbc4-46e4-8b4d-7742a145afcd",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a2899c80-47c7-449b-8dbd-25d02af87a9e"
        },
        "item": {
          "id": "1a1ed066-d934-4fa2-9039-dc4f2734f5b6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ba555d9-decc-48da-931f-9177513a1c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f62c758-8590-48d1-a12a-19a4e1409d2c",
        "cursor": {
          "ref": "a3c900bf-5b27-4db9-ba31-60cc1b8175c9",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "390e948f-3e87-4b61-8647-84d8a515e2e9"
        },
        "item": {
          "id": "1f62c758-8590-48d1-a12a-19a4e1409d2c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6f47ecf9-9910-4398-9004-75831b7f2404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf263e7-c0d9-4a2f-9cbe-0df231392108",
        "cursor": {
          "ref": "6dfbaf78-2dd9-44d4-a785-df0a4c8b1c45",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dc668489-6166-458d-bb87-404f483c3d82"
        },
        "item": {
          "id": "baf263e7-c0d9-4a2f-9cbe-0df231392108",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fb03ff7c-cd3c-42a8-ba65-d292737493fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9929e8b2-c03b-44f2-ba71-d97bc65014ac",
        "cursor": {
          "ref": "b5a4ba8f-de89-4389-80a2-5ca14627ef02",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eea65b5e-2527-4c3e-8ddf-d6cebac6515f"
        },
        "item": {
          "id": "9929e8b2-c03b-44f2-ba71-d97bc65014ac",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "911af35c-d472-440b-8b2d-f4d8b48d2544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60151e7d-0efb-4218-999f-2aef43b12f09",
        "cursor": {
          "ref": "d33b5088-e875-4a6c-81f7-af2693fc41d2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "29cbff8c-999e-4c64-9626-2b7e8e5a51d9"
        },
        "item": {
          "id": "60151e7d-0efb-4218-999f-2aef43b12f09",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "49458ed3-ca99-4c49-ae04-11cc199d1b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbc1e5b-8cf5-445b-be87-2971519b2ba3",
        "cursor": {
          "ref": "7aac3e33-baf1-4309-92c5-6feb525b483d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d77d8d09-63ba-4227-a809-757d536b89ec"
        },
        "item": {
          "id": "9bbc1e5b-8cf5-445b-be87-2971519b2ba3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "140322d1-2dd9-4422-bb5f-1bd5e6372eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da3fd76-ea52-4341-be79-e32b8cb63e3a",
        "cursor": {
          "ref": "e671256f-438b-4bc6-a0b8-a50e0d325263",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8121e73b-f798-4b85-b1b8-a7d0617d3662"
        },
        "item": {
          "id": "2da3fd76-ea52-4341-be79-e32b8cb63e3a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4617fd5d-897b-40cb-9603-aac49dfc18db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b47040-eb39-4e44-b9a8-6ca4755bf77a",
        "cursor": {
          "ref": "9055deb3-dd3b-4194-99d1-92b9a6884753",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "79b8123c-eecd-41fd-9e13-44b48282e5fe"
        },
        "item": {
          "id": "95b47040-eb39-4e44-b9a8-6ca4755bf77a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e759096d-124c-446c-9ade-5fb1ed9353cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdecdc6-bdeb-4bd4-af63-ac3d5f07497a",
        "cursor": {
          "ref": "d1ce7687-1e6d-42c4-b240-cc08b839a59b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c18e8d1a-dc95-4920-81ff-0d93d87c929f"
        },
        "item": {
          "id": "5cdecdc6-bdeb-4bd4-af63-ac3d5f07497a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ee8506a-8736-49df-b564-be786a60b466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d71d98a-f595-46ba-9b5d-16968a2badfd",
        "cursor": {
          "ref": "090ec4e5-d40f-4a1d-85aa-8bc5ce43337a",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b06727aa-41d8-4795-8ea5-cc3f50815927"
        },
        "item": {
          "id": "9d71d98a-f595-46ba-9b5d-16968a2badfd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6f3b7db-6fda-4e08-b096-6c4fc4e8b5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13cdaa-6363-4e15-8918-f53f6df46e7d",
        "cursor": {
          "ref": "8369d15d-34f1-42e5-9927-7e72d6c5259f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "98634909-d851-40c1-93c4-4efc9b4fee24"
        },
        "item": {
          "id": "df13cdaa-6363-4e15-8918-f53f6df46e7d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "71704d7d-4a92-4379-b6e3-90970e71456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9964e257-dc6e-4019-a127-a6a5a382b67d",
        "cursor": {
          "ref": "24ff6ae9-40c6-4ce4-9091-a7a2acfb9b16",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d348fef7-be06-4189-9e11-1ff20e5b6652"
        },
        "item": {
          "id": "9964e257-dc6e-4019-a127-a6a5a382b67d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7195a5cf-341a-42b0-8157-7c7bb4f4bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6305032-78bf-4ee4-9472-aea53a1232d4",
        "cursor": {
          "ref": "3a89e624-3f8d-407d-944c-f352579b1fd6",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4acdf5f6-acf9-4b43-b5dc-71c27be093a6"
        },
        "item": {
          "id": "c6305032-78bf-4ee4-9472-aea53a1232d4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b77de384-3041-4084-aaf6-488f2427b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b948ff4-3af2-4107-a554-80ecbe060a3c",
        "cursor": {
          "ref": "90e39a9d-22ba-4fa1-a671-427b28aa3df3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f2ef7324-dc84-4828-af11-63568d100ff8"
        },
        "item": {
          "id": "2b948ff4-3af2-4107-a554-80ecbe060a3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "94160ee0-2fc9-4667-a248-a616238cbaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7313e1-a88e-4e39-bfff-590a361e935c",
        "cursor": {
          "ref": "c337bb0c-429b-4e85-b4c5-dc2cbfdc9a40",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef133bc4-5185-4ef1-98f2-2452d475be90"
        },
        "item": {
          "id": "7e7313e1-a88e-4e39-bfff-590a361e935c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b6308f56-8815-45a5-bda9-8176e3fa6219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8039e9f1-2bdc-47e9-ac4e-aa9f990127d4",
        "cursor": {
          "ref": "e9c9da61-6bfa-4f25-9582-a4bc565121a9",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bce79f88-41e8-4cff-84f3-43bfbfb66811"
        },
        "item": {
          "id": "8039e9f1-2bdc-47e9-ac4e-aa9f990127d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ed6127f2-353f-4b62-b5f5-8e455b1e4b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104d9da0-7d8e-45db-8d9e-e4744a595e43",
        "cursor": {
          "ref": "730ba766-0d54-4770-ba1a-e7046133a578",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "baf474b8-589d-449a-99ba-ea28b07040be"
        },
        "item": {
          "id": "104d9da0-7d8e-45db-8d9e-e4744a595e43",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9dd46d21-8234-4a62-bfe2-705c289bdfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7388b-d663-4496-9a40-f4b33e800ba0",
        "cursor": {
          "ref": "240a1c9a-acc1-44fc-9f38-1a3a50c61cf9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04a842ef-9363-4ea9-8a07-286cda6fd2b7"
        },
        "item": {
          "id": "97f7388b-d663-4496-9a40-f4b33e800ba0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca581db7-777f-4fcf-abc1-cfd33989713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60f26a5-3f0b-4d9b-833d-d409be494d86",
        "cursor": {
          "ref": "c1191dc0-1ffc-46c7-937f-51ea758bafcd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "41774a4d-cc28-4f0a-8859-5e32621c53c4"
        },
        "item": {
          "id": "f60f26a5-3f0b-4d9b-833d-d409be494d86",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8d37dcec-0109-4ad7-9f80-ee8517281dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b43547-102b-43bb-900f-dd79c9e1e128",
        "cursor": {
          "ref": "5fbd6001-eccd-478e-8469-f5d6e50c34dd",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9ec8e2bf-7aad-493e-931b-06e5e67df0d6"
        },
        "item": {
          "id": "82b43547-102b-43bb-900f-dd79c9e1e128",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bd192ddb-dfae-4535-9727-439c51b494d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850dd76a-22f8-4752-9285-d4950e78a884",
        "cursor": {
          "ref": "f512d660-3e3e-4de7-a4c6-d2873697a6de",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a614d1e6-77e5-4322-85ba-6d6365ce9206"
        },
        "item": {
          "id": "850dd76a-22f8-4752-9285-d4950e78a884",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "222064eb-6f37-4a5e-a276-632b05988e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b81ac3-4d49-450d-9de4-bbb2bddc3415",
        "cursor": {
          "ref": "29b12e93-d00d-4a16-afe5-17a54b61478a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c400ecc0-e6de-49de-9e76-34290f64f019"
        },
        "item": {
          "id": "03b81ac3-4d49-450d-9de4-bbb2bddc3415",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "89d06b98-9a4d-4582-badb-4249b52e13ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11697f67-2598-4a0b-b8a9-4ffa600bfced",
        "cursor": {
          "ref": "a4fb3eeb-a0ec-4d48-8a8a-6d35a8c94d4f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "919f9ad6-b89f-4c08-8e37-c0d9538d72ab"
        },
        "item": {
          "id": "11697f67-2598-4a0b-b8a9-4ffa600bfced",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "684a48e1-8f89-4d31-8dde-09c75eca271a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46282d0-7076-4f3c-9958-cf98e3698a05",
        "cursor": {
          "ref": "23a3b165-51ad-442f-94d6-554b7734336f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "648f685c-7f23-49d2-a035-72c861511a9b"
        },
        "item": {
          "id": "e46282d0-7076-4f3c-9958-cf98e3698a05",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24d0fef6-3e5c-4f06-8d89-3b0f8f205384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0a5ce3-f034-4ab8-b8e7-d3baef9faf37",
        "cursor": {
          "ref": "1515658b-86c7-4881-8be9-105075bfd8ea",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a34baea-8a4f-48c4-922c-1621ba069bef"
        },
        "item": {
          "id": "aa0a5ce3-f034-4ab8-b8e7-d3baef9faf37",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4e8fb91e-077a-4d28-8218-ddbce567c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79377f8a-e156-4835-a097-6205d8047f92",
        "cursor": {
          "ref": "64b15ec3-3928-4ebe-935c-7b971b10ca25",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a26c2a2a-79d4-4e46-879e-06fd75e07775"
        },
        "item": {
          "id": "79377f8a-e156-4835-a097-6205d8047f92",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56503b60-dfe8-410b-9f46-aaf0450ef934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3603da50-46c2-4f51-b47b-515149c05be6",
        "cursor": {
          "ref": "18fdaad4-e61a-4fa0-a7f5-d2395efbaa05",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a696a4dc-d67b-478d-ade8-0f9c314ccf81"
        },
        "item": {
          "id": "3603da50-46c2-4f51-b47b-515149c05be6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f488e05d-59f3-4bd6-995a-72d29ccb03b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff8feb-f23a-439a-8cb3-62d57077da45",
        "cursor": {
          "ref": "314b496b-5cff-4dd0-aaa6-0a801bba8361",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1128f8cf-9830-4f96-8370-3dcce08fe224"
        },
        "item": {
          "id": "fdff8feb-f23a-439a-8cb3-62d57077da45",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c0f3a9d2-e99d-4ecb-80e0-1afc1070e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fef7e4a-a60a-4531-bf2c-f670d744f3ce",
        "cursor": {
          "ref": "69c1b805-4ec7-4e2d-b459-58506d99d367",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d8f3c29d-6315-4978-ae3f-d9a02c11001c"
        },
        "item": {
          "id": "2fef7e4a-a60a-4531-bf2c-f670d744f3ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c9860696-19df-4bbf-a780-c93334bd78cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc45b6-aa39-4baa-ab34-2f36693a86a2",
        "cursor": {
          "ref": "7188e752-2099-492b-8152-226140bbb28c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ec29bfad-a050-4e13-b351-62f7f32f159c"
        },
        "item": {
          "id": "67fc45b6-aa39-4baa-ab34-2f36693a86a2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0f17ab10-7441-4a60-912e-d0e65e5e028a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdf9fb8-5f5a-4cdc-a470-c499c7449f48",
        "cursor": {
          "ref": "02dd8e5b-223c-4cfe-a1c5-663eabc070a8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "84ccde70-a71b-4414-b5a5-8c94df6b99c9"
        },
        "item": {
          "id": "8fdf9fb8-5f5a-4cdc-a470-c499c7449f48",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "44d9aba3-6b03-4d99-966c-bf4c29e88fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1758,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e2f005-73f9-4176-b8d9-281863038c8b",
        "cursor": {
          "ref": "649e9b34-eb88-4eff-b9eb-429bef79c512",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ea144394-0122-4623-9476-85c2fa85d0ec"
        },
        "item": {
          "id": "e5e2f005-73f9-4176-b8d9-281863038c8b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea2a12f7-f4a6-40ab-9f32-7055cede759b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1340,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f822d3-399f-4609-91a8-b5f5a32b21ff",
        "cursor": {
          "ref": "29881fc9-e5c2-431d-92a2-b1fb1a771af8",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1aca2ee3-bfb8-465e-9451-87f854876c9b"
        },
        "item": {
          "id": "a1f822d3-399f-4609-91a8-b5f5a32b21ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db087e09-da74-4a3a-8237-487a774fe30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1327,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf331b-739f-45ee-b91f-21fb0d2ec67c",
        "cursor": {
          "ref": "68797ca9-43f1-4813-be17-97ac4653a64b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ec40d97e-84d4-4d1e-9413-04aa20ed1b1e"
        },
        "item": {
          "id": "8faf331b-739f-45ee-b91f-21fb0d2ec67c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6fc2f58-c94e-480b-841b-d374b5948712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8fe626-4205-47b2-98d3-429cca44dccb",
        "cursor": {
          "ref": "0999868a-16f7-48cd-9e78-198ecec575cc",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "55c13cd2-0564-4346-9812-d83f0a2dd495"
        },
        "item": {
          "id": "2e8fe626-4205-47b2-98d3-429cca44dccb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f7f7af53-3dd6-4165-af60-33b0d4a52105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58732de2-0e6c-4a30-ad6a-6b740ecfd541",
        "cursor": {
          "ref": "d7946c8b-289f-4af1-9f63-56d60da2ae0c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "18b258ab-5d99-4ad5-ab67-24aff18f3b0f"
        },
        "item": {
          "id": "58732de2-0e6c-4a30-ad6a-6b740ecfd541",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a2ea51b2-adee-42e7-b38b-90a425772b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14367dd9-c841-46f4-9ca6-e16b9c3fb748",
        "cursor": {
          "ref": "b899492a-578f-473d-84c3-c4ad3c90c014",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "324c6012-b35f-4995-af9c-94f0a658ef47"
        },
        "item": {
          "id": "14367dd9-c841-46f4-9ca6-e16b9c3fb748",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8abe0bec-95b3-4902-a606-0bd0a636e8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba64b91-bc1e-473d-845c-fa017aa33d52",
        "cursor": {
          "ref": "645d70f7-cfb6-47d8-bf3e-0e08cbdb9e7b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "40afea87-039a-49e2-ac8d-af6b73d92106"
        },
        "item": {
          "id": "2ba64b91-bc1e-473d-845c-fa017aa33d52",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7ec4b326-c5cf-4a72-8740-a75aa3ec26d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ded3415-6bcd-4866-abbc-d183a44762ee",
        "cursor": {
          "ref": "552deb38-c745-4974-9feb-ed09d1579bd4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b47181d1-03da-4025-b662-616c743e95d6"
        },
        "item": {
          "id": "9ded3415-6bcd-4866-abbc-d183a44762ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e2e666df-5d0e-418c-81e9-672f31bba259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9e3681-f23f-4985-af23-229f26693e2e",
        "cursor": {
          "ref": "73575597-1e23-46ec-95db-bcc00043e053",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00ea7981-0e88-4a3d-9063-1213f7375a37"
        },
        "item": {
          "id": "5e9e3681-f23f-4985-af23-229f26693e2e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "54f50d69-a966-436d-b7ef-6eec010483f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9554dd34-e155-42cc-83b2-7f1d15df48d2",
        "cursor": {
          "ref": "7cf2421e-f4c3-486b-b4fd-a84f8bfa0137",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "31a07940-d742-41a3-b589-9f67ed6879ac"
        },
        "item": {
          "id": "9554dd34-e155-42cc-83b2-7f1d15df48d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3a489a99-34c2-4e7d-9e4f-df653acf8d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540147e-b37e-414a-aea6-34d026ff46b1",
        "cursor": {
          "ref": "938f18a3-6bf6-44cb-a671-5a88e70b1e05",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "22de06fb-06bb-4a64-ac29-a286cd479689"
        },
        "item": {
          "id": "f540147e-b37e-414a-aea6-34d026ff46b1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "acef73a4-7451-499e-bef7-1c6e23144e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddcc6a6-7426-48bd-87c3-01c43ce8f739",
        "cursor": {
          "ref": "bfd486e1-c812-45ef-928d-ef0d0c465eaf",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a24f48a1-d04f-4a2c-bf42-3bf3e0d142fa"
        },
        "item": {
          "id": "2ddcc6a6-7426-48bd-87c3-01c43ce8f739",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2eab68da-2890-420f-b1b1-a29b6d09aee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbc24a7-290a-4bed-a1be-5c859199a703",
        "cursor": {
          "ref": "e6574ee9-9945-4329-bf6c-e82593a3f76d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d00ac0be-1c49-47d1-b385-82c3bfde4fea"
        },
        "item": {
          "id": "2fbc24a7-290a-4bed-a1be-5c859199a703",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d2278fda-3a26-4da3-9de3-6c760c3c3cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2233,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef917f51-8e2b-4cb0-8504-399e74d67f4d",
        "cursor": {
          "ref": "2179d73f-0107-4b3c-9585-0a0afdc20656",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2d911a98-347d-4de7-bae6-e8ef3c022505"
        },
        "item": {
          "id": "ef917f51-8e2b-4cb0-8504-399e74d67f4d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "47c42e27-d154-4ea0-bdfb-2b90d20be520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1946,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156aa32f-95a4-4e8d-b856-f9530a40a4a0",
        "cursor": {
          "ref": "6f2e9ce2-130d-4f6c-91e5-fba9cc0e1fe3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56c4a7d3-90d9-40de-9019-31eb28cdd093"
        },
        "item": {
          "id": "156aa32f-95a4-4e8d-b856-f9530a40a4a0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "09a2e933-91ee-4fb5-b75a-fc0bdb4dd248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2885,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44254d73-7a76-4e00-bfb1-f137d2710d0b",
        "cursor": {
          "ref": "5a96f6f2-7bda-4736-8ce7-31ccfa964a42",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fefd983-eaef-40a1-8f45-6635e46462dd"
        },
        "item": {
          "id": "44254d73-7a76-4e00-bfb1-f137d2710d0b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c57a83e5-837c-408d-8372-a5d66e1057b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2188,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c5d9ed-7281-4ef3-8691-ccdbd96851c7",
        "cursor": {
          "ref": "f53b1c9a-7cd5-4ef3-83b5-24f3b490c4f1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a87ab3f7-c6ad-4347-b6c3-e46ea18a2e3a"
        },
        "item": {
          "id": "f5c5d9ed-7281-4ef3-8691-ccdbd96851c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6fb5d7c0-47bb-47fc-bda6-b8e689e768e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1437,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12621f-0c5f-48a7-b5f5-f72a38e696b3",
        "cursor": {
          "ref": "26bbe13f-b2aa-4f11-9c2d-88d5bc504b2e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e15e7f8-1233-4605-842f-506d4d6ef5f6"
        },
        "item": {
          "id": "bc12621f-0c5f-48a7-b5f5-f72a38e696b3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7b018528-e482-4fe4-ae2c-a69169b15419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1259,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29a4354-a936-4b8a-91ea-6a6fbef0a99f",
        "cursor": {
          "ref": "b8a7e2b5-206b-407d-8068-d78b14f2473c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "24615b14-aab8-46de-82a0-5db2486c53ff"
        },
        "item": {
          "id": "a29a4354-a936-4b8a-91ea-6a6fbef0a99f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b33fe30a-fc57-498d-bf58-e9998d22b7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f164266-857e-4257-9ade-f9726d36857c",
        "cursor": {
          "ref": "d3b37615-7890-41e5-8a83-04214d3c1534",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "da29cce2-34bf-40f8-91b2-30d8c9afc6c7"
        },
        "item": {
          "id": "9f164266-857e-4257-9ade-f9726d36857c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e1ed1d20-05fc-40eb-98a8-5b7a0b1abe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d7e91-fb14-403d-82e6-e7e6a210c518",
        "cursor": {
          "ref": "6d5fed80-64a8-4312-b0ed-efc070068861",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "646558c9-6d5e-40f0-8559-a7ebec4ded20"
        },
        "item": {
          "id": "620d7e91-fb14-403d-82e6-e7e6a210c518",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "70f6ec65-31cf-41c8-8fda-e3f8ba5c4f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39804923-4b1a-44d7-a3f2-185d17a4faa9",
        "cursor": {
          "ref": "e666ddcf-9312-492d-878f-7e779f086984",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "56f4dfee-0504-4b60-934f-e87a219ac97c"
        },
        "item": {
          "id": "39804923-4b1a-44d7-a3f2-185d17a4faa9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f7a1f0e9-634d-4429-8662-1e6427660cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9ffbfa-0f49-4559-86b4-b2847637213b",
        "cursor": {
          "ref": "cc28ebb5-a8d8-4cf9-821e-a72b64b93422",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75bd50ec-317c-4dc4-953a-daa4563b70d1"
        },
        "item": {
          "id": "de9ffbfa-0f49-4559-86b4-b2847637213b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b68b7d16-9f08-4db1-ba77-a5031ea78ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef5df20-c6da-4e29-9826-b28552224ee5",
        "cursor": {
          "ref": "b52e59d1-7e05-445e-b813-41ac6cf60088",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0aa48a4-485c-41e3-be79-3d65a3ed9b94"
        },
        "item": {
          "id": "2ef5df20-c6da-4e29-9826-b28552224ee5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c422b236-2a2b-4c91-a516-6d551d4e641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d27f4d-d89e-48ee-b2fc-a12d89d4544f",
        "cursor": {
          "ref": "82a41124-4c0b-4266-bd64-9e5b7fda4172",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5e7c0e3b-b743-42cc-8592-19573b1681f6"
        },
        "item": {
          "id": "f3d27f4d-d89e-48ee-b2fc-a12d89d4544f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b98b538-615c-4663-8f60-a07fffd195d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0084ba5-2b20-4589-8f4e-59b67eb455cc",
        "cursor": {
          "ref": "05878dd9-4130-464b-bf97-f6e2d8079fd2",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f3b15787-0746-4f2d-8a8f-0b59aa7ea7ac"
        },
        "item": {
          "id": "b0084ba5-2b20-4589-8f4e-59b67eb455cc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38d64eb4-6f75-4578-ab76-70b23561c813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35a30ba-3cc0-4c08-82c2-241dddf30036",
        "cursor": {
          "ref": "c720c49f-84d6-4243-b20f-2859a287745c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d27a3589-dc1e-499d-810e-3e8309db8dab"
        },
        "item": {
          "id": "a35a30ba-3cc0-4c08-82c2-241dddf30036",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6781f728-6e16-48fd-b0e6-14e44fb87b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb36399-4ff2-42b8-b180-c4a0aceacc80",
        "cursor": {
          "ref": "0dd9d955-d172-4ee7-ac70-3239446d179d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "892f6389-f6f2-476a-819e-e58517a6cf68"
        },
        "item": {
          "id": "2cb36399-4ff2-42b8-b180-c4a0aceacc80",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a4d84766-8a7e-486b-9836-998a398059e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1829dcb8-0377-49e4-b205-2f802bab0c88",
        "cursor": {
          "ref": "ff0a8e13-ae5c-4ebd-9acb-5f3439172a06",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "505a06d9-29fa-4359-bcb1-ae2f005f90ed"
        },
        "item": {
          "id": "1829dcb8-0377-49e4-b205-2f802bab0c88",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2a2fb47c-0547-4344-9def-7d20907b8874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcdbef9-6f8d-4978-a4ec-44c31379184a",
        "cursor": {
          "ref": "1aebbbc2-5e83-41e9-8d00-359101efdec3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e632016b-a4a2-4374-bb41-b38b1615f2f3"
        },
        "item": {
          "id": "abcdbef9-6f8d-4978-a4ec-44c31379184a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "40a3b879-b172-4c8c-9327-4bfd17a8ef11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3345f5-9a99-474a-b4ac-48bdad5089f6",
        "cursor": {
          "ref": "4732ba8f-2272-4d96-be66-8598ed94bc8c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5828e673-8a1d-4cc0-9925-8fcd7ff1df99"
        },
        "item": {
          "id": "4c3345f5-9a99-474a-b4ac-48bdad5089f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c72434bf-4dd1-4033-98df-e2682b486594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a75a92-9cab-4a50-b5f7-9c811f66e8f0",
        "cursor": {
          "ref": "5ae418f2-f954-4964-bb92-89f71c041969",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "653d9e0b-fe1a-413a-bac6-42d8280bf9cf"
        },
        "item": {
          "id": "45a75a92-9cab-4a50-b5f7-9c811f66e8f0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f5596e5b-d6b8-4f58-ae82-d83252c8f2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f9ec7e-b003-48b4-a053-fe3638112b42",
        "cursor": {
          "ref": "dbe50b74-5479-4c59-be8a-858e7398d0bf",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "123b9c27-8a7d-498b-b8ea-809c3cde0fe8"
        },
        "item": {
          "id": "a1f9ec7e-b003-48b4-a053-fe3638112b42",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c250b0f3-2ebf-426c-b8f4-19cec93adae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcbe0da-0da2-4ed6-b79a-4daebcd3f97f",
        "cursor": {
          "ref": "451894a6-99af-43c5-ae97-0c2639e90dc4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6640d7a-5efc-4cd8-bcfd-03cb0f2f829c"
        },
        "item": {
          "id": "abcbe0da-0da2-4ed6-b79a-4daebcd3f97f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a88ec03b-0520-4846-a336-bb4af5214aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6add83ab-aaa1-41eb-9dab-2e4c6d428ea7",
        "cursor": {
          "ref": "2a793217-d1c0-43ab-866a-92b7116577cf",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9ad1d2d5-b8d4-40d8-8d65-8f07bf082aff"
        },
        "item": {
          "id": "6add83ab-aaa1-41eb-9dab-2e4c6d428ea7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cc9c0e03-7a7e-4f40-8902-0ddafbade127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1d0f1-9ec8-406e-9f52-16887f6d24ad",
        "cursor": {
          "ref": "e1c0e6a0-5407-4209-b733-7899473a7655",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "efe12455-aaac-47fe-82fb-05770ce55bec"
        },
        "item": {
          "id": "ffc1d0f1-9ec8-406e-9f52-16887f6d24ad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2c08f1a1-f659-4dfd-a200-c2a93e0f73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa85b68-f76d-4ed4-bb22-43918ba2a781",
        "cursor": {
          "ref": "043e2605-0eeb-4ba0-9df2-f06279d08d0b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e5a170e-196f-410f-971e-a95217b99a2e"
        },
        "item": {
          "id": "afa85b68-f76d-4ed4-bb22-43918ba2a781",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4bbe1c9f-8323-4558-a51f-1535b088c0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722ef0ae-0652-4743-9524-03ea61a326d7",
        "cursor": {
          "ref": "f68090c2-9ae2-47ac-af7d-28fe27a0001d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9e4d0b52-92fa-48b4-9280-4ad0898262e9"
        },
        "item": {
          "id": "722ef0ae-0652-4743-9524-03ea61a326d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0526e59-f8fd-4b04-b2d0-4d29e9bcbdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b257d780-acdf-432e-96bf-442671eaa695",
        "cursor": {
          "ref": "1fd89aa1-c68d-4298-839c-31ed070ef923",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83566f04-70f6-49a0-93d5-ba01647ec91a"
        },
        "item": {
          "id": "b257d780-acdf-432e-96bf-442671eaa695",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a9b5fcb4-0e20-4bbe-a302-672a612334b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f83a9-17fb-4cf1-90bf-47c5064621db",
        "cursor": {
          "ref": "33eb7ada-9829-4932-8580-f5bc1d3814d0",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f9a75b2f-b79b-44ae-8423-30199c315f91"
        },
        "item": {
          "id": "0d0f83a9-17fb-4cf1-90bf-47c5064621db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a5aaa41-600e-4cb6-90cf-565c41c0ee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25978d7d-3029-441d-a94c-07d875912c4d",
        "cursor": {
          "ref": "1eb3815f-23a0-4ae3-ba5d-ae24a961468d",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d36d0388-c0bc-4335-bbcd-2c1fedf19616"
        },
        "item": {
          "id": "25978d7d-3029-441d-a94c-07d875912c4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "edf4abfd-de6c-491c-9b74-c4be109abf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44022dd-9ad0-4975-9b6e-485ef93a0ce4",
        "cursor": {
          "ref": "83b2fe90-9761-4b62-b622-d81ff3562c1d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "171caad6-1ea4-4f4f-8cd0-71c183f2954a"
        },
        "item": {
          "id": "c44022dd-9ad0-4975-9b6e-485ef93a0ce4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6da5dffd-7768-45d3-890c-1dc5b64e22f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceafae7b-7fca-4ea0-9575-0cee151fc52b",
        "cursor": {
          "ref": "e5a8afa9-6f33-4ee9-8162-dfbc8f29de3a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "98aebe70-d856-4d0c-a682-b6c3a586a030"
        },
        "item": {
          "id": "ceafae7b-7fca-4ea0-9575-0cee151fc52b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d105659e-9219-439a-8dd5-391c6e38b215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1172e8b3-4b32-4dd1-81fd-9a3a0922838e",
        "cursor": {
          "ref": "5b19b838-6c36-4095-9f82-64f6c82cdee0",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "78db8f82-9a9e-4a2f-bb01-6b84caf8c2ad"
        },
        "item": {
          "id": "1172e8b3-4b32-4dd1-81fd-9a3a0922838e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99bda77c-8e5e-4d35-a99a-d694e1258313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ab757-9c75-4105-a546-82e015d5a1ab",
        "cursor": {
          "ref": "6ed0c58f-165a-4791-b9b6-c74082949e40",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ae015fc4-af5c-4d47-8c5c-00f9791d97d7"
        },
        "item": {
          "id": "925ab757-9c75-4105-a546-82e015d5a1ab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "347cb936-7d7c-44a2-aa7c-f08a63cf6b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d92b68-5fab-4148-960a-86fb28bee11d",
        "cursor": {
          "ref": "71265482-08a5-41dc-83dd-4b332cf9f3c4",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "45a1de72-a8e0-4b00-95ad-78f9b576dd02"
        },
        "item": {
          "id": "41d92b68-5fab-4148-960a-86fb28bee11d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5c7781f-8414-4b37-acb8-1475dc6da844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a1ad79-74c9-456b-9f3a-169c09879e30",
        "cursor": {
          "ref": "1e097ca0-82c4-4b97-af93-1e93c54f3441",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "25bb8fcf-9417-447b-bec2-42a4fed645bd"
        },
        "item": {
          "id": "56a1ad79-74c9-456b-9f3a-169c09879e30",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8b880367-70ac-44b2-9f02-02c873d0526d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c854af20-9aed-4763-8310-25ffd7514398",
        "cursor": {
          "ref": "cdcc1ef9-ec52-456c-8c3e-a3c6f8a3a577",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dc2c7b4e-500d-40a9-be65-f1e8d955f034"
        },
        "item": {
          "id": "c854af20-9aed-4763-8310-25ffd7514398",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d0378f9a-c776-4d89-b53c-ed8f74671c45",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee261a-ea2e-414c-aaef-8885e2b7c718",
        "cursor": {
          "ref": "ad395c23-a2a6-455f-9dd4-fa94a992a873",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "003fbcf8-c170-44b3-9b9c-490bacbd4012"
        },
        "item": {
          "id": "5dee261a-ea2e-414c-aaef-8885e2b7c718",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16c83e52-fa0d-4b46-9f84-d5d2e3ad4ed3",
          "status": "OK",
          "code": 200,
          "responseTime": 656,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7883e5-02fc-4b5d-808d-7cb63992415c",
        "cursor": {
          "ref": "8c9a6a46-f145-48bb-9661-ae2ecfdadb82",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6b1d4443-485e-4994-ab2b-905ae5df7c12"
        },
        "item": {
          "id": "cb7883e5-02fc-4b5d-808d-7cb63992415c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b30d7ea-b6c0-4950-939d-94202ed33ffe",
          "status": "OK",
          "code": 200,
          "responseTime": 2094,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e96f13a-93f6-47fc-bde7-3e2ff30f21c2",
        "cursor": {
          "ref": "d7ec5188-ccc1-4439-b86d-4c9d9503d530",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ad46fdf1-47dc-4267-a8bf-223e3ea1a846"
        },
        "item": {
          "id": "1e96f13a-93f6-47fc-bde7-3e2ff30f21c2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cba442ca-51ca-42a2-b469-c1ed7549c526",
          "status": "OK",
          "code": 200,
          "responseTime": 2158,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
        "cursor": {
          "ref": "897ecd7d-5f50-423e-a5fa-be14c5126787",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89f6927e-d84d-46b1-8ef2-f34988154525"
        },
        "item": {
          "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0dfef069-10e7-49e5-94ab-aeab3f316ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
        "cursor": {
          "ref": "897ecd7d-5f50-423e-a5fa-be14c5126787",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89f6927e-d84d-46b1-8ef2-f34988154525"
        },
        "item": {
          "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0dfef069-10e7-49e5-94ab-aeab3f316ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
        "cursor": {
          "ref": "897ecd7d-5f50-423e-a5fa-be14c5126787",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89f6927e-d84d-46b1-8ef2-f34988154525"
        },
        "item": {
          "id": "4dad4549-070e-4e0f-8dfd-5b432cd4e9d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0dfef069-10e7-49e5-94ab-aeab3f316ecc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e046ef6f-2ee6-4073-9e7f-212412592c88",
        "cursor": {
          "ref": "09cccc00-2e72-402e-8e6e-ddedb041cc1b",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8449103d-b255-4cfd-9b3d-a377f4a36b8f"
        },
        "item": {
          "id": "e046ef6f-2ee6-4073-9e7f-212412592c88",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6016e5b7-1a91-497d-96e9-21915f750012",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 635,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89f96fb-3699-4817-aa14-d729189d7b5a",
        "cursor": {
          "ref": "c3532f1f-6e35-4cf5-971d-24af71ff6a8a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "51e4fb58-5867-4728-9931-8f8e64ba5329"
        },
        "item": {
          "id": "c89f96fb-3699-4817-aa14-d729189d7b5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9dc7fe2b-a4a5-4654-a123-14e870f62b37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89f96fb-3699-4817-aa14-d729189d7b5a",
        "cursor": {
          "ref": "c3532f1f-6e35-4cf5-971d-24af71ff6a8a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "51e4fb58-5867-4728-9931-8f8e64ba5329"
        },
        "item": {
          "id": "c89f96fb-3699-4817-aa14-d729189d7b5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9dc7fe2b-a4a5-4654-a123-14e870f62b37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013dc0c-09a1-4d67-9286-afebdacb6f4c",
        "cursor": {
          "ref": "9f11e104-03f1-4ff1-b525-b8efc1e8e0d7",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "44917136-13dc-48a6-82a2-793a0c83552c"
        },
        "item": {
          "id": "e013dc0c-09a1-4d67-9286-afebdacb6f4c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "412cbd8e-c74e-4c26-90bd-d9a6613344bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 913,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaef1c7-d1a5-4ebf-b234-a79d4cfe65c6",
        "cursor": {
          "ref": "e86991b7-eb12-4302-98c1-473fd1cc922c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a5835b7-276b-4d6a-9308-a07ca3610b80"
        },
        "item": {
          "id": "fcaef1c7-d1a5-4ebf-b234-a79d4cfe65c6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6ec7d243-6259-486e-bc5b-9661424e1351",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaef1c7-d1a5-4ebf-b234-a79d4cfe65c6",
        "cursor": {
          "ref": "e86991b7-eb12-4302-98c1-473fd1cc922c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a5835b7-276b-4d6a-9308-a07ca3610b80"
        },
        "item": {
          "id": "fcaef1c7-d1a5-4ebf-b234-a79d4cfe65c6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6ec7d243-6259-486e-bc5b-9661424e1351",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdb09ed-f4f1-49fe-b31e-d93a774d8c83",
        "cursor": {
          "ref": "7c228741-4f43-4e04-9a51-a9a846052361",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67c90f87-cc67-4f31-ae67-81e8768271cb"
        },
        "item": {
          "id": "6bdb09ed-f4f1-49fe-b31e-d93a774d8c83",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "aa7a6c04-6b72-46f0-889c-d4ae6d59f5fc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 818,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}