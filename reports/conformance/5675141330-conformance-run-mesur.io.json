{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8f6828bc-92c9-427e-92a3-469d6affe614",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7b11d812-7985-44d9-b0af-1b93409aba63",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a945d3e-d228-4e09-a403-49dfa356462d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "971465d3-3bcc-4250-b744-c1f898829869"
                }
              }
            ]
          },
          {
            "id": "1b1fd5d0-3968-4764-b903-6df49861cf3e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "093892e7-5328-4737-bc7a-c17d315adcda",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53d60683-8567-42fb-b083-5155b293ca0d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b31132c9-c1c8-4acf-82e9-1c91ad182bd8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "995a8c37-ba8f-4c76-afcf-6ebedece16c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c945cb1-33df-495e-87ac-3083ce554f8b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1d5ee5-7e42-480f-b958-9b19e643a7af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c249532-c8ae-4ac6-b557-2f3399b23897"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99f0eb36-328a-4f6a-8a90-6007534039d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59ae303d-a993-4262-a8b6-63703498ec23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff9e1522-bf36-4aa3-9ff3-2726c7c68be2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60ee5edc-5bf3-4a03-80ad-d585ade664c7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc73ae7b-34ed-49f5-b6b5-a81f2329d283",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "609a393f-57cb-43d5-9e73-afe1c0d7ddea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0bee36f-5694-4ee2-9d7f-c9570ed64f03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa52c0e4-cb55-4601-b258-99179142b1be"
            }
          }
        ]
      },
      {
        "id": "87b0ab8b-4777-4102-bf8c-a92bc17e7cdf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3638c74-35e7-4705-adbd-b4976d2760f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14bf3151-8ea5-4928-b6a4-4ad17c1fc5dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db21b13f-da18-4214-b6a6-93db8e263352",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b467a481-0b07-4e26-a600-e0b6dc35d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39af7a8c-3ee7-4b7d-950e-04fb977f77cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af3e5c-b37a-42d2-89ee-f05a4a50f022",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e063b8-9438-4168-988e-587d53d50da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bdf6b56-0c22-4cb5-8a63-02759c4a5b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105c24b0-23db-49cc-b8ba-128ba75814d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2523d96-daa3-4b30-804f-9712ecce9f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d66d0380-e7c1-4ca5-a051-4a2740869042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd7231d3-a20f-4fca-bcd4-3f04280498d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f77dde58-9c17-4ece-81e9-3d91a179b5ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bea0cd-35f1-4d0d-86bc-ffe0f5b9462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7a19217-4d01-4211-a8d0-8fec6d3e4420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e5cf72-06c1-4573-bd1c-84f097f6e696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13584d58-8e1d-4858-980d-e3798723863a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f8a4dff-2f96-4831-a5b4-e4b16ea01c78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6e5e6c0-2bd7-4346-bdba-cbc7af202668",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83c17800-41c9-42de-a23d-b1cb5de279b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "120bb83c-d95c-4f7d-8684-cbd0b73f2122"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9bd2375-0c78-4b83-89b8-7520b83f586a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6c5bdd8-6c42-4aac-a94f-e8423af957ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be210aa-2e2f-4eba-a1e5-12d9aa8ed549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af77f6cc-8ad5-434a-98f8-2082a1f037fc"
            }
          }
        ]
      },
      {
        "id": "04a3deb7-eac5-47d1-8b84-4615bda15502",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85e5d4f7-37f2-497b-a09e-e09a59111986",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39b36822-d24a-43cb-938a-daf84ec3473b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "99e69af5-bf84-4643-9546-1019327f8994",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9807bc6-44e6-4879-abc2-40a3a969b9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3883d814-de9f-43fc-81a6-972ee7ce14c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea35ae3-9ae5-4639-9728-2f3f8e4d4065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7e8e590-b3db-4e78-9d26-0f2ac8718996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602a4c22-9944-4a91-b2d5-c38a8df53bb2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbd7568-2438-4bec-bf99-98ee87f4dea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05a9c87-663e-4728-9a49-ee2254054658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e050cb64-9c31-47ca-bd96-203b2618fed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cdb437b-5b83-4eb3-a30f-ba403fd74d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f437b6b3-761c-4601-a814-2dccc367bb5c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bd6571-4e9d-4634-8322-9fc82594c7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e854222-b945-4c45-be14-746ec35fe13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ca1fd-98ee-4904-b605-b49b061034cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11a36eae-a5c7-428e-a310-84a20938a3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d378d8-9901-4c42-addb-b5f174dbb079",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892d6c33-103e-4fba-aaa9-0a10c2f4378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35b4354-0a72-4e1e-a5d7-b729b755afdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461541f-748d-43f2-823b-2765d47ab23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a523f3a7-104c-412f-a373-8e24a4658e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18452cd4-7742-4833-ac63-a1b4fb295c6c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d78d630-6cb3-4ba4-80bf-01dafd28e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3a5b88-79fe-4647-b87a-0b50d532c311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84324d8e-f905-4bb1-9556-fce197f855d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b422eaf-8e0f-4172-b044-29b54f67e57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f814120-f304-4c7b-a96b-13eda0581eb6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6f614-cdf6-41ca-93d4-7db5b5998fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2b90f4-8ed4-4737-99b9-6d841f907502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d472b8-87f7-4ae2-b10e-ebefb9dc851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff47055b-fe37-48f6-afc9-3179fa057ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46eb1a11-022a-40ab-a5cc-05ed8392548d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b553b3e-bebf-4dd7-8301-a965f305d3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0502ccbd-047a-4508-8dea-a38c646479bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bf44fc-674b-4ea5-9c4b-3b84b2bf12fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d36125-c0ac-4a8d-8258-46eb0280e5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d6b158-9954-412f-aca1-6386553241c5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dd4241-ecdd-49cf-800c-62a43db05f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec95f40a-c4c5-4ad4-babe-d54d33a138ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e76f37c-9887-42df-8c67-d2a06fc0b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d600f288-5fc5-48bf-85c8-75973b92a03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8876f6e-6683-4bfd-8f02-e8b1eb4bfcb7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257ea8b3-798d-4a19-bf63-d928209b20d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db46929a-50cf-450a-9197-5a1ad8d03dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed5b3f2-b5be-4d01-9c6b-80b0fd6a49f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a169c87-5148-4a04-a8aa-ccca5851ed74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9bd1ad-1777-4657-ab99-dcc9a6676093",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80440457-b8f1-4959-8467-c81339a0bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e9e642-7afc-4671-810f-cc680da65eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d70cc9-4acb-4d93-8778-d1eac08473cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e4774d-423c-440b-8873-f092cf1c0161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc7abb4-b6f3-4a9c-a1a7-754da1d806cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9491484b-3b00-4cda-89f9-2adea48bc633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46a090d-04a2-4123-bcf2-8c2774716dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc4a65b-a177-47a3-ad32-09c2ccce4dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd004a02-aae8-49f5-97cd-c6a5ce9b55af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631d8d91-9caf-4cdb-9d09-ba509c95f8ee",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08609f1f-7b91-49e7-9c55-1672215748ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8857034a-c9c5-494c-924a-ad81c94c28b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13963a6-c05b-4e76-b2cd-731f467eb73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35cddf81-2b1a-44f0-b5ac-534f8f42eee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de59c8a2-a4e4-4feb-b801-e621145ca9e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d180c9-5e03-4427-b248-7bd4bb0a7611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5599b63f-8be4-41b6-9917-d0d36befb6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb1703-5b77-44c2-a655-478e18a1a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8759a144-f317-41b4-8dc0-c2cee57fa7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcac00a-a0d8-4202-8817-e0bd7fb7cd76",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a35654-3fe3-4abf-ab6b-6c80e62c7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c78707-12ac-4049-b16c-1c0b3e97a04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ddac16-90ca-4e5e-8e1b-add843f82f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdaedb27-fa9c-4fc0-bb63-fb375060422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7bad76-c668-4fd7-bdf1-4383ae49b169",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba8bd5-6579-4918-a2a8-875c414b22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7992d62a-ba9a-44eb-838c-01a97d3e107e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c7f095-e6bb-43e0-87cf-05a0720c2cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b7e784-eebc-4431-be02-5340ec6c5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cfb891-66d2-463e-8f4b-64d2577f5a7e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392061a6-2b21-42c3-92ba-91c95d49d0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8d0c93-2b57-4f96-8616-5aa65ef28e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8746323-cb5d-4087-9eed-d70ff8dba3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "468a4c4e-7c5c-403f-923c-3ace19b4b1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e09af-77da-4014-9cbc-feab105e05a5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36679787-6930-45d9-a605-08917fb3fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d562c8-1ab8-4ee3-a8f8-ee13de9a1c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712f2013-20fa-407e-a2b6-747ac2fd9916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dafaf460-aa2c-4dd8-972e-9868106d1794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9315bd7-ccce-40c6-8a28-0248046d61fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6eabe-5e0f-4f17-855d-ed31b086687a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ae3083-fc94-4851-b6bc-ce270356f3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cce2f1-6575-4534-b756-24abf6aa0605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b10d7bb6-a422-4c5d-bbb8-013dee4c6580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f787138-9e98-448c-b6ff-d0624e46bb15",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d4c96c-0201-4b2f-971b-a5aa59cd9094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2b31f0-36a9-4965-8cdb-ac2b0c01ece5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d51bd8-4ddb-4966-af54-aedcba4bac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f40c624-11ad-4f08-8ef3-8b72f663014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810f8078-a814-4ffa-92b4-1dfd3517ac34",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4398a8-06f0-4352-a3e4-b7eb10e75415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfd9249-ac04-4c2f-a352-1272e9f6d350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a5d11-5561-45fc-aa6e-1c5dce9f8df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e2b86-411d-4185-a9a0-938b843a9762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d4d4c-6f94-4d4a-b0ff-763a7511b465",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be84680d-995e-4511-97ec-68ff140377d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4a290b-ba60-43a6-bc17-d611891d6b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a6b00f-cc94-4c66-9de6-09dd1988171d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78658bc1-802b-41a0-921e-99092332f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ec540-ab72-48c2-9650-21f209627bcb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2d73e-851d-4641-8af3-b87104333db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bda879f-3d3e-4827-a1b6-0982cae1d0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd783d-367d-4e0f-8447-3eb01791f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd8c59-82ac-4fa3-b94f-ef2298aa14ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62274580-001a-462b-beff-c5137ecbed4f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e7f1e-7df1-49c4-aaab-c99d0f949730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c796d77-aa66-46fd-b9bc-b4d49611e0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af5b6c-adb8-4f97-ba69-415c775c833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d05eab91-aab2-40f0-8c5e-0c8df64c145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b4b18e-5bbd-404f-b224-219f97a98855",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78336c9b-f97c-4df3-b6b7-7dc248c2944d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f488fbd3-2d37-4ce3-9800-42071a95a0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2359868-53c5-4cfb-be6f-e11d571b09a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b61c2a-e43b-48e8-b406-c6e7aa45b0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2fc4b1-b2b2-46ac-b9fc-5cfd44602562",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab5a618-d06b-413e-9b45-1decf213ff30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06190870-4e4e-4447-aece-c09d5865cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a22ea0-78bd-43d1-afa0-fe6560dbfbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba4cb25-0c26-492a-ad9e-17cc4aaf5dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4cff97-9999-4a87-87d7-72ffa666b831",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6095aa0a-be83-4ed3-a839-8f6c2391463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb411fcc-907c-4287-91fb-b72b49c54b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e3f26f-3f0b-4d64-bbb4-0ca87d4679e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f61778-74e0-4d2b-b729-2386cdf055ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8ed047-764d-460b-82f6-52499aec5aab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cea52b-cec1-4404-8d41-340dc2813841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747d3630-cf48-471e-ae3c-ca558913c573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb9db0-6663-4c0f-82ac-46dbb3417f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8b7a23-16da-41fa-9ab6-e4c5db0afe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c50d3-52f2-4213-9069-cd94d030f09b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf582f2f-650f-4b65-b3c4-0de575c073f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a53000-8927-4d1d-be13-c10b56c3f637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2e68f-bba3-452e-8496-5c435216b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89aa9c91-5135-4fee-820f-ec8c4c1416d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b42e235-2f9e-4743-a443-e98fbcfff962",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15a3158-eefe-400e-88ca-ed67602919aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dd97fc-1696-4ad4-acff-62521671b05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5a8856-557c-4635-a06a-ebfd2a6993e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b21c1c-4999-47f9-ae2a-64927418c98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a339b49-5419-48d3-b67b-db6802520a29",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75df854-21f6-45ff-88b3-9985771ecfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b45dae0-37a4-4462-8df2-aa29e720f50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3688b2d-939c-4bb6-b596-612fc5e15012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e926df-5ea0-4f18-bd45-dac4fce47948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0003d214-1d97-4bff-8ec0-b3071964dde8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3696a7-9dfa-4837-916e-070dfbd23ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5673de0f-9ab2-40e2-863c-acdc9323af8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7711ac92-38b8-4a78-86e0-d542ce916e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a0f124-d320-4f84-b56e-34c615f15d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebdcc88-c94e-410f-b18c-37d0e65e0227",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9331bea-ca84-47d1-abb2-3b21fd0b8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1479ba23-f0bf-4f2c-a03b-981684e51ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8551d6-b1f4-4e95-bc50-ecc1d35f17cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85405752-6c1a-4bf9-91f5-9a5a3038534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6a33d2-7fe7-436a-9fca-753af62c1c44",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229315e8-ce70-41f3-a0d7-6df7130eeac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdd8ac0-80cd-4a08-96ac-15e03082aeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc469a3-6a80-42cc-a96f-be18973833fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59120848-613a-4cc6-b48d-61411573fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4c3b8-76cc-4d2d-b94d-d18a50c3ebbc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86858a5-8bd8-432f-a063-0d3cc808a711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9962b2-1bab-4903-a7d5-a9bcc66d2512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e657a-c85c-418a-921f-bd460cc41fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac94722-0c9a-419e-be2c-61534431ac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edef54a7-2a6d-4dc2-8d20-f61d3e0e20ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63df00-5d4f-4c87-b4a8-54956a559f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd3681c-4a9b-4a5a-a625-29da9b278f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb77949-0f26-47b0-8bee-d6f8485c7556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe75bc8-c57d-4e7f-a4f6-e80752604d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5772ba-aa90-4120-8c99-a8eddcb665f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330f62f0-cf1b-43a8-bf72-64ed19338dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40531f6f-6dc9-4b7a-b4d5-5bdb278c89ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40638fac-8523-4349-bcc7-b9cfe86d270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "550c1c8b-3a31-4310-918e-d1037f79cd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3843b879-f97b-4ebf-a055-48b9fae64723",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3705eb80-f5d8-42b2-a678-f94d0e933a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ae8141-d9db-4739-917a-c5ea73118513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033e94b9-5cda-492f-9b86-407e637a1309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da3f92e-5a8e-403c-863a-4d2406e6ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6f47a-5c22-4df0-bc68-18d18db7fc7a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e28289d-e90c-4108-83c0-ffa87c78ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad016c6-7402-423e-953c-5e9cbbf37ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172f7fb0-7fda-4f09-9a60-99e869f06ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68a306c4-84de-412f-be68-5f933825918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe904bf9-d413-479c-b847-2c815a692ea4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d35b05-9b30-45da-b15f-b598526485cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9c7102-05ef-4b7b-84e0-2ee38c86ef9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fcbd95-6584-4d77-a094-e33896b5f4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "081202ca-05f3-4472-979f-87a00291a7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0971ae5-b25c-4456-850d-e2a03e8e86c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7279d7d7-c632-47b7-a372-d66c0ec9dd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8daa54-a1c6-446d-9e1a-d467a9be697f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b83a726-8af1-4f4d-9d07-b3c22289de40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ea7a14-ee18-4191-a3e6-bc14672f3399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff0f6d6-254f-47ad-9d8d-5bb59ca464cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26474b34-f3fe-46f5-aa37-d78d9a41ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e2ce33-a469-4dc6-988e-e34f31c3be1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc28fc-3d14-4df0-aba9-fe0826abea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6868eb-ca53-4ed2-9d16-bdb814ea7a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e19848-16a2-4518-8e37-642dbcde39a2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a8a01f-7fa5-4771-8109-76e86d0b19c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41db9e17-e2b2-4507-b925-5be204bdd66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb570ae3-14e4-4fe9-8745-329d08b10b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "02eba51a-3360-4bea-8c09-10480e81152f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69584cd3-dff5-4194-b3a2-8e05aa9d9ba7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b1029d-c56f-44ff-bbad-3c475b32a48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ecb52d-0115-46bf-a1ae-f2d42eedba46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642bfd81-bc74-487e-aa83-da7cd7d0c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb55427-822a-4db1-893c-03e1fb50c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825e0147-5413-436c-b103-8b0664119767",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5351c-c637-499d-aea5-b80d1995030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea57168-ee81-456c-8ab7-10a65d4304d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de304c83-3703-4c3f-b636-4d3932d706a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a100e1b-7d0b-4e21-8ab9-9c9cf191c6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df82757-1672-4ff7-931b-a68c831843ba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cf1d7a-06ad-4331-b884-5024a62b79b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e649c487-0ba3-4263-a74b-4cfffc89ba15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4267afcb-d5ba-4900-bf35-6e1c4efbdb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0011aef1-2f33-41e8-a801-5c0055555b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f20818-b8b8-49f9-b35a-875fa434072e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb511bc4-924f-4578-ad42-5b8155463beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf3a75-bf74-4348-abdf-58ec108d8277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355e8fdc-f76e-4720-97db-076c35a36751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4084004d-ee4f-4e91-af2f-83ad04f2f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f25606-f3de-46ff-ad83-ba2e7ce88846",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883caedb-d8da-4b0c-9abe-e9467dc7614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad94e42-65f6-4e1e-9d47-305c9ca89513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82289dc-b879-44f4-b985-c2bd4a4d6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ba23c7-c7e2-45bf-8b2e-449d0a9ad659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6587776-3b9a-48f3-9aa6-69638b99e702",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a67c10-d446-4199-86ed-b0a0304e897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05a6937-f506-4a08-a2b7-f85d045b4f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4359248c-3071-4174-bbd0-812a8be20a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd25d754-232a-4af1-b025-539aae1099fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf24dd3-03b3-4fd9-9aa4-968b35031cc6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11736c76-1554-4daf-ba97-ada13e5927b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c625d77-f8d3-4920-abfb-0db61e9fdf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe75b7-3d0b-4a17-8094-a836dcc338b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "945ead8c-3e25-416b-a7e9-c0f7543fd9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366dc750-3096-4eea-9fc2-0bc6b5994414",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe966774-e8a1-415c-814b-04f9e322ecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ceae925-c7c3-4262-8912-83ac0bef239f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f71f5-d800-41b9-b42f-22f8003e0f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71e87e87-ef7d-4dad-ab9c-16b2b5bcc8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8da8b-4678-410b-a322-63e5665ddd14",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1840ec-c629-445c-b593-fca181861b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e765b6-647b-40c2-a149-73e87a4ddafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99e8b57-9a52-4c37-9412-9043a43f58a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "323b3eb0-862e-4acb-9a6c-e36276c8d7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beacacca-e9c7-4be4-adde-34fbe71a2ccb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d4cfb-1aea-4505-a6b0-a666768471d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca0253b-a09e-46ee-b432-a54771cea5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44131712-37a5-437d-b7f6-c6632f288fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd6b914-014e-4d73-8ea4-0579d6eab8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6264d76e-7f5a-465c-a6b3-3b37fe50f9e8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73e18a8-0ac5-442d-969c-965e5355ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cff839-ee4d-4c80-9920-88b40ca389ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe03b177-541c-42be-8019-901d4f24412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b72245e-3532-4bcd-af90-adb51c6f18f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08380de7-6a04-42a4-849b-217673a29f1b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7a850f-603f-4ae3-b7da-c4051980b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf2043a-1449-43e1-a697-320d0b582516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a4bf0d-b05b-4c53-a34f-661ea9ce0172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8da6c0-612a-4d9c-a775-93bf0afd8fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d132aca-252a-4975-8547-dfd7c8915bc3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd84cab7-bce8-4675-a9b2-a48bbef38d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70c5784-8842-4438-8d1e-3861685e4dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6742f88d-7000-478a-8028-c9eafac93e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0f8f11-353b-4db0-833c-9f0f9a36bdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d78753-5298-4b26-b481-011c48aa17ba",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b535b0-2eb0-4347-a541-060d66a97c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd440f0e-6646-4878-8fe2-676e3956beb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9207bb2-db78-439f-a07f-a1b84148a421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cc1487-2be2-4e29-9995-eb9eabb66c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95078220-85a1-4249-baaa-fd99488f94d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ab1626-4f94-450e-8d2f-fa4cadef1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f630461-bb22-4139-912a-f22c021b1e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfc0bda-f277-4f16-89ec-753d710ce002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b90c1f-fe68-46b3-9ef0-1df2fe985799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7f295-9021-425c-a436-d0a70d72f6b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f49a8b-f126-4e6e-be68-30a510c277df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4fcd2f-dc1c-4152-aeef-bc0b29445901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9365ddc1-2a73-4e0e-947e-f1e831a4130f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1db19d8-5a7f-4ca7-8bdb-7d6f11dd8088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236ca4d0-b70e-4c77-a022-ed6d8a330be0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a304fcc-8fc4-4ec5-be53-f5aab1816f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff2053b-dd62-47bd-a689-b02a3e1ac837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab80b3-0bdf-45c1-9202-9302b73bb6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be8f0a6e-59e0-4a23-913a-e039028f7cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b07d00c-8fcd-4a6c-a25b-86b6ed0ac161",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e9cee-85e9-4b9f-b537-12d07001f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac9b41c-6041-481e-a64d-9f9ebc5dbf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef08cf71-a248-4294-8105-5dd9ee840a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1093556d-ef04-4a97-a898-ca8e79a21858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d06857-9558-4fa0-909a-0ef40aea1552",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414a0e0b-a0f9-420d-bfe2-ad647a6552ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7359eb-e84a-4089-ad6b-952466f3f37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0ae6ac-5792-4c25-b456-b0830af57158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88498164-533a-4ec4-8a15-aa42750edfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9359a2-5d75-4a78-bd42-47548a7fff6a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed295af1-424d-4ce0-91db-b7ed3b8987fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09302152-4e5a-4c6f-89b8-b2ae241945b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f98889-1bef-485b-bf10-052c0fa69fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab4448c-2c85-4c05-85d7-f370037107bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0508d16-34db-4c85-901d-aca25310d607",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60a1ca-03f4-4a00-be68-baabf33ef8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc23cba-c7fd-48ee-ab3a-cd56fe9fe242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ba6d44-68c6-4719-86d5-b2942ee581be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8af37d-9122-4e97-aab0-6fa25ce7e4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ebe939-b4de-4a6b-8956-2c349f74203b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631d9d9d-45c1-407c-ab8e-5d3cb1dda2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ac160b-3c87-4f1d-88f9-78146448671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25126e82-48cc-4fcc-868f-c26656219636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3a698a-e3a1-4bd0-b627-354df2d3acb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313b76d2-5d61-4fc5-b4ef-b4e4e8e7bb02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25f0cfb-e0e3-48c7-ab32-096c2c2025c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195c3608-de6d-430f-8a7d-fc875c0833e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d5d9f-5591-48c0-b025-163cd65c1d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "473d16b4-4b3c-443a-a8a4-33080459cd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc62f5d4-af8b-4478-ac03-58fa56f7dafd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a4f24-da18-4fdf-83a8-8d820b361129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9402e418-d870-4860-bf46-c8761e65867c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0044aa-85af-4642-a857-7ccce9f2d44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb796bf-96bf-4bff-a6f3-ba19d1ec511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1fab3a-24c0-44cc-a338-d14c81e11272",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41088f3-2cf9-47e6-bc25-e83948ab8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84c7ebf-08ac-4e82-a368-470742cc71af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cee7c3c-aa7c-4a4f-937a-fd2c48fee043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ded57fc5-23c2-450f-b547-fa0feb64a1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c46e4db-081c-4279-ad8e-86604ef7f90c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b848d2d9-5c2c-4435-a539-504b0eab3c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6808b8a-1858-4a6b-aac0-76a4e57a4faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd91d7b5-72ea-4c1b-88b8-6b7df1cca2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da52e71-1280-4284-bbd5-4539680ffd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53881da4-3207-4f88-a18b-bf40b6f13f12",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d862f2-d828-4657-95b3-beca28acecfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c95b8a-2147-4b81-9e32-06f42edd49c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90d0f2b-30d3-4019-b44f-50e91b2ebffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5305c67f-59bb-427d-b011-0777217fe000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a683a550-f09a-41ca-9dcd-b3047c9c12f5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a0d0dd-b7fa-4215-931e-d248c2077148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5bcb5c-f744-42d0-a4d1-621b1fb6fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc9769a-04d2-4345-a0f1-efb4bbee1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7641384d-981c-4edb-923d-f3a027b9b286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1ad78c-62d2-4893-90c2-a847a46379f2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52553c5a-d0c0-4e4c-8fd2-d62c49736558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576efe21-d811-4952-8a36-7ecd46089b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac73285-5dcf-4d0f-827e-0cdd71a46f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ed6fe4-5d67-47cc-8d88-19080f2ca23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c211cd4-c85c-4471-8e4a-d0a89b6fa75e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c674ef0e-bf39-4392-b037-bb7d25626eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4e1d09-f079-49e5-bfc0-4d3cfd65dc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7940930f-7881-43bc-bed7-58b5a210af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4626e7-3772-4bf3-9e65-cbd07af568a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d568f7-a698-435e-8899-7abab4e79c5b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cb82d6-7d8b-4cb6-8377-67905bf90a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fe8b46-c30a-423e-9c2e-afade6cddf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c6f22b-59de-4adb-aafc-87abae3ff816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91833a86-b5e9-45f5-97e6-004a8230a514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb08825-c57a-41a8-a834-0be789a5963e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b923ad-a3f0-4824-9e47-e7ad94896019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f194009a-9513-4c5d-aaf2-870ae89109ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480be145-2ed6-427f-944e-8b73c1c29138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38db3bf3-9424-487b-b4c9-02db6849e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42666c15-59e8-4533-bbe3-c74820ac512c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf7f8ca-84a8-4613-9502-aa4e63e0cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d36648-6b3c-4074-8b2f-1de8e1734253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65be20bc-f563-428a-9448-18311ead042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d71f8d-4ec5-4ef2-aa7c-fcff6904f6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b74e77-a150-4279-b0da-4d4d66d3fa45",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3518cc16-c727-46b8-ba64-271eefed2340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa98061-4787-49ad-88b9-8ee6ed229947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a7c453-67c8-4e70-9914-62d02f20773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9f49f4-53a0-4f86-a5e4-167cf729e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c622e7e0-aff2-451f-9dcf-21bf50a60f93",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37221a10-3556-4ab6-b76e-de1c664952fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a7645-22f8-4f07-935d-e17604e876db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512654f5-97de-42a2-b46e-e7a2d26e94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844ae5ef-4b72-4e32-8564-e87f8d7c4cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4471ea8b-9c86-4585-8abf-6179efe817ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd0d90c-3615-4da2-a98a-6b8d9499938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df406ed0-eb01-4f50-bfbb-6753e14279e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c8d2c9-3bd2-4f2b-9171-7f062ced0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c637a7-5819-4132-bfcb-771117a7fb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a134fdf-be99-4b56-b4f0-26eb64aa9f78",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29480945-85ae-4cc2-b1c4-41622f43ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed25640a-af32-45fc-9249-f1254439c8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c93e97-a0ea-48e5-9c11-de703c209ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77df71ad-7c84-4909-9b92-653afc58d2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819b5f90-c9a0-4ffc-b16e-8a88ff74d870",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e424a4fd-abc9-4bf4-a1ad-dc4346436236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb899eda-ed20-45a0-978a-4c547eb902be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b76a07-d51e-4288-9a3f-cd424a21b29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99eac555-4502-45cc-a936-d10fd1c3a8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a336016c-dc54-478d-ba88-0714b7c2243a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbc34b6-d2a5-41de-8aa9-d2f1d6f11fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c73b37d-3275-484c-b30b-d48564b61098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e17e63-cea4-42d7-955d-efc19233ab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3e9c4e-9fc1-4e78-a16c-069f95bc3422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ca886f-1656-49f9-9084-3cf61cc47cf7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c9b202-3d1a-48ff-9f57-6b95333c87f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262e48f6-c761-44bf-b487-b035af09528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d9c3c-83a0-40ad-9aa2-27c54d17edd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d7c22c-28e8-4f26-b96d-e2ea9cd6d25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa703f1-80dc-424a-95f3-2163a465995b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d0c69-a41b-43f3-bc1a-df9f7910ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230384a3-9d6f-4763-8907-e785378a9562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224d8b36-26db-4216-8a11-ba635cd63e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0afa56b0-a740-4ff4-b355-d5d3fca47abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba2383-bb4d-4b6c-b35d-17b51cd3ffe1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8782939-da2c-4873-9048-b0e052c83a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afb0f15-4a0b-4363-9bb2-ead8932b0b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c4912f-6305-4983-ad17-eacc24991071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "144773e6-f38d-47a4-9acc-27f53516b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c3dc04-75e2-4279-8f57-f492e94009f1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda7c51b-ff95-4a86-872e-984aa0d033af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6fc009-27c8-454a-9db9-0e41a110dded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221fba5-b415-431e-9f6a-803e6bb8a20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e13984e-5cb5-4789-b803-6b9f1351eff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2af95d-adb6-4059-ba16-b7f58a4b71de",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b64b30c-6a5a-46c1-a5e1-f37c172e7afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3035d01c-01dd-4b9a-a503-5ef2a40c5150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b75679d-3c21-4cee-b5ba-cf211b991c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ef0b80-14d4-4d17-9480-759d3cd7dc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6fc2f5-204b-442d-bba1-4dccc54a3ec0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f183b94-3a0f-4879-8224-35bec4cb3e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade6b6e6-dba2-4756-9d04-47ccb9ccbaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8023b67-0eb8-4535-83ed-6d8956ba3b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3855b38c-a92e-4803-9b48-e7d19624e0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712d3e0f-a1f9-49e7-843c-127c02d0c995",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dd1d3f-6f51-4e5e-960e-fa9d57ebe8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3e9d84-37dc-4bff-8d5b-595c7b9dffe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcd0f4c-82c6-4bf8-9202-a5c642076183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30d118a-c9ad-4a78-942d-9a6f42604710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9070f5-86c5-447f-8d0b-6934ef111cad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1086372-99f9-41a9-a772-73deaa203a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f757a5-7a3d-4c82-a9ce-6a499b26b85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e4705-ac00-45ed-8907-add33a37805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd487540-3b2c-41cf-a856-a0c1381be2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62464a9e-f32c-49b0-8e8b-f858a20878a9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305051b0-f3e1-4aca-abfb-30e4e581691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5d13e2-b037-4fe4-90c1-a7a161979a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcac0fb9-4bc9-436d-af5b-9579bd952dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ea2979-b02b-45e6-bf41-20d5d36cce1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841861fc-249f-4ca7-8b10-d8e0c9a7b079",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5205a79e-4a42-4f35-bb98-eb322c797679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea58aaa8-e34b-428d-915e-341180a550b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f6c50-2f6a-432c-9930-2d592c7b1c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cc8a67-3184-4e9d-ada9-d92954aff102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94611c-3151-40ab-8894-4e2485d0828c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16ad9b3-d9f4-4be3-9e38-a11265e192ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f6c679a6-8855-49de-9cbd-119a9aa448bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3613e31f-de7b-4e54-bf6a-37e65d63d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c1ffca-0853-46f8-a119-7474547df877"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6178811-1408-4fb4-a694-5c294df1f352",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96e6f2a1-3668-493c-bb2d-ce75c2341d66",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a54660d-5158-4a5b-bdd0-9d6b1cd9e19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9c7cd42-94c3-46fc-9cd6-3bffbf283bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52a1cd-5a06-48d9-a8cb-a050f5a298c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87da5402-e00e-4ddf-967b-a85d7948a86a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1184e885-5b89-46f4-bab7-4a83be468503",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ee76460-b83b-42b4-97f7-a874bd4b9929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04effa9d-ef6b-4cdc-87b8-2fe3ff68efc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b16638ed-4027-40c2-9dab-7fbee4e0bfc4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "583a5321-1955-4561-b726-774bfca1cb05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5adacf8b-58b5-4602-93a4-5911a4affcf6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9dd5785b-04c4-4654-ba56-cc2edc303398",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72329448-0603-4c8d-b66e-76bfd0895d75"
                }
              }
            ]
          },
          {
            "id": "8001f20b-2cd0-49f8-a6e7-4d4fbdafe57c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9e67e7f-26db-41d3-b584-c12067735549",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e958ede-8b87-4267-9f1d-8ea0bfd125bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e575d8f-d3dc-4ceb-8eef-053bfa3b1375"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "430a9ff9-d43e-4dd8-a3ae-6e3d2744cfbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4dace5e-2e44-4a14-a341-ad4c40cea70b"
                    }
                  }
                ]
              },
              {
                "id": "4f1e8bac-5caf-4e57-8f24-429e769bc865",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54149d89-d400-4b2e-ac23-a0c6706abaef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72f478f4-f332-4e96-be04-de1654cd0641"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "183510ef-4fc2-48bf-bb59-38012f64b6a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6e91ffa-cf94-4d37-960d-878c817a2cb9"
                    }
                  }
                ]
              },
              {
                "id": "ebd21ed9-27bb-4a08-b446-0cdea9a4594d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bbe3193-bee3-4d2b-a81e-535451546b55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e4105f7-56df-4eaf-8284-a5e9216065a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67b194fe-56a4-4564-b42c-bb2614fd230f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "152743ff-c1cd-4c9e-b89c-7dfac49ebc4f"
                    }
                  }
                ]
              },
              {
                "id": "8f194f43-df4f-4fbd-ac35-6e1c35a1356a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c531bf6b-a250-49d1-839f-922137a3250a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9cfa418-8db6-4882-964f-685b8bf87011"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e15b0b7-a719-4d83-a1f7-368d9432f632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38904669-55df-46d4-822e-890407bfa0c9"
                    }
                  }
                ]
              },
              {
                "id": "6e63faad-371e-4b84-aff0-ece05fd89e65",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c265ce65-dccd-4af0-b7f0-f3b446331d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9752095-16fd-4584-8d14-f102dab5ec63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22f9877-eb7b-4fe9-bb18-cf91610aa050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "65a3b47f-3758-4f8c-849e-b2dbbdb24156"
                    }
                  }
                ]
              },
              {
                "id": "25ca7919-3050-49d7-8c48-15fa8a66f32f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "beca93a6-39c8-4a01-9da8-eb917332132e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38946df5-08e7-41a5-8f08-ae733346abab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbf8544d-ee4f-434d-a956-5f5744b1e563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9990e53-f02e-41d8-8c33-ff41ff75342d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2b25c40-f9c0-4f29-a486-8058b87cbe19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "090c7f4c-6eea-4d46-a4e1-9f37464d9cdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d433f7c0-62d5-46c3-8748-1a0fca1ec7ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd8aef60-1007-48b4-953b-d8eac640d156"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c54d6d8a-2ae9-4f34-892f-ade31ef6410d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "af0142ca-19c4-444a-9fbc-01193a72ad48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fce5f44a-66e3-4d1e-b5e4-2b4f3d8f9c34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "917264f1-eded-4b86-9f9e-7bafc97f01bc"
            }
          }
        ]
      },
      {
        "id": "de80760e-b0d5-4e5c-84a8-ce1892e43a7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "36d5fe10-d04b-4d34-86e4-4a1dd83faa00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5479e126-6d5a-4cf6-860a-ea744c9aa795",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b1f60aa-aed9-4e58-9c8e-03ede399be48",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f749c351-15f5-4e3e-a2b3-9ce57f349e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f069781c-8736-43c6-9d38-b1057bb91654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad511c30-248b-4498-994b-bd0f70ffae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "078b7e0e-3c8c-4b90-b9ef-00b540b2bd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a05121a-37c7-4041-8542-7d8b40b63807",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4849848c-431c-49f5-84d9-5a0932fa90b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7177ba07-d58e-49ca-a59f-5c0659a5c4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7bc28a-30b7-49d6-9158-9259d0096e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4422d6d9-01b5-4b2c-87a9-8d7a2f5c8ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d377274-0cd2-4a89-b4cf-70134abe179e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc42e948-630a-4a78-8824-0c0a8314630d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bcd7c4-2a4d-4b1f-9a9f-f4aa57122f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7171e8-28d5-45f4-b029-e32c324d659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34271cd7-7f9c-4601-aaae-731e1f7d51df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4730e9-e1a6-4080-afb6-71071fc0446a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b0650e-d3f6-4de5-820e-54cd1ba0c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06282c8-b9e7-45c5-a1ce-b350c9b43f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9244e4e-76e1-432a-bc9a-ac0409062cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d21e90-8ec7-4e20-a6e5-9e6d66b37df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9742e8e9-1c3c-43d6-a592-5ad8dbda4322",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e9a78b-dfbf-42da-b89d-2559af271863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be49db7-838c-4952-8880-49c28c788a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590baafd-004f-44ab-9717-568c8813a19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92e53b2-eaad-44fa-80b2-579fb1cefee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f72e95-4afc-4940-b423-eb392956ebc3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2410e41c-be28-4144-8f0b-66be373de03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320c9932-f599-4228-9cf5-c6d4b3316a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd10dd26-4963-4a20-a02d-c1d3b961423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "801dc143-d11b-4b84-894f-755975c66034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441902c-3c85-45aa-b972-93ab63305c30",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6155461d-ff18-414a-80c2-9cc9206debc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baf67c2-9bcc-4d01-b53a-56d74036ad44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c4b548-321b-4752-a2fd-93a0a576cb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40333ff-810a-4c06-bfa2-3d9949e4befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e600fd-8af4-43b0-874e-826904dd0c5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6629701b-a913-434d-856c-dbd9f8b84f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76f1d1a-96ab-4f30-86a6-08d2ef524b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373e1094-e094-40fb-9f6f-d46afc5c6908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fd6e56-f6bf-4de9-b078-a643b5dcea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0099f340-1cf2-4e32-a1ef-ae825ff3415c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dbce20-2975-4c9f-9ce4-b0675a62e366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b023f52-690d-40bf-bbae-cdfecaa63836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb0c9e-81e5-498d-b80c-3a5d69b9b937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d6e65c-c6d2-4e9f-a05c-ac11b14cb8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da697c-a933-42b6-a5a2-450b77840d56",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed63411-3a66-4a5c-b4a0-b0f057745010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce859e79-31eb-487c-8983-a95e6860b0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ba9a4-9389-4a06-b780-fc36092cba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8679cd0-c55f-48fb-b9c4-a0caf3c5deea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a522b79b-d332-4c60-a907-a4d8dcde7790",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb89ec6c-4798-480b-8758-2ae5b6b770c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57606177-dbaa-40b8-8840-7d95e20c5166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069eff80-332f-4298-9b6a-7923249fd7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19b595c6-4235-467a-9cff-9bca4a5438dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043bffcd-ea6d-4b8c-acba-9d9046b9e4a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be02cfe3-8c9d-409b-9efa-ef34d2a0a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c82f36-86ea-4aa2-b5a7-58a2eeb1f28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9d42de-a3a7-40fa-a63f-c9a94c153d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbfccbc-f058-4aab-a3fd-8cf96927e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cc3761-d410-4728-bf31-0e36c4df43ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fbc54d-4c59-42f5-9707-195bc18ab1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4edd11-eb22-44a8-8826-fae3b98d3a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfdd0c3-c6ca-4b11-9df6-5a59f0a7df86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "643995c4-675b-4afd-98d8-d52d20119e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa8c133-26ca-4565-854f-9cacef3bec2a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49fc627-4770-4a32-8452-62f8149cda95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21ce7fa-2d8d-49fa-b9c8-f774e6dafd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0630d555-a04d-4fb9-9f5a-9f39a424d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "090d9578-b3e8-425c-97d2-a92618d78f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d4b9b1-2bc4-48af-99f9-97b9102d6ed3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f2d564-ff39-495a-9817-c455b761f240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d00080-e55b-4361-98b3-b47c93ec7935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29745876-814b-4827-b331-cf745c93af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e629693b-ece2-4a5e-bf30-fca4897a4716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5919a118-debc-4cd5-9800-2c0906923f4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c27e02-8224-412f-a1ab-4c1c736a5997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd58ac0-6426-43e0-badc-76e70e0c04c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed249608-d72e-4aaa-a7f4-c401661e56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80758f9-f0db-46cc-b2b4-4afd89b6ab8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58834d05-0e7a-48b9-8908-fefe017a5740",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8a32a8-e460-47ca-9b7a-295d31ff3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b263d7be-bee4-4a5c-98d4-31222e289c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d74a31-33d2-41f6-bfa4-c64a79be9da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c52b1b-251b-4f6e-b848-5b2e44dbd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4fa9db-3401-43cd-b656-82fdea6eac8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccaace8-1518-4b16-a896-e2c13e19e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524a5726-f0d8-4808-9710-0626af0d722b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22efc867-e163-42ac-9377-310305627c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0127f413-ae2a-4914-9e6c-8f264f47860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8913dc-2138-495e-a64d-82d7035b43a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5583ea43-d668-44b5-a449-04c272c116b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9be759-0f1a-4dae-b0d7-09a8604b2ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b5055c-caf2-423d-99d0-244e43e63ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3019f20-7f38-42b8-90e8-bb1429da7f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4bac7-fc6e-4865-afe3-cb1d67a0fa83",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae254e-6b6c-403e-8042-ee08ba8f55aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfc75d9-8bbe-4e4b-a06f-1e6ed7159173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f6b1d-2d2a-453f-9e30-f92385230731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9619cb-af1f-4bd4-bc68-089226cdafc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5ebf5a-b379-4d08-9431-82a651307845",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873fed37-4d6d-4dee-b6bf-956edcadfc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02768f11-a4d5-4854-98cc-f8d17bf1eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b249b6-67e9-4c1e-91c0-b1ac81ff7321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ed02d7-f675-4c66-84be-3b2bdca840a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a73e78-b114-426b-9b5e-e7fd4153127b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d726f2-5041-41d8-8e87-ee4d1430c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b861bba-a144-4248-ae03-4430bd89cd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8848a97-43fe-42f6-b04c-0556e0a77136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfd74b5-a0e6-47e0-b785-74ac306f42c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5c1b84-1e04-4e5c-86da-c4fb6af7fdfa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52583406-39a2-4498-bfec-d821892622c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791a2afe-d819-483c-9170-ca52d34e4794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902d7d7e-a3b9-40e0-a1d8-33f3f1abc6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fdfc52-c3f6-4583-8231-bb95f5b02978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129f7da5-356b-4592-b7c5-9b0f68a4760d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ceced6-3684-4f7f-9406-3ee0322c59c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a46de50-fbc0-4f4e-bf88-b1f71139ca19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249fba38-82c1-4cc0-8a42-7816c7e2a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a163427-f3d4-44b0-ac50-c2da7bed981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aa6292-c104-402f-bf69-f0b08af248f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78db4c5e-3ab5-4706-8418-ebbc10182c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e3ca54-701e-4d2a-89ac-981593670d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70572a7c-eb14-4af7-925a-9e9270393a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb9fe54-6682-48b7-9be6-a965ffd3d67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ad41b5-475f-4a2c-b617-d3c91ed19277",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d4792-2b5b-41cb-9c7e-babf9c613665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41020a1-7349-46ee-a267-c9141e831969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a87f6-2b80-4dad-b853-1983f0e6628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f81998-3159-47a4-bd76-3e3a67d456fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688732e-604c-4912-8356-5f443b8f32e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6d2907-addc-410a-8047-8c0b99f0974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b0c17f-03ca-41b2-8dbd-ac30e9670099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56470ac5-81d2-4658-b37d-85f66fc6b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb97884a-377c-4200-b46a-b587cab12d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cef1269-e5ad-453f-8a32-0104b69ea1be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086a751-a348-41b7-9bee-84b13ecd835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140bc7a7-cb67-40dd-a537-37472c442a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc80f4-cd15-4b71-bcf0-13fb9c1c2cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46d7b54-a9b5-4e13-a6fd-8e75f33f7e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6328243-d3f8-4608-ad11-9b98173489fc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ba03d-aa05-4533-a18a-bd37ced3e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa3afd8-6533-40df-8706-896a3e6c0adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eb19bb-142f-434c-a0fe-44af64d4c88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f22b33-5187-483c-9648-ffcc5fb58cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895a28b3-fd27-4261-b22f-85400ffc11cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a6a9ab-9916-40e0-a5f5-c0d45d504bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c90932-e3c0-4010-9c7c-cbe8c2917283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71265b5-17be-4865-afe1-51aa92dab5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a3de83-a239-4fd9-8705-d35ce2c85f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06ff3d8-0e40-4183-8c98-962ee9bfb713",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615ac2b-48fb-49ab-b6f6-3893b74ef822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af551afe-8e17-4375-b9ed-e383cbfa7b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af46d991-93a2-4d0e-9ddd-b8b134294b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "135ce775-778e-44e6-ba07-5ccb89a8b357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4651d4-b26e-4adc-b5cc-2cfb87368a3a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2551b073-9a61-4e50-835a-5fb6bd4b1710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1504a287-1fb4-492c-b607-627992da3614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29087ce-48f2-40fa-95db-0ed9e561d80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ef5925-eecf-4013-bde4-3bb3a01e5614"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d08f59b5-c19e-4ca1-be77-f6f4ba45235a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e968254d-c790-43a1-9bc4-381e2d8b98d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b489a890-da3f-4df9-91d0-31f604f4bae6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0c6825-bba3-4b87-87f6-053a24629e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3781916-e763-4af0-8868-7d675ee2ba55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe12320d-3db9-4457-be62-99118524b8cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebb5958d-d856-4403-b02c-b66c0c52b8bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bd608b6-7e69-4535-a52a-a6ec5e796f17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee37f445-888d-4ae0-9b5d-fa39405aa399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d17898f-3e0f-46c3-b736-514f0ded3916"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3bc6f67-bd1d-4529-b838-23d32597ec93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecab4ebd-31a1-4690-978d-6bda216db369"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb71df32-8283-45ef-b779-e5879e07b962",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c99341c-8f40-41d9-9636-aabd729dd2c9"
            }
          }
        ]
      },
      {
        "id": "056a7b4b-11d4-40ec-a1d8-c9a50ec4c0a0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5dfe23fe-21a7-4f79-a521-8f0e6a8b6104",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8786217d-ae56-4b9a-a219-bebe2dda811b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f74b89c-16fb-4436-a64b-92a0b8f9482d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d89cfa-11d8-4ec4-a260-fbfafa8378fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de95a4b-9191-417b-b5ad-c9d20832eda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84b1aed-7f90-48d9-a2cf-bfc26d2c04e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ab92c0-c09a-4368-b489-5150c3cd3aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39370ee-7162-4213-ae6a-7f007a708b18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1666b9b9-0ced-4cc6-b990-3980cc7a38a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee1047-806a-4566-a1d3-2a15f0808fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27abde6-0978-4bed-bd8c-60cffccc0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2265db45-d5e7-458b-9f05-6ad2249fdbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee87f73e-de32-4db1-8330-e2c4f02878de",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391852e7-2941-41c3-932c-b890066e3093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939b0da4-29d1-4e4b-8147-5c814e955864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bed6cd-7ca4-4dcb-aeb3-355c3ecd5f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbe782a-b2a7-4731-a9bf-247c0808188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cc4244-bcb0-4e0d-be71-75d5214f702b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad03cc4-2293-4f16-8f15-f553c62a5689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e06c220-6363-4fe3-8507-0504579e6a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6741fdd-cf02-4f37-921f-6b6c4e50644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff61d5c8-17a7-4cbd-b80b-f90abc73ded2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57015afd-a404-48a1-a093-c0a935c5af13",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb1e3c-1016-42ca-8bc8-9b58db604007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721be81f-1ae3-4275-a4f0-ea2eb3153fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4389166-b039-4fb6-b151-d441122dc36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a248cd05-5d4e-4697-95e9-5024f44a26e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e67cd0-2a95-43e4-8ab0-7f8cbc655319",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d069efc-928b-45ed-bd59-b36bcd06a260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0b3298-8874-48fc-aaa8-1424bf3800e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e11dff-d839-45b3-9d65-9d7f9625752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f78759f-cd86-4754-9263-2a667219c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06622b-65e6-4235-a8b1-941c7c0f7155",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55718000-ae92-4b2c-8fdc-17d226fa92b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e36b3ab-7941-4453-8b5f-d249542f052a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1c121f-9ecd-4942-962d-730bac95a221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74f7112-76b4-4778-b671-ac7ed1e8beb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c0715e-4f6c-470e-8575-f98d9bb5ce1c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5e5eb0-179f-47b1-979f-16ee581d5fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c640ad-1115-4c2e-bfda-14884a94123b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db265c1-52aa-4401-a3bd-48f6406c91f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cddd74-42e6-414d-9ada-bb48ef04d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aebd0bc-1f14-439e-a172-8ea95b9ed8c4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c2a655-0a88-4d87-adcf-fdb7a035f7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c936273-4074-4885-9d20-243e17f759f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f931fd-5c50-475c-a781-5c4f30bf04ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c6e785-3b3a-4da7-b899-c22538b9223a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f29c8-1a50-4ad5-9389-18ef86d67a42",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30c7582-8622-4414-8cd7-a286a740c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beca65a-e847-42e0-a782-9f60a92bad1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e300649-f68e-45ab-b306-615faa6646a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3109d885-ccd7-43de-b9af-7f89df6a46a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842fa9b3-2b96-4dda-8d13-1d970a74b504",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db3f4f6-28f2-4b17-b3ce-10811b724872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef6b825-2d91-4a23-999e-900a6e3a2358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73764138-bf77-41e2-9737-146af302fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cae70f62-ca27-42ca-b4ac-6a13cd02fc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc76ff6-5fe1-482b-a457-d37c9b2dd730",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e788cde3-d959-48b1-b71d-9cb32a3134bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd969f2-c35b-446c-859b-b822138e3dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18738324-3a6e-4cd3-b4c6-89dd719605b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c1274b-2b9a-40f1-b593-c5dea3d2aaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28611d22-9b94-490d-8653-049e922e507b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0471028-9d18-4227-bd50-0a90278d9197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b44c2c-ddca-45e4-b1fd-f264ea6ce3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019dcf17-a659-483a-99c7-b1ed468ad126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd16975a-9e4c-4491-b688-bf9b365e1df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16a543a-5795-448c-bc7c-88574b9cf416",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d739411-2dc4-4a94-93b9-839eaa5e6517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d187f-5e8c-48fd-84b2-cd17969fc72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e683647-478c-4a41-99ea-2ad2e1d1bada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce7a8f3-25ae-4f93-b02a-72450d029d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae598164-2644-46b8-a14f-078ae38e430c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da6357-f232-4df7-8c03-fbd22ebc3baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270d43ff-5970-4441-9508-60a13ca19022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f757e2f-b268-484e-a154-a18fc0ca3b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "334ca4fd-fd71-40ff-8c96-74ce8ef56b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaebd94-73c0-44e2-b5c8-f8ab9f7476d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e636ab-03bb-4ba8-b0d8-12f7871dca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd032d65-805d-4a5e-a547-ae37047db829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a4c9f3-04d4-4a60-bc15-86688fca8314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d71be1f-30ff-4809-a36d-277a59760387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe77639b-6d17-4ad1-8ff8-f59d47fba7a8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b776c38-1c4f-404f-943e-9da623380319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7603ab2d-a79c-4463-8f4a-e2127f1fda8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47041b5-49ab-4895-967c-6ea1856018bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a8023d-1148-49b5-a18d-5484e172feed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10703e69-d9fb-4a45-a064-fbd2cb064e97",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca81ea92-2515-47a3-bae5-875382fde47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51896896-f147-43a1-92ae-8d8fbb26c697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2814615f-307b-416b-8e09-f76f7bcc4c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "910a58dd-2a4f-4488-b6b3-5d0f3ecc7aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29fae3e-083b-41c6-9b31-c6140e52fc7f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a0a473-df19-4ddc-8538-697320e04873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db00a27a-b2c2-4abd-8d4f-38615f3304b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992974ac-e93d-4831-a23c-100904124a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "968161ca-3074-462f-aa39-f42908a18a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72853862-d78d-45dd-af99-9bb2e59dc34a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e53266-0e67-4840-ac67-14f920a23a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff40293-430a-4556-805b-8ef49fd97cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed533683-f59b-47b0-8dc4-4f4d2b007a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa785092-94e0-44f7-a36b-267200f0222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6729ac-b49f-415c-9736-282d911ecd03",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694aff42-b254-45db-863b-fe8606f68c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a189a379-255d-475c-b3a4-59d9c2a02fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307486ac-9c8e-4afa-a525-c0b6b65137e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ebd28c-4fee-45b2-a7d4-1166d2a01a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966a4405-eeab-4454-b84e-15c05c569302",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb1b583-2df7-4627-b519-1e0b99ad7dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db5a2be-f64e-4437-bd61-18631af5068b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ec04e-ea09-4e26-bee7-d85a1fda3468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1806a7ee-2018-4cb2-ad93-deebdafd1ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dec3b6-f1c0-4a01-93c1-8c8f7cd32ddd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d928ee3-e5af-4872-b35c-e079f749660f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bd96a9-8c4a-4eb8-b2e8-45f88dc2004b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e35cf67-1dd9-45c6-929b-cc843fb5d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "defb7866-6d1b-496b-821b-c03ab794f2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd993b9c-547d-46ce-91fe-c10ef93f27c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f5d18d-7752-4894-a5e0-d982a2c442fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4be4ffe-c217-444d-9a23-4e7f5d3672e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f29832-5d04-4be3-bdea-8f7b21913d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af713d2-0157-4d43-a93d-85507d7c1c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23498b28-fe92-4f9b-8c56-65ee03725ad6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee65e3-fb08-45ec-a118-33a414a4f6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5379a37-8606-40fe-8cff-4b8d8eeb525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e24c30-b4bd-4f2c-9c9e-b59d175dbf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa03526-76a4-48b9-8c80-e3e198300317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd8d9e-ae77-44b1-abb6-8cafec1d299a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7be63cb-21c8-4d4c-acfa-fdde9b09defc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b79a9a-cb43-41fa-b4c6-b057a43b2935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8764c537-12a6-4d11-9315-f221193e623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "196115e0-2a38-4c0b-ab8f-ec0a7344830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca6ff2-1256-4d59-938c-a7ac23df4479",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d434a849-a5d6-45b9-b590-c0fc01cd7dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab779203-5669-4058-aad5-eb35ab8a3617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e640b6f0-886a-48b2-b6cb-8667e466a00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "919d3af8-8667-45bb-bde3-5106b0a60698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6ae2d3-0ea8-4f57-bca0-a0b2d66473d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5d3153-0a3c-4576-95ab-5f64694c62cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ae8ba3-38d6-4c18-96b8-f1c055d598fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2534110-3efb-467c-b5b1-0cdf0b927ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cabe5992-7e3f-4217-a45a-95ad75d94cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d621c5-3859-49da-a2a0-4c4b92930223",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cccf64-713a-44a5-aaab-751dc802798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf60026-127e-4330-b9f4-d7a5f6e9a2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7673fd0-054d-47f8-a313-490d2c0d45c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcc40e4-9717-4971-9455-d377175cd710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d4d95a-1d5b-417b-a805-2b44a83f74f6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3e7586-b8d1-4e68-b0d4-c615244438d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fbc38f-1984-4b86-b603-7d5821582060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90cfd50-13b7-4cd2-8627-c0c0be74adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd736c86-7c4b-4e12-9f1e-1d59acb4f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0e9c7-d4ce-471f-a865-70f58a0f776d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac788a5-9b26-499e-bdc4-5f0e34039b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb69e0d-cfd6-4570-bab2-1ad7312c99ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c04bc5-0a7f-4983-b629-0ce2a572481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2e412a-08ba-440b-9f8b-4171333beda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70614c5a-dec9-4ad7-8063-b32e4910eb03",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d161edff-6241-4ce4-9b9a-61102e792d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc5dca0-5309-479f-893c-3e62aa7da406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141278d6-9307-4ad0-86e6-33a47c4307ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3797c4-9208-436a-9f77-aebf0406aa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd9a661-5164-40b7-b712-b4385e61df02",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885a2838-9c7e-4f2d-908e-48e125afa41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8d2d59-adb6-43b6-beeb-cbb29c335239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf07252-ec4d-44eb-80a8-2d247fa9f38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daef5858-a985-42bf-bd09-dfb0b8902d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0731686-e71f-4bb9-81b0-c65711950782",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5aafd-e2a7-4c39-9fd8-ef3d53e8420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7bd687-9e86-4167-8aee-26f6713c2d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39debd8c-2158-4541-b11d-57d2eca16026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96b8092-a472-46b2-87ef-35449ae3fca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b71d791-65e4-458e-afc3-5726cf62fe5f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc822be9-ae27-489c-a3e2-b636bdc9d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7691146-a14f-43d6-845d-a8461e7b532b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e988a11-76e9-4819-8ec7-4f1ac78143ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778330cd-88b0-4312-b05d-bfed15dcd1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ae426b-e7e3-4b30-8f82-e72e8673c4a9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0bcde8-5165-4525-a440-fd53ae40048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4faaae4-00d5-4c10-ae16-c393e1c45e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08df60e-00d5-4529-a666-7dcce2543bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4187f244-c9c1-407a-90bc-84efdde60404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8753f4d-97b7-4526-8a58-1eeafe55bf73",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d431d76-8198-4686-93f3-5e0b2228d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2f415b-ad61-4628-b65d-4454ee163eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b82a20-bdff-41d9-9131-3c83add67d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1502480b-09b9-4322-ab6f-fdd3871dbcd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02d1c5bb-d655-450c-b820-322ca73a5998",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a959230-5135-429a-aaa6-38ba3832f7d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee69dea5-6e82-4cab-912d-558f95ac272d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e36040-545d-4c1a-a6a6-649274bcf5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ad38db-aa4d-40f1-a11c-14fd74b65166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15965d09-4e38-46c1-a793-18e85c732662"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9471e74f-0547-4dfb-a6bb-e669425c97d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d159dd64-de79-49b0-93e9-da9c8c79ad15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcaf5976-9936-4d52-baa1-fb4e70749326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632f9796-70cb-46aa-89fa-44cb0a9ab503"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66b1fea9-7fd2-4a2b-be82-b69ad0c1bc7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e742a383-785f-4f8d-a526-f5bd8681ac90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "646f2ce3-4231-447f-a71d-a179ca314732",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1610ed2e-f3e3-46f2-8186-104261799bc5"
            }
          }
        ]
      },
      {
        "id": "a95a154c-5444-438b-b1fc-6f180792c40d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "299dc73c-5b0a-4f32-8e69-6f182fcb166a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa101f14-694e-49eb-8633-b73a335fcdc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78812b61-868f-4183-b701-e39a8c4409ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be493daa-86d2-40de-8c51-88ce9389edfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03735904-e267-46ba-a720-fc73d7e3e9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0751e8a3-8b37-430d-a9a2-05dcfffe1948",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbb1501-e672-46fd-acf5-d12e3a18715b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49102d27-80c5-49de-84bc-34fc313b9366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525f2139-01ab-4f4f-8c87-ce6994cf326b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2074a2-8376-494f-abae-d7fa557c46c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b0a1e5-8169-4a85-8fec-0c4eabd045a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c433ae51-2082-4f5e-9bac-fdbdc03ddf13",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0553458-22d7-477b-a690-39832efc8643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aa5e95-d90e-4214-a687-177a0763bfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d49583-e38f-4cdd-abf9-cd148b8acd15",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63579ef1-779d-449a-aeb2-2f5ef4c7ee0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bb7ee5-2a06-4ed4-a711-0bc0551ece6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a8a2bf-913a-4f0a-8f60-ee65705b91c4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9259cfac-9072-401f-be5c-87d065a5d003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3394d82d-eb01-4588-8256-7c1d6ed3cadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3b9de6-f340-4c28-8687-f1a966b85d5e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256000f8-bdad-4b1a-be43-9b2f19cb0417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6044392b-8ba9-4b15-aaec-a62b82822f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36147c0b-0eb3-4347-8004-38bdfffef6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5ed1dd-4cf9-4e5e-be8c-ceff415e0b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d86ad-f3a3-45bf-b766-94b936cfa957",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deb550f-189c-4e15-9bb1-c0719234d478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88755a1-6fd9-4870-b332-3dbfb0d1b7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccceb29-180d-4d35-be72-9397d7eab160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9db9f2-f829-45fe-9140-7a50663cb7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e7c8ce-2875-4f33-a415-a9c33579c1b5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9452db-f9dd-4ccc-aace-77367e79937f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebc25d7-f6c0-43ce-afe7-d80889b1b68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980cfce-6c84-41aa-993f-ea819296922d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ada5b0-1845-4c4d-a5cb-33e8853fd86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cac79e-833c-4fde-a59e-8aac5adeb713",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d9d896-2ef9-484c-bd52-2dbc82b94fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4293f49-66f3-45cb-aa12-ea9c190e1ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873775d0-e847-41cd-b211-f7826f70194c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabecb09-4b3e-468a-880f-f1c33e6cf1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d7ffc-9c3f-467c-96c3-8671716297a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e1e5f6-e4c0-49b9-9944-ddc588082e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb72143e-28c1-4bcc-bbfe-5fbe7880f880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47237fb4-0396-4883-ac81-542a3411e806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474349fd-af94-4d15-b99c-1fc657a59380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfa200b-54c1-4108-9cba-2b7dc25837c2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe834c4-dc76-4d38-9a4a-e388348fbc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a277ecb6-01bb-4db8-8f57-bfec85ecb837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046c945a-8011-4894-9e27-7aecfae120b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28d1f01-a486-459c-999a-f502cb262825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db873b-70fd-4050-9fdf-fb067fd09b7c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1421e2bd-567b-4871-aa1c-0b830bdccc6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd12567-2930-4662-9adf-241e861f99ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cbbf68-6ed4-4e82-bb56-afea498af7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abed8c0-3abe-4bf5-af45-e1e98937fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e962f5-44ab-4c84-8c0f-bf516250418d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9c6f39-2c68-4fad-affb-9ee676786b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d6adff-3cc2-45c3-8a26-9277c0e94b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28da9968-0d73-4aeb-bd9c-317d324e16a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228cde06-e8ec-4790-88a1-1256eb05ed3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8570002-4858-4633-8e28-0b584d0c2b18",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb17912-8fbc-4ce3-b139-37cd7c69609f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53da8e6-735c-46b3-bedb-58bed62f1610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f192d595-d993-4207-8100-a8121c26a4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a367d3ff-f9a5-4b56-b915-088d1644f1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58307864-3848-40e8-aea7-dcbac021c725",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5fa885-6418-474f-8bea-48efc232892f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2976133-e79e-4811-9fd3-80ce15ba3170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1b84aa-b978-4574-97fc-a2544e916817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747bdd49-8119-44ad-a54e-c4c309685503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980664c-2a73-47d6-9aa9-b30db2fc6563",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66fa9e0-4654-422a-be14-c0b0cb10a678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d0bd5c-0f9a-4148-b303-3b20db2ead5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc7b92-4220-495a-8aa8-fd0fc737cb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe3cec8-9a40-4af1-a5c8-8fe785f43727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e100aa45-67be-43e2-a2a3-3d076911d2f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068be3ca-0762-423f-9406-423f97003448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a7e7b9-79fa-4aa8-ba5d-2cfee4ab5f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6092b7-570c-4399-8ea4-f9aae78abeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c060aa-65aa-479c-84af-2d7ca97f0603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ce5ad5-e56d-44cc-9078-b7ca35440050",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975960ea-30c2-4385-9c54-b377d3665acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9697825-d899-4fe8-859a-920c522a4575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e91bb24-6b09-448e-9a76-5f5bc4dfe4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da80230-3269-4f57-aa92-ed885024fac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59279cf3-d2d4-4806-8d1c-c59f6aae3af6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf195342-234c-43f8-a8cf-87e856f85064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ee4730-7c70-4c52-b9bd-59f6bd942b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4bf7b4-a70c-4e88-8ed9-d7d4a867bb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fab100-cf1d-4f21-96b7-37f2f371a5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38179e9b-0f5f-4de2-8398-24e004788c58",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd85a0d-a43c-4409-8f01-8e2dfbb37139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458d71ed-acc3-404e-b2fd-c3e55f749b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73badf-73e6-48d3-a798-71768fee96f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4fc4ee-b9cd-45c7-b924-0c8dea7017d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394a844a-550b-4b9d-a161-e3ee5bb00fd6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148769b2-b4db-4b90-b8a8-d76b5d4b0da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c13a47e-48bc-44e1-af80-b5ba8f61f6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6251b6-ee8d-4390-8d0f-70a580c14ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6ca9bf-01e0-48d0-b52d-713b98b2b73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f413cc-01a7-4d58-a521-9f5b06e674c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f74bf33-5d5d-4526-9eda-1111d9db8d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f84b6d-a880-4666-8efd-338479a072f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c9ecd-9851-41a6-a4a2-4ab6762d01d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22349ed7-db62-43aa-9e0e-77b0fe756036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee75be2-1b8f-4500-848e-ab3afa83513a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157ca33-c814-4e6b-bd68-ec31bcf55237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60418b54-67b6-4432-a252-071b9bc62a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23997db-91e3-4ea9-9921-f0e8a3a36b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f441878b-d9d9-4391-b906-0b1e8c5c79bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e521f-6f09-4151-8ca3-67df9dd1151a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7715cc7-075a-4a23-9813-54fe80fc7a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115cb099-e6ad-4f10-852c-0ad6d281ea51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3459f3-4cea-41ab-9a84-e028ebeaf29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9a1284-83f0-4a3d-9a78-a66fa48c9a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c1b2a-13f4-44bb-855c-5bebee5df580",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74937492-d2f3-4629-86fe-3eeb66eaad25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ea36ea-8de8-4656-9dc2-c8cbc2dbbc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f298856-1f20-4023-9f0a-1b46c0f633d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f709392-8992-463c-ab8a-76124947bd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77f6404-539c-4bff-9030-72f33c513b8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea342d4f-7c83-49d1-b747-f2ba4ff28a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da9f609-88dd-4aae-aad9-47e0264bb7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb6ba89-d510-4a9d-abc2-73e9c90d39cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59902665-563c-46be-8cbc-a5fadc50e693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e2781b-1c58-488f-bba1-f62f29c02ebc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54545b03-d975-43e5-89ff-6ab80b9cb00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2799528-4af4-42c0-a1f9-fbb09f2d5f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6c4302-ab74-484a-afd6-816204f3ad5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca604a06-fe50-4c0d-9b9e-9615c616ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22844c9-b347-46b6-a4a4-4d37f7420d80",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ad4c79-6326-4164-a03d-d68cae43a56f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4279ef2-a79c-43bd-ac1d-f39a8649c975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40425480-e1ae-48c3-8fca-979ed97d01d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfec1ca-ba2e-4eaa-a558-14680d29634c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cc0e80-edc2-4bdf-8d44-6e6a57d1c277",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c598e-cb38-4feb-a738-d59fc2530f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41764e3-d6c6-4177-ae56-34a49bfdad90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae27c0-9ded-49a0-bb6c-3433aef3581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac8d8f2-ca43-4739-8575-0ac141e8a1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de708e52-0b36-4dbe-8b14-eb61bc11935b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841be555-f849-4954-b3e5-2a64c43755a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f3efed-0b55-430f-8d1b-07e7ed38c4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8580bb2-2ac7-420d-bcb3-a6bd892d1b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682e90b0-184a-4b7c-bb9c-4c3b6594f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6a6524-22fc-4220-945a-05f5690e843e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c678f4-c2a7-4357-9bb6-e1eddd06b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec3f09f-10f3-485c-818f-75028a74a5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765d9c1b-8c4e-4537-98a0-c244869c863b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f778b411-07b3-48ab-94df-cd2afa94f07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2bb652-1b2e-49eb-a6f0-3b47564dcc92",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b4ad3f-f9e3-4d7d-a70c-e36fb225a130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24401d89-542a-4f66-9349-9cbf7470b36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b7b26-8bb5-4249-be22-3328ce6b2fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e64732f-a79c-40b1-91d4-b033d417a0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95595b44-7037-4127-9fef-487a24db8b07",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68ca893-f30c-45c5-830e-5dc0b3450d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3efd53-2910-43f2-a5e3-baa68570985a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeae9e0-8251-4b3a-a766-f4911f4c794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23532481-5b6e-4238-91cd-925823d8dc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3037ef-01c5-4ab2-8dcf-ba5e525bd096",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad156c4e-5825-4a96-91ca-d597fe3ac0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c930f0-8d46-4d2a-b988-373757c1c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007508ef-ce59-4cda-8c0e-76f2554fee09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187a0d7d-2fc2-4365-b2b2-3f1abe13d844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc0fe53-8f84-45e4-baa0-7101f00e7d77",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da1ef11-807a-45de-a942-a06c327bc119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca88d73-9c19-4e6b-bb11-79c096ba472c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7606fa-eaaa-4efe-aaea-051cfc6d71d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8594d0e-43d9-4e1b-bcb4-615eaf1ccf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e910ef47-a908-42cb-9b87-894e9a54efcc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb192cf-c068-4feb-be37-d065d8e9ecdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bb143b-6652-421c-90ce-e88b7357abc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d15e3b-a128-491e-9f67-b74f57cdf0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dc6015-c522-4512-bd01-4078cebadb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b491b704-5e02-40ed-84eb-ba8af42754c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52492e99-4d1e-4ef4-a716-ab0b0432d28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a17db26-e7d2-4547-978a-912fab14b5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b7b10d-bdce-446e-a6a7-6e6d39ca10e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8568c593-7e83-4639-a51a-17cac2068c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e4fbf8-afeb-4474-a405-437c701b33bf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb0bd7c-c672-4b5c-a551-3ffa21d6d8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf6a200-dc28-4d65-b6fe-d2ceba14f9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1d8c26-ff07-48df-8a2f-f7fdcdb9824b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503bf1b2-279d-4da0-bf85-bad0bb4ee7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7a1aa7-4825-4838-b95a-4dced8176885",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a157d28c-7778-46c8-94b2-4f6e8f6f7af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c02260c-fe59-497b-958f-6a7d4a0d457f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc0220e-0c02-4e21-9b0c-67b7a1d23bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337372d-55cf-4e0d-9ed6-112f1fb1ec4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95118d56-131f-43f9-b507-48c7edc6e810",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed762d-4d9b-47ef-8212-e2041056bf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c786f46-02e9-4fc1-b256-0d65f820ed59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4514aa-fa47-4237-a278-ea0f5c17ae85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34303d6-7b1b-4da0-ac34-3d881ce058ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab64bb1-eda5-45c9-a686-88a5b16246d4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f575c755-a9da-456c-9288-7265b29b9963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bede52d4-8cff-4047-84ef-6a2bea0f0ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae89f8ec-72d7-4480-899e-0e7a878846f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d13abda-2bf2-4b10-88cd-9a1ed903d618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c06f83-88ba-4f3e-b9a2-912adadb8575",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d53e1-1d41-4121-afb6-2ec710c77fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fde706e-f36a-4f98-a045-b8eca43208b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7746676e-807c-4970-bb3e-3d4fcc398141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f7928c-3f86-416e-8faf-c58d8e78f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa6baa8-661e-4931-b745-b65030bb2de3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ecf4e-f0fb-482f-bffa-bdfbfa6ab1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b7f5a9-aceb-4443-a81c-2950daf8dd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c40ce88-806a-4716-8143-f2fc91aecefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc87057-21c0-4f18-b4b3-89b82a28b552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0603d3f0-4c63-4e40-bb6c-6c94b78ababe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7387fb-baf0-4252-8dbf-20899e73fc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f05ab7-dea0-4a60-8924-e1e1e880ebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cd85a8-67d5-4699-986a-0eecf6b7063b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d748a4-854c-4e5e-b880-d576e892682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc52851-ed1e-4175-8d9a-ad63bccc4937",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cd2d70-1b0c-4931-bc3c-64ac991591eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a9f4f5-5609-4c9b-917e-c157923a8084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a21b097-4e4d-4108-9114-53e77163bf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cabf318-856a-4af2-8726-6b6e91142ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9851dbc5-c9e3-4810-b5ee-b57a73bf7f6e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bd8005-f66a-4f5e-a03f-63305b543fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8a4edf-c3db-41d3-ae6a-19ab4f9adaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a597cf-c015-4a4a-8907-f48de31a68a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37c6648-65e6-4f46-a7a9-8a147c33938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867a1ccf-c663-4773-a6dd-1f727dd18316",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbc6cc9-bc35-4792-b3b5-6eb985c8f91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545c9fdc-5549-40fc-bd35-537c9935d5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d7ee79-989b-4756-be46-4e12deb21730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe2e022-0343-4ae4-9d4b-3513243f0d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e65401-f971-4aa5-961f-d0276bd60562",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7097d38d-8fff-4e00-95f7-22e1c519aacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059d8555-8276-4122-b745-6d2aa6fb4678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af97b24-c3a6-4b43-bdf8-03e6e31adf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b79484-4079-466c-a5c4-ac5f5bb33c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4a1850-cadb-48e7-8ad9-6ba3b0bfb610",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc4759c-ec48-42e6-a495-3abf77483f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6685b528-7e0b-4674-baa8-3b3828e036d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dc87ad-0c9a-4e74-a564-efaf1037458c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79df5f3a-bbef-4731-b5c5-a7bec1a18d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f65a9bd-327e-4a9b-accf-02d069835cab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8f41b0-f854-47dd-967e-b239a4f1cb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c684a10-20f8-49b8-a996-e17e767b47cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4fd2e5-231e-436d-a9f4-33295b8ac8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a277c781-4784-4bdf-85bc-bb28ea6dde4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f64ea3f-99b7-49ec-9725-79d5ea45e175",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6b50b9-83b9-4fe2-b3cc-b3f00453b078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f771fa-f739-44d4-a4c2-e09c724dd356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f6742-e65e-48ce-a965-ad2486852b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df8092b-cc33-4212-9ec0-04e04e97669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831c017a-da3e-4436-a75a-c1e08f9e337c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56252323-08f0-442a-b166-dab7641708c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d3c534-7418-4ec1-9e90-4cd9419d2d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a440ec82-e461-4335-b15a-e740db544da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a49ea9a-929f-49dd-8f17-cac27464b75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e87bd96-84b6-4b48-a8e5-c0aa19fa378f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8285e67-345c-4ca4-81f4-2e2c88fa1f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da68c9e5-7a88-4cb1-b63f-a72a3d8f5ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df88ed06-905c-4b63-b99e-743614873a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cca3899-c033-4ad8-8e83-4cda620cafab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38acc869-12c2-4621-b06f-a939f7fb57ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522c757-a093-4ab1-80e4-63390205686b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b74b31f-237c-4c22-a60d-f715180168c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65a81af-53bd-4d73-bbe8-201fea04ba61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7de046-9f72-44e0-8dd6-8ddc481e394a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f970ce45-c95e-4577-a928-6469de2be8a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a479aa-725f-47b8-967e-644f499b6dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a5d200-5156-4df5-88cf-523f68ffe481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5068af89-e6a0-4af7-bf84-3520105b8907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cad2e7a-d087-45ea-a4ac-b70b279ef179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8e79b5-a459-4001-afbb-18a163f7d6fc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec1a7ac-001e-4048-b288-98a329c28535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0b6527-3f2c-4627-a905-bcc2ceec4a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5da57d-85db-41b4-b998-edd495d0ce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7750717c-5d0e-4ecf-a777-538ff81ddf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5c0fc-2bcf-4ca4-8818-243ea96c7f54",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013c086-38b8-4b6f-bdd7-1012ac85f96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bce85b-3c09-4b18-8b96-6971f497c194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3796f3-d521-40d0-b494-98e086ea9da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd20aee-8fa8-4dc8-8547-c2af2e7cd9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cb93d6-6879-4704-8215-01be6d53a955",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad7dc9b-5988-4442-9c92-3b7312f43c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98aa7d5-fbf9-4fc7-b3d4-49c8a5a7b4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d8fb9-5e97-4582-befa-91760ab7bcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cc4162-b43e-4d45-8753-837f8b96ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e7b60f-4160-4341-9077-f7e78a368085",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8064a0c-85a4-4b22-9ddf-c43d27fbc878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185b577e-6ea0-4ca2-b0b0-7d988f26fa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eabac79-f9cd-491c-a4ae-ad0dc8d3aa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab50f676-eca2-4ced-8621-c91caeab150b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a5638b-a3bc-433b-a1c7-67610114c943",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa23c63b-edc6-4331-9575-1e6c37027f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8125bd67-b68b-4d1c-838c-6bb5fb709822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168dbc94-24ad-4efc-af78-a1fc74d22232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da81c9d-aacb-47f4-ab2d-1117b070e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd0ab8b-79cd-4b5c-a341-39f58a80c51f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2031bb57-fa3d-4af8-9851-334b30f93276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f79a690-eac8-42c0-b4ba-3592741b507e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505a0871-dd77-4949-bbe1-da6909d65822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b8fd44-7c32-431d-9299-d24768ac3e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a79291-dcd1-4d96-81d6-a9dbde8b22b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0190b351-1d87-4c1a-8316-5884ede5f61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e817ab3-c708-4b64-ba15-fdc40b9a4fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fec963-3c8a-4446-89c2-0edcbca23dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c97ff50-0e03-4dd1-b2f7-3b8dfccfb8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c51249-bece-4d56-874d-b4b5d92797fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268bb1f8-ae1e-4df6-908d-89492155ffad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4b98ad-8e36-4c81-81ef-cac47858e243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35769ee-897f-449e-a181-58987404831d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28792c10-2f34-4700-aaa4-e3376473e0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d26aab8-a896-4f59-9df1-ccb7807bece6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc5f202-8eba-471b-9100-be895202e96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c428156c-f701-4871-a4fa-69cd7c6891e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1ac246-e949-408b-b3fe-9ea152ced2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d731417-9716-4761-bf71-8a8108791a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f397c96f-2da5-4a7b-88a5-72aebeb5aa92",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5af72f6-a239-4eea-a19b-5542c7e7df9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a733dc70-4735-46b9-9310-b1a4ea4cc0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccbd1f5-c85f-4e3b-8de8-339421c5aefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf94288-f068-47bc-b4c8-3d9dd89d598e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0e07f6-2ba2-447c-92da-ad54085bd43d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38fcf65-d5e5-4790-9178-f28e0f39a965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2df31a4-604b-4263-8f9a-b36435e0b827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca3e6fe-a601-43b5-9469-d5da8da3467d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b893e49-43ae-42cb-837c-864ee54db156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611b79ce-3542-4f24-9d3d-044e6c882ea9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe98eff-f1df-4114-aad6-42d5589c01f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c1ad52-84b6-45c3-8afd-666975c78a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd0beda-dad8-436e-afa2-f80a89074594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642b873d-2c20-44a3-8d1a-4933dcbe91b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec1e937-1782-4f94-b76b-b83e0373d2b8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c958ddea-7ccf-44c2-a433-df4b7a5961f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3035c8f8-4b0e-4e84-a0a8-4b7a3411b555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac89c2b-af54-4343-94df-4b99b08fad30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c1891b-b8cc-4b8a-a665-8d7cc7f41447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d497736e-9337-4682-a5f8-5fd88611e550",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df365b1-3be8-4ae6-94b1-2db3de16849d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df40e046-4145-4918-a9a9-0c8153755753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85106b36-def8-4521-b08c-512909dea34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e81543-09d5-472d-849d-f40c126ea06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428b2ce4-0747-496c-b60b-8837e362c415",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c19d1fb-9ef2-4b0a-ac74-72387ac1a047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a599c13d-f8bf-4fe9-a994-fc71948cc826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f4a23-171b-403e-add2-f43a17deb433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a525955-ab8c-4cc2-88fe-98d8d7071559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6f90b4-84b1-43db-9ccd-dc9d38fb4d31",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b67685-d82d-4b21-922b-f98b3b2bbf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e846b32-e008-484e-b184-19e2fd6a4f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3675401-b3d1-4cff-bab1-b0cb4f1621fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccce7c3-64f2-48a3-a1df-0323b236e518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29f8f9-a6d7-4ce2-938a-381d77f418c2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6471a8d8-1b69-472f-9fcf-04086572e846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de32216d-d9e8-47a3-ba93-faf882294b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c95f415-8acb-40b9-ab7f-d59ac745167f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8a31e2-7faf-40d6-9148-ee988de03464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e603be0-6ece-46d9-a573-0af3ca839007",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf16d7f2-065a-4228-82a7-793b0d1e8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61478c2e-a5cd-4aa7-9b91-8749d007537e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961896e3-3181-4c23-a77d-b743e767e235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9159559f-d7ef-484b-9019-45288b0302ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac97e29-384d-40db-9f38-95c5f6792876",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7b5ab5-87f9-4106-ae1f-79b03b78d45b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d403090e-5ffa-49d4-8c57-ea2912b61e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca555e2e-f4ed-4842-85ae-d5fb60d4e9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11f98df-e3e9-4e06-967c-ee7804811f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3c676-2e68-4ef3-b1bc-12b49b66b576",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee9fba-da27-4560-b5a6-f7a609beeabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a648f909-6906-4d6e-95d2-9d662fb1d2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409f75c5-48fc-4944-b77b-9c63fb5cb92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b638bf-7852-4dec-a4d8-03b169072e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1cc16a-6330-42f5-a92d-92c71c3e77f9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd96a26-ab07-4aa0-9b94-46b722eb59e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6cd100-fcd1-4158-a66e-09e0f6b1f6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a881708-251c-4207-929e-86eb74874626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5e2ee0-eeac-430c-b2a8-835340e97cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eff4e7-462e-4bf7-aa52-3af320887a06",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370492f-0239-45fc-b58c-3b2dfd61b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a1be5e-91b4-4656-b289-6dca2e7accf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818a0bec-be54-4171-9a6d-70f3c8f0aa41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3cd0fb-dee5-450c-aeda-f8f96917d765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2a6621-cb81-4c5c-8b8c-8f88bee718fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad86ac2-7bcc-4dd3-bd3f-db41f993f717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131a45e1-d80b-4dcf-a857-b82aa5fd1dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cee3a1-5858-4d1d-a353-d8178b0de5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7c9ab0-35c1-4a25-809a-2a38e2303abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90051397-f5e1-4033-ba2a-05736367b497",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e3cbb2-fa4a-4ad8-954a-cdbb27bfdb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bd4300-141e-4564-9b6e-05a71aa79f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81a321f-c2a1-40c9-b682-f425c97dabdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50ed1e2-23d7-4619-9e67-e4a13247d0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01647c-0952-438e-a50f-33836d5a9db4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759a98a-6ca9-4568-b6ed-2cbfd98da624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75db6926-36c4-4df8-8bac-3536e0a105ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d293855-1aa7-4090-8fda-1baba3afc3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11330c9e-fc2f-4de1-a532-265dda78e556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ef406-cbd6-42f3-8e6b-4874385e6e9e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b913e-33bb-4aea-88cb-99cb2b25b355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326edb7b-a5ec-4118-82e6-c7d3bbc340b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e929c2b-401a-43c8-a5f5-3d440cc8855c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4554f156-0239-4ca3-a6c4-df4136fb1bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa3405-0c0c-439f-a30e-74d0cfe0749a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3508d9ca-afe3-43d1-8d34-85173e108ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df7ac92-dd06-49df-86df-c95a7c87467b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4657e2-bfec-4822-af47-f34a6a765985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040e62fc-a467-4844-bdfd-360e83b4c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9b4e06-6fc2-4556-bbd0-0b53165d6cec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6b8b09-ffdc-4579-ba2e-0fc4af3d0fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95d0f62-a610-45ff-b463-f2f556139924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218eba14-51b3-414d-add9-30bc29b27572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9e924a-d04d-47e8-a21a-dc5bc80d3509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58baeefe-99e6-4b27-817c-af524dba4239",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daba12a-b604-4040-aa39-6f3b7fb675e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e5f934-a3d4-446a-85a2-ad08e6a127c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d2979e-b843-49a2-9b2a-b717648f7261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c05838-831c-4bbe-8c05-4c827a6507ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098b746c-e019-49bc-93a9-111f71994edf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7112e412-20f1-4cfe-8298-bbff85bfe417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e66e3b-07de-4953-89cb-40b3c27c5ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfd6a48-c117-4d73-a18d-a88698e71727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150835fe-dd4c-4d56-b46b-754f1a8eebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eec553-e57b-4228-9906-9da1174ce04b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2882678-cdaf-43ce-93b6-34ae2aaedb31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce8de4f-7c94-4541-bfe4-fefca524675f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87691a07-50b3-4f8f-a51a-b6ff6577191e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976d5351-4843-4da8-90be-26af67476fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c173c-447d-4c75-a367-079b17c5592a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee7deb-161a-4d90-be82-3974e0c99e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ff75c4-6f11-4156-a6c1-0dff94cf4161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e866cc-6c45-4e18-b127-b09ca2ed2d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256c2742-522a-431b-905c-ebc26ba37fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e858b66-42de-43fc-b28d-39cae0441041",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64f9d65-29e3-42e5-a712-c56820781708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff094be-f922-4a87-ad87-658f2a77876f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef6e00-f5eb-4433-ab48-cc2db3e127d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bec8d6-6533-44cc-afcd-c93bcd352323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e232fab6-b955-405e-9572-3662a973f8b3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc517ee9-e558-4b98-b16b-f0f2e1f1185f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b746bb-0b95-4c83-9486-0c4399a649fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d8016-e301-4869-b96b-7c11ee76dfd0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7dad9c7-6bba-410f-9f17-123cb09fc44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9608faba-0f8e-41a2-af4b-6effedb422f8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866d0799-0b22-43ac-a130-d3f39ba954f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cdb50a8-8169-4e48-bea4-86c2889580d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0373a26-618e-42d7-bd40-ce6a97670f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824c9253-6857-4574-932c-14a92cbc58a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7098d136-b1f6-42b6-821e-43ff0f0a7122",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf3cd4b-4b17-45b2-aa2c-d4dba0e45279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e3e8ea-4aad-4c85-9ec1-adf5eebadf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992907d9-f391-4d5c-b9a6-e9b82bfd9ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7e35a0-75f7-45c5-8d89-7dafafe47cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ac145a-801e-4737-bc55-caf4d85ab4aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3127ee-cf05-4ff1-af74-1adc7bf58784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8d9a76-d524-4e11-a163-ee11336a6a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418d51cd-10cb-420b-a299-ec360fb25353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa259b9-350c-4076-9eb5-f75fad1aafe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bb0830-bb1b-4f18-be82-eddb62d28d48",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464771ac-d147-4b9a-a1f0-5a1d187bdea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22c90e6-d5ec-4eb3-b0cb-b074812951fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f38d49-c202-4765-a591-2607c834006b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c232f2aa-5df3-4895-9573-18ad8e057ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6eb0a9-e1f4-4e19-b817-82ab8207582c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2b5f9-77d9-4a01-b018-e0ca43ad365f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41414c2-6e72-4bed-b7be-31d707504cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bc354c-7fda-4104-8721-d0ded34860db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b8cc2d-48c4-4589-bf65-fd9631909d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a69d5cd-a231-4cc2-97f5-e630b780dc4b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c071f6-75f6-4e83-a4b8-7511c5cf9dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9055ab01-625b-4553-8fee-ed85d161498f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056ef8d0-88ec-4d19-8add-cfc2a59d1181",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d16d9f-da45-417a-9fc4-b926ef07260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6930f7c8-814c-41d2-8f9c-79fb894d01d5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647cb1f9-98bc-45f7-9078-3de790510a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c791676-29ce-41d9-aa1d-108729d31834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f13908f-8112-4c78-9df8-7994b75bce2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb7ab0b-0de8-42e4-b3bc-0a5d2a4b5793"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d136d9-d74d-414c-82cb-3c14aa7d682e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e88907e3-1369-4119-94d6-d750153dc9f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "486ae5c6-96d8-4e86-8950-c9432c0f4012",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18a1148c-acfe-4bee-9f4e-ec0ffe090059"
                    }
                  }
                ]
              },
              {
                "id": "8b65a1b4-b52f-435a-b22f-cfde6a23aa3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9b25c70-81db-446e-a3a9-ace58994a040",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14149d0a-1c50-4fe9-a426-4d32867acff4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b25b3acb-b3e7-4eee-a73a-fffd45d2d64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c5fd4-acb3-4942-a568-b8560de540af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9038f311-fac3-429e-b3fd-15e5bdc4a916"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73231976-7ed1-4818-b749-25e39c0a9861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "481d86f4-d7ac-441f-b53d-7b96eca6367f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fbab1fe-0830-4341-90d6-886ffa745523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "217d762f-d675-4e09-b474-579b88c0efe5"
                    }
                  }
                ]
              },
              {
                "id": "0d4f9027-e831-49e6-b592-e5acb4747636",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f5231016-9aa2-4b9d-add8-7cc2c28f96cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff9075c-0515-4a8d-96b8-83c73dfe7d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20c572e2-22b6-4229-b6d7-980ae86374fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfc1c88-fb51-482f-b18e-5168bb380200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d3dbdf-3bf1-45f2-b933-e6b49f23587f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3cbb6704-be3e-4c6e-b66b-ad269d9be948",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1aa2778d-3820-4399-b546-160aa5edbc42",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b997346d-c500-4af2-b980-cbf359ba4d5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d55bfb39-9ab6-4381-9637-1706c7767c15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dcd0036-055b-46ad-8067-fbcc2d467aed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ce6a580-b508-409f-9013-46f3041063cb"
                    }
                  }
                ]
              },
              {
                "id": "a5db3b21-74e5-48ce-9808-f3c4a90a51d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73e27242-82f2-426c-8b23-339a0db95a73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b169624-a9b6-485c-9509-bbe167e53e00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37b4792e-d9a7-4d96-9e08-3612f6b268d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "545f32ab-a150-45ec-869d-d9bcbe4d4a0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "375c45ce-a217-4539-84dc-0b1424087281",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa83e377-70d5-48d7-ad9c-688b91cad307"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb42d186-057d-400e-b5b1-02ece44de287",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3263fe7-8201-4593-b99a-140f59451013"
            }
          }
        ]
      },
      {
        "id": "352d5fbc-6a36-4cfb-94ce-5ddcc2e284be",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "04f7e165-3b06-445a-b979-95975bfd41b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be4d6e5-9cca-44aa-80a5-1bc41071c81a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "563cd1cd-b4ab-4c57-b453-715ae0e94bba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc9e7dd-9e93-4e64-a4f2-c1d51baabe28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e252886-f7fc-493c-9e67-d328e6914d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d029c44-e3ff-4670-b008-0dfbeb0bbbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4097bc-b8f2-4397-9b12-1870ce65f27f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cdc85d0-55af-44c6-a520-89798aaeb209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31fd3b8f-54e2-45ec-8856-4f381ee5283c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4475cd4c-9d9b-4572-b49e-d9564ee2eeca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2b3101-03e7-4628-970b-4f6da7ce71f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc3262f4-ed31-4074-9634-f96ba1eca7f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "500ff3bd-1b84-44e8-9354-5f0a2deb4bb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff8f9e40-c987-41a3-b2c9-acb0b3228f9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fff1f750-285a-4f05-aeaf-c61ec5456aff"
            }
          }
        ]
      },
      {
        "id": "8fb798ae-78cc-4dfd-ba5a-c440bb59771d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68eba3af-2741-4f6e-a33d-857d870cdc39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5d1ac30-9a4d-4e66-b632-1fd246e136ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15cc25f6-b76b-4578-866f-81222ab8b703",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec41f8-086b-4208-b8f1-566baee84431",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2238461-06d1-4843-b432-412e8b06b81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc49eef-180e-48f5-aec3-a5b1443f11a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c7525ae-d38a-4179-99ad-a8ce8213530e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af3366e0-fcf3-4ba3-9c95-1da9964637ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f5caae7-8b37-4854-9eba-8d3d90cc2043"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac43175a-f2b7-4ff2-aed7-cb9f9751448d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dffe286-df10-43f3-b732-60015d01a89e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e722eaa9-a1ea-41dc-9eb4-099b9af879af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a60ab120-19b9-4a26-adb3-1858338e0aa9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c10ab58-05a1-4e62-83d2-48c4490cc074",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a0d7b5b-7981-4e1d-a97d-a825e3a33f59"
            }
          }
        ]
      },
      {
        "id": "5e41feb2-9bbc-4497-af4d-8a3e2fe4c5d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e06fca95-251f-48f9-9fd7-353aef189e6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e3032ed-e6be-4da3-8818-3a27eaac6f28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e097ca9e-4e2e-4439-b9fe-0863763ea76b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80e4dc7-40d0-411a-908a-ab0a12e6923c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3656d902-eae4-4a8e-bca9-0a9404451b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd72480-66d9-480e-8ad1-7345f466a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "241e32e5-3144-4183-9727-9d356262fa77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e25bc39-93cb-4594-b9d8-16b254e6e623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1b0c0c-e696-4444-8dfe-d7a87a140828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e9b489-cd61-49ad-befe-af5a7167c9e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2631be46-b3a0-4314-a37f-69e3dfceca45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11df948c-0717-4969-a299-917ca700f91b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44b1b976-dc37-4462-a137-917bd1ab4f42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b47ea34f-bf71-4a96-9189-845dcc832d02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb1afac6-5cea-4db3-94e7-941ebe7612a5"
            }
          }
        ]
      },
      {
        "id": "01ed43ac-6e8d-48aa-ac6a-10223d496d91",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb39e257-505f-4189-95db-b0150795947a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8cae83c-93c5-4463-bff6-fd2962ed25c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "428300ea-26e2-48f9-b7ef-65efd017f227",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c025989b-d115-4c2c-ad87-a2525ed806f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b3b7d37-023d-4c88-9a9e-86807a7b06f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.538732394366207,
      "responseMin": 3,
      "responseMax": 283,
      "responseSd": 19.986489621923624,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690418277686,
      "completed": 1690418291181
    },
    "executions": [
      {
        "id": "7b11d812-7985-44d9-b0af-1b93409aba63",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "506d39d5-90cd-4074-8807-8b6eb2de8d51",
          "httpRequestId": "be1ecc9a-a29f-44fa-979b-ec4255328bcf"
        },
        "item": {
          "id": "7b11d812-7985-44d9-b0af-1b93409aba63",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "df5c4f80-3f95-453c-9b7e-c033dad1bf5a",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "1b1fd5d0-3968-4764-b903-6df49861cf3e",
        "cursor": {
          "ref": "1ae94681-5e6a-41cd-8331-d83ff5e3313f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "688beaf2-69fe-4fd2-9775-55d8cdb2a287"
        },
        "item": {
          "id": "1b1fd5d0-3968-4764-b903-6df49861cf3e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1c10bd43-2c8f-4539-a989-55c70e2bd52f",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "1c945cb1-33df-495e-87ac-3083ce554f8b",
        "cursor": {
          "ref": "0b3758ea-4f5f-4738-9e4f-8b25aa00643d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2addaa1a-17d6-4f70-abd8-9d5352e0a7eb"
        },
        "item": {
          "id": "1c945cb1-33df-495e-87ac-3083ce554f8b",
          "name": "did_json"
        },
        "response": {
          "id": "078f7ec2-dd14-4d07-9316-383d2ed38960",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db21b13f-da18-4214-b6a6-93db8e263352",
        "cursor": {
          "ref": "9832a0b8-50f3-403b-8d7e-34e438b3d722",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5bef778c-22a8-4704-9e6b-61106bcd374f"
        },
        "item": {
          "id": "db21b13f-da18-4214-b6a6-93db8e263352",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b9cfce5-20fe-47be-ab78-00cfe2c3c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db21b13f-da18-4214-b6a6-93db8e263352",
        "cursor": {
          "ref": "9832a0b8-50f3-403b-8d7e-34e438b3d722",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5bef778c-22a8-4704-9e6b-61106bcd374f"
        },
        "item": {
          "id": "db21b13f-da18-4214-b6a6-93db8e263352",
          "name": "did:invalid"
        },
        "response": {
          "id": "8b9cfce5-20fe-47be-ab78-00cfe2c3c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af3e5c-b37a-42d2-89ee-f05a4a50f022",
        "cursor": {
          "ref": "93dbac7d-9ab6-4cac-a89b-73735c1d2ea0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2239ff5a-f904-4129-8c5f-8a9993853707"
        },
        "item": {
          "id": "e5af3e5c-b37a-42d2-89ee-f05a4a50f022",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97e09e2e-897b-44e2-9afa-2aec56536cac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105c24b0-23db-49cc-b8ba-128ba75814d8",
        "cursor": {
          "ref": "249d8278-5e17-4f2f-9ddf-08f560f253f9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9b63aa40-2abd-46ba-9a73-0763a4076337"
        },
        "item": {
          "id": "105c24b0-23db-49cc-b8ba-128ba75814d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bdbe6dcf-840c-414c-8928-0405baaf20c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77dde58-9c17-4ece-81e9-3d91a179b5ee",
        "cursor": {
          "ref": "6d7aa02b-1d0a-4c2d-a239-0e067c4b5c9f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "50150209-ec62-4b18-a77d-591498351ee7"
        },
        "item": {
          "id": "f77dde58-9c17-4ece-81e9-3d91a179b5ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c137e77f-91f8-47d4-aff5-1f1111ddc03b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e5e6c0-2bd7-4346-bdba-cbc7af202668",
        "cursor": {
          "ref": "2015f0c2-cc18-43fa-a83f-bc1f2ff826e3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ea3eff6-dd5d-460b-b5f3-71d1cf1c351f"
        },
        "item": {
          "id": "f6e5e6c0-2bd7-4346-bdba-cbc7af202668",
          "name": "identifiers"
        },
        "response": {
          "id": "afa0bfe9-c075-46d7-8d57-0e2b92b24668",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e69af5-bf84-4643-9546-1019327f8994",
        "cursor": {
          "ref": "84641f81-062f-4a3e-84b3-dbda120391fa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c91aad5-8947-4622-bdb5-67880dbd0550"
        },
        "item": {
          "id": "99e69af5-bf84-4643-9546-1019327f8994",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3b58a461-0467-4c2f-b87a-8c0e8e1d54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602a4c22-9944-4a91-b2d5-c38a8df53bb2",
        "cursor": {
          "ref": "9eba9672-f756-4843-b9bb-510bc44bd2ba",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aa7f54f7-258f-42f4-9f4c-a50f132be167"
        },
        "item": {
          "id": "602a4c22-9944-4a91-b2d5-c38a8df53bb2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "462f6c8d-e613-453f-a3d6-36c222ae98a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f437b6b3-761c-4601-a814-2dccc367bb5c",
        "cursor": {
          "ref": "f6893942-aabc-440d-94a5-735c61ad2c97",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e0bdc20-fe6a-4018-b774-f89b353075c5"
        },
        "item": {
          "id": "f437b6b3-761c-4601-a814-2dccc367bb5c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "690b1e23-3153-41bd-ae37-503c8bc0670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d378d8-9901-4c42-addb-b5f174dbb079",
        "cursor": {
          "ref": "5c1b5dfc-acc9-4452-8fae-5a1efac2d96d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "83299e5f-6470-41ee-8a4e-fbf15846e86e"
        },
        "item": {
          "id": "e1d378d8-9901-4c42-addb-b5f174dbb079",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "01a8e069-c8c1-4eae-8219-c2d5d12e4468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18452cd4-7742-4833-ac63-a1b4fb295c6c",
        "cursor": {
          "ref": "975f0092-1707-4146-9b81-bb61897e3c93",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c5e91a71-c8af-4cb8-86b2-9ea6fe27191c"
        },
        "item": {
          "id": "18452cd4-7742-4833-ac63-a1b4fb295c6c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "544b4aba-7ec6-4000-aa02-9ee9dec0caf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f814120-f304-4c7b-a96b-13eda0581eb6",
        "cursor": {
          "ref": "eddbcecc-a6a1-4346-b04d-05d9fa393cab",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4add0c37-2de6-4c32-8c05-25fe3b80d5dc"
        },
        "item": {
          "id": "1f814120-f304-4c7b-a96b-13eda0581eb6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a2fae70b-73bd-4ccc-8ac3-feb8930302b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46eb1a11-022a-40ab-a5cc-05ed8392548d",
        "cursor": {
          "ref": "6400cc38-347b-4589-81c3-f85cc503cf5f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0509e21-89f5-416d-861d-6c9cadffeab4"
        },
        "item": {
          "id": "46eb1a11-022a-40ab-a5cc-05ed8392548d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ae374c2e-3986-4eab-8052-97d74683ef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d6b158-9954-412f-aca1-6386553241c5",
        "cursor": {
          "ref": "75c95a57-0ee4-4bf1-b3e6-9a5ebbaf45ae",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a255cd50-7cd6-436b-89c3-6436e8a21487"
        },
        "item": {
          "id": "66d6b158-9954-412f-aca1-6386553241c5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "924a8e9b-e712-4170-9584-4fb36105ed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8876f6e-6683-4bfd-8f02-e8b1eb4bfcb7",
        "cursor": {
          "ref": "88f798be-64fa-46c7-a955-34c530283b21",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fefa6b81-7b67-47cb-b677-246557526100"
        },
        "item": {
          "id": "a8876f6e-6683-4bfd-8f02-e8b1eb4bfcb7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3835d25c-1ae5-4d25-8054-64b79aacf05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9bd1ad-1777-4657-ab99-dcc9a6676093",
        "cursor": {
          "ref": "062298c9-aba4-442e-97db-d25b250f9ead",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d26d9e76-c165-49ee-8c6e-55c1c20e89bb"
        },
        "item": {
          "id": "be9bd1ad-1777-4657-ab99-dcc9a6676093",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8cc7bb8d-ef71-47f3-abca-e3a3eedc2d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc7abb4-b6f3-4a9c-a1a7-754da1d806cf",
        "cursor": {
          "ref": "f020465f-60f9-46c7-9a69-cb86be6a1be9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dee6bbc0-129e-4764-9605-77872b73cbbe"
        },
        "item": {
          "id": "5dc7abb4-b6f3-4a9c-a1a7-754da1d806cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "77765343-a902-4a22-8c11-dfad3f5e8c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631d8d91-9caf-4cdb-9d09-ba509c95f8ee",
        "cursor": {
          "ref": "a79c302f-29df-4018-b383-d80927c89b25",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70dde92f-a6ca-431f-9284-a100f8a53aeb"
        },
        "item": {
          "id": "631d8d91-9caf-4cdb-9d09-ba509c95f8ee",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "77413ba7-2f45-484e-87a4-8c4a2035c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de59c8a2-a4e4-4feb-b801-e621145ca9e4",
        "cursor": {
          "ref": "46280f2a-5230-4aca-b222-4c0a88c52230",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8ad192f7-cd0a-47cb-a170-4efc414e906e"
        },
        "item": {
          "id": "de59c8a2-a4e4-4feb-b801-e621145ca9e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd8fe9e2-e7dc-4041-82ee-1d3ff8cc9d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcac00a-a0d8-4202-8817-e0bd7fb7cd76",
        "cursor": {
          "ref": "628f1fbb-03bc-48d8-ab21-47019d2034ec",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "85dc9182-2a87-4a41-b933-c05b10f4715b"
        },
        "item": {
          "id": "1fcac00a-a0d8-4202-8817-e0bd7fb7cd76",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b05726bf-6da4-416b-8824-846bf044cc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7bad76-c668-4fd7-bdf1-4383ae49b169",
        "cursor": {
          "ref": "e6d35dcb-08bd-45cc-b7f0-25a4735b6f5a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99d4606c-d1f0-427d-9498-7cefb85966fc"
        },
        "item": {
          "id": "3d7bad76-c668-4fd7-bdf1-4383ae49b169",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "43cb2fa1-aa9c-4ceb-b61d-ea02708683ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cfb891-66d2-463e-8f4b-64d2577f5a7e",
        "cursor": {
          "ref": "54d8270f-76ec-4d02-a1d6-9ff459bf4de1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b1a97aad-678a-4064-996c-5d2d04162ce7"
        },
        "item": {
          "id": "c4cfb891-66d2-463e-8f4b-64d2577f5a7e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b0317a74-b812-417b-9c7d-c23b25b87800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e09af-77da-4014-9cbc-feab105e05a5",
        "cursor": {
          "ref": "29149ee5-5a59-447c-a552-549f6b5e48aa",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dfcc2781-fba7-418f-ac88-1ca17b2e7193"
        },
        "item": {
          "id": "583e09af-77da-4014-9cbc-feab105e05a5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6522c351-ee8d-44ea-b044-e48008373901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9315bd7-ccce-40c6-8a28-0248046d61fb",
        "cursor": {
          "ref": "f689b9c2-320e-4a22-9408-77d44475a12f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f38f27a3-3ecc-40be-a50a-1de1c8933f07"
        },
        "item": {
          "id": "d9315bd7-ccce-40c6-8a28-0248046d61fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2fdf96c6-4c02-4d72-9236-2262cf219a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f787138-9e98-448c-b6ff-d0624e46bb15",
        "cursor": {
          "ref": "4da444ac-3f6a-4f0f-ad35-f752860d900c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "22bb06fd-b957-4921-bb85-6104c78481b9"
        },
        "item": {
          "id": "9f787138-9e98-448c-b6ff-d0624e46bb15",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "556e01b0-51e2-4deb-a558-10b79d9c1f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810f8078-a814-4ffa-92b4-1dfd3517ac34",
        "cursor": {
          "ref": "a99b288c-0c12-4268-be99-a40a7219f421",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "be53049f-7360-4379-bc63-2358d44b686c"
        },
        "item": {
          "id": "810f8078-a814-4ffa-92b4-1dfd3517ac34",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eb429ef1-07cd-4470-b5ab-6238f9137a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d4d4c-6f94-4d4a-b0ff-763a7511b465",
        "cursor": {
          "ref": "26fea3da-c843-46e6-b532-e8cebf6c288b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "43ee6b1f-8e9d-4d71-b3da-b8a6e1df8c33"
        },
        "item": {
          "id": "c52d4d4c-6f94-4d4a-b0ff-763a7511b465",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3198c586-fa6c-4b0b-9c95-9a7bccf8ad77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ec540-ab72-48c2-9650-21f209627bcb",
        "cursor": {
          "ref": "2149eafb-85c5-441c-8ac5-4c4f22d9e79d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "59670e92-0a8f-4b01-b10d-a7238afabe89"
        },
        "item": {
          "id": "267ec540-ab72-48c2-9650-21f209627bcb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c39ce77a-b13b-4bdb-89b7-03a07473f7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62274580-001a-462b-beff-c5137ecbed4f",
        "cursor": {
          "ref": "9b90f7ea-619a-4e61-ae00-8d2e13dad9df",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ead301df-9dde-4e69-8944-9f0532b8d1fd"
        },
        "item": {
          "id": "62274580-001a-462b-beff-c5137ecbed4f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4e3f5fc3-697e-43b2-83d2-54035255d8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b4b18e-5bbd-404f-b224-219f97a98855",
        "cursor": {
          "ref": "b91ebf75-3646-4572-899c-7e8228d975a5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da03f68d-0a82-4415-a793-678030464f18"
        },
        "item": {
          "id": "09b4b18e-5bbd-404f-b224-219f97a98855",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f1a54c94-4d89-4ae4-a786-fdfe57c587f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2fc4b1-b2b2-46ac-b9fc-5cfd44602562",
        "cursor": {
          "ref": "e24c1642-c679-4b5b-a082-c4b9a44a047d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e4f7533-727b-4634-a1ba-e0d9a51e0dfe"
        },
        "item": {
          "id": "ce2fc4b1-b2b2-46ac-b9fc-5cfd44602562",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a7ae060f-20e8-48c2-8b04-03f45b4956ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4cff97-9999-4a87-87d7-72ffa666b831",
        "cursor": {
          "ref": "9b7039a6-2234-4650-b2c6-f097c861da7a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bb3a4b2b-6785-45ec-87c1-98e4bcb1fda6"
        },
        "item": {
          "id": "ec4cff97-9999-4a87-87d7-72ffa666b831",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b32c0e1-8732-4a89-8ac1-8bb0fca5d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8ed047-764d-460b-82f6-52499aec5aab",
        "cursor": {
          "ref": "f3d70c43-bc97-4f59-9bb8-2ee5fca3e21d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "18921345-920d-45fc-803d-e75def391aaf"
        },
        "item": {
          "id": "cf8ed047-764d-460b-82f6-52499aec5aab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7aea0f04-b53a-499b-8c88-12c1f9d00f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c50d3-52f2-4213-9069-cd94d030f09b",
        "cursor": {
          "ref": "6d3f882b-ef4d-4d78-b059-552b7dd5bd45",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e5aa1ac-cba3-4038-993c-bc7985ababed"
        },
        "item": {
          "id": "5b8c50d3-52f2-4213-9069-cd94d030f09b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5313b0bb-dc7b-4853-ab87-4a204b2e23c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b42e235-2f9e-4743-a443-e98fbcfff962",
        "cursor": {
          "ref": "c1e00854-bdba-4c70-b2b2-cc1b29a62d16",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "00f1f53b-d57b-401c-829b-e91112b66e9b"
        },
        "item": {
          "id": "1b42e235-2f9e-4743-a443-e98fbcfff962",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b042a7ba-85c0-4246-95d9-2921e047e0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a339b49-5419-48d3-b67b-db6802520a29",
        "cursor": {
          "ref": "4381b6f2-035e-489f-9062-e27a8385d09e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "68e41656-78dc-4b4d-b169-1ec01e3a9e9b"
        },
        "item": {
          "id": "7a339b49-5419-48d3-b67b-db6802520a29",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dd495fa4-cfa4-4dc3-8b90-ffec75b926ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0003d214-1d97-4bff-8ec0-b3071964dde8",
        "cursor": {
          "ref": "5e88be7b-a2bc-4377-b8c3-cbf980031a24",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f2aeea27-3681-4a65-9ff6-f1b2ade73def"
        },
        "item": {
          "id": "0003d214-1d97-4bff-8ec0-b3071964dde8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "51475674-dd1b-4b51-91ea-7c61103fda0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebdcc88-c94e-410f-b18c-37d0e65e0227",
        "cursor": {
          "ref": "b37fa0b7-9abb-4167-9ceb-b48a84d4e393",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "57b421eb-a2e4-4c64-99c6-16b9a8e83b56"
        },
        "item": {
          "id": "7ebdcc88-c94e-410f-b18c-37d0e65e0227",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc8b1109-ef2a-4d9f-ba8d-5399de558400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6a33d2-7fe7-436a-9fca-753af62c1c44",
        "cursor": {
          "ref": "7d65e104-0422-4cbc-9afe-710555d45232",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4c1966e3-7455-4f0d-b592-c1cdb94748d2"
        },
        "item": {
          "id": "9d6a33d2-7fe7-436a-9fca-753af62c1c44",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "373f913a-62a2-403a-97fd-3b6d04fa6747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4c3b8-76cc-4d2d-b94d-d18a50c3ebbc",
        "cursor": {
          "ref": "a9e6b5f1-050c-4543-9c62-8a0451af9c2e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b78c0ea0-a8ad-44ef-9fae-6db7ac2a63b0"
        },
        "item": {
          "id": "5eb4c3b8-76cc-4d2d-b94d-d18a50c3ebbc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98336a4b-3ab7-4576-93b5-04bfc81822b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edef54a7-2a6d-4dc2-8d20-f61d3e0e20ab",
        "cursor": {
          "ref": "e14a59b4-6dae-48f1-8537-2684afa98cc0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "707edab5-5d0f-4ce5-ac76-77cdedbd1fbf"
        },
        "item": {
          "id": "edef54a7-2a6d-4dc2-8d20-f61d3e0e20ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ae1f132e-fedb-4782-9fb5-98502f40551e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5772ba-aa90-4120-8c99-a8eddcb665f9",
        "cursor": {
          "ref": "307947d3-2c03-493f-a603-b3f54f717e8b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2badb157-f55f-42b7-9738-e4d916856ba8"
        },
        "item": {
          "id": "be5772ba-aa90-4120-8c99-a8eddcb665f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "588fa67c-6078-46bf-9ede-0b415604738e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843b879-f97b-4ebf-a055-48b9fae64723",
        "cursor": {
          "ref": "d45dfa1d-d975-4b0f-9c60-8bc7255430ca",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f4c830ba-e570-46d7-b0f4-aa7207891d27"
        },
        "item": {
          "id": "3843b879-f97b-4ebf-a055-48b9fae64723",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a8f46870-4198-4892-a542-3646b27725f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6f47a-5c22-4df0-bc68-18d18db7fc7a",
        "cursor": {
          "ref": "9355b8b2-4da5-4924-a092-b7ecba10f634",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "68f6b299-4364-4837-9477-b7d4c28c5ce1"
        },
        "item": {
          "id": "2ff6f47a-5c22-4df0-bc68-18d18db7fc7a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f48f326-8f56-4c91-ad05-e74d127b8fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe904bf9-d413-479c-b847-2c815a692ea4",
        "cursor": {
          "ref": "86de0527-07c9-4d3a-8332-d641e8d3ed34",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "36273c4d-b6a6-4cd6-8996-85b26286e178"
        },
        "item": {
          "id": "fe904bf9-d413-479c-b847-2c815a692ea4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f53d3cbb-ea44-4d66-a0aa-e861bf176435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0971ae5-b25c-4456-850d-e2a03e8e86c4",
        "cursor": {
          "ref": "05a3bc44-5eb2-46a6-844e-3a17dafc3fcf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5dd7f9ac-99dd-4796-941d-85583d3378f9"
        },
        "item": {
          "id": "e0971ae5-b25c-4456-850d-e2a03e8e86c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2b3bc331-0cd7-4a0b-aa7c-6e06e537f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff0f6d6-254f-47ad-9d8d-5bb59ca464cc",
        "cursor": {
          "ref": "4fb6f1dd-9893-4c7e-afb9-d45affe2e3d5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "512b7944-659a-4bbb-badf-3b37a77a1c9c"
        },
        "item": {
          "id": "cff0f6d6-254f-47ad-9d8d-5bb59ca464cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "14a01487-3d8d-4d7a-97b2-c688cd6d495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e19848-16a2-4518-8e37-642dbcde39a2",
        "cursor": {
          "ref": "96867e74-c446-4d99-b0fa-e95c7ae1a825",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3fce80b7-2a7c-47f4-802d-a8467b86a874"
        },
        "item": {
          "id": "53e19848-16a2-4518-8e37-642dbcde39a2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5a02f86e-c354-4e1f-acc1-6d1590e50e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69584cd3-dff5-4194-b3a2-8e05aa9d9ba7",
        "cursor": {
          "ref": "593903a2-8130-4185-a752-95387842fa61",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3141a637-334f-4666-817b-346666f6ce9e"
        },
        "item": {
          "id": "69584cd3-dff5-4194-b3a2-8e05aa9d9ba7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "83f7f5a6-1a74-4ed3-8783-f07d812a546c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825e0147-5413-436c-b103-8b0664119767",
        "cursor": {
          "ref": "4e2e1167-d0dc-46cb-b722-a83c197a9173",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0dc5da25-76aa-4fc5-9664-8e21f02bf4f3"
        },
        "item": {
          "id": "825e0147-5413-436c-b103-8b0664119767",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1a9458ca-8e29-4d62-b6ae-a05730e40fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df82757-1672-4ff7-931b-a68c831843ba",
        "cursor": {
          "ref": "2102a5f2-231f-4b7e-b3e8-1e34c3085733",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0b77a8ed-fd2f-49bc-b638-d20a270dd3b2"
        },
        "item": {
          "id": "3df82757-1672-4ff7-931b-a68c831843ba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4360e011-824a-4e20-bb58-7ffbf6ec7f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f20818-b8b8-49f9-b35a-875fa434072e",
        "cursor": {
          "ref": "6a2da094-38b4-44ae-aa45-2ee39c3cbdb0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66e815c5-c4f4-45da-9944-6db59b77b17c"
        },
        "item": {
          "id": "99f20818-b8b8-49f9-b35a-875fa434072e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d78e2ac7-99cf-4965-b770-c31dc5772070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f25606-f3de-46ff-ad83-ba2e7ce88846",
        "cursor": {
          "ref": "0348501f-051a-4e5b-b1f6-038ae40cdd52",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3db6a208-6eba-442e-b3df-4049f6a6f677"
        },
        "item": {
          "id": "11f25606-f3de-46ff-ad83-ba2e7ce88846",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2b1c6846-7e54-4eb7-973f-d0f2bf8d1551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6587776-3b9a-48f3-9aa6-69638b99e702",
        "cursor": {
          "ref": "0ec8fa6b-5522-4210-a771-6ba8700d646a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7fab4d1e-b38f-4564-af68-1e1fae1f8745"
        },
        "item": {
          "id": "d6587776-3b9a-48f3-9aa6-69638b99e702",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e6a1cbfb-a55f-4a4c-a706-8631009c3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf24dd3-03b3-4fd9-9aa4-968b35031cc6",
        "cursor": {
          "ref": "7d108a0a-b70e-40f0-9c0f-88df780a5341",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4cc6c02f-1dfe-44ba-923e-28a7f58928ff"
        },
        "item": {
          "id": "9cf24dd3-03b3-4fd9-9aa4-968b35031cc6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ca3769db-4583-419a-89e1-340856b71e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366dc750-3096-4eea-9fc2-0bc6b5994414",
        "cursor": {
          "ref": "d96dc2d5-c07f-4e12-973e-a36c80a7db1f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8d3a4a39-668f-4f25-a8a9-0de1a88f6e26"
        },
        "item": {
          "id": "366dc750-3096-4eea-9fc2-0bc6b5994414",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c99c1813-f3cd-47aa-a8bb-de4fd77ba666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8da8b-4678-410b-a322-63e5665ddd14",
        "cursor": {
          "ref": "1299dd91-f03c-4f87-b60b-a37a872772cb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac9b6750-578c-4eb0-94ed-d5b3481e5d05"
        },
        "item": {
          "id": "4ce8da8b-4678-410b-a322-63e5665ddd14",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a625193-e741-4e07-86d0-6943f5b9d157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beacacca-e9c7-4be4-adde-34fbe71a2ccb",
        "cursor": {
          "ref": "562e3edc-4f5b-478d-b7f4-dbd38572980f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "73219e0d-b419-4458-a904-4720cb88d791"
        },
        "item": {
          "id": "beacacca-e9c7-4be4-adde-34fbe71a2ccb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f884a67a-f1ae-4996-bae3-d1aa4e75d8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6264d76e-7f5a-465c-a6b3-3b37fe50f9e8",
        "cursor": {
          "ref": "6f0e6c36-e259-432c-9e6a-fde64f5b2fb4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "388f4dd4-fb78-4696-a485-544ed180d863"
        },
        "item": {
          "id": "6264d76e-7f5a-465c-a6b3-3b37fe50f9e8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4639d20f-5e75-42ae-9c34-2f168bfdfbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08380de7-6a04-42a4-849b-217673a29f1b",
        "cursor": {
          "ref": "25683118-9143-4be0-99c8-63ede47cdc8b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dfe3c121-0daf-4108-a0a0-0533e4957696"
        },
        "item": {
          "id": "08380de7-6a04-42a4-849b-217673a29f1b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7a6d6adf-576d-4951-856a-6370a01dfdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d132aca-252a-4975-8547-dfd7c8915bc3",
        "cursor": {
          "ref": "c81f0c36-00b5-444d-ab56-bd4a0a45bd33",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "106e04c1-36dd-4eab-a9fb-8f7e922692c1"
        },
        "item": {
          "id": "7d132aca-252a-4975-8547-dfd7c8915bc3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9bda8219-c0b8-4f22-893b-8778d2227697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d78753-5298-4b26-b481-011c48aa17ba",
        "cursor": {
          "ref": "16312ffa-98d1-4cd6-8db7-9745ff72e72c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5e4ba7a6-277e-4865-86d4-65c2b7686f58"
        },
        "item": {
          "id": "00d78753-5298-4b26-b481-011c48aa17ba",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9b5b1292-95fa-4def-bed6-98382a1585b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95078220-85a1-4249-baaa-fd99488f94d1",
        "cursor": {
          "ref": "59cf082e-da6e-4d1c-9fd1-cf01bfbff622",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "15d2cc6f-4997-4427-b8a9-8750af56e593"
        },
        "item": {
          "id": "95078220-85a1-4249-baaa-fd99488f94d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "84fb3267-38f6-43b5-bc1f-ec89ea2ceec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7f295-9021-425c-a436-d0a70d72f6b1",
        "cursor": {
          "ref": "fa7a728f-638e-4e3b-8c87-3d0fdc595afb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "371c3f87-58b5-4dca-8187-1d3b315d1cd5"
        },
        "item": {
          "id": "70e7f295-9021-425c-a436-d0a70d72f6b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a7e5221-3b05-45b0-8cfa-3d279d78b682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236ca4d0-b70e-4c77-a022-ed6d8a330be0",
        "cursor": {
          "ref": "36da9bed-5be0-4e41-9869-b24418b08275",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "58e0059e-0508-45e1-add2-be8fe67fefaa"
        },
        "item": {
          "id": "236ca4d0-b70e-4c77-a022-ed6d8a330be0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b5e38ab-f4db-47de-a34d-eec238cef215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b07d00c-8fcd-4a6c-a25b-86b6ed0ac161",
        "cursor": {
          "ref": "ad34f9e5-78dd-40a9-bab2-6f66100cad15",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17a0cdfe-4497-4d26-b80d-eeb4e4fd9352"
        },
        "item": {
          "id": "9b07d00c-8fcd-4a6c-a25b-86b6ed0ac161",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79b1094a-b86d-45aa-b02c-7b8aea4b9870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d06857-9558-4fa0-909a-0ef40aea1552",
        "cursor": {
          "ref": "ed22d385-bff8-4ab1-9e49-a8717f611cd8",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "af07dcf7-0b4f-4d70-bf15-a48172f7d97d"
        },
        "item": {
          "id": "c4d06857-9558-4fa0-909a-0ef40aea1552",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3de55381-4150-4e30-a3ca-5ba1a1ed4426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9359a2-5d75-4a78-bd42-47548a7fff6a",
        "cursor": {
          "ref": "465023d7-805e-4ed0-9a88-3cb584f7ba98",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d7ca87b-4543-4801-ab7c-101eb85b9249"
        },
        "item": {
          "id": "6c9359a2-5d75-4a78-bd42-47548a7fff6a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "79799558-8ae7-4ff8-8ca2-fab7a22c0055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0508d16-34db-4c85-901d-aca25310d607",
        "cursor": {
          "ref": "3b839e6e-fae0-4b2b-b874-25f022d3a7b8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca0b76a0-4d91-4508-a97f-b22fc5c45869"
        },
        "item": {
          "id": "b0508d16-34db-4c85-901d-aca25310d607",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "76606958-8fb7-4462-ae3b-67fed6b50664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ebe939-b4de-4a6b-8956-2c349f74203b",
        "cursor": {
          "ref": "48468f1a-bb8a-47d1-87a8-5369734d56fa",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec55e1c5-19d1-492c-8c13-cd1ac3fddb11"
        },
        "item": {
          "id": "c9ebe939-b4de-4a6b-8956-2c349f74203b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b7d3e5af-a0f6-415e-bda4-32ac855e670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b76d2-5d61-4fc5-b4ef-b4e4e8e7bb02",
        "cursor": {
          "ref": "834dfe68-4a95-4832-9bd7-16e13f591c13",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b5f01ccf-a498-46e2-9ec7-8a2f3a29dacd"
        },
        "item": {
          "id": "313b76d2-5d61-4fc5-b4ef-b4e4e8e7bb02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5e4ce92b-7c6e-4d49-823f-545f94a477cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc62f5d4-af8b-4478-ac03-58fa56f7dafd",
        "cursor": {
          "ref": "9e89ef32-7d0c-4113-a322-af47f4029128",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0b2ec685-84fa-4604-ae3c-03275929f2f8"
        },
        "item": {
          "id": "fc62f5d4-af8b-4478-ac03-58fa56f7dafd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "111880d4-aa13-4bf2-b85f-68afdcaf1988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1fab3a-24c0-44cc-a338-d14c81e11272",
        "cursor": {
          "ref": "5aee9b1d-a50c-4d08-a9b7-edc812d4ddc6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e9a0f6fa-a0ef-4cf7-8a6f-b3f2b4fcb03f"
        },
        "item": {
          "id": "6f1fab3a-24c0-44cc-a338-d14c81e11272",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ecd2b0fc-143b-4272-a19f-9f42aa0a136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c46e4db-081c-4279-ad8e-86604ef7f90c",
        "cursor": {
          "ref": "529fd436-2c48-4fc8-8ba0-b3e3cfa906d3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "880b0175-2b56-4c8e-a186-f46fcfc3613c"
        },
        "item": {
          "id": "0c46e4db-081c-4279-ad8e-86604ef7f90c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "69f70ab6-64a7-4902-8654-c2986bf06557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53881da4-3207-4f88-a18b-bf40b6f13f12",
        "cursor": {
          "ref": "234d4ab2-457d-4355-a01f-1ebe7a2391da",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1ce272b2-7fa4-4e93-8944-d149f896ba8d"
        },
        "item": {
          "id": "53881da4-3207-4f88-a18b-bf40b6f13f12",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ab5d8d98-46cc-4b39-9faa-c4743d29c69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a683a550-f09a-41ca-9dcd-b3047c9c12f5",
        "cursor": {
          "ref": "97850140-286c-4d4a-ab14-08fb93fe3c05",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8a37bf54-4c2c-47c8-8f71-cb9a590bba5c"
        },
        "item": {
          "id": "a683a550-f09a-41ca-9dcd-b3047c9c12f5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c5b9858d-da88-444e-82fe-be974f578b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1ad78c-62d2-4893-90c2-a847a46379f2",
        "cursor": {
          "ref": "ebb6abbd-9aa9-4dad-a5db-6ca72ba6759b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "93a6d664-7425-4ba7-b74f-671b0c9858ab"
        },
        "item": {
          "id": "cc1ad78c-62d2-4893-90c2-a847a46379f2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc423b51-f08a-4221-89bd-40229e568235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c211cd4-c85c-4471-8e4a-d0a89b6fa75e",
        "cursor": {
          "ref": "74bdca80-5d5e-4df5-8f52-25e42b2f211e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b8b126ca-195f-48b0-9e58-3b6de5f9108f"
        },
        "item": {
          "id": "4c211cd4-c85c-4471-8e4a-d0a89b6fa75e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8c388767-f071-4515-9504-40b8ec5c288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d568f7-a698-435e-8899-7abab4e79c5b",
        "cursor": {
          "ref": "97cea32b-13e7-46ea-92a8-31b4a64dfe10",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca5ea7b3-f592-4240-8536-91f749f05253"
        },
        "item": {
          "id": "97d568f7-a698-435e-8899-7abab4e79c5b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e75e19ba-d3bd-490d-867b-c8a90bb54009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb08825-c57a-41a8-a834-0be789a5963e",
        "cursor": {
          "ref": "8580f538-373b-43bd-a197-129606ada3d3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1eb726c6-5eb6-4053-a1aa-41ef54982bbc"
        },
        "item": {
          "id": "edb08825-c57a-41a8-a834-0be789a5963e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b61a3dbe-7503-4f6b-8201-137fe99ba385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42666c15-59e8-4533-bbe3-c74820ac512c",
        "cursor": {
          "ref": "2976d37a-964c-4aa9-90ef-92a301874a11",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9977c94c-ecae-441a-9c5a-5b9f76c1b1e3"
        },
        "item": {
          "id": "42666c15-59e8-4533-bbe3-c74820ac512c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b4e3398a-0a3c-4aab-b2a2-4befe3b63eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b74e77-a150-4279-b0da-4d4d66d3fa45",
        "cursor": {
          "ref": "3ca9e72e-4362-4840-97ff-9dac2537e239",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f47a50ec-d170-4ed3-bd58-acb2b11d136b"
        },
        "item": {
          "id": "a4b74e77-a150-4279-b0da-4d4d66d3fa45",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "89aefb83-5da0-48f8-8907-7cd24ab10f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c622e7e0-aff2-451f-9dcf-21bf50a60f93",
        "cursor": {
          "ref": "85df9723-7004-4aed-baea-c3a26f0879ad",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "040f5eca-2578-4689-86c4-e3b36fb457e3"
        },
        "item": {
          "id": "c622e7e0-aff2-451f-9dcf-21bf50a60f93",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0effdfc3-0453-45e3-a162-41779465b2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4471ea8b-9c86-4585-8abf-6179efe817ee",
        "cursor": {
          "ref": "589eee13-0564-4358-ad72-f3d438b83b3a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3fee8a68-250a-4b18-a1c7-bed45d069fac"
        },
        "item": {
          "id": "4471ea8b-9c86-4585-8abf-6179efe817ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d25c9927-b21d-4ecb-97a9-79bcf203b247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a134fdf-be99-4b56-b4f0-26eb64aa9f78",
        "cursor": {
          "ref": "a6367e43-0924-48c6-a94f-eded57a9b3a2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8fa55f5a-e163-459e-ad98-725f13eb5ee6"
        },
        "item": {
          "id": "2a134fdf-be99-4b56-b4f0-26eb64aa9f78",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3344ac80-a2f1-433b-a10a-d721601816b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819b5f90-c9a0-4ffc-b16e-8a88ff74d870",
        "cursor": {
          "ref": "cf18d3bf-3742-40cf-9c6c-947a59b21a85",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eb23821f-6ae8-4cb7-9a66-b66960c656ed"
        },
        "item": {
          "id": "819b5f90-c9a0-4ffc-b16e-8a88ff74d870",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "85e9745b-9da5-4ca1-88d7-690fb67f83c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a336016c-dc54-478d-ba88-0714b7c2243a",
        "cursor": {
          "ref": "6863bafc-83de-4223-9e55-7081e44e53c9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "13ea1254-0aa2-4ebf-bf82-0001b68a0fcc"
        },
        "item": {
          "id": "a336016c-dc54-478d-ba88-0714b7c2243a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9165d5d-a1d7-428a-8e92-db2597927b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca886f-1656-49f9-9084-3cf61cc47cf7",
        "cursor": {
          "ref": "d1d706b2-9ca7-4e1c-9ffb-a762a700a627",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4aa41a85-1e26-4777-8456-1f02cb96a3f0"
        },
        "item": {
          "id": "e6ca886f-1656-49f9-9084-3cf61cc47cf7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "caa2fb5c-7959-40a0-aaff-1e76fa79a721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa703f1-80dc-424a-95f3-2163a465995b",
        "cursor": {
          "ref": "56ca89f6-69af-41eb-8fa4-efef9522e8d1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a497e1f1-4989-4c14-87ba-8a51d158fc14"
        },
        "item": {
          "id": "4aa703f1-80dc-424a-95f3-2163a465995b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "63f2fc1d-05c9-46ed-93d9-9b090279206a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba2383-bb4d-4b6c-b35d-17b51cd3ffe1",
        "cursor": {
          "ref": "8c9f10e8-a823-4738-bf80-2e1a48c40b4c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c8e7128b-2a67-4694-bbaf-6243ddbb1c02"
        },
        "item": {
          "id": "adba2383-bb4d-4b6c-b35d-17b51cd3ffe1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e091afc6-a062-4a6b-b762-0ebded433007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c3dc04-75e2-4279-8f57-f492e94009f1",
        "cursor": {
          "ref": "2381b3c2-de52-495d-9916-b10fe48b633e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4c2593d-8934-4ef1-a657-995a755161b5"
        },
        "item": {
          "id": "d0c3dc04-75e2-4279-8f57-f492e94009f1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0bbb1fef-f6da-4f85-890e-ed75f62fb6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2af95d-adb6-4059-ba16-b7f58a4b71de",
        "cursor": {
          "ref": "38854466-bb70-4e09-b04a-e0b7a2121da7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0725f009-8c35-4ca0-be26-ed6bc1d72759"
        },
        "item": {
          "id": "6c2af95d-adb6-4059-ba16-b7f58a4b71de",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4fa649d2-2df5-4b26-806b-7c8e422ef610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6fc2f5-204b-442d-bba1-4dccc54a3ec0",
        "cursor": {
          "ref": "20a4ef84-9a5e-482c-a21f-648b6cb0e213",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8150bb71-b6bb-4bd4-bd16-f7c87b057030"
        },
        "item": {
          "id": "2c6fc2f5-204b-442d-bba1-4dccc54a3ec0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9fb65824-2a7e-4429-a39f-acb9819a5365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712d3e0f-a1f9-49e7-843c-127c02d0c995",
        "cursor": {
          "ref": "65d3fda2-2a1d-4c8a-80e8-e9791b557ff9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "92bbbb1d-cc10-4e06-8dd8-b528dd75bc17"
        },
        "item": {
          "id": "712d3e0f-a1f9-49e7-843c-127c02d0c995",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "260901b6-058e-496b-91b3-fb5f45562d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9070f5-86c5-447f-8d0b-6934ef111cad",
        "cursor": {
          "ref": "564ef53c-c768-42a1-be80-46fff8497c8c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a69f0d23-6666-4094-a854-92195b7fbb8a"
        },
        "item": {
          "id": "ff9070f5-86c5-447f-8d0b-6934ef111cad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c62abb14-19fe-476e-957d-dbfcef1ccbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62464a9e-f32c-49b0-8e8b-f858a20878a9",
        "cursor": {
          "ref": "320f2d5a-8470-45ed-99b8-e4b8520520f1",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "089b95c6-8a8f-4c3c-b763-c7d47ad59618"
        },
        "item": {
          "id": "62464a9e-f32c-49b0-8e8b-f858a20878a9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a0a369db-2833-4fad-aa84-2075fc3ef5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841861fc-249f-4ca7-8b10-d8e0c9a7b079",
        "cursor": {
          "ref": "76afbb5c-1484-4359-bb34-4d2d3fdd0c25",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c37561b1-0f12-46ac-b474-cdaff96d6dad"
        },
        "item": {
          "id": "841861fc-249f-4ca7-8b10-d8e0c9a7b079",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0f9b9f2e-bef5-4b2c-b581-d6cc39c66c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94611c-3151-40ab-8894-4e2485d0828c",
        "cursor": {
          "ref": "55db102d-ea54-41fa-84ca-e64875623391",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5f4a5498-9104-40fc-add3-691c69150f12"
        },
        "item": {
          "id": "7f94611c-3151-40ab-8894-4e2485d0828c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0342f3db-e37b-499b-abc6-1d0fac19ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e6f2a1-3668-493c-bb2d-ce75c2341d66",
        "cursor": {
          "ref": "7c8f4be7-99c8-4079-acb8-708259addf9c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "97f4188e-d923-44ca-a34d-5eca482008bf"
        },
        "item": {
          "id": "96e6f2a1-3668-493c-bb2d-ce75c2341d66",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dfc0977a-5540-4b77-891a-3476be955bce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e67e7f-26db-41d3-b584-c12067735549",
        "cursor": {
          "ref": "450567e2-fd3b-4316-8cb3-0cb8756b60e3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b72ee9e1-676f-4ddc-91e6-8ac4883eeaf6"
        },
        "item": {
          "id": "c9e67e7f-26db-41d3-b584-c12067735549",
          "name": "credentials_issue"
        },
        "response": {
          "id": "62269150-e484-46b4-8a74-180e4eb446a3",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1e8bac-5caf-4e57-8f24-429e769bc865",
        "cursor": {
          "ref": "6e2e451f-ed9e-40a5-aac5-53fc3a681235",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "21591846-4857-47d0-93d8-3611cc2dd37c"
        },
        "item": {
          "id": "4f1e8bac-5caf-4e57-8f24-429e769bc865",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "155c0447-071e-44e2-b6c5-95ac34432bbf",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd21ed9-27bb-4a08-b446-0cdea9a4594d",
        "cursor": {
          "ref": "7178d6b0-e5c4-4614-aada-cbf713356f3d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7eec8d63-7b96-4351-871d-ac0b3dda43e4"
        },
        "item": {
          "id": "ebd21ed9-27bb-4a08-b446-0cdea9a4594d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "749d7467-efa2-409d-af8b-36ffe9ccbf04",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f194f43-df4f-4fbd-ac35-6e1c35a1356a",
        "cursor": {
          "ref": "b844db64-ebf7-48d0-85e8-2d22bf56fda4",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d4168380-ce60-4903-a81c-b1b2b3567eb4"
        },
        "item": {
          "id": "8f194f43-df4f-4fbd-ac35-6e1c35a1356a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03bd22b6-0260-47b7-905e-8392f62ab8ad",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e63faad-371e-4b84-aff0-ece05fd89e65",
        "cursor": {
          "ref": "4d31ea52-94e4-4da1-b151-e26f562f9a1e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9a9f1cd8-b6a5-41fc-bde4-044a660a699d"
        },
        "item": {
          "id": "6e63faad-371e-4b84-aff0-ece05fd89e65",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "234ac86b-c0e8-477e-a459-02d66669bbb1",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ca7919-3050-49d7-8c48-15fa8a66f32f",
        "cursor": {
          "ref": "d401551a-d38f-4717-98cd-e55891d1ed9d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "36e2d137-86ac-4fce-88e7-acef285e02a6"
        },
        "item": {
          "id": "25ca7919-3050-49d7-8c48-15fa8a66f32f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "658c448e-fc48-4af0-aeff-33eae964d714",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f60aa-aed9-4e58-9c8e-03ede399be48",
        "cursor": {
          "ref": "40416147-12dd-4f12-890c-40f61ed841d0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "430bd3e0-cf0d-4738-9f8f-55e2f21dd48c"
        },
        "item": {
          "id": "9b1f60aa-aed9-4e58-9c8e-03ede399be48",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc2d149b-44ca-4a4d-a8f4-e9ced0082b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a05121a-37c7-4041-8542-7d8b40b63807",
        "cursor": {
          "ref": "92606a93-fe9d-48de-a9c4-77e73684f951",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0dff41c6-4c7b-4689-a689-7c50408cae58"
        },
        "item": {
          "id": "7a05121a-37c7-4041-8542-7d8b40b63807",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4824daf0-9244-4050-af9b-2fe821e4f2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d377274-0cd2-4a89-b4cf-70134abe179e",
        "cursor": {
          "ref": "13d47995-6d75-4597-b44c-0ee7dbb18c06",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "870df426-a2a2-435e-bfb6-e3e15e6d6170"
        },
        "item": {
          "id": "0d377274-0cd2-4a89-b4cf-70134abe179e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71f21ecc-b5f7-4075-878e-681d8d6cdffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4730e9-e1a6-4080-afb6-71071fc0446a",
        "cursor": {
          "ref": "7b856526-5434-4e59-ad69-60588fa65b5b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "80637f13-29d6-47cd-832f-e9294f7699d6"
        },
        "item": {
          "id": "9f4730e9-e1a6-4080-afb6-71071fc0446a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6247d6a8-6a4a-4316-a7ed-8f34d555eca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9742e8e9-1c3c-43d6-a592-5ad8dbda4322",
        "cursor": {
          "ref": "b7561c22-087f-45fc-bebf-f074c796537e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5f9e4c4f-60ac-4b21-81c8-0590ef1d8819"
        },
        "item": {
          "id": "9742e8e9-1c3c-43d6-a592-5ad8dbda4322",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31b79264-b0e2-44de-aaa6-8762c0826abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f72e95-4afc-4940-b423-eb392956ebc3",
        "cursor": {
          "ref": "abb1a912-12d8-404e-826c-990af0b224a5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95bc7ab6-7679-48db-abe0-04fd3bb111d4"
        },
        "item": {
          "id": "d4f72e95-4afc-4940-b423-eb392956ebc3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ba6a8c7-eb0e-4310-b861-2f10b3057088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441902c-3c85-45aa-b972-93ab63305c30",
        "cursor": {
          "ref": "8eabf109-8d1b-46a1-9fda-9fc1d5298aa0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21e30ca9-f13d-4465-9953-05c8408e9aff"
        },
        "item": {
          "id": "c441902c-3c85-45aa-b972-93ab63305c30",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6a90d436-432d-473f-b2bf-8291810c0501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e600fd-8af4-43b0-874e-826904dd0c5e",
        "cursor": {
          "ref": "cf521b9b-29b5-4d44-a366-1481b151b6a8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2443d428-8285-4203-842a-52e431b6a95d"
        },
        "item": {
          "id": "72e600fd-8af4-43b0-874e-826904dd0c5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "939f79af-293f-4a09-9f5c-a13f513acd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0099f340-1cf2-4e32-a1ef-ae825ff3415c",
        "cursor": {
          "ref": "1d18e7bd-7a88-41cf-aecb-3310e7162bbf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "69753046-de48-4900-a87f-829190756bab"
        },
        "item": {
          "id": "0099f340-1cf2-4e32-a1ef-ae825ff3415c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80ab82dc-3379-4434-a24b-4d348f087543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da697c-a933-42b6-a5a2-450b77840d56",
        "cursor": {
          "ref": "cb7859a2-6dad-4e97-ab11-d8147b51a7f5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cda3c7a-5555-4eed-826a-722abb51e605"
        },
        "item": {
          "id": "f7da697c-a933-42b6-a5a2-450b77840d56",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7f383c56-4da9-4267-b5b3-c7d4e1c5bc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a522b79b-d332-4c60-a907-a4d8dcde7790",
        "cursor": {
          "ref": "e52d63e9-8d0e-4f28-921c-aaf25a115e9a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e5e5125b-6413-4919-8636-99466e1d19e9"
        },
        "item": {
          "id": "a522b79b-d332-4c60-a907-a4d8dcde7790",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b1377c6-5af0-4019-94b2-c72ecdbf865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043bffcd-ea6d-4b8c-acba-9d9046b9e4a8",
        "cursor": {
          "ref": "fe73ddaa-cc94-40ba-83e2-68a8c600593f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "21cbf08c-1a73-497d-afa9-792cb7f37711"
        },
        "item": {
          "id": "043bffcd-ea6d-4b8c-acba-9d9046b9e4a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ece59438-8e9c-4e46-aab3-7b17147999a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cc3761-d410-4728-bf31-0e36c4df43ae",
        "cursor": {
          "ref": "347a4509-495a-4cf5-a7e6-ae8c6ae5601a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b262a10-a07d-4fff-b8a4-8ca2b98c4700"
        },
        "item": {
          "id": "78cc3761-d410-4728-bf31-0e36c4df43ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fa06680e-1972-4ed3-b1e1-b168aeecbba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa8c133-26ca-4565-854f-9cacef3bec2a",
        "cursor": {
          "ref": "33e962c3-b038-4838-8ab6-e7c50948638d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4cffdfd9-d7d3-466b-aac3-bf5b7f888b72"
        },
        "item": {
          "id": "5aa8c133-26ca-4565-854f-9cacef3bec2a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "acc2021f-7dbf-427f-88c8-46cbd15f4da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d4b9b1-2bc4-48af-99f9-97b9102d6ed3",
        "cursor": {
          "ref": "a1bddb68-aed1-465f-8977-5bf20fc251cc",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a87bfddb-c7cb-4b32-bc80-87ea1ed8a936"
        },
        "item": {
          "id": "26d4b9b1-2bc4-48af-99f9-97b9102d6ed3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "654e30b8-fa13-4b67-8b02-c11cca952214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5919a118-debc-4cd5-9800-2c0906923f4c",
        "cursor": {
          "ref": "cb92f9c8-e515-45ac-b211-09509809279b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81bf262f-f5cb-43de-a80e-44d7a1962e6d"
        },
        "item": {
          "id": "5919a118-debc-4cd5-9800-2c0906923f4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6d4b857-f3ce-4c85-80b3-acd9153b4408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58834d05-0e7a-48b9-8908-fefe017a5740",
        "cursor": {
          "ref": "1dcbbf85-cb5b-48af-8139-0c22596f14db",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6d8afefa-f3c8-473f-b010-4f0b0b6dae8d"
        },
        "item": {
          "id": "58834d05-0e7a-48b9-8908-fefe017a5740",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09e3f943-3186-41de-ac0e-dd2963da0855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4fa9db-3401-43cd-b656-82fdea6eac8d",
        "cursor": {
          "ref": "07830a40-0403-46c1-af22-addd354b45c0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5a83f0ad-4cee-44bf-ba86-6873fb305a1a"
        },
        "item": {
          "id": "0a4fa9db-3401-43cd-b656-82fdea6eac8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "faa02e8e-3f53-4d76-ac27-c07091c76fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8913dc-2138-495e-a64d-82d7035b43a2",
        "cursor": {
          "ref": "0477a86a-a1ee-413f-84de-669766e14592",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "22318c2d-1c9e-441f-98cf-0024a9981804"
        },
        "item": {
          "id": "5c8913dc-2138-495e-a64d-82d7035b43a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dfd61b5e-3afe-47e8-b9e0-598994a68231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4bac7-fc6e-4865-afe3-cb1d67a0fa83",
        "cursor": {
          "ref": "441310fe-391c-4f9c-a665-fcb7280019b5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a44548ec-a8e0-4c09-a185-ee4081133dde"
        },
        "item": {
          "id": "56f4bac7-fc6e-4865-afe3-cb1d67a0fa83",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0a4c8486-3d43-46e6-b447-ff1f877f36f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5ebf5a-b379-4d08-9431-82a651307845",
        "cursor": {
          "ref": "fb83a286-4ee0-4e78-8b64-22f6af866c94",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8035fd38-161b-457e-8462-788fa3aa61db"
        },
        "item": {
          "id": "0d5ebf5a-b379-4d08-9431-82a651307845",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d742863d-528d-4b46-ba93-c9ae5662afdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a73e78-b114-426b-9b5e-e7fd4153127b",
        "cursor": {
          "ref": "2d2100cf-6224-409a-8807-f62f73458968",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb44fac7-b30a-4a59-95ff-48c30cb69983"
        },
        "item": {
          "id": "36a73e78-b114-426b-9b5e-e7fd4153127b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36b6fbe9-4c87-44df-bc0b-1325f1385337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5c1b84-1e04-4e5c-86da-c4fb6af7fdfa",
        "cursor": {
          "ref": "9279205f-1fd2-428b-b8dc-44a32e0fe7db",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "93636340-f5ed-4da7-872e-a3973893478e"
        },
        "item": {
          "id": "6d5c1b84-1e04-4e5c-86da-c4fb6af7fdfa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f66340e6-27c2-4b67-bf62-0382aaddb2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129f7da5-356b-4592-b7c5-9b0f68a4760d",
        "cursor": {
          "ref": "3cc38877-600b-4000-9334-a50f208106de",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68139cee-299e-401d-a78d-f21b5e5878a9"
        },
        "item": {
          "id": "129f7da5-356b-4592-b7c5-9b0f68a4760d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db48bbc0-fa14-49a5-8ca7-442eb8db7835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aa6292-c104-402f-bf69-f0b08af248f7",
        "cursor": {
          "ref": "9291322e-cb19-4716-ad7d-44a5833ef672",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c5f743ff-53fd-4a50-b61e-bb4623b057ec"
        },
        "item": {
          "id": "48aa6292-c104-402f-bf69-f0b08af248f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "db23492b-f0c5-484d-8f5f-fd02caef2dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad41b5-475f-4a2c-b617-d3c91ed19277",
        "cursor": {
          "ref": "0ee11419-2681-4f6e-9a0b-3b2202628493",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5d11796-5b6a-4c5a-8b71-d212640826b1"
        },
        "item": {
          "id": "e5ad41b5-475f-4a2c-b617-d3c91ed19277",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ee121610-c969-40e1-8d7e-a36cd7fe640c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688732e-604c-4912-8356-5f443b8f32e9",
        "cursor": {
          "ref": "124789f3-6fc4-4249-8c5f-516f1f793c2d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f16b2d00-f545-4a36-9291-5b5f2f2e7edb"
        },
        "item": {
          "id": "5688732e-604c-4912-8356-5f443b8f32e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7aa2876f-9624-4730-9d0e-77d16988ac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef1269-e5ad-453f-8a32-0104b69ea1be",
        "cursor": {
          "ref": "95370262-46a4-4074-a8c8-7e551f12db55",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "477a9731-82d6-4001-87b0-41b4557657dc"
        },
        "item": {
          "id": "2cef1269-e5ad-453f-8a32-0104b69ea1be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fc9c7f14-1e7f-4cb8-b2cd-973bb84212b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6328243-d3f8-4608-ad11-9b98173489fc",
        "cursor": {
          "ref": "c6dbc492-44ff-4757-86d0-bb936af31e0a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8a0c6730-2cef-4753-818b-969102357e48"
        },
        "item": {
          "id": "a6328243-d3f8-4608-ad11-9b98173489fc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b2093aef-c99c-4409-9680-779e5511b8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895a28b3-fd27-4261-b22f-85400ffc11cd",
        "cursor": {
          "ref": "dec15e4e-d8a9-43cd-b70f-4b97e7ea53b3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "628c3612-195d-4141-a307-a2a55f2e8ce9"
        },
        "item": {
          "id": "895a28b3-fd27-4261-b22f-85400ffc11cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d3c39f21-20fb-46c2-ac7f-cfff25c0ceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06ff3d8-0e40-4183-8c98-962ee9bfb713",
        "cursor": {
          "ref": "7eef7e64-48a6-41f2-b0a0-b610478be238",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5b087ed-3920-4e26-9cd8-33cda4fbc267"
        },
        "item": {
          "id": "c06ff3d8-0e40-4183-8c98-962ee9bfb713",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c20f6b7-93b9-48a1-86f7-3c61c670e39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4651d4-b26e-4adc-b5cc-2cfb87368a3a",
        "cursor": {
          "ref": "0c242023-d2f8-471a-9977-b09db0b603c8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1636d179-6189-4543-98a6-dc15186b6299"
        },
        "item": {
          "id": "6e4651d4-b26e-4adc-b5cc-2cfb87368a3a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f7bf96ee-4b3f-4a40-bf28-552121234d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e968254d-c790-43a1-9bc4-381e2d8b98d4",
        "cursor": {
          "ref": "42e51af9-1100-4ea9-a247-dd54102aceac",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ebadb895-f816-44fb-8717-db7e7895d90a"
        },
        "item": {
          "id": "e968254d-c790-43a1-9bc4-381e2d8b98d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "067e07dc-8d05-404b-aca4-044c1dcc9f4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f74b89c-16fb-4436-a64b-92a0b8f9482d",
        "cursor": {
          "ref": "c4be0d24-aa74-446b-8d86-5fbb9e0f1fa8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ee5358f-3b7a-4cd7-a8ea-d2bcf7b02a4e"
        },
        "item": {
          "id": "0f74b89c-16fb-4436-a64b-92a0b8f9482d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "782411c7-727d-4754-a989-ecf8c68ce08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39370ee-7162-4213-ae6a-7f007a708b18",
        "cursor": {
          "ref": "9b83e92a-a739-4fbe-a52f-c9c3cd2340c1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ccd583ba-f7ae-43c0-8362-ec2294cde00c"
        },
        "item": {
          "id": "f39370ee-7162-4213-ae6a-7f007a708b18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d89c09ca-3e5a-49cb-b240-5e04ace6612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee87f73e-de32-4db1-8330-e2c4f02878de",
        "cursor": {
          "ref": "a962b64c-b3b1-4b88-8508-2009ad59990c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "65fd7c11-5d13-4050-93f6-0e674eb2460a"
        },
        "item": {
          "id": "ee87f73e-de32-4db1-8330-e2c4f02878de",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e1c2c159-95ea-43c8-973a-afcc5ba9c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cc4244-bcb0-4e0d-be71-75d5214f702b",
        "cursor": {
          "ref": "681da8ec-952e-4487-8a32-42365bdcd26f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "513992bb-77f6-45f9-89a1-1a1aa73c2fe2"
        },
        "item": {
          "id": "c2cc4244-bcb0-4e0d-be71-75d5214f702b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6dfd5d3e-767a-421f-b508-f46b4b29c657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57015afd-a404-48a1-a093-c0a935c5af13",
        "cursor": {
          "ref": "c281ba14-f782-4ae9-b65a-9b3b51fc9c3d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ec309c10-19d9-466b-84ca-a0c5fafc43c8"
        },
        "item": {
          "id": "57015afd-a404-48a1-a093-c0a935c5af13",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d0a90a4c-0a9c-4e65-830e-95497cbe936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e67cd0-2a95-43e4-8ab0-7f8cbc655319",
        "cursor": {
          "ref": "e1fb6713-e674-4419-b622-8e2e84984c76",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a5434d7d-9d9c-4f04-bb1e-841202595f1b"
        },
        "item": {
          "id": "b2e67cd0-2a95-43e4-8ab0-7f8cbc655319",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5d9c801-2801-455e-90f0-ea70e39e9faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06622b-65e6-4235-a8b1-941c7c0f7155",
        "cursor": {
          "ref": "dc85514f-640e-4ae0-955f-cc31b3dac4cc",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "615d239c-8512-4fbd-b65d-43b944c82e7d"
        },
        "item": {
          "id": "2f06622b-65e6-4235-a8b1-941c7c0f7155",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1e2779b-0778-427a-8d3e-6f6251ffd965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c0715e-4f6c-470e-8575-f98d9bb5ce1c",
        "cursor": {
          "ref": "0fc047c9-9f57-4e0e-8adf-225236d4d0d2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "faaf9787-5cf8-4f05-ad78-eff1ff7624bc"
        },
        "item": {
          "id": "57c0715e-4f6c-470e-8575-f98d9bb5ce1c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "47f33746-c8f8-4d60-a245-d3b8a1eba4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aebd0bc-1f14-439e-a172-8ea95b9ed8c4",
        "cursor": {
          "ref": "2530c55f-ba17-45f1-9d08-1c869fe7df7e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "016c6dd7-ffca-4faa-94c9-dfb58b2aeee0"
        },
        "item": {
          "id": "0aebd0bc-1f14-439e-a172-8ea95b9ed8c4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6111bd37-996e-4cfe-9089-d8c2b64c0973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f29c8-1a50-4ad5-9389-18ef86d67a42",
        "cursor": {
          "ref": "d55d4fa5-4b37-424f-b7aa-e6ff63da9b76",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4d3f0973-0f84-4c23-a1a8-c9eb90071105"
        },
        "item": {
          "id": "5d5f29c8-1a50-4ad5-9389-18ef86d67a42",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c819ee12-bbd9-4159-8f4e-aa69dd96f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842fa9b3-2b96-4dda-8d13-1d970a74b504",
        "cursor": {
          "ref": "60729c42-7798-427b-9446-c226198e5f4a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1c731c8-9995-4b09-a674-558ffa048b31"
        },
        "item": {
          "id": "842fa9b3-2b96-4dda-8d13-1d970a74b504",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c14ac44d-351d-492f-888c-6f42f6795ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc76ff6-5fe1-482b-a457-d37c9b2dd730",
        "cursor": {
          "ref": "94be2163-20f6-4bbe-8946-26d2b16748b7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5d4803e6-1c18-4730-b6d0-a0fabad11dc8"
        },
        "item": {
          "id": "7cc76ff6-5fe1-482b-a457-d37c9b2dd730",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "622be79e-84e7-4cd8-865c-2bf6a0e6d6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28611d22-9b94-490d-8653-049e922e507b",
        "cursor": {
          "ref": "d4403f7e-28f4-494b-8220-330730e8d99c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f44aa98a-615e-47d7-8df8-4a1bd6fe6fd7"
        },
        "item": {
          "id": "28611d22-9b94-490d-8653-049e922e507b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5daf2b75-0726-426d-9555-2bfdf1b419c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16a543a-5795-448c-bc7c-88574b9cf416",
        "cursor": {
          "ref": "69013f24-848a-4b2f-b50d-96781103befc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "55c5d1b2-0139-47ba-97da-836ac04242d1"
        },
        "item": {
          "id": "d16a543a-5795-448c-bc7c-88574b9cf416",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac2bada3-a79d-4ccb-9fb0-6d3b034e4265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae598164-2644-46b8-a14f-078ae38e430c",
        "cursor": {
          "ref": "a00e1a1e-629e-420c-a084-c94caa7c2b25",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef70f5e4-75d3-489f-9b97-9539f3c90329"
        },
        "item": {
          "id": "ae598164-2644-46b8-a14f-078ae38e430c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2dcb348b-dcac-4f7d-813c-8d8603f45460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaebd94-73c0-44e2-b5c8-f8ab9f7476d3",
        "cursor": {
          "ref": "de2fd3a2-c55f-4cec-83eb-fc9a3ed46719",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "abb32749-877f-4337-8c94-9f6c24fc433c"
        },
        "item": {
          "id": "bdaebd94-73c0-44e2-b5c8-f8ab9f7476d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb96e6c1-4963-4d23-9bae-2082151d3bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe77639b-6d17-4ad1-8ff8-f59d47fba7a8",
        "cursor": {
          "ref": "ca02a47a-8ec5-450c-a1ae-b6791da8e8ec",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e6409e18-c61e-4763-ae07-7efc1f6f93d4"
        },
        "item": {
          "id": "fe77639b-6d17-4ad1-8ff8-f59d47fba7a8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85dddd4a-5848-4f35-a513-97553302c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10703e69-d9fb-4a45-a064-fbd2cb064e97",
        "cursor": {
          "ref": "a6e8f1f3-51fb-4029-b6a3-270c0b9b4cde",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7fda48a9-09da-4ae5-8c05-31c40e2061e6"
        },
        "item": {
          "id": "10703e69-d9fb-4a45-a064-fbd2cb064e97",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f340682a-ba9c-432d-b405-656f914c1e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29fae3e-083b-41c6-9b31-c6140e52fc7f",
        "cursor": {
          "ref": "438d4880-8cb3-402c-910f-44c73a099590",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9a790664-3b83-43ec-901e-667ce12fab21"
        },
        "item": {
          "id": "e29fae3e-083b-41c6-9b31-c6140e52fc7f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41021492-c59b-4821-a623-1d88e351cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72853862-d78d-45dd-af99-9bb2e59dc34a",
        "cursor": {
          "ref": "591af692-0d37-40ee-8b5f-896bbf83f21f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "66215d7d-3553-4af1-9648-96d9e94d6b09"
        },
        "item": {
          "id": "72853862-d78d-45dd-af99-9bb2e59dc34a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f64a40df-8783-4329-a4b5-214f15536639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6729ac-b49f-415c-9736-282d911ecd03",
        "cursor": {
          "ref": "95a24ba2-0526-472e-9408-b1fedeb7b107",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "437cf0b0-607e-42ac-ad71-952ee6f43d8b"
        },
        "item": {
          "id": "fa6729ac-b49f-415c-9736-282d911ecd03",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ecb8b5b3-2ca8-4d85-8634-d5ef063aa905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966a4405-eeab-4454-b84e-15c05c569302",
        "cursor": {
          "ref": "5ec4262f-2f96-423d-849c-dd37b39d2e32",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5d466d77-209e-493d-8e46-33f794181431"
        },
        "item": {
          "id": "966a4405-eeab-4454-b84e-15c05c569302",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce9721d9-5f13-44bd-9765-97793f896544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dec3b6-f1c0-4a01-93c1-8c8f7cd32ddd",
        "cursor": {
          "ref": "d1127eee-7372-4b9c-bd92-cf53851ff053",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7098f5e6-b4ae-45c5-bffa-df68d574a220"
        },
        "item": {
          "id": "87dec3b6-f1c0-4a01-93c1-8c8f7cd32ddd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2926a50b-2657-4856-a254-33d995f75331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd993b9c-547d-46ce-91fe-c10ef93f27c9",
        "cursor": {
          "ref": "84e674f1-4240-4e5e-af8f-8e2c48e5135d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d90be3a-6d37-4a03-a6b1-32ee3868bf1b"
        },
        "item": {
          "id": "cd993b9c-547d-46ce-91fe-c10ef93f27c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8b4ca2eb-b8bd-4947-9ebb-dc522f5c56cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23498b28-fe92-4f9b-8c56-65ee03725ad6",
        "cursor": {
          "ref": "10a62c21-6cac-4bca-bced-1093f4e44f84",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "11099172-624c-4a93-892c-511a7767f93f"
        },
        "item": {
          "id": "23498b28-fe92-4f9b-8c56-65ee03725ad6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e7ff5f5-f3f1-46b6-910c-a6ee13e660fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd8d9e-ae77-44b1-abb6-8cafec1d299a",
        "cursor": {
          "ref": "83db9d79-ce11-4291-aeb2-cbd0d1174b73",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e2f7978c-7b5e-48f3-8927-ee6d077c8b3c"
        },
        "item": {
          "id": "56bd8d9e-ae77-44b1-abb6-8cafec1d299a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a727143f-0691-4c84-b3fd-e2f74ca477ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca6ff2-1256-4d59-938c-a7ac23df4479",
        "cursor": {
          "ref": "ebcfd4b5-3ae2-48b5-bc27-f08af5d80a09",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "51e35287-e762-4d8d-af0e-2bdcd3889139"
        },
        "item": {
          "id": "d9ca6ff2-1256-4d59-938c-a7ac23df4479",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "00ada675-4504-461f-80c5-d742aba84dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6ae2d3-0ea8-4f57-bca0-a0b2d66473d1",
        "cursor": {
          "ref": "aa3a461c-bfd0-4a2d-888c-4fb4b80e3e4f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "16de34db-6ae1-4169-8ac1-0f22efa28990"
        },
        "item": {
          "id": "df6ae2d3-0ea8-4f57-bca0-a0b2d66473d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91b22049-681d-4620-9456-74ca3b7bfb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d621c5-3859-49da-a2a0-4c4b92930223",
        "cursor": {
          "ref": "3b932e3f-af3c-4b47-ae7e-d103fb522350",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ea20623a-2f7b-49a6-bc38-bf02a515b03b"
        },
        "item": {
          "id": "92d621c5-3859-49da-a2a0-4c4b92930223",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eb454ba9-fe82-4898-9baf-38d6927c7580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d4d95a-1d5b-417b-a805-2b44a83f74f6",
        "cursor": {
          "ref": "3312b2ae-23b4-4aff-960e-293f1b82827a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f0e73c8-4806-4904-9d4b-b7cf93f55848"
        },
        "item": {
          "id": "21d4d95a-1d5b-417b-a805-2b44a83f74f6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab37e74c-15f3-47f5-b4db-48841cc7902d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0e9c7-d4ce-471f-a865-70f58a0f776d",
        "cursor": {
          "ref": "f27924dc-a239-4fa2-a474-05f12b7332fe",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e5e2d3d4-584a-44b4-9dec-78d18507e325"
        },
        "item": {
          "id": "d5b0e9c7-d4ce-471f-a865-70f58a0f776d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2f207cb9-7060-47c8-b70d-ece3a1a6b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70614c5a-dec9-4ad7-8063-b32e4910eb03",
        "cursor": {
          "ref": "56e7f149-0077-4cdf-8ee4-a54898ea1b92",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "803c812a-e57d-494c-87ed-1fa611fff35f"
        },
        "item": {
          "id": "70614c5a-dec9-4ad7-8063-b32e4910eb03",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5d7dad20-0ba2-41d1-862b-157306f6b92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd9a661-5164-40b7-b712-b4385e61df02",
        "cursor": {
          "ref": "f7ae9fcf-6541-4514-8a0b-6d6e536b9983",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f92962c0-772d-43c3-b038-8d3cf7b448fe"
        },
        "item": {
          "id": "9dd9a661-5164-40b7-b712-b4385e61df02",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aa057c59-9d24-4dec-a25f-9251c114bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0731686-e71f-4bb9-81b0-c65711950782",
        "cursor": {
          "ref": "76dad4d6-76ae-46cb-abcb-f352758df466",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4e8e2a55-0ab1-4432-a699-0bb27429a416"
        },
        "item": {
          "id": "d0731686-e71f-4bb9-81b0-c65711950782",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5ffa6508-fccc-4762-b497-59f9f562471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b71d791-65e4-458e-afc3-5726cf62fe5f",
        "cursor": {
          "ref": "d2112c72-2477-4bbe-9dbd-4aa05fe2492d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d5a620ee-b8aa-42c8-a34e-f922830e4241"
        },
        "item": {
          "id": "7b71d791-65e4-458e-afc3-5726cf62fe5f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81b7aafb-3f0c-479e-97d2-3e1cf1ed7237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ae426b-e7e3-4b30-8f82-e72e8673c4a9",
        "cursor": {
          "ref": "b675e52e-4e23-4d24-acd4-1faa8a2d6b26",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "12e174b0-02a7-417e-ba7f-b062003158a2"
        },
        "item": {
          "id": "93ae426b-e7e3-4b30-8f82-e72e8673c4a9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f60328cf-c937-4839-a19f-b158325673b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8753f4d-97b7-4526-8a58-1eeafe55bf73",
        "cursor": {
          "ref": "63c70685-6a28-4840-9b47-cf71e09da3f7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "41cebae2-6933-4f68-ba5b-edb16ea292ce"
        },
        "item": {
          "id": "a8753f4d-97b7-4526-8a58-1eeafe55bf73",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1302bb7a-b9d3-437e-ab73-2dd162e3182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a959230-5135-429a-aaa6-38ba3832f7d9",
        "cursor": {
          "ref": "f5cfa11f-c0dd-4823-a08f-1146e929e6a4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a36991b3-b6ae-4f78-8947-b9b1cedf6ce4"
        },
        "item": {
          "id": "2a959230-5135-429a-aaa6-38ba3832f7d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f61f6b29-dad4-4e49-ae78-17edde6d81b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78812b61-868f-4183-b701-e39a8c4409ab",
        "cursor": {
          "ref": "a279f218-10c3-4f7e-8f1e-5787816202f1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "325e618b-00a2-4ef3-acb6-5aba2bf83577"
        },
        "item": {
          "id": "78812b61-868f-4183-b701-e39a8c4409ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9dd8b85b-d42f-4785-bcce-5b8706ad0ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0751e8a3-8b37-430d-a9a2-05dcfffe1948",
        "cursor": {
          "ref": "1b73f405-780d-4205-860b-ddc563086e4c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "102a3f12-5135-4fdb-8dd7-0f6e107052bc"
        },
        "item": {
          "id": "0751e8a3-8b37-430d-a9a2-05dcfffe1948",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3d3b2b2c-78ad-4327-b320-a9c698369f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525f2139-01ab-4f4f-8c87-ce6994cf326b",
        "cursor": {
          "ref": "bf6005f6-531c-43ac-82e7-5eb2b4c745ee",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6d5130fb-ac0f-4e84-8068-8dfa5bc64dda"
        },
        "item": {
          "id": "525f2139-01ab-4f4f-8c87-ce6994cf326b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "56893c3e-34e7-447e-86c8-35c7a732c90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c433ae51-2082-4f5e-9bac-fdbdc03ddf13",
        "cursor": {
          "ref": "49c4a550-92ca-4bba-b2dd-fc2c0f4b8aed",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bc5b187a-f687-4772-8239-04d7d6444bc1"
        },
        "item": {
          "id": "c433ae51-2082-4f5e-9bac-fdbdc03ddf13",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eb6411fe-489a-476c-af30-bebf95aac6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d49583-e38f-4cdd-abf9-cd148b8acd15",
        "cursor": {
          "ref": "220289c0-b6b5-4bbc-b434-f34625e16380",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "424d5c1d-2889-47e5-a77c-f6913fb87430"
        },
        "item": {
          "id": "e0d49583-e38f-4cdd-abf9-cd148b8acd15",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a52a9f3f-2caa-471f-820a-df476509a19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a8a2bf-913a-4f0a-8f60-ee65705b91c4",
        "cursor": {
          "ref": "e0183b4c-5024-428e-8c21-6c5f888edf9a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "49214390-cddf-434e-b38a-a84ad3ac5000"
        },
        "item": {
          "id": "50a8a2bf-913a-4f0a-8f60-ee65705b91c4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6e586f3-4353-48fa-9f44-d80d9bda83ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3b9de6-f340-4c28-8687-f1a966b85d5e",
        "cursor": {
          "ref": "21e2d9ef-04c0-47fe-83c8-fce85d1e5d29",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f393da0e-7afe-4356-935e-6db5677e1c82"
        },
        "item": {
          "id": "cf3b9de6-f340-4c28-8687-f1a966b85d5e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8cb515a1-9073-4a77-9484-0bae39259bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d86ad-f3a3-45bf-b766-94b936cfa957",
        "cursor": {
          "ref": "a9216349-53be-41ea-83c3-3507736e1870",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "313e45c4-b446-4568-9a25-a14bd4462ed4"
        },
        "item": {
          "id": "ae1d86ad-f3a3-45bf-b766-94b936cfa957",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ca819b5-3c3b-4e36-94f3-3e9a233d2522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e7c8ce-2875-4f33-a415-a9c33579c1b5",
        "cursor": {
          "ref": "abedd822-b74e-4396-9352-6f8be0a9d3e4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f17be52f-ad1f-49d2-bfec-49b6bdca1226"
        },
        "item": {
          "id": "51e7c8ce-2875-4f33-a415-a9c33579c1b5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "05a72cf0-5bc7-4668-b747-60c3a1dd4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cac79e-833c-4fde-a59e-8aac5adeb713",
        "cursor": {
          "ref": "25d4319e-9fc8-4d3c-93c2-60c6e94ba859",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "91c0baa2-cdd5-4338-9720-f3bbc0d02c87"
        },
        "item": {
          "id": "f0cac79e-833c-4fde-a59e-8aac5adeb713",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "45036e69-ffc7-4fd9-9ab9-b2b1018ea5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d7ffc-9c3f-467c-96c3-8671716297a5",
        "cursor": {
          "ref": "43714c20-f40b-4054-a295-26a1b16fa2a4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a0784cbf-0da3-40b7-862d-672754a4260a"
        },
        "item": {
          "id": "585d7ffc-9c3f-467c-96c3-8671716297a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "694bdf00-d337-4a9f-8ce4-b6e1e791cc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfa200b-54c1-4108-9cba-2b7dc25837c2",
        "cursor": {
          "ref": "ee28a0ed-598c-4815-a726-d34de16452c6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b10b9edd-cdcf-4fee-8821-611171be827b"
        },
        "item": {
          "id": "cdfa200b-54c1-4108-9cba-2b7dc25837c2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "321f4596-c309-439a-a51d-9c857b56f423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db873b-70fd-4050-9fdf-fb067fd09b7c",
        "cursor": {
          "ref": "19b1b12e-c0a9-49f6-8b45-5e8366ced345",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6af1e06d-d4ca-4a92-9cd7-d9c9e9da4ff2"
        },
        "item": {
          "id": "e2db873b-70fd-4050-9fdf-fb067fd09b7c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "02621567-3e4f-4339-ada8-5bc92cc175eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e962f5-44ab-4c84-8c0f-bf516250418d",
        "cursor": {
          "ref": "f63d82d5-3913-447b-8bb2-1c2a8fd8c434",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d482a8ba-16d8-42d1-b673-c8aca4a428a9"
        },
        "item": {
          "id": "55e962f5-44ab-4c84-8c0f-bf516250418d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "568cbd49-d6bf-407c-a95f-ce48ad1690f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8570002-4858-4633-8e28-0b584d0c2b18",
        "cursor": {
          "ref": "8a778865-4a44-4ced-b0dd-fe746f953e5a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "29ef99e1-d1fe-42b8-a8d4-6d50d99453fd"
        },
        "item": {
          "id": "b8570002-4858-4633-8e28-0b584d0c2b18",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0913472a-850a-495b-b6a7-6366dbd64ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58307864-3848-40e8-aea7-dcbac021c725",
        "cursor": {
          "ref": "139b406c-7899-483e-b0cf-26c15fdf9b83",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2ad3172a-a1b6-4647-86c3-681479f7f4b1"
        },
        "item": {
          "id": "58307864-3848-40e8-aea7-dcbac021c725",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ee740b3e-fde9-472a-bae2-03cc0546044b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980664c-2a73-47d6-9aa9-b30db2fc6563",
        "cursor": {
          "ref": "a006f63d-9be8-4766-9386-545710a2298a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "661cea9c-82db-4f3d-a2a3-45a7f45628fc"
        },
        "item": {
          "id": "5980664c-2a73-47d6-9aa9-b30db2fc6563",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e784165e-ac76-42ea-9610-f89ddd0b521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e100aa45-67be-43e2-a2a3-3d076911d2f3",
        "cursor": {
          "ref": "b110b3cf-5e99-4124-96d7-e39e13afdd9d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ff2ab4b0-7ef1-4590-9e9a-91de9ed6ad9d"
        },
        "item": {
          "id": "e100aa45-67be-43e2-a2a3-3d076911d2f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "beb91d1f-acd2-462c-bbe3-a8e83e5ea5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ce5ad5-e56d-44cc-9078-b7ca35440050",
        "cursor": {
          "ref": "69874044-9894-4ec4-8773-890fd3c15b99",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "428987f2-dd47-41d1-b68d-0aa70581c09d"
        },
        "item": {
          "id": "e3ce5ad5-e56d-44cc-9078-b7ca35440050",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1bab5e55-88b5-4df8-8d0c-f694d4cae5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59279cf3-d2d4-4806-8d1c-c59f6aae3af6",
        "cursor": {
          "ref": "c8552102-c7dd-4902-88c4-d5a97fa0a720",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a8d45b6-4c63-4862-994b-47cfeb2817d3"
        },
        "item": {
          "id": "59279cf3-d2d4-4806-8d1c-c59f6aae3af6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9768657-ff25-469f-83a0-67615194c8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38179e9b-0f5f-4de2-8398-24e004788c58",
        "cursor": {
          "ref": "12b1face-3723-4e2f-8252-965f5946eaea",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f1bcb8f-deb8-4e87-90d8-9f9140ee6223"
        },
        "item": {
          "id": "38179e9b-0f5f-4de2-8398-24e004788c58",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74a557c4-54c6-4a7e-8cb4-e8fd0def1a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394a844a-550b-4b9d-a161-e3ee5bb00fd6",
        "cursor": {
          "ref": "24330b82-c2f9-4b09-bdb0-1d5eb0290ce1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "df137e61-bcd1-42a0-b5df-933c7211fab0"
        },
        "item": {
          "id": "394a844a-550b-4b9d-a161-e3ee5bb00fd6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3b0e13fb-1676-407f-9c47-61a327d0d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f413cc-01a7-4d58-a521-9f5b06e674c4",
        "cursor": {
          "ref": "2d82bc52-afc6-4984-973f-64e732a6237a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bae875a5-2c6b-43f6-a55e-821a913b406c"
        },
        "item": {
          "id": "95f413cc-01a7-4d58-a521-9f5b06e674c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ea9df6b-3d8b-4aba-b7cf-cfef6875c4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee75be2-1b8f-4500-848e-ab3afa83513a",
        "cursor": {
          "ref": "3ac796bc-ec34-481d-8b4a-48d0e93f132b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "73b4ab8e-46a7-4297-99b3-31494468ea88"
        },
        "item": {
          "id": "5ee75be2-1b8f-4500-848e-ab3afa83513a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e6b34b13-1f8e-4b36-9668-bfc7e854ec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e521f-6f09-4151-8ca3-67df9dd1151a",
        "cursor": {
          "ref": "e232addc-e528-43d0-be90-003e967f47d4",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b628a0e2-e2f2-4c6b-9be1-a25774a86e55"
        },
        "item": {
          "id": "fe7e521f-6f09-4151-8ca3-67df9dd1151a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09c026c2-b8a4-4abe-84f4-31311345dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c1b2a-13f4-44bb-855c-5bebee5df580",
        "cursor": {
          "ref": "cb542068-7be2-4c7a-85ab-3fc1daaba7a2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1408870b-89fa-4cc5-bfd2-2845fc0790ba"
        },
        "item": {
          "id": "7f3c1b2a-13f4-44bb-855c-5bebee5df580",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "93e40b1a-1dae-4ccd-8900-bf24c3526da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77f6404-539c-4bff-9030-72f33c513b8b",
        "cursor": {
          "ref": "302b4a1e-fdf5-4b21-a9a1-8f98d07b6c00",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8e388c09-72d5-4fdd-93dc-71689b551d84"
        },
        "item": {
          "id": "d77f6404-539c-4bff-9030-72f33c513b8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dbfde6b3-3a3a-4983-8482-49a70b763118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e2781b-1c58-488f-bba1-f62f29c02ebc",
        "cursor": {
          "ref": "6e39b722-c50a-4f97-8457-deef7a77c0bd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b2f3255-d097-49dd-a5a4-fe97934b3767"
        },
        "item": {
          "id": "e4e2781b-1c58-488f-bba1-f62f29c02ebc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "df14e1ac-edc3-43f7-8346-ad699b4b187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22844c9-b347-46b6-a4a4-4d37f7420d80",
        "cursor": {
          "ref": "170969d1-9226-4b95-a943-62cc2aa0f178",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f04f38b0-2fcb-4a55-b883-96515ea024c2"
        },
        "item": {
          "id": "b22844c9-b347-46b6-a4a4-4d37f7420d80",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "da66de88-b179-4205-9e08-257c8efc51b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cc0e80-edc2-4bdf-8d44-6e6a57d1c277",
        "cursor": {
          "ref": "c6f1ebb4-20d9-45d2-8003-7680266c794a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fa2f41f9-9180-498e-ab4c-4f87c4bd6d06"
        },
        "item": {
          "id": "c0cc0e80-edc2-4bdf-8d44-6e6a57d1c277",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2eec738e-8b99-46e5-bf01-817164b8a746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de708e52-0b36-4dbe-8b14-eb61bc11935b",
        "cursor": {
          "ref": "f715a769-fb9b-465d-a4df-8a7f47f8b61f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "be4c09dd-78ea-4053-812d-c09838db474b"
        },
        "item": {
          "id": "de708e52-0b36-4dbe-8b14-eb61bc11935b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3cfedf2e-4afa-48bf-9bc3-14fc990285a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6a6524-22fc-4220-945a-05f5690e843e",
        "cursor": {
          "ref": "105ca55f-1b8a-4fb9-9fc1-f605412884f4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "89967b7e-cd4e-4056-9f30-9f893a476929"
        },
        "item": {
          "id": "8a6a6524-22fc-4220-945a-05f5690e843e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5eb8be1e-9a20-4729-85ce-adc3f5e86bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2bb652-1b2e-49eb-a6f0-3b47564dcc92",
        "cursor": {
          "ref": "8ef5c4a4-7609-4e61-ad5e-86eb11886f09",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7c90a0d2-bb4f-42d0-bf9a-68e62957b251"
        },
        "item": {
          "id": "7a2bb652-1b2e-49eb-a6f0-3b47564dcc92",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab348d9e-3859-439c-8936-77d09e5b5be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95595b44-7037-4127-9fef-487a24db8b07",
        "cursor": {
          "ref": "f6e6f3b3-b995-43a4-a59c-e476b2bdff6d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "33dcfcb8-d9e6-4a42-8595-13da65dfbe48"
        },
        "item": {
          "id": "95595b44-7037-4127-9fef-487a24db8b07",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "82dac2cc-f0e4-4df7-a46e-e5b9014458fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3037ef-01c5-4ab2-8dcf-ba5e525bd096",
        "cursor": {
          "ref": "91371545-228c-4a3e-a695-029876be9cf9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7bde27e3-b1e0-4132-8064-d667ce70c8ac"
        },
        "item": {
          "id": "2f3037ef-01c5-4ab2-8dcf-ba5e525bd096",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e6dfe2c6-ed2d-4166-9472-ad87cd7e5f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc0fe53-8f84-45e4-baa0-7101f00e7d77",
        "cursor": {
          "ref": "c2c30677-5f2b-4977-8862-76f54d359251",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1ade2424-6428-4afa-89e6-601d1ee1c66e"
        },
        "item": {
          "id": "4fc0fe53-8f84-45e4-baa0-7101f00e7d77",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b38a6bbd-6c44-485a-9677-1712b21b1e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e910ef47-a908-42cb-9b87-894e9a54efcc",
        "cursor": {
          "ref": "4ffb5ad7-fb51-4435-9cf7-bea25b0497cc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ae99fd5-da45-4507-b70b-14b4737170a1"
        },
        "item": {
          "id": "e910ef47-a908-42cb-9b87-894e9a54efcc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c24dc825-cc27-4dd2-ad7a-edf675395f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b491b704-5e02-40ed-84eb-ba8af42754c3",
        "cursor": {
          "ref": "a4f1f41e-11a4-455c-89a9-15797c0012ed",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a280b71-c0b6-4877-a685-c4294d9d10bb"
        },
        "item": {
          "id": "b491b704-5e02-40ed-84eb-ba8af42754c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22900c77-8686-4db6-8e07-1135da985a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e4fbf8-afeb-4474-a405-437c701b33bf",
        "cursor": {
          "ref": "442a0072-497a-405d-8e9b-ff50ad9c607c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9b4dda63-4896-4093-88e1-9c634025d5f3"
        },
        "item": {
          "id": "e4e4fbf8-afeb-4474-a405-437c701b33bf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d9a46eed-b33f-4aa1-96ed-f39260d8921a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7a1aa7-4825-4838-b95a-4dced8176885",
        "cursor": {
          "ref": "62365117-ef6d-488b-b73d-114762af3efb",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ae77df45-4bdc-42e1-a1af-1aeed392e513"
        },
        "item": {
          "id": "ae7a1aa7-4825-4838-b95a-4dced8176885",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0597b69f-1eba-4dd8-ac7b-7b63293e90b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95118d56-131f-43f9-b507-48c7edc6e810",
        "cursor": {
          "ref": "d670e8e9-34b5-4319-a418-aa5039b9a2fa",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a668f574-2edb-459f-8543-c2bf366114e9"
        },
        "item": {
          "id": "95118d56-131f-43f9-b507-48c7edc6e810",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eb78a2a1-2010-42c3-98f2-fdc06e4f6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab64bb1-eda5-45c9-a686-88a5b16246d4",
        "cursor": {
          "ref": "b99fc08b-b1ee-41e6-9021-a93e23484dfc",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6db4e513-555e-4f4f-9f97-5d2ceb8245b6"
        },
        "item": {
          "id": "cab64bb1-eda5-45c9-a686-88a5b16246d4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "08cec996-cd68-4688-86ad-657240089476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c06f83-88ba-4f3e-b9a2-912adadb8575",
        "cursor": {
          "ref": "038b3ad1-0052-41be-84fd-94516e4967e1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "411e9464-2b1b-4272-81ff-b9c6eecdce8b"
        },
        "item": {
          "id": "93c06f83-88ba-4f3e-b9a2-912adadb8575",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "38d06a8f-52e1-4f6a-a14e-cc914c7813a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa6baa8-661e-4931-b745-b65030bb2de3",
        "cursor": {
          "ref": "1b7bd1ed-1546-472a-910d-10cd2e388da5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "35d1c942-6ef3-4189-8df4-e34e7b4d0a9c"
        },
        "item": {
          "id": "aaa6baa8-661e-4931-b745-b65030bb2de3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08d086c9-1561-4518-9b89-a8287a57be78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0603d3f0-4c63-4e40-bb6c-6c94b78ababe",
        "cursor": {
          "ref": "bb9f7e4a-24e7-47ba-9ed8-a5ec4408b0ac",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "354510a0-4912-4c59-b8dd-f526269f6a1b"
        },
        "item": {
          "id": "0603d3f0-4c63-4e40-bb6c-6c94b78ababe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ec444e66-9b00-46aa-aaca-b305090ec1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc52851-ed1e-4175-8d9a-ad63bccc4937",
        "cursor": {
          "ref": "8bd63ea2-33a8-4a33-9a93-8c45e8b4b66c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8730a980-efcd-4b2b-8824-369dd6dd7a1a"
        },
        "item": {
          "id": "8cc52851-ed1e-4175-8d9a-ad63bccc4937",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8e36a2dc-348d-467c-b1d5-017a8d5d04b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9851dbc5-c9e3-4810-b5ee-b57a73bf7f6e",
        "cursor": {
          "ref": "80e39386-6570-4233-9e41-d0b222634b5d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fe5b3df9-6614-489a-84bd-6adcc6725a86"
        },
        "item": {
          "id": "9851dbc5-c9e3-4810-b5ee-b57a73bf7f6e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "34839108-be3d-433a-9593-c0628896998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867a1ccf-c663-4773-a6dd-1f727dd18316",
        "cursor": {
          "ref": "eed5c2ac-84ac-48f5-a5c0-a431654735bd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "24f4ace9-99be-4533-bfe7-fcbbbcededa2"
        },
        "item": {
          "id": "867a1ccf-c663-4773-a6dd-1f727dd18316",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "97795f1b-d259-4919-b5a6-2319bb0393c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e65401-f971-4aa5-961f-d0276bd60562",
        "cursor": {
          "ref": "b2e0f0cf-5e93-4947-9690-8d9e000cb594",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "072bd56a-90a1-4c40-90e4-7762dfa29cb8"
        },
        "item": {
          "id": "40e65401-f971-4aa5-961f-d0276bd60562",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0a764f7-b29b-4e17-a811-c19a11064704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4a1850-cadb-48e7-8ad9-6ba3b0bfb610",
        "cursor": {
          "ref": "d34c96d3-6cb6-4a13-a64a-30c6c2e6ecc4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2d7585d0-185d-45c9-818e-23e9f3fb9833"
        },
        "item": {
          "id": "ed4a1850-cadb-48e7-8ad9-6ba3b0bfb610",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3e1e4452-c2ef-4b8f-a95e-7a15406c76fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f65a9bd-327e-4a9b-accf-02d069835cab",
        "cursor": {
          "ref": "6ff216d6-e2e9-4f15-a3ed-01ba7c3eaa43",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "084c4f0d-db9a-4c78-9abd-08918aa47b0c"
        },
        "item": {
          "id": "3f65a9bd-327e-4a9b-accf-02d069835cab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c208eb79-524d-4fc2-a7d8-35709dba056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f64ea3f-99b7-49ec-9725-79d5ea45e175",
        "cursor": {
          "ref": "49164b71-7e54-4400-a036-021dd017a187",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d7c2b72-0524-459f-a0a8-dfb13dd02b7f"
        },
        "item": {
          "id": "2f64ea3f-99b7-49ec-9725-79d5ea45e175",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "88a325c7-ea87-47fc-91b5-d1ecea58718e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831c017a-da3e-4436-a75a-c1e08f9e337c",
        "cursor": {
          "ref": "3cd5be39-18c8-4971-be50-28e232cff016",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb243931-10a3-4fbe-a3f6-b367d64a0395"
        },
        "item": {
          "id": "831c017a-da3e-4436-a75a-c1e08f9e337c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1e91aec-04bc-49f3-9710-bf7c8354685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e87bd96-84b6-4b48-a8e5-c0aa19fa378f",
        "cursor": {
          "ref": "6b99cdf7-4be5-4fde-a8f5-ac2519dc6fef",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4b53d80a-5184-4af5-b004-e87748ab2d82"
        },
        "item": {
          "id": "7e87bd96-84b6-4b48-a8e5-c0aa19fa378f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c3609e5-ba49-4bbc-bbfc-a6ee3892366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38acc869-12c2-4621-b06f-a939f7fb57ce",
        "cursor": {
          "ref": "202d21a2-57e2-4d8d-8b2f-12f9ac910313",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "51e1282f-6e86-4014-afff-836a47dbe650"
        },
        "item": {
          "id": "38acc869-12c2-4621-b06f-a939f7fb57ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "227b63a1-c28d-48d3-b6a8-42144fc0c178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f970ce45-c95e-4577-a928-6469de2be8a6",
        "cursor": {
          "ref": "b79a1103-2ba3-4909-b63f-354eea393198",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ca637c74-adc2-4482-acc3-5c1d7de46f92"
        },
        "item": {
          "id": "f970ce45-c95e-4577-a928-6469de2be8a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3bcdfcc6-5ed5-45f7-819b-8d4632fca0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8e79b5-a459-4001-afbb-18a163f7d6fc",
        "cursor": {
          "ref": "d3f10f03-78d9-48d8-b44e-c7ada553952a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eaeba527-cd21-4188-8103-1c8c0ea0db2c"
        },
        "item": {
          "id": "eb8e79b5-a459-4001-afbb-18a163f7d6fc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f62dd485-3031-4bbb-b6bb-48c79d64974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5c0fc-2bcf-4ca4-8818-243ea96c7f54",
        "cursor": {
          "ref": "73803ef0-cb2d-42e2-8b07-77db2b90755d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e6872e36-1371-4996-a804-a345a5eaa731"
        },
        "item": {
          "id": "acd5c0fc-2bcf-4ca4-8818-243ea96c7f54",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e2ca5846-2b84-4126-bd7f-6e7c3f1a69f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cb93d6-6879-4704-8215-01be6d53a955",
        "cursor": {
          "ref": "465a05f1-f874-41e6-83f2-27312b211297",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0afb9db2-9b4a-445c-bdb7-6c62a534d851"
        },
        "item": {
          "id": "f0cb93d6-6879-4704-8215-01be6d53a955",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28b4c94e-ad77-4a06-95db-074e3e2e7054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e7b60f-4160-4341-9077-f7e78a368085",
        "cursor": {
          "ref": "21368d6b-9c65-4d20-b155-5370de92c91b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2e742c6c-afdc-4aa9-af0a-b985143f6a0f"
        },
        "item": {
          "id": "a1e7b60f-4160-4341-9077-f7e78a368085",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a257520-6b6f-4a41-9377-8e11160ec07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a5638b-a3bc-433b-a1c7-67610114c943",
        "cursor": {
          "ref": "b9534bb7-6fea-4bf3-8d14-c856a608e937",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0524d371-4a4d-480d-a0f7-9d8e7d7f769a"
        },
        "item": {
          "id": "87a5638b-a3bc-433b-a1c7-67610114c943",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71da28e7-5ee1-422a-a1cf-b4b5f59ac810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd0ab8b-79cd-4b5c-a341-39f58a80c51f",
        "cursor": {
          "ref": "b73930f2-5233-4d06-ac63-703369baf87e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "acd0dc23-012b-40fb-bce2-2f762a4755bd"
        },
        "item": {
          "id": "9bd0ab8b-79cd-4b5c-a341-39f58a80c51f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7c9b47d7-5c0c-40f6-b78a-fe7a6d589ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a79291-dcd1-4d96-81d6-a9dbde8b22b2",
        "cursor": {
          "ref": "3d735c0e-909e-4300-9f25-3b0745a0e428",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "69b27ffa-e023-4ee5-957e-10d7b1d7fb57"
        },
        "item": {
          "id": "c6a79291-dcd1-4d96-81d6-a9dbde8b22b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c4f5b60-a06e-4954-ba60-bd23282ca14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c51249-bece-4d56-874d-b4b5d92797fa",
        "cursor": {
          "ref": "9114e25b-4d6c-4627-8f98-6280e3668fe8",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f70de0e3-2b65-4d93-9876-37450397e7b3"
        },
        "item": {
          "id": "42c51249-bece-4d56-874d-b4b5d92797fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1bf1ed73-440c-437a-bacd-7d51decb6503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d26aab8-a896-4f59-9df1-ccb7807bece6",
        "cursor": {
          "ref": "edfa6c5c-90c2-45e0-ab69-66bf95986d9c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e69df496-c90f-49be-87e3-cae223bce84a"
        },
        "item": {
          "id": "0d26aab8-a896-4f59-9df1-ccb7807bece6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4734e4bf-984b-4ffe-b8cf-0565daefcbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f397c96f-2da5-4a7b-88a5-72aebeb5aa92",
        "cursor": {
          "ref": "9f13d435-bf94-4dc9-bdf7-68490c5827b5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "35fc4b9e-bc48-4d61-a697-8b1f0de30c81"
        },
        "item": {
          "id": "f397c96f-2da5-4a7b-88a5-72aebeb5aa92",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eb45a039-cc3c-49d6-96ff-f932e87695ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0e07f6-2ba2-447c-92da-ad54085bd43d",
        "cursor": {
          "ref": "1cb85111-1574-46e8-b503-f22fd42d8ff8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93b0fbb1-37d6-4bf0-928f-15253d2cdcfd"
        },
        "item": {
          "id": "6c0e07f6-2ba2-447c-92da-ad54085bd43d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3c69f47e-ae90-4b40-ac43-031c02a6bbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611b79ce-3542-4f24-9d3d-044e6c882ea9",
        "cursor": {
          "ref": "520fcf4f-1d70-4f69-979e-7886047dbbd4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3b943a29-f0f5-4ec9-b2a6-1f92db9d0de6"
        },
        "item": {
          "id": "611b79ce-3542-4f24-9d3d-044e6c882ea9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "60f0ca89-da9f-4222-a189-4908b9084b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec1e937-1782-4f94-b76b-b83e0373d2b8",
        "cursor": {
          "ref": "699fcecf-c92b-4e77-ad1a-6dd5173c13fd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c612a004-5b9d-4ec1-a888-a101814a7946"
        },
        "item": {
          "id": "aec1e937-1782-4f94-b76b-b83e0373d2b8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "182d3f72-5df7-4fdc-a8b4-c23f857c6937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d497736e-9337-4682-a5f8-5fd88611e550",
        "cursor": {
          "ref": "bc48f0b9-0a9b-471d-80fa-08b45cf1fd57",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c70c8183-ead4-4f3b-ac25-ec71d90d712c"
        },
        "item": {
          "id": "d497736e-9337-4682-a5f8-5fd88611e550",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "44489804-2619-42a2-a098-1328b0b26dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428b2ce4-0747-496c-b60b-8837e362c415",
        "cursor": {
          "ref": "97b35ede-4610-434b-8852-024ae2e70ac0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ea14761e-e4a3-4a67-9ca9-838bca027ec9"
        },
        "item": {
          "id": "428b2ce4-0747-496c-b60b-8837e362c415",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "67e808d1-668d-4035-8359-035f99a60cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6f90b4-84b1-43db-9ccd-dc9d38fb4d31",
        "cursor": {
          "ref": "f6180318-8894-4cce-baf9-2d58125d89f1",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6bd5c4ca-288c-46a5-b184-9ba166e0eda2"
        },
        "item": {
          "id": "ae6f90b4-84b1-43db-9ccd-dc9d38fb4d31",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3d232997-c650-46fc-b9f3-986a5992361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29f8f9-a6d7-4ce2-938a-381d77f418c2",
        "cursor": {
          "ref": "74629f64-fa30-46b9-ae2c-35bff2dcb436",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8bda19a3-f32e-40fd-9d1d-3645c76e5030"
        },
        "item": {
          "id": "9d29f8f9-a6d7-4ce2-938a-381d77f418c2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bebe9fc-0824-4afa-93e8-2f3a9e3bcb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e603be0-6ece-46d9-a573-0af3ca839007",
        "cursor": {
          "ref": "c99ff8ec-7759-48f7-882b-6421bbd785d9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "29de2433-09c7-41e6-baff-252542f6033d"
        },
        "item": {
          "id": "5e603be0-6ece-46d9-a573-0af3ca839007",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b1c73c99-7a08-4062-8e96-6432e0001d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac97e29-384d-40db-9f38-95c5f6792876",
        "cursor": {
          "ref": "758eef6f-ac4e-4912-bf67-318e36eea617",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cf2700cf-4ddc-420b-8fcb-a4a5bc0ed514"
        },
        "item": {
          "id": "bac97e29-384d-40db-9f38-95c5f6792876",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "658b9621-c64b-49b7-8ec6-0b0db4320ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3c676-2e68-4ef3-b1bc-12b49b66b576",
        "cursor": {
          "ref": "64daa5f6-e7b0-4cbc-8df0-739fa3f46468",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9602f4af-a46e-4a51-9950-cb0fa623af66"
        },
        "item": {
          "id": "f8e3c676-2e68-4ef3-b1bc-12b49b66b576",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4638f4e5-5c10-4810-9cee-3f126984b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1cc16a-6330-42f5-a92d-92c71c3e77f9",
        "cursor": {
          "ref": "a1b8c9be-4c28-4230-a386-0c3a27e896dc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "185df9a8-b6ce-4280-9bda-c71884f945ce"
        },
        "item": {
          "id": "9d1cc16a-6330-42f5-a92d-92c71c3e77f9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "526c01c0-c6d7-4f57-bbf3-111dda5a5624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eff4e7-462e-4bf7-aa52-3af320887a06",
        "cursor": {
          "ref": "27c7ff68-d35a-46a2-8a20-aaea9c1c9d7c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f2dc653b-a58b-4432-86de-95439fc791ae"
        },
        "item": {
          "id": "97eff4e7-462e-4bf7-aa52-3af320887a06",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4144c32e-255d-4b4a-8429-75fd40926fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2a6621-cb81-4c5c-8b8c-8f88bee718fe",
        "cursor": {
          "ref": "5a2d79d7-21af-443e-9ec3-92003591a79a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "92e071ce-288a-45ec-adc4-20e7101ce8e5"
        },
        "item": {
          "id": "6d2a6621-cb81-4c5c-8b8c-8f88bee718fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2a0cad8c-6d7f-4292-b0cf-3d55847728c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90051397-f5e1-4033-ba2a-05736367b497",
        "cursor": {
          "ref": "6ef662c9-3949-4b6c-8706-24ccb5df318a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a3066e95-8919-4591-9144-f6ba4dfc0bb6"
        },
        "item": {
          "id": "90051397-f5e1-4033-ba2a-05736367b497",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8902982e-eb5f-4d6d-9f0f-143df223ec89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01647c-0952-438e-a50f-33836d5a9db4",
        "cursor": {
          "ref": "32945394-868e-44fb-abae-77b6eb4949fc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b7f10c3c-a46d-4508-afb5-4e2229219160"
        },
        "item": {
          "id": "be01647c-0952-438e-a50f-33836d5a9db4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "128bda68-8610-4181-bab3-f78abde776fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ef406-cbd6-42f3-8e6b-4874385e6e9e",
        "cursor": {
          "ref": "c12083a1-d320-4aa3-b772-3be6ffc0d83c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9a28bdde-70e7-413f-aa1d-1227729a25e4"
        },
        "item": {
          "id": "372ef406-cbd6-42f3-8e6b-4874385e6e9e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0d2bb0f1-6dc1-4dab-a2f8-9f978c3d522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa3405-0c0c-439f-a30e-74d0cfe0749a",
        "cursor": {
          "ref": "38a31e48-0333-4a32-b0be-8db0233e3954",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b92f6b77-ba0b-47c1-97d4-2ff126004379"
        },
        "item": {
          "id": "bffa3405-0c0c-439f-a30e-74d0cfe0749a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "33f914d9-4e5c-4073-adf5-e9f2393812fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9b4e06-6fc2-4556-bbd0-0b53165d6cec",
        "cursor": {
          "ref": "3aa580ee-1242-490e-9098-4d0389a539c9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0ddecfb6-f718-4fb9-ac44-c99e615cd3a0"
        },
        "item": {
          "id": "6e9b4e06-6fc2-4556-bbd0-0b53165d6cec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2a88ef1c-202e-4c76-b891-7cdbef7d35bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58baeefe-99e6-4b27-817c-af524dba4239",
        "cursor": {
          "ref": "562b8b32-8e8d-46e2-a61b-92836bc621a0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "490383d0-3531-4534-903e-9b4f91f97093"
        },
        "item": {
          "id": "58baeefe-99e6-4b27-817c-af524dba4239",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9ffff1fe-b640-4a8f-b5f9-edf895afc43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098b746c-e019-49bc-93a9-111f71994edf",
        "cursor": {
          "ref": "fa3e6906-8c33-48e9-a937-161f3967309a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "43768b16-c30e-4b65-8e8a-be6e99600ad1"
        },
        "item": {
          "id": "098b746c-e019-49bc-93a9-111f71994edf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8ae5927d-10c5-4297-a4d9-55d206133717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eec553-e57b-4228-9906-9da1174ce04b",
        "cursor": {
          "ref": "cbebb1be-5cab-4579-89ee-7901304aa7f0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5f8ad019-d80c-4630-81ea-541109687354"
        },
        "item": {
          "id": "66eec553-e57b-4228-9906-9da1174ce04b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b136052e-1bde-4481-b693-17dfeda01528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c173c-447d-4c75-a367-079b17c5592a",
        "cursor": {
          "ref": "98c5b757-492f-483d-b702-d6734c87b5c1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e4b1b583-c724-4ad5-afab-1580bd4af1e4"
        },
        "item": {
          "id": "f94c173c-447d-4c75-a367-079b17c5592a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "996916c4-8c9f-4d4e-a6f5-0466956aaff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e858b66-42de-43fc-b28d-39cae0441041",
        "cursor": {
          "ref": "2956416a-81ed-4f94-9eb1-134029896531",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6dbdccd0-cf85-4b79-b38f-25c9e6e6da09"
        },
        "item": {
          "id": "8e858b66-42de-43fc-b28d-39cae0441041",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aa394e36-2e7e-4714-bb6c-2be966c79f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e232fab6-b955-405e-9572-3662a973f8b3",
        "cursor": {
          "ref": "ea81cdc9-1e03-4608-af65-792bf4644044",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ee77bdb0-9a99-4b92-a9a5-f77b84a9c90d"
        },
        "item": {
          "id": "e232fab6-b955-405e-9572-3662a973f8b3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9d560631-1324-47d6-ad2f-63e1fdc1ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9608faba-0f8e-41a2-af4b-6effedb422f8",
        "cursor": {
          "ref": "afff0b76-213a-4868-87b6-dcee5333e269",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "444a98dd-4450-4c6c-9502-834d8ba65218"
        },
        "item": {
          "id": "9608faba-0f8e-41a2-af4b-6effedb422f8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d46631cd-23bc-4648-9701-7a4b772564ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7098d136-b1f6-42b6-821e-43ff0f0a7122",
        "cursor": {
          "ref": "13ee540e-7f30-4e70-a072-e6ed243ba165",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "34bae497-50d4-4e26-9f58-8410bcf563fc"
        },
        "item": {
          "id": "7098d136-b1f6-42b6-821e-43ff0f0a7122",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ea91f26b-304e-49a0-847f-8e210ad9f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ac145a-801e-4737-bc55-caf4d85ab4aa",
        "cursor": {
          "ref": "09a88e48-a3fa-42f4-b447-a00fafce4a47",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4c6d3214-537b-4c81-a3df-da981e9084ea"
        },
        "item": {
          "id": "89ac145a-801e-4737-bc55-caf4d85ab4aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bca41bd6-8a3b-4a84-82fa-316719a34264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bb0830-bb1b-4f18-be82-eddb62d28d48",
        "cursor": {
          "ref": "c1e995d8-2722-4cbd-860f-1bde81e2514f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "972c8eb7-1fb9-436d-8fa8-5d79e27fafed"
        },
        "item": {
          "id": "86bb0830-bb1b-4f18-be82-eddb62d28d48",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "882b8766-cbbf-48f7-ad41-8cd88972ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6eb0a9-e1f4-4e19-b817-82ab8207582c",
        "cursor": {
          "ref": "1d8645b0-629b-4425-9831-37353645306a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4ca36016-067b-4b86-a020-68fee4b29377"
        },
        "item": {
          "id": "cd6eb0a9-e1f4-4e19-b817-82ab8207582c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55f0b015-1978-4ed2-8381-907562436b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a69d5cd-a231-4cc2-97f5-e630b780dc4b",
        "cursor": {
          "ref": "7f0e170d-3fe6-41d8-9a91-11b2e8830188",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "25ddf4ca-4948-478a-bb7b-7f79ff4d4e94"
        },
        "item": {
          "id": "2a69d5cd-a231-4cc2-97f5-e630b780dc4b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a166e662-d67f-45fa-be37-ccca87021c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6930f7c8-814c-41d2-8f9c-79fb894d01d5",
        "cursor": {
          "ref": "ed5d7f74-2dfd-4659-abdd-442bf9693544",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4318273e-4073-4ff3-90e3-d8895b1ee772"
        },
        "item": {
          "id": "6930f7c8-814c-41d2-8f9c-79fb894d01d5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d2bb6318-c09e-4f2f-a730-aff70235199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b25c70-81db-446e-a3a9-ace58994a040",
        "cursor": {
          "ref": "7fb7abda-ca8f-420b-95dc-46a36a87f7c6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d9dcc0ca-a297-4b8f-ac79-4e8afb4d7ad8"
        },
        "item": {
          "id": "e9b25c70-81db-446e-a3a9-ace58994a040",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a8ecf1e-7820-4317-84ee-e52a980b0b0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5231016-9aa2-4b9d-add8-7cc2c28f96cb",
        "cursor": {
          "ref": "62e4d37b-cf5b-49c2-b2b7-c9a22b8f563d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "10c6ce4b-10ac-454f-8ae7-68abd00eaaf6"
        },
        "item": {
          "id": "f5231016-9aa2-4b9d-add8-7cc2c28f96cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f2c1e9d7-ca35-44bc-b5b5-9728c678717d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa2778d-3820-4399-b546-160aa5edbc42",
        "cursor": {
          "ref": "31fddf7b-b2cc-4765-9d57-395e5c6c156f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5242f02b-ed16-40b5-97cf-59df5657cd3e"
        },
        "item": {
          "id": "1aa2778d-3820-4399-b546-160aa5edbc42",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c55dc5eb-1efe-47be-a37f-914874b78f49",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5db3b21-74e5-48ce-9808-f3c4a90a51d2",
        "cursor": {
          "ref": "3ef5f123-c059-4219-b469-c3938196cebf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ef05ae74-c55c-4760-9ee3-53242b32b5f7"
        },
        "item": {
          "id": "a5db3b21-74e5-48ce-9808-f3c4a90a51d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c59fe4d2-31ff-4408-a5d3-2d3d883fa00b",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cd1cd-b4ab-4c57-b453-715ae0e94bba",
        "cursor": {
          "ref": "aa6a5943-d11e-45a2-b1bb-1c53400f2cbe",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fbe2aca2-da53-4244-9ccf-74c211f8af87"
        },
        "item": {
          "id": "563cd1cd-b4ab-4c57-b453-715ae0e94bba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74a0c143-810a-4f1f-8147-e3271659a41c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cd1cd-b4ab-4c57-b453-715ae0e94bba",
        "cursor": {
          "ref": "aa6a5943-d11e-45a2-b1bb-1c53400f2cbe",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fbe2aca2-da53-4244-9ccf-74c211f8af87"
        },
        "item": {
          "id": "563cd1cd-b4ab-4c57-b453-715ae0e94bba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74a0c143-810a-4f1f-8147-e3271659a41c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cc25f6-b76b-4578-866f-81222ab8b703",
        "cursor": {
          "ref": "bc1439cb-2958-4b4d-9a51-96dbd4c487d7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "36717b2b-09ea-497b-a09d-59e69680bea8"
        },
        "item": {
          "id": "15cc25f6-b76b-4578-866f-81222ab8b703",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0dd9a7ff-a899-46ce-8b22-04e827865fb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097ca9e-4e2e-4439-b9fe-0863763ea76b",
        "cursor": {
          "ref": "9f6cbb94-8787-4ab1-b624-35bc3db27a17",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a0451048-37a4-499e-8405-a61d9f9fce41"
        },
        "item": {
          "id": "e097ca9e-4e2e-4439-b9fe-0863763ea76b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e904dac3-186e-4db3-bdaa-cd48fa8da999",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}