{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "00790bb0-a112-4609-87bd-f4911848a034",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73b86b8c-a977-49d8-9977-0d44211c4046",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3047e6b8-3dcb-4793-9fbf-53e555c27bb8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29ba010a-f0a7-4f20-8380-834e0e69c8ef"
                }
              }
            ]
          },
          {
            "id": "6f403af9-ee34-487f-9512-3114ec60996a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23d498b7-13bc-4f1d-aa29-35e0a83efc0a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "703e1d5e-ac57-4c04-81df-3559f5e396e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1639c817-83eb-4fa4-bc81-b6dc5c526519",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c4626119-b607-40a4-bd91-f09b41a2fd95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d019a8dc-a3a3-4e63-ae28-bdf2173997a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c5e4f5f-6c93-4099-8f13-5220b8efc373",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77b11460-340c-450b-8aa1-f9f47ec80a75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "720f840a-953f-4c83-a41b-c3eb04d7f7d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd188271-9a51-45ba-9815-f967aaee44de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c43cb7ac-4b81-4334-808a-26151b42ed3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e1c142a-8946-4c24-8a01-64615ad1e896"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22858f71-cecb-41c7-a5d1-a046aaa1eff7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2d3db039-41e3-4ee1-94d4-d4bdb80fcd9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a1fb5b-a755-4a1c-8d1c-c05a3ced3b40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7558468-76d2-4eb2-a844-07fb41b64dd1"
            }
          }
        ]
      },
      {
        "id": "cd703be0-6957-4382-9855-47479a95ee2f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "24a4157d-e7d8-4ffe-a949-91405b2b050a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d93916c5-662b-4fe6-a921-648ac27898fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "274f5f3a-4731-427f-838a-9f0ff7dbd907",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3ef90-edc5-4e0e-96d6-4928f8a8d036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96a964a6-fe57-4edc-98d7-aa1f12331f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcd06ff-4b91-4c66-a03b-c435a600000b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe65886-deac-4c80-a65e-d09117d2d699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b899ff64-abdd-4990-9daf-f7515a25c9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc68a746-64ad-4781-aa4d-ae2c771d9c5d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefd9278-3b67-484a-828d-a74dba00e964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55de751f-74d8-4cdb-b619-2d6b2718df9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9c2fb68-58d5-4d4d-b705-d04aa07b7991",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25d0681e-c456-41f0-b886-57d8a3e00c50",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1082516-75dd-4af3-8f69-40308ce59b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31881aea-7bb0-420c-8094-cd40f6e4071b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfdbee3-8c61-46a8-a195-6335a5eca6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e076e9-a9e7-490e-bb10-33825a5aecdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa4db426-72df-41dc-bd91-8aab62e06629",
            "name": "Positive Testing",
            "item": [
              {
                "id": "727fcb6d-f706-46ce-85c1-4789b2767b38",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed96ed8a-588e-41dc-95be-3c01434e1406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d798d6f0-fbe1-481d-8efc-f295d851d235"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08acce5d-7a71-4e1e-a6eb-12a6008fa34d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "05201f08-05fc-4df2-ae9d-a7029ba0d09a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43cd9b96-8baa-40e0-9000-79784943688a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe3a0959-87f7-4baa-930c-6f7dab4013ea"
            }
          }
        ]
      },
      {
        "id": "60cb7964-6083-4615-ae65-2a770fbde821",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "146b4081-07ed-4a4d-b050-df6e8664beb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d74c0244-be08-4616-a298-fde10587321b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e12d88f7-cd9a-4e24-ab04-5587ce06c103",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66818d8a-0cb1-44e5-a52f-db350903a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295a9a63-18b0-415d-9497-ba2c4863bc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc8f3cf-904b-4e50-81d3-c93cd5e02ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cc5992e-f6c6-41fa-9b40-87eb699aae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d94683d-f59c-4c7b-bb72-bb487ca5846e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef743c6-7716-42c2-8343-e1d9de0847ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef9be68-3725-41d7-a463-2eb0fe5c45a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1a0af6-3e97-4c6d-8afb-d843cbfa931d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64f45c1f-28bc-4671-81e2-a505d31a8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a4f66d-ea13-4ca7-b7f6-63bf24490084",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c36045f-434b-4c5b-82b3-a6339be27488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8bda6b-8cac-4583-ac14-e938b0b7daf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d282c3-c494-4386-b2f9-000a132dbc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46119ec4-62ee-4ad1-af82-d9a640aed03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027b1e90-2c35-4c69-935e-24791871f468",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6436f1ca-64f3-4f9a-b223-4fb025c1623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fa9d3e-8fbd-49fb-a3d0-07129975255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6bf3c6-a8d7-4fe7-9f7a-0c1a9e84761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d5b1f0f-fb49-4a05-a8b8-d6caf55f5725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aa3385-7ab7-43b2-a745-039ec7549dc8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbb1958-92eb-4e54-a2d3-be19bd928661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295a72d2-69d1-438f-95cf-86def15fea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d75996a-efe2-4f7f-93fd-f6ff9179a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9149362-a1ac-4f7b-b432-cf3c4b0b7eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63977a48-4def-48d3-acbb-98485e2a1519",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f50f7a2-9547-487c-a7ef-c1b019aaa7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2854bb03-5033-44b2-8e00-da13d313010b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee10794e-6edd-4039-8339-ee28b78e95d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac469c1-a463-4efb-b781-8f3fe81d7669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e010cfbc-15de-4480-99f6-4692cdaa0f18",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d63cac6-bf59-48c4-aa8f-152bc4d8bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef414a3-4096-4a27-afb0-8cfde157b96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fd0df2-6988-495d-b9f0-809d8993f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9282da94-85da-4af9-9d7e-574dc11b5701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694d34fc-41b3-4aaa-8970-79fad5121f2c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea56546f-4ef0-46a5-8511-1c98982cba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee53fc26-8d3e-4cee-8693-2c2489439eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b17ea37-17e0-404f-b81c-281bcc85b38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4072e0d9-f394-4a29-8bad-4e2117392538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128fda88-1b87-47f8-9550-acdd17296893",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35595f8-90d3-45a9-ba3a-4f458e05fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a9981d-3de6-4356-82d1-4634e29fb525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff0aa72-eee2-4b2b-baac-e457992d6c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64e23866-4f39-4097-b0fa-b1f7fd0d23c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb39bcb-ced6-4c74-8411-be01971b972d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61fbb59-0dbf-402e-9a21-b2b809ee21de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adb04ed-93e4-4a6f-a48a-17884b5fd292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddf7d83-35b4-4f6d-82d8-2711ba678b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ecff47-8a20-4fc1-83e7-935a264b9db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942445b4-8bbd-4b57-b1ca-b63ec2f986fc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0a1db-3727-45d8-8599-f9585cb86a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a346f3e2-65f6-4709-bb98-1d4495aff7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b02021-f415-460c-b7cb-867435f84a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4291773-2aa7-4c40-8a27-9a7e61f87855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d34145-3c4a-455d-9d17-ecc840394336",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d305951-b64f-4356-906e-3b404d015796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a16152d-dfd6-4a83-b3ae-a8be979f9dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9217aa84-8c6d-447d-9b8d-fb2bb126a0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76e49cb-9413-48d6-9d7a-40b80383f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3725b8-73dd-4bc4-87f9-8fef0a6b5d86",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eafaa2-4cab-40a7-baf7-fba3955aa6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93206b9e-2081-4e74-9b62-edfdfd07d9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acdf2e7-91eb-4e8a-9ed5-49cffa413f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd2f8f04-ef4e-4b97-b1a1-db6b6b6d99e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a3105c-1e1b-4193-b81f-da448865aef8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb03e5d-1609-426d-83ed-de522a14c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b379a8-d4d4-42bf-9a28-a8d78dc36448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aae074b-cb05-4f27-9ab5-98bba2bf71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a20a0fb-acea-465c-8893-e1522882a6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9774965c-550e-4ae7-b27c-359aec1b19af",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21803a9-7d55-4e65-b7b0-84f458f6b8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3f0e88-fe2e-41c3-94a8-5422eb07b801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b028b-4f76-4c4b-babd-6b2d7d91dbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c472aff8-e1a8-41a0-86f5-39778697c9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2505a25f-ad79-4b27-81d0-fe110eb0192e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2e1d8a-b8f8-4a1b-9aaa-b9e736138b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcfe576-6c60-491a-9adc-d8c19e1b7be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872b79d8-a473-47c8-a96f-b827c99a1435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4b765e-74f1-4adb-a8af-d51f05048698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e0fa41-6846-43e5-8c1a-59604a5b1f64",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b312eacf-3046-4077-88fe-ba1199db6e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da194b4-a066-4721-b188-23ec8a15a741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4158b26-577b-427c-9275-19aa0539badb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73c8a8b-0b37-44e6-84b9-3cba187f51db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9e4ce8-017a-46a4-be50-286d5765ace5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727623f3-a299-4e4a-a0c4-77fe9ccb4464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2cf16d-e7b9-4d9b-a961-149a23e445fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84636da0-a58e-438e-b164-bbf8d5a6bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de739b1-4d41-4cec-b020-40d66ab1293b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f637c7-8231-454c-9d72-d5465c544720",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cd9de2-9094-4c39-9e83-bb43d78ae3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8781741-7565-446e-82a1-813699633ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e63c31b-1ad4-4019-8b88-2111aa8a775f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2768937c-4a27-450f-b5fc-3f57c19b3fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f23f2-72b5-4c67-bf9e-1e288e3f4659",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf6a842-7fa2-4d14-962a-a5f1cc5ec1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2be06c-8284-4871-b6e6-1c9217babd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bf339c-8f62-4496-a091-ac616a700094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d35de529-8269-4dab-86e7-03a2d70a56b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25ffe4b-e272-4701-9a45-2696da2e8752",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11f953-519a-4d63-b560-a55c0f937678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e377f58-0072-4cc2-86dd-260c7bf28f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184fe997-6326-4395-aa85-0d2905159e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ef35a5-f607-48e6-9cbf-910ffcfd8bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b12e9-eaa3-40da-b0ce-3552e14e6c3e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0e259-39b4-4cc2-a460-1b070d23bc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176ea08-40e7-4013-a246-95e4e60bac31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf2ed3-f8aa-4703-9116-765ff6885cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bf5bfc-362b-410e-a49d-88e17db1e018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5136e6bd-924f-4014-95eb-d6b6d0ebceec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce96621-8009-45b7-ab07-c413093be04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6ffbb9-ffbd-4d35-a665-b3929727ebd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51c6a3a-2cbd-40db-b943-936e8ef9dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8811fe-0bfd-4545-9562-d6cbe36a40a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757fd57f-697e-43b7-8bfc-3c0fcf03f967",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ed6435-a312-4ea8-bba1-1f32256b072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79ca155-7eb0-4808-a97d-937ca732ffe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2027d7-e346-4dc4-b01b-7308d665e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad4faec-885b-47da-875f-4feb326d8d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3ca680-6ce8-4a11-bf77-dc58b84ea0da",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc3a9ac-ef1c-4b42-8765-657f985a5606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da67591f-5c37-4c63-83c5-8688ae2a418e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba3342f-3daa-4658-bd11-932860a8b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87dfeab-3b74-40c0-884f-7361c514e784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b700c8b-934f-4383-9c3e-edcbfd72e94e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4afe5-a7ab-4ea7-8f6a-11275e21533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c13ae31-7416-4e64-93ef-767d80bba1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc47e8-cf31-4e8a-b5ac-39edcc31ef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e64e0f9-9550-49e9-af5c-a15f5ad52122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf8d05a-2bb5-4ae3-b360-72b8622090a9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c161e7-eaef-4b39-ba9c-adcd7a32fcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea95b416-6e53-4c7c-ae69-0b21e2c06545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc2d5ba-042e-4823-846a-13135de52cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c087f7-0dd6-4ef3-820d-2736a88cb901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586e44b-521f-4c22-9ec9-52e28adcc9dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5568e82b-b8ec-445d-9b1d-377f6a3bfc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e391b01c-3025-437c-9134-4215d52ccf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a146d3c7-ba1d-4766-a1b4-d00d51b7ce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2035d8-0259-4e97-9e35-0f909f944d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1994d33f-e77e-4e3a-90ea-8fc15ab9bfff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d266fe-bae3-44a6-a7b4-c1cf37e3b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549066f0-d1c2-4aaa-8d30-0865c814f977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaed3233-09ee-4107-9735-2caf4517c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "443644e0-20f5-48e4-8629-27bc0b2bd07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20942938-6c73-4cc0-8f97-6381ede3222e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30be841c-cf9e-4aae-a997-ce6c9b4c4af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecb6a5b-f6ca-4509-a77b-c5b5b50719a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b00543-b39f-4b05-b4b3-a39a44594512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7824aa4c-9b44-4726-8bbe-fc273c8c7c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5f4e7f-3f00-418b-a299-273a1ca15fda",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94519b3-5bf3-45a7-bd21-702b18f2e842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af651c0-776d-4175-ae8b-0c4695b247a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb245176-4c61-48d9-badd-19685be36ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64d5cb3-49ae-4463-8ac2-6c58b646b09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9fc68-1f2c-40ae-a601-1debeefd80fa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230710f0-be69-47f7-9907-97b9abdc5851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d76a5af-6e70-4d00-9698-1a9b5ed7ce71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19997a06-29f0-4c3d-b000-f404e0bc2d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf86f6d2-39b0-469a-aa49-b4c917359804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0255b1-ee1c-4c97-88fe-6626d7b939f8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d26d1-4bf5-47f3-97a1-03a220730774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c17cd8-66a8-4202-95cd-28ffa0600401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4618d933-22c9-4a71-aa3d-46eb1b63bf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecc51b2-6e5b-4e63-8a1b-8e43ec32b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa9101-92fe-4c24-9ea8-f4bb75cb5ccb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e2a8aa-c151-4753-b874-80c08383163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191781aa-eb83-466b-bc07-35cacd862759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae07c62-1dfe-4461-bd00-00058206b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cd6deb-eaa9-4aaa-8913-490f3feb4fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbfc88c-355b-44d0-a45e-897af0fc22ba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb017150-45a3-41a1-b1a8-baf7aecf9f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e8aac5-f629-4e76-b99e-1aa8038d0153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46ee536-6da1-4cf8-aa39-58a22edecf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "98027708-c839-4ef5-9bd6-abf6c889151e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0071de-5a2f-418a-b277-36411226d569",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078e9108-ed12-4ca0-8ade-4f16abad6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4473e219-48a9-48b5-a88f-7f1ad4adad96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69920def-e303-4df1-acd6-5f56d48f5957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2413db-fdb5-44a2-8526-7b47157e11a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f37691-25d6-4332-b02b-258a69608c49",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81362777-510f-41da-a43c-6834937f2d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677dad64-1c04-407a-8b34-f9c984e2f1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af1e2ac-3467-43f2-9e54-d3bce439f099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda6548e-657a-477d-8ca9-991e2e1aaaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ff8e46-6715-4e83-974a-3380ff574a55",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc04d0d-851e-4e62-9786-1f6f9f17ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619622d5-a5c6-4eeb-9665-9cf4c31072fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5739e8f-149f-4463-9ea1-0da495e5b7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97a28063-2b40-47cb-88fd-a6647e3ff9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357ddaf0-a08d-4634-a406-078553c92bec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf6749-3b28-4cdc-b5a3-a9615fd2beda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92890ff8-b2b1-4bbc-a204-afa3d28ce1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5f3deb-b1c9-4684-8dbb-6b6d7ed7c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3468c4e-e661-4b46-83e1-2e24e4f6ab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd6c648-c8f8-4db2-8ffc-1064c3ce5542",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35797c6c-738d-4947-8420-3f5cd8365d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c940492d-843a-453e-b825-9f7fb578965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c1e231-e718-4fd9-a374-3ef6a3e7bf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9c7b88-8e99-4119-8b73-a6afa48d8cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662b4ec1-6320-48bd-92e4-d3eccc5488ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07e292c-54a7-4185-89e1-5a125e422223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82f4130-1297-4ce7-a506-3283d10cf3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38af72c-047d-404b-b89b-6e61e0e959c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59538a12-6e22-4a41-aa66-0250e264677a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893b9a49-4e4d-43e5-8c93-ad7f6887061c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da73c68d-3ed6-42a3-8d61-84add4da319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ddc0e3-2706-49a0-8297-96921fb66b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76869d79-07e6-4195-93b8-412bff858706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bfce61-75f2-4fc9-bbd6-a37a7b8dc960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5ae3d1-5d63-48ec-a6f0-2596b90321c8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db00f2c9-fdb1-4cd6-aae7-9f8ed7451803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d086e9-0c78-4149-a59d-014c45beb2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5052f8ab-807b-42b5-8836-477e7956f23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e91e9e3e-4b1d-44c6-9912-556ca043fb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e480cc36-d268-483a-86c9-a99568c1b1fc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc625fc-8597-4884-a781-1eaea8b8c7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeeb934c-8749-4453-88b3-fe26977c51ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e223db1f-04bf-4ef7-93dd-eac5793f856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5917504-86ba-48bd-87a7-6bf379a1f242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2bddd2-0560-495a-942a-6b46c9bb6f92",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e75b8eb-ef55-42ca-8f2a-bba5daf50f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ce71f3-a8ac-4299-a384-29056f477926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2324469a-7391-4fe3-92b7-0f4afaa5e5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba42619b-ea4f-40d1-ab62-6f79cb6e676e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d373fec-e412-4687-92d4-f5b8ad04ca75",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8d8e30-2419-4fcc-9639-16fd80659639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f25739-3308-4472-9845-288537924452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897eaeb2-52b3-4602-82a7-8e43cbe527e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3eb542-4ad6-4d59-8936-0ac76280664c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c1e546-0bb5-49ab-bd09-5895361dd8bc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ab5d61-c442-4cd8-9fe1-c6225bb69214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6dcda0-edbe-448a-aec8-51494d0c6b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c8031f-db47-4c40-bf10-dedddc7c342f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f3bf0c-3e65-4965-bd58-6131ff2765a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9238f7f3-e08f-45e1-b86f-dcfdd6463c2c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd029404-47c9-40da-8aee-d7634c84d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04316b92-15fd-497a-bc92-9adf787d35ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e4643-012a-4890-9d1c-30fbb96743af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "969526fb-8941-4c79-9bcc-5498584fb21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b38cc40-49d6-482a-8d09-0432f02d90eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f171447-b15f-403b-969e-d15364393ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c31ec3a-4dc6-4fe7-b81a-b1758f01e223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70a3ad4-1280-41a4-90e0-8288d8a925dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4da160-1040-49b1-b4ad-b5fcd2e8344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ad0228-13b2-41c8-98b7-8f011ff272cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6debe2b1-1dfb-48ae-bb30-aef0bda19171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90339186-ca85-4476-aac9-0fd7e4d17086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd607f9-e0c3-41c2-a0a1-59a7d3e01eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c28f40d1-c263-4991-8289-f080f8499531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a385817f-f05d-4024-a579-2f6f012e276d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ba5f8d-e046-4ade-8ee2-a36db6c4eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2760709b-a087-4ad7-8374-bc5923e380f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978ea8b7-ed19-4b84-8693-30f56cc8ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d23200b-8901-4193-ac9c-a635cec93152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b760fc-cc87-4999-91bf-2bc2a5138115",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a76476-5403-43f5-9d85-ef9c85fd4879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccc0904-94eb-432c-96ed-29efd1edbd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06811f62-ffc3-421c-abb2-6cfbfe7fbbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ff0374-ef8e-44f8-b5cc-09b106f5a33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6756f67-4dc7-4be1-b758-f87a2bd4ab27",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972f1ac1-b600-4008-86eb-946f1f800a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6f132b-08b0-4afd-a2be-9cb6d6a7e90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eee6e3e-c779-40ca-a234-027a75700799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0785477-6027-4e2d-834f-cbe0dd68195e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77579aac-d871-4f5a-be99-dee156e2b794",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8775c-7366-4300-aff4-777b81cdca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9727d6b-0d12-4c13-baf7-256344c95015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce968d3-19b0-47f8-808a-7796b92445bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50bc5fd4-0186-4bd8-81ca-853123835b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0543582e-9d76-4d8f-acbf-4d0112174608",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c03de4-8372-400e-99e5-d40d30275e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482cb23c-37c1-4eb9-adad-c9f6c53f7e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6727ea8c-9717-410d-8198-29b2dfc1bbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc7f8e7-d1c9-429b-9550-afbf8e3cc9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230e7f98-246b-4926-87e3-a28a792c1129",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03deda9-2482-465c-8adb-f1e5bb76ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ec55d1-febc-4cc3-bb0d-264050f7ab31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc0c954-e0ec-405f-9d39-6175c82d34bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "55fed150-6072-49d2-996e-55b0129983f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0af7091-bc1b-449f-b52a-9144b919127f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df57eb36-e812-44c5-8251-185ef28adf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f69a60-f9d3-41a9-acf5-fbe34493b487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c67915f-5158-4c30-9147-87cac144143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd20cb87-bc26-414b-b9c5-afe3a5abc1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85dd184-6e8c-4fbc-8815-4d8036f22e89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12e00a9-3184-46f0-a849-444880ab6552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b27f589-1419-4b98-8c81-24965307f258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e2acdd-267d-4bac-991e-d68eb706b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04b0f3ea-d576-494c-b808-226fc10d68dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e0b2a6-217d-4f4b-b2ff-1a8348b8253a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a41a8f3-6f54-4d6f-a304-a1788d3392ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f997f4-9782-4380-a0fd-dbfeade9252c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df939176-3957-4340-8999-304dbac60c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d442fa7a-b522-4aa4-8119-1326e7a398de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f87378d-3f47-4234-a648-0857ce770093",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70012b20-ec20-4496-9759-630137ee1539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f39c9e-8704-4c8c-a70a-9297787fa806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6939cf-1bf9-495d-b102-68c53dff9bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58c6ed85-8766-490f-97ca-0d0bdce01f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85fed51-420c-481e-af61-c15e02ff6f0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efdc2a5-798e-46ca-b7d1-cb7a20eea85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f494d245-0f9b-4245-857d-298e58b95c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc853672-24e1-42c0-bbc4-1aa978bb6763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be6ed7d-27da-4328-8e6d-2b648a1fad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ac6c6c-59a3-4e7d-bb8f-e490378f799a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2380f5f0-ad01-43a4-8891-cd7975a57c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4759a-f0a5-4820-a77d-13efebe21432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3063d7c-c1a6-42ae-872d-26933fd94ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c789906-fd42-44ef-a36d-5e01e2191bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fb0b3c-58c6-4001-b3a0-b7845afa5c09",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e296371-c3bc-4b85-9fe9-6c3e6d6ac795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbe8d7d-a454-4295-bf8b-b5b672eb8d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd7f629-1c87-4aac-ae3e-423f8118cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a640181-8197-40ad-ba8a-d7d3c6f69868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0587b32-e8bd-4a12-80ec-fb7ef308d1d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47651aef-2953-4cf8-a00e-c96e67ee0a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10092468-23eb-4fca-9094-b68abe6308d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059fa55-8f75-4597-8b27-6381539e658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d330cbf-205b-49fd-b741-dc6c5a0423f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dd7302-b3b5-450d-99b4-dd4bf0edc0bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b371201c-cb6f-41a2-b4d1-ec2f7005e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c312e5-57ce-4e21-978a-bcb08b837c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884b639f-4d8e-4dbf-8386-781a39693e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d66a907-f12b-4f70-a4f8-a9933fc65b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8aeb23-25de-415a-abf5-b374ffa3ff97",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb3927-3673-4202-986f-f1c35bb90ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0fa4f2-ccaf-4398-932e-a798d9191b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b172ad5d-3cbf-4c79-a204-b65658a5bab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3603fad8-43f1-4a4f-ba98-24994194399a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99c2b89-52f4-471f-bc2d-e95a0aa2cdb9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0114cc7c-5786-4bce-b160-5cf5c83a28ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fe528b-090a-4766-8593-8cc5579b2168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924bf315-bb7e-4ecf-ad1a-77949599bdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56c5bd11-c593-41b0-b6ea-7c0eddf5b92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ebcbd1-2612-4d99-a73c-41d7dd9a9e35",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a39920e-b86c-49ba-a2dd-ff43b0531ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce70171f-34be-41e8-9eb9-dd6a7db84922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807f746-e850-4567-a794-31b6ba5b26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e84a9d1-7781-4731-be5d-0ccc3ff92d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbadbad-0e31-428a-bcd1-aa85b1607745",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e353aa87-4e24-4132-b05a-6a974b089ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14182af-d31f-4997-bf97-16450de2a843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f08e61-991f-425b-9790-992e0a7f3d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfab1858-9d41-452d-8a4a-c4f3c8c0c7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e4d6cd-328d-4a99-ba6e-bbc573c4a3d1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bbd2b1-22fd-40eb-a972-4c82c3a3b6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f139727c-5ed0-4b06-89ea-b4afa47ea2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f6fa3-9e05-4063-83eb-9cf48911a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a24f51-0121-4a38-ad69-97928184efac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dd9216-420f-4485-a26b-d41c844ab76a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6dc375-edcc-4e06-b909-e3f5b674e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cdcbf6-2a74-4c99-9b11-ebffc03f313e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757c03dc-2ded-4eae-9562-ef8516b9fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6536a8-ec0c-430c-a2d6-0ba51e8f52b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f2fe36-e604-4bf7-a95d-0409af456949",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ca4e09-c520-476d-9d29-87ad450bcaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469dbea3-b6d8-48c7-b97c-eb8d4f27fb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52cd5ca-8193-4c0e-a843-c48ddada7d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e7366f-6ca5-40e2-aec4-0ec558fb77bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc81f592-6df2-4808-a29c-2a94f0229b9f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab6053-f3d1-44a7-8c79-5a587dffaf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f76087-2c1b-48a2-836b-1fdd4bd86f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9c8bc9-9085-44bf-9fe6-8a86b4f94bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d82c27-8b12-4cba-9eb7-b85004e4db4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105e364a-7e1c-4655-b0d1-96fbb187b883",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9da2f44-9bda-4e49-b5d0-04b1ad5906e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561077a0-3509-4d18-9795-d65ebe14f70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b338706-b89e-463e-a539-21ab73350754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "661d8b75-32fe-422d-84c1-987b995ab97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc66aeb5-01db-4e05-8ae7-8f1e9baa179b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9881d08f-1a72-4399-bba5-54a264865107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de4e9ff-c6b8-4616-bd30-e5050e0064d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e826594-3a66-4605-88a7-a263ae195fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a92e39e-f9fe-4070-982d-f1f109699d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58613154-72a3-471b-8145-6f9a8e3be67f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5217cb2-ab77-441c-8214-9aa17d0f0719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2013c16d-56eb-4a2e-a12a-0692cc544f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f260f9-c46e-4f02-b56e-1f069657db70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd20c9e-bb2e-4d84-811c-7d64fdb5c3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289e2937-8982-47f5-be68-8da0dfac17f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f5eedb-9b8f-448c-a254-41dd4ca94e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab14b8-27cd-4049-bb4c-8985f7cee6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963b952a-b53c-4aac-ba07-cbebe5f6aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f70f21-2c2c-4ab5-a2df-227d6acdd998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba0947b-1eee-40cc-a7c5-9d4b8e20e15a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e341746a-e0cf-4cf2-a613-39d321a53466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a254891f-2312-4ed6-bde8-ece1c4da580c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a818af-f7f5-4943-aaea-0f97e64fa4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8178c1-db11-49d4-8252-3259ed2cb048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8347fbf9-3cf8-4fa8-a6ed-378dc99f3f73",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3acf186-41bc-4a1e-b0e2-4966342edf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df28fd6b-244e-44a7-854f-733d3a1372bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e3aa0a-6bf2-4c15-9aef-47df558d1c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64723856-7a18-4619-b6c5-7c646ad9d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36108dda-e3cc-42e9-9956-001f848042cd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c5029a-e657-45b8-a561-0881ac234652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38779742-9b4f-4cc0-ac95-b730e515b087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6015bf-0544-42ff-9d0f-e5af9d80d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc2b457-1266-4537-844d-6c9d7c872166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f45635-9f68-46ae-a1e3-684f8147cde9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e124bf7-84d9-4e8f-99d6-7371f40c898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3083a527-9524-477d-99fc-13898a159fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec47c5d-7434-4dce-bd46-b39c9adb8404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eecdf693-98b4-4834-9bee-2737a6765bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b654d-de29-437e-80ef-f344da81c0d4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3662d59-a1a4-46a8-bcfb-6cd12ff0f98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe4332c-f65f-47cc-aaae-589c8e5346c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f598ace2-2f5f-4e24-8f73-9203a30ce261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f948b0-2ace-4bf4-89e5-991c07a8f4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896e4ecd-1bd9-4cb9-b719-25f83c80c398",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f15af2-548a-474f-af25-211bcafb497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d22df0-9537-466f-9f48-8c3c838580bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa2f07-514b-4291-b902-7fa921399a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07d48d2-c709-4eb7-b50c-b90526953c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374932fa-33a6-4b27-952f-6774cf28d25d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29467187-6f14-4c7b-8c75-10c6ce1ef1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae910ce-6ca9-46c9-a878-b89688d7ed0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205084c3-4c60-4f35-aafc-bca5414113ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d69a6b-0be1-4ea3-9fdb-8defcaea97e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d60585-2183-40f1-bdad-0e0226008195",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0bca9d-85b7-4bbe-899c-cb3cb3bbd314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948a193d-129d-455c-a003-f49b526788de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c318eb-07bd-4132-a588-e1cd0d31fe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c47d63-631e-4edc-8c3c-42e1040619dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2cf9c8-c797-4be0-9eb0-6a2b39040b3e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e343e099-8221-4c19-b53b-122e4a14a61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8baae2-b363-42cb-9b65-d96568bfb5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af03721-a6bf-4dc5-8fe4-ebb40d341400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8039eb54-e0db-4ac8-bec9-a98d9bfbec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c058bfb5-5934-48c3-b578-efc5831b6c2c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b79c0e6-8324-4fa4-81e1-70608ef676b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab758d9-f08f-4311-8b85-6838457f9f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eb8841-dbc5-4493-b378-e1865a03bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede18514-b904-4fbe-8f19-f21bca24992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667e9538-b47e-458a-935f-7db574b2d7e8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5412f94f-17e1-48db-ab12-8fc5556d86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e706aa-872b-4fb8-890e-51e7cdad197e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8588d70-e0eb-4058-8e9f-7eee7a00bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bca6fab-b002-4a26-828c-793d54a34df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a25315-9209-4060-b0ee-67ebd9fc134b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fd0681-83f6-454d-8940-5ea822addc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71660fc7-fb92-404a-9415-4b1542853f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9399ed8b-12a0-4a72-bb34-dbd894719709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2b2eb1-2d05-43d5-99bf-41622eb46227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92beaba-a39c-4334-9e17-b6f4daa6fa4c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a35628-197e-4fa6-98a0-9e459b76d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29452e27-8d6c-458e-a701-7df4f689a081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8afc7-8757-4de5-a080-8561587e4eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e198f25c-0135-4982-a389-f7e515d67e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ed57a-04be-4360-b8ed-5ecd45157214",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce08efc-11e3-469d-b5c7-d1300c1780e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766abf9b-c187-4f66-8599-d841a039c0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03faec5-8cce-43bb-81b4-97ee2eaf2b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "396c3fe0-916c-4daf-aaba-98ee08cee507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4d928b-4e88-4c29-b4b2-2cb4b4f8fd9a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06110b55-7675-4aa1-92d6-a17ebaa3855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5d8d825e-325a-4f44-8c2d-239c2e93ce77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000f0c4-a7eb-4cae-82d1-493b0b34be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c21bc5de-1eb8-4114-88f4-fa66a987af00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d80e876-cf32-4f64-86df-296aaf928b1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e6ab814-2d8a-4f24-a3be-ce5f8e9a3618",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82fdc15-8b46-4939-a548-d7865f9ff3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db8093b9-7c82-4397-909a-a2c444825e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c23ad-2a0c-4a7c-87cb-3d88a68fb30a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd960160-aa2b-4c6c-b2ff-dbd4649605c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffe8636f-3a89-454b-8b87-6c9aa22e3d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23e75027-6067-4729-914c-4983ae98887f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "269a1d08-c140-41b1-8c02-d184965abca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de7f7d2a-6894-42e5-bf78-b26bf973030c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3808ec7e-6d6f-4168-806b-b9315c4ab777",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23d37c77-528c-4a38-8886-150a9c0e2ade"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7a78ec8-8f09-4bdb-b7e5-04f7d850c420",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c415ae71-56df-4a0a-9be0-f93272538933"
                }
              }
            ]
          },
          {
            "id": "cc5bfa33-b14a-4267-b3d1-b583a45b21c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fd8b9d3-055a-4038-8776-4a46cdd4083f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2b82cfae-e6ef-411f-9c2c-cbc48edbce44",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b5ac36-6ca0-41c8-9e4b-e379e5b48ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa9f0b8a-b291-450f-b9c2-c5da6e6353c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76bf560-4784-4bff-b105-744ff323016f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f904aee-0b16-4053-b9d2-8f5b1e28daec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11e0912c-09db-45f6-9b34-9fcfa9b023ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce88c50-46e9-42ca-804f-564812f9abf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95b6433f-ae48-437b-9391-2bf42072945a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3024b6c5-cbed-4023-9c24-3e8b8b3ee8d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95714897-f489-4bae-9e19-1a2c782503af"
                    }
                  }
                ]
              },
              {
                "id": "01d4864d-ee55-4838-a23b-84f73cdb4f5c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1567f3df-0cff-4919-8aa5-03969e876eb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8abd6b4-2407-4147-a722-8e5c8430670f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b09b5d6-c098-4b6d-bd67-77a628dc1211",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f0c58e1-2f42-4707-bb31-66776a8fca37"
                    }
                  }
                ]
              },
              {
                "id": "2af1cba0-6e94-4379-8f88-21ecd4c7f067",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea13379b-128b-403e-b2b5-3d7479f4c0c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38d0ef74-e405-490f-9778-a8290cfbf01f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17a4a698-6b2a-4ef7-b1ee-2355e71ef2b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "960a14cd-1a99-4206-9dda-89167098788a"
                    }
                  }
                ]
              },
              {
                "id": "9b154994-0002-4908-9b3d-203e473ae820",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb27a59-b057-4bab-aad0-ca9ee27a1aac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bc97783-1811-4c8a-a00a-ab2de6c0ce8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aa9a0ee-41f1-4451-a441-bf722b5ab504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c5ec7b11-5b7c-4095-ba04-463757651f7a"
                    }
                  }
                ]
              },
              {
                "id": "1dfab19f-50db-43a7-adc3-53af8a00509e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75e0ec01-2222-4e3e-866a-9e0951f0e833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19383130-edc6-4177-966e-8986d230c181"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8954d99-e4c5-4bfa-bffb-bdb78a23db9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4c4ad99f-3c3c-49e4-a27c-a22a127cf31f"
                    }
                  }
                ]
              },
              {
                "id": "61e63e0c-06dd-4336-92bf-08df4909e1fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd5a567-2a8b-46b9-99d7-3c104609f77e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "574acc06-21ab-470a-adaf-56633d81f7ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba225513-e3b9-4496-91ae-5aaf9eb448d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f62d122c-16e9-4fb1-ba17-6dc30e6578cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbde6a5e-9086-4d4a-b67f-f5683baebf33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eec1fcf-d508-4201-b252-731bc1d75e6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d8fe229-7f31-4b71-a55d-c5f4ac934138",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb3110ea-1375-45f7-b533-a21313eb1171"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0a1d4ba-60fc-4773-99a8-154f3718d926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "698cd6b9-9927-4fab-8240-3dc9500805cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8838b23-620e-497e-ad8c-166a64cdf407",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0e21512-6862-4149-8367-525a0605877f"
            }
          }
        ]
      },
      {
        "id": "eaf45c48-5d01-423c-a36f-7c9a78d8e5ab",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "241e2ba1-1a94-4f35-ae40-7f42f420d50e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d01239de-9cd0-4f7f-ae86-196c9dfbaccb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98880c0d-b75b-4870-8633-c27aa4c7805d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1926dd-1cad-495d-8422-cbfa30e0c627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870138e2-6863-4d9d-bbee-172313b5f60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b376b0-a3d6-4de1-bb14-a3cecd98739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4518591-c6a0-44ba-a6b7-2a5d30eb9db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2d88e5-51dd-43bd-a87c-081b230ef113",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417cdcfc-3e21-4c33-bc87-814a7dfda8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835d09bb-bf93-493d-ac89-7d853e283a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65a1169-eb14-474f-a61f-dfaed7fe7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "716ec08a-685c-42a5-bc62-59ffd8f7a960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28954da-d8e5-4fd8-aea9-ffdaefc2677f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575cd08a-7108-404c-8a9e-4b3f431fbd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cbf044-70a4-40af-9d32-e225d4ee7405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab07f6a3-b062-477d-b0a8-cd536a8fdf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb1ebb-266d-423c-8614-964218f03301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f666ae30-dcdc-449e-970f-8f8e7d9ab9de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82934531-9e8b-474b-948b-4c56971d0458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b604f6d-e65d-4a42-b1f1-b0583fcfce40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b3a40a-c80c-46d0-9809-83b5e31c2a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0080d391-61dd-4aa2-b9c7-f27f675bc769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362187b8-59aa-4da1-bc85-4b5c3c4338e4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e715ea-e479-4e7c-a81c-23d27ef9efbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7b69d0-4b22-4832-be2f-902973856a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a56859-6ee4-4952-ad2a-3f2038bb8f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "648c816b-8ef0-4a2e-a558-3f2d9b2ef014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f339db18-cc5b-46d1-8915-d6750a9fd945",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae258cbf-c157-4a5e-9982-4baeba4ac371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d93d23-2881-46b3-936a-801d6aff63ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd69371b-0f27-4823-b729-a883d8eb453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ef60b2-2d36-4f0e-89c4-8b522b534ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0357bfa5-8001-4171-ae4f-d25ef26746c4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a798dd8d-aa89-4c0e-84f9-3b0331c920e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa48358-6eac-478c-b1b6-327899899ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3801086a-1721-43f7-b0dc-152f7a9fb19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe98248-685a-4142-97b0-cdf4641a3cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a409f9-5aee-4c0f-90d9-c5f851c5d918",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4581dc-9e9e-413e-874c-ab155ccaa1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be4b937-b6f7-4852-bd8c-f38c00c997e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2b543c-c86e-4909-b282-0f9d28021885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ec9307-74a8-4e20-9b92-6945fc7a7506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb0b984-b799-431f-83f8-e1887255b9b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58aa009-4781-45fb-a716-a8bd0f402351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6938f1f3-570f-4e01-a02c-2e745dbf28f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09e15b-f23e-4036-81b2-eab10c287a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0147508-08cd-423a-ab84-b296992c1e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68afaafc-eeb8-4d36-bdc8-b178f8059a70",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdff614-b058-4038-ab6e-8c8fce66d4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09d4986-859f-4bd1-ba8c-197603b6e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ce0f96-d689-40d1-adb3-469c9d8fbbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdce3bd0-a59a-4efc-9786-8660be32a9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1006ba63-480b-4f2a-b7bb-02cc437a39aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4840741d-2395-4da4-a108-cf551e23ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9644bf4a-a6b5-4316-9a16-12d835843b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b57875-0b46-47ed-8ba8-36826ca6c820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f90278-9133-4546-afc5-973a32bc12c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45b072c-52cf-4161-8c4d-d6c1e521446f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f3709-a70b-4f82-b791-d3f6951b743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3c86ba-5186-492e-8a56-361af85afc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3119e-42d0-4d28-a345-8142068a0d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2688a414-5fc9-4abc-aca7-91fff40439c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9a2061-8ba3-45f6-a6cc-f6cf37842494",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f48b095-8530-4285-a252-abfb488d005c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79638345-6ebe-490f-9fa4-d8ed4452c0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8f5624-ee7f-40a7-9137-eb2f2b2a1118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b86ccf-b8e2-4a08-a1d0-b826ee47c056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d6c9fc-015e-495d-9fc8-0f9ee7514489",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5192a7a2-9fe2-4513-bc34-fc43ec8afce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9924aeeb-5d63-463d-809a-ce1e4aee2978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48456a8-c70d-47ae-b873-aa2f5cab0516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1022a985-806f-4aa3-a725-c02381430f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee54019d-966a-4526-9801-e97df8aa95bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abde694-726b-4c38-9b9c-a23b171b0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993f55ce-dfa8-46eb-a43c-b148d6699b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd50559-e207-421b-9cbc-b455a1863b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff7f864-c8f9-4761-ab4f-311507576364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6fb3af-2d29-4349-9087-0156d511201d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29325092-383a-4f53-b6b8-cdd11868a872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28821091-fa75-4886-baa6-0f6b5ce41acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad9f998-9fbe-405c-8ead-c0cdeae7685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b91501-a3b9-4cfc-8df5-af131ab4bbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d71240-12fd-44fe-874a-78bf618a6218",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f19378-2888-48c7-af1d-31bf63e363c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d386e068-e723-47a6-95c3-2255dfc18df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4491e4a2-127b-4771-b523-17ece518b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92490f4a-b6f6-4b18-9e3d-795f457da6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2632067b-eb03-4167-bc8d-68ee2116e256",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b23189-ce3c-4f71-aa4d-b9fd651a6e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21fadf7-9bde-470a-832e-be71e26ce6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8e5dc7-40be-4d16-8557-5486c934d8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44da18b2-b6cd-4f2e-b235-c8ac69f4d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50958cfc-f7d7-48f4-980f-b449499c17cc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5aefb2-f1f4-46b2-ad89-678bf7870112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b63035-4804-4284-b83b-6fca4b5c08b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d29a8a-d561-4a4b-9e3e-6c9408dcdfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d60c33-c0d1-45c5-9ad0-e4d167cb2efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41fc8c5-14d8-4473-bb3b-57087005dee8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f061d091-f5eb-4d24-8dfe-0ff01271dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa4ab1e-cccb-40b0-8d22-1d01c7ea0fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75cfee-453b-4038-8915-ce0ba407a0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f99835-ea5e-45a1-be86-d6c439f492d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fae8ec-2e17-4149-91f7-7f21080cc314",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee4386c-5f29-48b4-9951-7ca4ba94b9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0ecd2c-65bd-4798-b4ba-a504e20c33a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84353d44-f816-4e0d-b722-1aa3c479a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b583e9ef-0254-4efa-8ec3-b4efa7372f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8034312-2a1b-422f-bb48-4729f00161e9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c719cd5-7a6b-49e0-97bc-f01e5e477f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec60a3b8-1fac-44d4-add1-e327db13e0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e97faf-3a88-443b-b549-b6ca678e1554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978e32f9-b7f7-4a7a-911d-9a6b425377c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37276aad-c9d2-4b47-bab1-f97762c2ffd0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e2ddb-7777-4871-b011-20c4b15cdee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7851d74f-6b4b-4054-ab2d-38195ad69d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbd6bb0-c440-42a9-9344-ac0d67749310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f270cc96-9e6b-4dd4-b219-2ef13bfc983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a93beb-882d-416e-9ad9-e6d13d95ea4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05553c8e-be8b-432a-ac4e-d84ba2823034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3464ecc-9cf4-45e9-8dce-1da6b9b620a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a744ee89-e6ba-4c36-b887-5b612c006ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6133fea7-0181-44b5-87ae-09b8dacf407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cfb019-b74a-4b46-8989-059a97ad8166",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b4de9-99c8-49e3-8710-50ab9aa28b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee657821-8e66-4a14-a882-da171567a0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286701c6-05d0-4b5d-adbe-c36b954e2b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c373a1-e1c9-475e-8a7e-7c940a83b442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1f3aa8-b2fe-4d82-a4f9-f5bcfa393daa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20728b95-2e60-4518-8935-12f67ba53253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f28b1d-4931-4f2e-853e-8f7a893bf1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b249f-45ef-43e2-abaa-a46e61c26941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "380e488d-d36d-46bb-8b6e-3b9a848f3220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72416a28-b14a-4827-bb6e-35b47bc169f4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee900b-93ba-49c9-bf6f-91d557e85aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff943456-27e2-436f-baf4-2da324a88628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677f2a2b-ed8f-4859-9ba3-3b7c735257f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "977e5223-9ea1-45fb-a7f2-52d336dd0e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7a1a22-68f3-40d7-8458-907ae27ac4eb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd423920-c8b4-4c1a-aa32-fbffbae26aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c36f16-83f3-4b9b-8a3d-b4cfa2695b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f23497a-8f2f-468b-a8a1-48ef1300b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5deec2-f5a3-4981-9915-47097782606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d32c9-cf38-4fbf-9d5f-4bf0e9cd579f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88648d3e-9113-4720-97b5-ab663be86a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a1a53f-c53e-4e84-a410-489f02f66c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f80945-e4a8-4931-993a-cefc875bd0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ffba8a-deb6-405c-89cd-35165100d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e735034-cbb9-487f-b57e-2e23dc992ffc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1eb6ba-6692-4671-a92b-bc0c0b92f7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a62da3-e737-4dea-9c49-1cbcf0243b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283ba8e0-3ade-42cc-8a73-8fdc378f3885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "126f6d85-99c0-490d-bd99-4c16f9d129bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f9013c-3c1e-4fa1-a396-eca82dd471e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16021ad5-68f3-4670-a70c-c2a894e53b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da215032-bcff-4c4d-9602-50118a2afd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f623e-3de3-488d-aab2-7fee8230e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa69331-0780-4b1a-8a74-935b14122b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427b29a9-8a31-476a-9426-80bcd8132d53",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355fc637-8476-4360-9c7d-649cdf29fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599eeb8f-a43f-4c7d-bbdc-0aebb88751e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea9ad19-f02c-4ff8-8c7e-02eec0f96318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0253776d-2456-4266-b868-c27248bdd8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fed18b3-bcf9-48fc-a9a1-54a2ed96b6cd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fccce6-576b-4072-bf22-38debee75525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4194f104-5a25-4a1e-b746-4c3a47ef4e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb0f574-dfca-431f-8841-e8c846fed796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f302933-e838-4e7d-b412-c3f89dfe8bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a4d71b-35a0-4caf-83d5-c75b0a7c1c0e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72789f45-99d8-4516-ab1a-0738fcbc727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e67030-64e8-44b1-b7fc-81475bfb430a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8501055-0712-40f4-bebf-7ba634367f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d2ab9f-fd8d-465f-a875-7d5183224aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac31d157-a20d-4280-906e-bc1285f38d76",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f4ffdb-3526-4bdb-b513-af5b9b8263df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205df1e0-6e5a-4297-9cd7-f115608ae65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a08b386-5fd4-4ebd-a1d9-f3f92d4f8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea29f7e-b2c5-4c90-a6c8-d7259276243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e60943e-c568-465c-bb32-feb1843945dc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de1921f-3c5d-4671-b67f-12df697477f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e109d1-d634-4f63-93cb-a04b5866017a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e201f-7ad0-4e23-91d2-1c60a9c3db36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5c3b40-456c-40d8-908d-fe6bab1cc027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7856cf-6ec0-4280-ac38-3865abc30b36",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d332c700-0570-4117-acc6-dbe8e1bcb905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9808dc1-3e07-419f-a9ce-dcb3defc98aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601583d4-1531-4073-9d6b-f7ee17a57b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bba377-6a02-491d-af7f-c2bad9a09230"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3070cd5a-d4ad-4bd5-aeba-8db943e29ee3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dc6bfde-f367-4a73-8caa-e7a25a1e89ea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86550465-fb18-476f-932e-7e4c954dba82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "420f07e2-fd81-476f-884d-b0de5d22539a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89106de4-0a74-4b4d-8f6b-9f14d61587c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ee40f11-ddfa-492d-9db8-fcdcd2f893eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38940a63-b091-4bf6-80cb-968c9e5af1b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0bb4ea9-af8e-4d56-afdc-59ce461c0148"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "429c410b-1a69-455f-b1c1-ba975c4ad16e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "563fcbb2-cb38-4142-b8ee-22763ae68392"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92a9f2f8-8ca8-4840-a27b-6a6b0dfe0c49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b861d75-52b1-4bca-aa6a-8602ccf746c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "743222c6-d67c-4e99-ae99-0477b6009f7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8689fc9-fb57-4de2-a7e0-ca86c5f162ab"
            }
          }
        ]
      },
      {
        "id": "5b7d221d-fcc8-4d08-baa6-76123aaa574b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cad05036-71e1-45f2-bb01-70adc834346d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0743b965-db52-4772-88b5-58572db3efac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fba5d1a4-c76b-4d8b-8c19-280b4409d1cd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ed627c-396a-4016-9f9d-30cd19202595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb340d2a-4f8d-41a4-b7f1-2f7055de07ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d082ce3b-d016-465d-958c-68ae8d48f8e5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debc60ff-d80f-4daf-b16a-ca7a250ee047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91421fc8-85ea-42b7-b15e-b5327f1a5920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed9066b-732b-4cc7-9a8a-7e5e4776ee78",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92b365f-fbc2-4ccd-801f-ed4c321a8041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9520a42-f585-4995-8feb-6a571196c74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a2f1e4-a04c-4876-91cc-7da37fb8c5f4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1472b95-1c05-425d-8b37-ea27c2cedc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddb4613-1909-4858-b115-651da0c404fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44b5f2b-2ca7-44d3-8d91-8e8adfbb01e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541d0d16-efaf-4890-84d6-1f483ac8c6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc167b1-cf03-46b9-9f33-81748e2d7a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17733eee-d4ee-4ead-b6b4-1fa9b8291470",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc579c1-39bf-444a-9567-92599761e649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dbad75-ffcf-4c00-bd41-4d4794a767a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0b1185-df52-44fa-ab5a-0bbd77541f22",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df9693-050c-4cbf-87f5-ca70fc3d5acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce40b6d-0999-4c22-9f09-41cb2d717341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9cab34-cab8-4394-891e-6c661998649f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d646a7e4-23cf-4cf8-a57b-59283a04cd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd999492-cb48-4b6e-8400-6abb94a0b194",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01890ac-901f-4042-85a8-e62b61257965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b2376d-eb7b-4b91-bfac-d4e7d4dcfc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677ec7f6-7958-4b90-a15a-5f18b274884f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac7dac8-912f-4c3e-8f38-73f41b722d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c59849-39f9-4ed1-96d3-1ca9c9f6828c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4668e3a3-4729-4e9e-ab46-cfa57f0a446c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad00972c-130e-4527-bb8b-18c0c3c4e49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a72275-22ca-473d-b3a5-a8a65a02f821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73f15e2-f030-48a4-ad83-d1faa99050cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75f055-8b9b-464e-bb53-ea381f5f8eb5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f2d51e-e43a-494c-b763-803f9a1ab0c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f416e70-080e-48cc-b2dd-97e2785854d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8554a4-a3a2-4cd9-9d68-9bdfe2f11375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afca17a5-81ac-4657-a321-69cf15453d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da858693-afbd-4e97-862b-3ecdfdb71fde",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd6aa9-8501-40e1-94bb-3e66bf49a090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc572245-06ba-4971-a62e-2d0cc57f65b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d081cc1e-6655-4de8-8e8e-ccd26e87a88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ec3dcc-b896-43a2-8ff6-ebcc8f9d3743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b33fda-0b42-4962-aeed-3dbfb3a660c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a721d33a-54ce-4e20-87de-cbfb48491cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a002aa0b-d3c6-4fcd-b00e-7f568bba733f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c5c9ab-dd78-45b2-a2f5-36438927c335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8950b659-77e2-4173-87f3-ade45eadd11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a607bc-2dd6-4aaa-a33d-4478a570bb9e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122a0c16-897a-47b6-af86-f9d4bb008a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9629e37a-c081-450d-963b-53785f3898d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c563754-6382-4971-82c7-1089987f1829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6792fa4f-5e29-4f8a-afd4-dd8914f7dc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33d9505-a758-48ce-886e-83f26b0e93a4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e074c57-e5ff-4348-b2e5-3ad67b33d713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1891cb49-79ee-465f-a206-f831980edaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae209f-d822-43ad-b233-ea8db4580eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079b023e-9563-4f20-b636-d297d076926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a761e-b4b5-4b52-9f60-f00365b486da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebd0c6-7381-4e83-92b2-107271fc2601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226ec083-4f95-4fce-8ed1-001cc5e7a42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca0564-b306-40df-8c8e-14f049a2c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b14f8c-7f93-4317-90ff-605da960c739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1b7a7d-39b0-445a-bc5b-2ea1e02d2ebf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd0ed44-dd72-4115-93e0-806c4409d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef846138-3084-4006-a192-ee1da818dd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5982d285-e578-4a4b-ade1-4b6b725f04f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3fadc2-94bf-4595-a835-01e270e584bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556d01fc-9746-40f8-87f4-1012c19718f5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72976f5f-8484-422e-9d97-9676d5ca2344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec283c3d-7089-4439-969d-d9cf34dfdc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5ff419-153b-46d0-b692-d4a49eabedb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b79de1f-e708-4064-83a6-47513e599914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520e3fc7-6c00-4192-9dd1-feacc244744f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855a81cc-9395-46b5-96f7-ec4767474748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3e2b29-e67c-4e8c-a349-6491220f17b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf36b1ae-e593-4701-a529-7911e8f27235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e71d3b-6b01-4aad-bdee-4236ff390211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a2846d-8506-4da6-9ab0-61cda59f616b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09882cc-0e62-4bc0-b5c0-e49ca7d2ad42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b87e7f-349c-4a9f-bcce-10c8025f0950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc995e12-5ee4-4a13-9c56-bfa855d23461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bce3443-f93f-47ff-aade-b5b910bbd7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b70db1-be83-4f95-86ae-c7df10509812",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a1bc73-9d86-4cd0-9a3b-3f9840857d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051ac103-c70a-466f-be07-7e1b211664dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d29f348-dd2f-45ab-b4c5-1a2479efc7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef6ed81-cd92-483e-a180-e304b815fe73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f760d47-b8d1-4fb2-91d8-e6bb988ed58e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627adfd8-fd17-445f-9ec4-f3a09cedcf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac5e2c1-0a0e-4b4e-a371-32cb71702bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b09ef4-4a56-4e21-8647-a07ba538158d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ca9c9-56c3-4f65-884d-76ee7cfce51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20324e7c-2626-463f-903d-51b39d75a1ce",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346b0047-7735-4193-93d3-1f7e4b75d76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7a387f-51b5-4db5-819b-3167975d611f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1533beff-40ca-4aca-a5de-f455a1daaa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d05966-133b-4e1b-a3d1-9962b9f44dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7381a5-e768-4762-bd34-83c69c9b7e44",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02759ace-71fb-4d72-ad81-2c0f8c78d863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a91f5b9-3a75-495c-be4c-8a501d3fc704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b88d61-5d1d-431b-9ea9-06225057a5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365ac341-b68b-430c-b4a4-724f7fb278cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0203f1-d14d-4b5f-9ea3-424cc928fc1c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3629ea8-ac2f-443c-9edc-239b8d743bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0852b16b-587b-4b59-981d-53a1c41c21de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d471d6d-4503-4132-b61f-faee15b54f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78aed6ea-1b1a-4aed-b0f2-7bc37eebb1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36fb300-5d41-4b49-a7b6-6b3a5d2684d9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4396e9ac-d842-4106-bc2a-80127b34c90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1053de89-4667-4d34-b55a-4ee2108725c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fd9dca-8988-43fa-869e-d8a2e230b74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34721bd-6b8b-4c4c-a8eb-c41f289a8963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636e5ce9-bf2c-413e-b217-256fe94148c3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df6b87-38fb-41a2-bdf5-2176a6d9d658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e53ef7-f01c-47f5-b206-89fdf9e04347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61139b8a-e296-4bc9-9c75-09ab64b4b843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e4240b-9616-4305-9443-7652e7c0d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df660b49-6952-4048-8bb3-b0e08104df6e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84a3039-f36f-459b-bac0-ede89f01da47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86984987-aad7-4ee7-a1bb-9a5d5e23edfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf67578a-136a-47a0-9ed7-129819ee8283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2769f31a-4284-4fd6-9085-a3b278a22af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a021d4-d183-4ec6-b194-e1214e1cc4ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea02d6c-4016-4d63-9985-14486d5c9ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f4e16e-eee3-497b-be7d-cf2237564187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1abc2c4-784f-4714-90d5-8787068b0590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a4346-b886-4dbb-9791-baa31a529067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b34faa-9b01-42b7-89d6-4307406fa62d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de01ff3-9dcc-4b25-a44f-10d6934188a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4dd9e6-2e3b-4634-b392-00b74a39ab15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366d2e8f-00d0-42e4-95f8-66748fe838e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7218cfc8-a1b4-48fb-8099-aeeb85f1be1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494fcafb-2c26-41ef-8eb7-dfbf51001ce7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75debe87-4c24-44ee-95c9-9e6aef4f9fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be957f98-6d88-4ce2-aac5-69976b1d8d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb76866-83ae-4e59-99fd-8e9e96d47265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f39627-0876-4818-ae9f-b1728fa6957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f06f7c-227d-4823-bf45-eac309599bb5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66eb26a4-62df-4998-b944-b5f9b61d5214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd7e2a7-513e-47d9-8ed4-9dc9c015b1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0918cb7-9dd0-49e6-96d2-2f8ab3b5452d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f77211-382d-47e7-a83a-62f2fb9764cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd67c482-fa7e-4c93-92ea-b2906b71d484",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33799cf7-485c-4636-881f-ac013437a408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e9cada-999f-4ce3-9b75-6bdffe1526bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26741254-950e-4ea1-bf92-c57ba801d6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a71cd85-f32f-4172-be73-54f2a322f266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddc1b19-9866-4589-b635-9d9ab154dd3f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff33c2e6-928c-4419-9780-0056283158b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9f4833-095b-41d7-9868-c274f33bc857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf62ba0-21ae-4ada-ab75-8d98e8c96a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20d354d-be60-434f-90c8-c769c2f9fae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a74930-4398-4e8e-8dfc-8b5ca280e493",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a6108a-602c-4947-badd-c43e63830c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0369afc-2ff6-406b-be55-471dfa59a2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a3ce5d-76af-455f-87a6-5b394cc367d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481a3fe3-603b-4b20-adf4-6f0404437469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0635b0f0-d06d-4c8f-ad45-abd5b6a28dc7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb2e796-3c15-4c96-9e50-c6df8de76dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e2c185-cf1a-49a6-aa2e-8a3d30463adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eaefae-9617-450a-8aee-6449194a8b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd243f75-d102-4d12-9196-ab2d88dc591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60484358-4a8f-4008-8e23-de6a3c51954a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fbe447-b87a-447d-8f1f-eed845b3e436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77296ddc-6557-424d-a987-29dd349e2963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc1c43-1a16-47cd-b4ac-857d01e1f1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9665641b-bb43-427d-86b9-527bcaa3aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076176a9-93ac-441e-8a18-52f9dc70a804",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f094935a-2c94-4159-806b-d34627039491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb65953-aa91-4da8-b2cf-c7faffb5494d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f6da2b-75fb-403a-85be-f7cadd9837f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056f949a-386a-4d6a-94f7-b8cdaabf3641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c826133c-c8ce-484e-af7d-65d750197eaf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edca3f1-79f2-4f37-b956-6566dc267939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09180972-2523-48eb-8a18-ae73ce457aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a411db4a-125e-4db9-b76c-c6fcee88020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa90bb6c-6bd4-4f11-bc20-29e9fbca9635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7e745d-e84f-4ca3-aff7-2eef7425ae30",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54751558-15e9-4e75-9993-b5250e6f87d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e86f95-4d86-4e1f-9d97-a8e9cce7b9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6126e44-c740-403f-a6e4-3cdc5773c361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c7bc43-ecca-4a68-b7b0-277d9c7084c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c4fa5-9f5c-4935-b58a-1b3ef3458518",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54c6fc5-a193-4df3-9045-2755b0a3bbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ec56de-cbca-4af7-8672-7ba87f3a6b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bcbdfa-fafe-4280-b4b7-b657e0c99052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7405261e-2356-43de-b7c7-d89063bf9ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dc0834-b7eb-4119-b06a-993896376035",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938c59ec-e509-406b-adf0-8e9fe90a4087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e441e87-00ed-4773-89fb-8238dee831ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608be41-117e-4198-81cf-4561e69fac2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf95a98-febe-4659-8920-ab73ed5701e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0123d8-7e59-472f-a6af-aa6b3016d5a3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d960c224-0eca-4382-8b9a-33c7d2e01707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9df1a2d-8f6a-4498-af6b-1b9bed95f858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfda4f0-cb45-4012-977a-21bb72d3c45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d47515a-03ac-4127-bad0-0ac124b5d07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66123ad-150b-4057-8a7a-6beca1b899ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0069d920-5a0d-44a4-8300-118d35def1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae95d456-5f80-4c54-b993-948855dd023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec03377-4bd4-417f-b310-07c21149feee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d76e63-db09-4c2d-904a-333fe573c0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b43abd-e630-445e-9b2c-795c85d58b5c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3732ace0-b12b-48ed-887c-9dca1d7a6dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97da84a-8b1d-4f4f-90ad-324ba21c2f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1615c2e-5f11-4206-8209-102cc9e94bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61822434-8bd2-49e7-ad26-69fe301947a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c5ea6b-58a0-4657-aaed-0d9a58c30819",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e3787a-82f4-4a8a-9cb6-2f21ed79c6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea0580d-62df-485e-9f80-3f614dc475fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42070006-5e4d-4014-b799-66ec98f1833a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbea5ad-0189-4e60-afaf-a7be27548651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4eac36-da40-47d0-986e-1c8f0095682d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfac3556-efdf-4dcc-bceb-761eb3e6f756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f6eb1-3aa0-444d-9bb5-5a8534d54192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be55b6d-4edb-4e87-9bb8-9994e4565e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e30f7e4-8297-49e3-8900-4a4a6a8fbaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c889e03-cfb0-4bdd-9a6d-fbb6d55f33b0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3046da-6c59-42eb-a7c3-a75dd4d32c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37624610-e5f1-44e1-b29e-02d6e82849b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95152f47-61cc-4cb5-82c1-c0f59557b4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61444b5-58e1-4c60-9c69-afede29335c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e963a7e7-f30b-41f4-bf6d-c0b0daf18656",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a56792-0bd5-4761-a887-314be6e3e050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c422d76-6b8a-4824-aa2d-f328d1ed02c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40403a1d-43bb-4b10-ac4d-5a342496eaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42f26ef-d494-4d67-aa1f-22697ff6ebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a58315-3553-412f-9fe3-bd31745516ef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd74d26-070f-49d3-a607-ffd94c11acf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2e57ea-ed19-49fb-9d84-ef3d696c17bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8916af81-b516-4f51-8fb6-d63c34435a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d872355-3478-4458-9f74-090fa3845ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70fd7c7-8ce0-46c9-9cd9-06404580a931",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4c8d43-eb73-4f0c-b42d-76113ca9a2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d127ad9-8c4b-49f0-8b57-59c4a1dcca65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bba6596-f00a-47ab-86cc-15ec566781d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d110dda7-e743-401a-ba30-796f436ecff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89f6c37-8d08-4bad-bc4b-536a1e8cb3f9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd4613-a6da-4533-9a52-336f3f17faf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b09c151-b425-474e-a595-68c59c3c26f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be13b3c-2723-4474-b7d1-ae139a256c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2364d8-3fdc-408c-92ad-4c9cc61dbd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c83fe-8c76-4371-a0f1-7df2a3a6b3b7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17172d7-e27e-4bd3-bd4c-985fa8c57870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0402be-134b-4a3c-87ab-fc3b86b66119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92432a7b-f57e-439a-bfd9-a8d4be668951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d4703c-72c1-4a7c-bb38-80cd623fd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b2ee39-5118-48e9-9913-956dbeead9e6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beeb14e-af55-43bb-a273-48016dd37c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0588afc4-7bad-4cf8-bed6-c43f37d1b8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c80c6c2-ecd7-4d10-ae80-2d14eba0df25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6238b7aa-122f-49fa-b52f-0438ada86924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c69c78-f61f-48a1-940e-5ea2906036a8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647bb0af-b7c0-40cd-b68f-f25f8a199d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d809a9-b443-46bb-8f4f-704387500f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153e8abd-dfd0-4481-8d14-d7c0d4b40070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8058b150-1e82-4407-8cf1-eb4f8eb561c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28609898-8739-49c1-9963-0f0680f43160",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be8cae2-dad9-4ca4-9b54-089e4fe06c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196fd5f3-a4e8-4106-a122-1d1c819e8730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b405b663-4026-4870-b59f-92651053f11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e67a70-27b2-45a6-962a-0e76dee12728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40afb571-b36e-492a-a3b4-cb40dfea5691",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9721928a-506e-480c-a34d-6ac2412213c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c58565c-a9f7-4689-b274-4703791eb964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed418b3-77d6-4ffa-af49-744c6d7c795b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c5225f-7faa-41fe-b2ca-a4cfd5b795e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7648d8f-fca8-4a59-ba20-ef61e6b2f034",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d0387-4d5b-4a6a-9e27-850dda0a37b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf66f981-39bf-4f9d-9382-1e4959d7d291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157b875d-bba1-477e-b609-4736a14456ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80309957-4008-4dd8-be08-3f12b1296c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec158da2-97f3-41f1-9979-16bfc312cbc4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23d4ba7-2501-4c0d-abb7-7ac6cb9986a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd1e748-53ae-42f1-ba9b-f785383b6c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf4dae6-06ba-4b8d-bbab-c705eeccbce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d8b17a-f89c-444f-ba81-cfae21d0bea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3709ec53-c159-4248-a72b-83c5eab81b7a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11df86f4-6286-4abb-a122-18b198edccc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b0763c-6359-43fa-b8fc-f9c65992c15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63252fb0-a86e-49bd-9134-aef5dbd0f493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cf5811-27b2-49ef-9465-1e4791efe393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b3510b-cd0a-4ff0-9d72-731d2ef40ed9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f95501-abd3-4975-935a-4851c90b6be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce06a923-88ca-4321-9ac6-9821bb7f8791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a492f15e-4a8f-4c05-9f9a-82ed5b3b7653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221fa72d-c05b-447b-ac76-a1d40f1ef2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9321e5-cac6-4d9f-b1f2-02bb6655f5a5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61274be-bb99-4feb-aaf9-90241ff4e716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7822433c-bb64-4446-b0e9-57504af66f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c171bd1-7470-4110-9139-25fcec2509af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b27a1e-8a3f-4e5d-a393-00f96d38e9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62495213-8e9f-483c-a351-aa778868d171",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b16eb3f-e5e1-4a29-af1d-0ec41b00dec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc940fd-6233-4d40-9bc9-0c602b7aa6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f82243-5e8e-49f2-a067-9ae9ccbe6b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab0c199-6cd0-40cc-8b98-c836183fea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a587a76-14c4-4a5a-ba03-4f061e15083b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222598ff-72d4-4e51-a7a0-258684ddb81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82f5cda-867e-4d93-b650-0bbac2367f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a743500a-e25e-4d8a-9b8f-194630f7d371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d10bd1a-44c2-483d-ab66-ad1b54b8bb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e969263e-6716-4b7a-b25e-d8433db25737",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ab0898-4cc2-4e11-a712-866240850e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73fabfe-b55e-4326-bdad-0954090414be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1cf852-1c72-48ee-9079-1d2651aef944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01a3046-a466-4539-ab95-e5e362034b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d9f753-8a5b-45d8-be3b-637a29272a83",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c968a33-9cc3-4487-9617-bd14bdec8259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc40c89f-b74f-418f-810e-4488f8a4d7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e71e704-7816-453c-bce8-fa21b353b2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697efe17-882b-41be-8642-4dcbdd904bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e65e711-0187-40e5-9f8c-c6f8e8ea184e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660e0731-bc19-4687-a731-713e79dbd315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "975f7c18-f47b-4d5d-ae84-8b1cf90e9209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841dc086-43d7-4a3f-8a80-1c6eb8a2ffad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e45f81f-4425-488b-be97-6f9e1409f7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2524e0-aaef-4a1d-b897-d960ec47991e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb59fb-0afd-40e5-9d34-b3b9eff037b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0211ff0-790b-4bbd-9bf5-c37d611b1115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ce0f27-e91a-433b-ab1f-96530d898ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d3de06-0571-4ccd-89da-25182e10705b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edccbef-d3bc-47af-8d46-9e733e49b593",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a0da8d-bbfd-411d-b5f6-cea93e9b1bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f89375-11d4-441b-9963-f5793c9db373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5977761-ec51-40b3-8c95-e43ee0c48052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf485e5-8d50-4c0e-bf53-080efbffd3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437b926-9e2a-4c6f-97be-a07a73e4f279",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55796298-7bb9-4f0c-b2ba-e343f825d31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4026cda-cf46-4ff0-9c3f-2f0a32dccc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e65af3-32f0-4f07-a648-6c712698e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d607c925-83d2-4410-ab7e-29239268397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9fff2b-7552-47fe-8871-6b433c93164c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb49b1e0-26bb-4d9e-ab8d-743657a21462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c7896a-1565-4741-b70e-50923cdb8643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a47c5ea-fdf6-42c6-a6f6-a8602530e2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff88c2af-5944-4a3a-83c6-3a819202a830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51593cc7-8166-42e1-a1df-709a7902e48f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52592d1c-7b5b-4b9a-b4ad-ef59d394c999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8f924d-8ced-4377-a511-bfd1ba602d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c006d-71a1-4bf2-a0f1-2dc64a74d983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5dff5d9-b37c-4c6d-be0f-a6f23fbbee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebccb9c-a1f1-417a-abfb-e17d54644e4f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8706ca-0040-4ef7-ac91-b2f6247e94d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ff6954-45a6-4c6d-8e56-6975b5b819ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e7840a-3443-477e-8259-2e4dd3462ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce930207-bf00-466d-8edc-981cf36e9827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568e95ad-fb7c-4b81-9d9e-b704bdbfd5f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e95047-be70-46e1-95f0-9023ad7de57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041b451c-f007-4e74-8248-4b1cd82a8db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e82d191-6a98-4864-b3ac-ab2a8e98e4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee8cbb-2635-476e-b786-336ac1971b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752b91c5-1bf7-4396-8d25-71adc1462cb1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99102059-e058-4449-b098-f7b3e3cddf06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cb652f-6156-4fb5-b3ba-452e8abe6d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87068700-3f88-4c8f-ae2f-97f3a732abea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd81e1b-30f5-4fc2-89f7-d33f5603513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382c2dd-7cca-486d-97be-b664f6b39329",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12110808-6308-473f-9849-009b1a876bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcad0992-7c2e-4629-89ca-0e2bac5759b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100f361b-4de7-43ea-9ff7-9b978921d800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44e5039-ee2b-4f95-aaf5-504cb6240f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2f1ad2-2445-41c5-948f-55d6047e6228",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e798e0-edfa-4613-aaea-239cf3505f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db0fcad-5278-4abb-b90f-1e933c27a8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2845b24d-58ad-46f1-bd00-0053e4163680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6da58b-1efa-4742-abef-140524a6e85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b84a7a-f7ca-4c70-bebd-7838686aadab",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354822ab-4a8d-4487-9a5d-f32d3f4b8b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db137b1-938e-432e-9d27-8b5edae9557b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a459193-02de-4833-b154-1c41ef677f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b58b0a0-08ed-4713-854b-e570b33434f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07889feb-a2cc-402f-af9d-d659e9e68922",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2329d264-e8c7-46ac-8102-0c2be6387f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23b1d45-e270-40ab-9cfe-9c6f7358b76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5d8168-9413-4c83-b43d-146cc3845100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6964ea6b-68ee-41f4-ac75-5bcb2f9465ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b275d26f-4d1b-4a16-b821-0e56f78d3b39",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1008b51a-e49b-4ad8-9496-b7d5bf527026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d85dd7-16a5-4aa0-88f5-8357021b4967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1921b249-9eeb-4a08-b59b-eff2a0aa069c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb8d98b-ad18-4f83-a4a4-2c9f0a9c5bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ddbd30-a16b-4138-96aa-6207491ae0e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24e7b5d-424e-4869-8977-246bc2402553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744aedd1-7ddc-4b74-bf07-89d9e35e7825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa249ec-ea2d-4147-af90-fa09746f8faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5195c329-e3ad-4643-bce9-cc271afe0d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0e9791-8dbe-4e51-94f1-309e641c5984",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb106677-260f-41d8-98c4-c0fd83168c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b41a8db-50b1-43eb-8f4c-89a93aa8a148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632be283-9b31-4205-81c9-6519825e0080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f10fa1a-adcb-4d13-8f68-b1c6f2bfbded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17819dc-f703-46f2-8e7d-843c86347339",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627921b4-d029-4e7c-91d7-5876b5e1a149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5fb7ce-9e68-453f-a29d-2a1f7caeab10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b2b77-7555-4ca5-b7b9-6c71a4a46dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b54fe4-db6d-47d7-9e1b-91aa986b4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16aa103-1e48-4ee3-96bd-37f8bd8cd4c4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e66b43-700d-407b-9ee0-568ea0425d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292b2fb9-b479-4601-b036-be534a89f20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc95be9-0a1c-4791-a57c-8353cd116773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9845da5b-8604-4a2e-bd6d-081a2cd5b4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a554e95-b0a7-403f-a970-73d1051fc63d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cc57c-d189-4671-80b2-5f53f1b65f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9435701-51fb-439a-8309-b62d69b74cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c1cc65-e3a9-4e63-b15f-67dc236398bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15eab5ce-ee67-4eee-9bc7-29b5a0d775fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1b9daf-84e9-4567-967a-4eaa9d48345f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cff161e-92ea-4237-ac04-ac28193f7e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7865486a-5e48-4f2f-8ef2-e5c3f2139854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae5396a-8759-49a1-a479-438862e710b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9913fc-05ab-4421-8140-90c04d7efc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c195e0-dd79-40e0-954d-0af94a7c32d0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d2b450-78ee-4ce5-89f9-aac91670de95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815d45a2-7995-49a8-8459-89deb0885a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31254dbf-4455-4fb7-bbeb-47dab140f6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03f9d05-d4cc-4a54-ba1d-624b6a179f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81976892-ae20-4bd2-8a72-91454581216b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160d54cc-7096-4ae5-906c-a81975de20c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08bcc1b-b95d-4a57-847c-550ecc8d6666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea9124-3fc8-49b4-ac10-3b15ccad1ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff0eec1-5500-4b4e-abac-048e96101592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09089ff-40c7-48dd-95a9-acd955b61543",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb64e9a-2e6f-43e9-a89c-0c07e5630df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5b969f-b14c-4000-b9d4-fb8723590b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49fd19f-b585-4e7d-b97f-057a57d84249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b661a50-9e96-43f3-ba0c-4b478ab6f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31564f35-b4cf-4cb4-a4d7-6cde546e827a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dea4712-d889-4da9-8a9a-7ea2617ce91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d704367-fbe5-4c04-971a-ecae0be1d76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac432d8a-a908-43cb-be4b-747f7b64f54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddb6177-ee6d-49e3-b20b-e7774c0bb653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a6170-16e3-42b3-952d-c918726aa7ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75afbc74-3ed5-47eb-bcca-4e9ea3fffc45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02832b49-6598-4f08-84c6-2434b489ba0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee8306d-691b-48c5-98c0-773918214a6a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876d39fe-99ea-4a27-892b-a25f743ff904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b32d56-0817-4d9b-a2e3-5faad7b19090",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013ab7cb-218a-4c9f-a115-26e237401ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7166590-75cf-48eb-8dfd-1442b14a30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a9e205-2005-41bd-95f7-13b7e2746fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a5d2a6-e08c-4c16-b110-eb4e77298eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef5bc1-535d-429c-99b7-665255b20e96",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01749ac9-4420-4a39-a03b-2597207370f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2854cff5-308f-434b-9236-076824ada8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9e3343-303c-484a-93a2-e05615d84898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f042db39-e98c-484c-a029-972961522710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce72f8c-2140-45b6-b54a-f7d4cc4e3a5b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d18edc2-eae7-4bb8-a8a4-2db867892676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0316e2-6d04-427b-b7e9-2665110443e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614f962b-18e7-4dd4-97f1-1b2516a81388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff8ed46-946e-49db-bcab-2da78768e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b482d3ff-8be2-4746-a420-2edef6b02569",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82776d4d-bec3-47c1-a4cc-aa712a6b6f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910c1a38-a9c6-4390-9e32-751f4003f226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a8077e-18fc-434b-b116-f78b2ff2182a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3a7c4f-9b26-41f6-93f2-9a590a3fab7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd45cae-3fd3-40a2-a3b6-62f9ed570d8f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74154fc6-c28d-413a-a954-a37f3a9d832b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5743b5aa-7a50-45ad-b4a1-a0a7d7ba8eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0721c62e-f8f4-4266-b104-90258b527647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bc1b50-f4e8-400c-8f9b-55091d1b2410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48237a3-01af-4a41-a9e6-cfb562deb7dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efbcb52-ce75-499c-b661-c0c52eb08ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fba079-87ef-4a60-a1a6-9974e9620ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c73f038-6f7b-47f7-9422-d7fa4dbda57f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78490cf2-c12e-462a-bace-7ed18b83a6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755f9968-a2f5-4822-9948-482ff3ef1cfa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393159a9-a3ae-4200-a8ce-f8491ded47f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d5883c-803a-48ab-9339-45de4a64f3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963bb82b-1a8e-48f0-afa9-373e7ddb6cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f938c2-058f-407c-92ed-4468a5638afb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4958f108-00d5-480c-8f1c-e62838b9a0f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baeb6b37-fdfc-4113-b0c6-5b3531ff1cc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e557e4f-f3ca-4de2-abba-6528b33ddc0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c49f327a-6719-4699-80ec-2dff7acaad29"
                    }
                  }
                ]
              },
              {
                "id": "0aa06448-c5dd-43bf-a5fd-663ba44bf272",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95820156-13b0-4a35-8505-595a7b853ea7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9dcd6-37bd-447c-bc32-4268abb9d926",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "24f81af5-e47f-464e-86f7-e333d6cae641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e6dd9-4379-4858-bdf9-4b4cfaf64b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46ed969e-db30-4b59-99d8-63da16fc1325"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b12a024-d91c-4954-9ede-a04078580ca2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84cf6b4f-d4d0-417b-a74f-b9f1da2b5a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f012745a-c15d-4be9-9785-3fe344666bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6ab43cb-d50a-4be0-9162-d2d568f2698d"
                    }
                  }
                ]
              },
              {
                "id": "ea634c17-613e-41e1-b2a0-2d86eeddc722",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1cf315a9-5bfb-4bec-ba5a-08d2e2c25c1d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ac93dc-595c-407d-b653-3d4391caa728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "252f706c-779d-4025-b7bc-3c41dca50de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4e2422-4d9a-4936-abf0-161f018f92d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbca644b-1410-4965-9c81-731860245e38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5bd2cd98-20bf-4aab-91e0-34fb22b0444c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a629212-24d6-4629-af13-350dee104691",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56bc8b6c-eeb8-4b06-85d6-5f2eeac1e477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "529f18e5-112c-4935-ad3c-ae44ccb80e27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcb45b1f-98c2-4801-9bca-51b0a46217a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "159dd244-34e3-42f4-8876-f3250ce2f087"
                    }
                  }
                ]
              },
              {
                "id": "e27d514c-c992-4ea7-ad4d-cc20dd913cb2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d844d32-cd52-4ea3-ad57-59983e3b4358",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e65712f1-4bcf-449b-9d98-e37799a91683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd542f26-87a3-47f1-ad2e-ded8599fcc81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "619df351-c3ff-4311-b209-971bb2bf1585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d0abab5-739e-4da5-87a2-72457c31a6fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "534e7f75-8948-4f9b-8fab-964aba00b806"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fda4a78c-3a2c-4f52-9f36-2f95332e278a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05de3161-e90a-4add-9369-9aa69e271db5"
            }
          }
        ]
      },
      {
        "id": "a922dbca-2874-497e-9f34-72e80d885ae3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0334e9b0-bb4f-4be8-ac58-ca3d98ae8b04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c85aa33a-b854-4192-acf8-020e370b912d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48f99d2e-9a94-4991-8b80-3fefafbe9992",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49321b83-ca16-42b1-a864-7f32aba4d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e63338f5-6d80-4a86-af0a-1cab621c34d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccad5d19-9eb9-4fc0-9740-f195a6968bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbc2fb5b-1764-4ab9-8a5e-2b63dca90034"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab25ade-8389-4c6f-8c83-8d59124db6dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0fa93fc-fcb6-45c5-8dd0-80b9d7ebb071"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8e0ea14-7b01-455c-ac88-9374f1fd87b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fce540e5-ab99-494e-9bf4-0d7956fff5bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "870acc59-e084-4df8-b981-5006262e31fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aafaa60f-3cfa-4ebb-8b6d-f54a1913cdf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a15e7e4d-875a-49e6-a489-bf7f71a4dd96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e81fd497-7501-4ac7-9461-ab3951c6ba7b"
            }
          }
        ]
      },
      {
        "id": "e142ceb1-a28e-401b-aecf-c0b45cb912c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a109bd6c-3938-4f7a-8b85-e51ff82f46c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e2fb524-4753-431d-a1c6-7d7aeaa73360",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5addef10-f352-4dd6-ae26-d4ce39d7a0aa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caaf017-abc5-4cdc-8a6a-3b9b58d75f26",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "229d08ce-81cf-405f-96e4-cfaa12ff868d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd7a65-1d5b-49b7-9bf5-b3fdad5d5bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90c5591d-95e8-4fe7-814e-fab9dcb457dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a6a093-bb96-4805-b112-cf9706d4b62b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "317545e5-8c15-4a27-8250-e5a32eebe970"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f1396b9-63fd-4089-84ac-d8bff75839ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14369596-0b40-44d4-a42b-2c7f3c76b2f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72529d02-abd5-4b1f-ac77-d643ea3d6d2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9506cd9f-1640-43c0-9bb0-b0c1568430f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c599fe59-0def-4742-8142-c09ed8515356",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15628046-e902-4bd0-8c7c-2b24cae14042"
            }
          }
        ]
      },
      {
        "id": "693df503-c108-4f87-a7c2-f66a2e7c92c8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "72c87edf-56ae-4faf-bcff-247f605663dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53999388-b7ab-4423-8842-8c23598a0f54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6ebe5df-b12a-4749-a767-bb5101f02c84",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d09252-a381-4269-b455-b1ea4b167838",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88c01b93-b00b-45b0-b79e-a2b1996c12cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3149aae2-5628-4cd4-b014-04ed56d15fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7810b60-b51c-4849-81bc-7f0bbeda47a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "293f5f83-bf11-4294-a107-cfcb55da7189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902d71f9-4c3e-4def-b574-af4fe78301b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad19ff5-68bf-49e8-8e73-97389d72e643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "840c83c3-7149-4ebb-9463-83d902f2295f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5335c403-9b64-42fa-a634-0d83d434b8c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "225fc122-f2a5-4c35-90c0-6995bdcd404e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68aff13d-5218-4ef6-9c41-082fe78802ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ad8fe1b-0c47-4eca-8653-13cb700003b1"
            }
          }
        ]
      },
      {
        "id": "e617903c-fa6b-43a5-a6b0-233a0eb7dd57",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ade4b8b1-bc2f-4dc0-bce2-a51fb33b795e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a862500e-a17a-40b4-87e0-6c14375198f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "68be6ab9-dafc-40ba-a4c6-92dcc8e7e837",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ddf906b-1b2b-4638-ac2b-816f8efdeab1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eb12ac5-480e-4cb2-86af-c3aed28627ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 73.15873015873017,
      "responseMin": 6,
      "responseMax": 559,
      "responseSd": 33.03819643661456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726447595812,
      "completed": 1726447622425
    },
    "executions": [
      {
        "id": "73b86b8c-a977-49d8-9977-0d44211c4046",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6b671176-ad44-4c25-941f-f8f847c65da5",
          "httpRequestId": "c7a1f1fa-6726-4d09-82ad-0065658b36dc"
        },
        "item": {
          "id": "73b86b8c-a977-49d8-9977-0d44211c4046",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6fbcb70c-1a74-47af-8db8-f25508fc9bb8",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "6f403af9-ee34-487f-9512-3114ec60996a",
        "cursor": {
          "ref": "d245cbd1-baee-4a9c-b621-df0b7db10ab5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "284c45d2-f688-4e33-a016-c5313271f9ee"
        },
        "item": {
          "id": "6f403af9-ee34-487f-9512-3114ec60996a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bea61dc6-ee26-4448-a739-53265bd16fc6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d019a8dc-a3a3-4e63-ae28-bdf2173997a4",
        "cursor": {
          "ref": "2c560e82-4b89-44af-8db2-ebe2d6f160c0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b4f04fd-c33f-4a68-9488-b14fc839a692"
        },
        "item": {
          "id": "d019a8dc-a3a3-4e63-ae28-bdf2173997a4",
          "name": "did_json"
        },
        "response": {
          "id": "2c97a2f0-67f9-4640-aa5d-850f33dbb66e",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f5f3a-4731-427f-838a-9f0ff7dbd907",
        "cursor": {
          "ref": "eb33ee77-5329-4fb2-a560-492cbb3000d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "911d3a8d-72fb-4748-9127-f1103b47d47a"
        },
        "item": {
          "id": "274f5f3a-4731-427f-838a-9f0ff7dbd907",
          "name": "did:invalid"
        },
        "response": {
          "id": "19bcad01-9339-45b4-aaac-46265940d5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f5f3a-4731-427f-838a-9f0ff7dbd907",
        "cursor": {
          "ref": "eb33ee77-5329-4fb2-a560-492cbb3000d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "911d3a8d-72fb-4748-9127-f1103b47d47a"
        },
        "item": {
          "id": "274f5f3a-4731-427f-838a-9f0ff7dbd907",
          "name": "did:invalid"
        },
        "response": {
          "id": "19bcad01-9339-45b4-aaac-46265940d5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcd06ff-4b91-4c66-a03b-c435a600000b",
        "cursor": {
          "ref": "6022af1c-99ab-49a0-8652-7f1a9e7b8171",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "67776f7f-3077-4de2-a5d9-ca46be43e61b"
        },
        "item": {
          "id": "4bcd06ff-4b91-4c66-a03b-c435a600000b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f3c72950-184a-4341-98a9-9842e114ba64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 127,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc68a746-64ad-4781-aa4d-ae2c771d9c5d",
        "cursor": {
          "ref": "396558d2-93bd-48d0-a1d8-e2cad108d427",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a503888e-7c62-489d-a621-ededf7f90920"
        },
        "item": {
          "id": "dc68a746-64ad-4781-aa4d-ae2c771d9c5d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "59306dc5-f8ae-4f9f-b0a4-ab5f57f84aac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0681e-c456-41f0-b886-57d8a3e00c50",
        "cursor": {
          "ref": "66fedf8a-2f87-49f0-aec0-5e992b71fd01",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "13bece29-146f-40a4-8cca-181071b1343e"
        },
        "item": {
          "id": "25d0681e-c456-41f0-b886-57d8a3e00c50",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a98bac7a-a1d9-4840-844c-81f86ff4c671",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727fcb6d-f706-46ce-85c1-4789b2767b38",
        "cursor": {
          "ref": "8930d07a-0467-4b28-86fe-5f5607750c43",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c1c38112-6d24-48f8-995f-441bde0d8344"
        },
        "item": {
          "id": "727fcb6d-f706-46ce-85c1-4789b2767b38",
          "name": "identifiers"
        },
        "response": {
          "id": "abab9f0c-8d4b-4276-a25f-a0f44e8023bf",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d88f7-cd9a-4e24-ab04-5587ce06c103",
        "cursor": {
          "ref": "83e82c23-5923-485e-b958-f152f1e1a477",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "03ab990e-42a2-4799-a37a-d25c9dde98cb"
        },
        "item": {
          "id": "e12d88f7-cd9a-4e24-ab04-5587ce06c103",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a885cbe1-8ad5-41f4-81b0-d07ba5310e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d94683d-f59c-4c7b-bb72-bb487ca5846e",
        "cursor": {
          "ref": "96eac11e-6162-4692-8c5a-9d54a0bfd3cc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26061d11-a5d8-416b-acc0-bd42c65b946b"
        },
        "item": {
          "id": "4d94683d-f59c-4c7b-bb72-bb487ca5846e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a2a60ee5-4948-4eaa-8b05-a7daa07ecbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a4f66d-ea13-4ca7-b7f6-63bf24490084",
        "cursor": {
          "ref": "1cc39c77-9b31-4aea-8216-c3e6090e35ac",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3ce9f84c-61da-4dc6-99b2-2b0fd37fd838"
        },
        "item": {
          "id": "79a4f66d-ea13-4ca7-b7f6-63bf24490084",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cca8091a-f578-4573-a443-76f92f69efa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027b1e90-2c35-4c69-935e-24791871f468",
        "cursor": {
          "ref": "050b791c-8613-4aa0-b59a-ad7eafc39a88",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4f1b9d1b-a864-40e4-90a9-3893c9de35ff"
        },
        "item": {
          "id": "027b1e90-2c35-4c69-935e-24791871f468",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2c22954b-9fa8-4c1b-a832-276bfab26f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aa3385-7ab7-43b2-a745-039ec7549dc8",
        "cursor": {
          "ref": "d916d262-53a1-488b-8668-3ecb3d907be2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f4074f6a-2286-4735-a428-c4d5a88459d3"
        },
        "item": {
          "id": "f6aa3385-7ab7-43b2-a745-039ec7549dc8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a1cb5aed-aa35-468c-8941-74c87cadaa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63977a48-4def-48d3-acbb-98485e2a1519",
        "cursor": {
          "ref": "988b7c88-4cd0-4426-9128-0ddb40b68725",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "77ab279c-2ae1-4bec-bf4e-0ac5206aa6e5"
        },
        "item": {
          "id": "63977a48-4def-48d3-acbb-98485e2a1519",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06714508-e99c-4fc4-a89a-93b2994046b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e010cfbc-15de-4480-99f6-4692cdaa0f18",
        "cursor": {
          "ref": "f2408f4e-cbd5-4a37-8238-ef18d03959c5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b0386e99-03fc-450d-a9a1-ee047a6e28af"
        },
        "item": {
          "id": "e010cfbc-15de-4480-99f6-4692cdaa0f18",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "52656308-3eb6-43f2-939d-5c6c6ec0521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d34fc-41b3-4aaa-8970-79fad5121f2c",
        "cursor": {
          "ref": "e2eca714-6092-40b2-a06e-b5f6303422f3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21e33b0e-4882-49fa-9c57-c6ddd72f52f3"
        },
        "item": {
          "id": "694d34fc-41b3-4aaa-8970-79fad5121f2c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dfae4891-d996-4a21-a229-8f3948cefe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128fda88-1b87-47f8-9550-acdd17296893",
        "cursor": {
          "ref": "04879475-eefd-4507-9975-731e6de0f6e0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d0f494f5-b07b-4a6b-8d26-06ade7cbde61"
        },
        "item": {
          "id": "128fda88-1b87-47f8-9550-acdd17296893",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33b89050-12ac-4454-bb2f-ccec3e84deda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb39bcb-ced6-4c74-8411-be01971b972d",
        "cursor": {
          "ref": "a9834760-d5fb-4e4c-a2c2-a7f1bc6950b2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2da6717b-6272-4fcd-a8c2-90aedba35f21"
        },
        "item": {
          "id": "2fb39bcb-ced6-4c74-8411-be01971b972d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "98b754d6-80b3-41b0-bd49-84454c0b53a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942445b4-8bbd-4b57-b1ca-b63ec2f986fc",
        "cursor": {
          "ref": "1c9fccfa-06c0-4250-a145-5b67e986d413",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5034e0a0-ca07-430c-97da-955c617b8129"
        },
        "item": {
          "id": "942445b4-8bbd-4b57-b1ca-b63ec2f986fc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d0770e6-5247-44c2-8151-e0d94185696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d34145-3c4a-455d-9d17-ecc840394336",
        "cursor": {
          "ref": "00455498-0b2d-40d6-81c1-6d9264674151",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ad4c5376-298e-4fe1-845f-51e1208c5c7a"
        },
        "item": {
          "id": "64d34145-3c4a-455d-9d17-ecc840394336",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bc9a9267-c443-47e3-88e0-9841a7720545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3725b8-73dd-4bc4-87f9-8fef0a6b5d86",
        "cursor": {
          "ref": "24f87b9a-5989-4896-8992-472324772306",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5b1134e0-9999-4027-b43f-5c87cd269107"
        },
        "item": {
          "id": "ee3725b8-73dd-4bc4-87f9-8fef0a6b5d86",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ede93680-fd50-41ca-a783-3844b124f9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a3105c-1e1b-4193-b81f-da448865aef8",
        "cursor": {
          "ref": "cd2d93bd-be52-4788-87f7-957c98669038",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9115ece1-d9c4-40b0-8094-0b771a346c35"
        },
        "item": {
          "id": "f6a3105c-1e1b-4193-b81f-da448865aef8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7296216c-12c7-42a9-9e2a-737463c7cf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774965c-550e-4ae7-b27c-359aec1b19af",
        "cursor": {
          "ref": "2766111b-704c-45c9-8239-547ce023db5f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "af8055be-d31d-4662-b0db-e1df10e6d7a9"
        },
        "item": {
          "id": "9774965c-550e-4ae7-b27c-359aec1b19af",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a8f9b303-5c03-4bf3-b794-eed65a43b985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2505a25f-ad79-4b27-81d0-fe110eb0192e",
        "cursor": {
          "ref": "9113cedf-d752-4882-b042-722f7af1044d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0652cb98-7b3a-446f-945b-6ecc775070d4"
        },
        "item": {
          "id": "2505a25f-ad79-4b27-81d0-fe110eb0192e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e33e87be-18f1-4efa-a3a9-644253593a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0fa41-6846-43e5-8c1a-59604a5b1f64",
        "cursor": {
          "ref": "b2b12271-deb5-43d5-8219-70dc9f9d261a",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "50d5755b-8a1f-41d9-b827-e9be192b2c7a"
        },
        "item": {
          "id": "96e0fa41-6846-43e5-8c1a-59604a5b1f64",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ce12082e-cd73-45e4-bf35-2e4691c0147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9e4ce8-017a-46a4-be50-286d5765ace5",
        "cursor": {
          "ref": "b988a3e7-ab37-4d5e-b842-8440aff03623",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "159736ba-e275-42e0-85b1-220c161f84cf"
        },
        "item": {
          "id": "0a9e4ce8-017a-46a4-be50-286d5765ace5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "31fa4e1b-b4d5-4ea5-96a7-b3e35096997d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f637c7-8231-454c-9d72-d5465c544720",
        "cursor": {
          "ref": "842feb97-b786-4fd7-93cb-ce8f65d2d152",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e50d8e9a-5af3-4b61-88ec-e2a8096aa6d4"
        },
        "item": {
          "id": "c7f637c7-8231-454c-9d72-d5465c544720",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e34bdfa5-42e4-456c-890c-e1241d1ad279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f23f2-72b5-4c67-bf9e-1e288e3f4659",
        "cursor": {
          "ref": "744d96a5-b3a3-4c61-b7c6-6fa493ddbe16",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d281516c-38db-4eff-9c8b-3a21280263a0"
        },
        "item": {
          "id": "be9f23f2-72b5-4c67-bf9e-1e288e3f4659",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31451eae-0d84-4f8b-8454-f523a4852206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25ffe4b-e272-4701-9a45-2696da2e8752",
        "cursor": {
          "ref": "d1056913-eaa1-4285-890e-2f65e653ba43",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ef408a74-19e2-45b7-a504-1a7fb9569e4b"
        },
        "item": {
          "id": "a25ffe4b-e272-4701-9a45-2696da2e8752",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1c4da7e8-7866-4235-bca3-d2edf21e360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b12e9-eaa3-40da-b0ce-3552e14e6c3e",
        "cursor": {
          "ref": "30324921-a834-4837-982d-53592c2db77f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cd220c9e-a045-4098-abef-fc0ac17273fc"
        },
        "item": {
          "id": "ae6b12e9-eaa3-40da-b0ce-3552e14e6c3e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6ecfb3bb-6a02-4177-a800-d7f1626c1708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5136e6bd-924f-4014-95eb-d6b6d0ebceec",
        "cursor": {
          "ref": "c234b3f4-38e1-4b65-978a-5a52d0d7c9fa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b3a6156-65e5-4812-af23-966b7c8e8f17"
        },
        "item": {
          "id": "5136e6bd-924f-4014-95eb-d6b6d0ebceec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "77822826-60bb-4384-b61f-1e500b4218ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757fd57f-697e-43b7-8bfc-3c0fcf03f967",
        "cursor": {
          "ref": "6de43ea8-b125-41c6-8a4e-e46060d63fab",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "85082f01-4037-45fa-a2e6-563ce72da583"
        },
        "item": {
          "id": "757fd57f-697e-43b7-8bfc-3c0fcf03f967",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d9d0edc1-f31c-46d6-9878-e25001186bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3ca680-6ce8-4a11-bf77-dc58b84ea0da",
        "cursor": {
          "ref": "d33e7c57-392d-4606-9435-b22b15317e44",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dfe56e5a-f935-4a17-b511-460ef771a90d"
        },
        "item": {
          "id": "da3ca680-6ce8-4a11-bf77-dc58b84ea0da",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0b75d664-1226-4b71-a096-3eacf3b36d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b700c8b-934f-4383-9c3e-edcbfd72e94e",
        "cursor": {
          "ref": "b22b7da9-db6d-4200-8ad5-9882d08d6429",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0c1f40cc-b715-44ac-b867-c97b9e54df2f"
        },
        "item": {
          "id": "0b700c8b-934f-4383-9c3e-edcbfd72e94e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "782a1a78-d79b-4442-b65e-b0506e19482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf8d05a-2bb5-4ae3-b360-72b8622090a9",
        "cursor": {
          "ref": "174d44be-2c6b-48f2-bd80-5f831e976143",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3576fcb-ba8b-4caa-af3b-45e1d9f66891"
        },
        "item": {
          "id": "bcf8d05a-2bb5-4ae3-b360-72b8622090a9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "47c5d85e-a566-411f-a4fd-3e10b7710e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586e44b-521f-4c22-9ec9-52e28adcc9dd",
        "cursor": {
          "ref": "678b9b59-093d-42e2-8b3f-c0e9fd557444",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "682beff5-0859-46ce-bfb6-764996b4de1a"
        },
        "item": {
          "id": "a586e44b-521f-4c22-9ec9-52e28adcc9dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ca2b10ef-89f5-4c1c-959d-259ffcd8a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1994d33f-e77e-4e3a-90ea-8fc15ab9bfff",
        "cursor": {
          "ref": "9d47c88d-e29a-403e-b48e-e0397fd3b75c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7e7b0e5e-e2f7-41fd-bf72-6385c7a6803d"
        },
        "item": {
          "id": "1994d33f-e77e-4e3a-90ea-8fc15ab9bfff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "53ffee25-9d1b-40a8-9276-a98438897628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20942938-6c73-4cc0-8f97-6381ede3222e",
        "cursor": {
          "ref": "f8934fb5-be1b-4b8a-8434-4f48de90fe11",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b649bf6d-7e12-43e1-9254-a3d728ea85b7"
        },
        "item": {
          "id": "20942938-6c73-4cc0-8f97-6381ede3222e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f85905b-eda9-4047-8e19-d807e2cb659d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5f4e7f-3f00-418b-a299-273a1ca15fda",
        "cursor": {
          "ref": "d656d714-03e0-4685-bfbf-85a31d1f79cf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d5915bd0-dfdc-4795-9acf-30082b766207"
        },
        "item": {
          "id": "0f5f4e7f-3f00-418b-a299-273a1ca15fda",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46b15729-6cdd-47e7-b448-fc16cf923bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9fc68-1f2c-40ae-a601-1debeefd80fa",
        "cursor": {
          "ref": "f43898a1-8715-48c5-8c50-db27ab2b4c84",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2d6a46e9-b5fb-4c06-8623-d30f0d3eac49"
        },
        "item": {
          "id": "efa9fc68-1f2c-40ae-a601-1debeefd80fa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "afe11f27-09f1-4002-82a9-92c29b1b4495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0255b1-ee1c-4c97-88fe-6626d7b939f8",
        "cursor": {
          "ref": "f31429b6-7478-405c-b6a1-fc0851d7442c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3dd17f26-239f-4545-801c-94dae0ed8836"
        },
        "item": {
          "id": "7f0255b1-ee1c-4c97-88fe-6626d7b939f8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8f97195f-6116-44fd-96a1-7c066d7baa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa9101-92fe-4c24-9ea8-f4bb75cb5ccb",
        "cursor": {
          "ref": "233d4d7f-1a7a-4836-a441-4edf81b9b578",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9fdad926-ce41-41b7-926e-c2c3b9fe2352"
        },
        "item": {
          "id": "e9aa9101-92fe-4c24-9ea8-f4bb75cb5ccb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1d4ab178-8fe6-4cbb-ba47-26adc1b4c34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbfc88c-355b-44d0-a45e-897af0fc22ba",
        "cursor": {
          "ref": "d67c7838-d384-4ae5-a1fd-07f6de56dac3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9327780c-e765-4038-bcaf-44e980a9180e"
        },
        "item": {
          "id": "ecbfc88c-355b-44d0-a45e-897af0fc22ba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b78a2314-68c9-4a62-8f2a-5e40c7bac146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0071de-5a2f-418a-b277-36411226d569",
        "cursor": {
          "ref": "7fe7b180-06bb-4b36-a249-abb296e5bd50",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ad31d47-a4ef-4761-9b8c-f41df5188fdd"
        },
        "item": {
          "id": "4f0071de-5a2f-418a-b277-36411226d569",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2c97cf2b-899f-4a54-83ce-478e66f6c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f37691-25d6-4332-b02b-258a69608c49",
        "cursor": {
          "ref": "d480371a-76d6-42d1-8dae-98e068706081",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "18c54892-9585-4fa6-bbb0-921f229bd3b5"
        },
        "item": {
          "id": "29f37691-25d6-4332-b02b-258a69608c49",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "48342558-a618-4d70-8bc7-d637f95de06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ff8e46-6715-4e83-974a-3380ff574a55",
        "cursor": {
          "ref": "e3849ac7-f254-4b13-bd96-6d51a350a888",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0a62947-3353-40e7-b134-84686b3e99c4"
        },
        "item": {
          "id": "43ff8e46-6715-4e83-974a-3380ff574a55",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "015da92d-1633-4f14-b859-656d30c239d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ddaf0-a08d-4634-a406-078553c92bec",
        "cursor": {
          "ref": "65c9881e-3daf-4b18-8975-e2e6b4b9ab58",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "29fe0e81-a82f-49fb-9b3b-552435f0af83"
        },
        "item": {
          "id": "357ddaf0-a08d-4634-a406-078553c92bec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7287a54f-7616-4435-b05e-394b614f763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd6c648-c8f8-4db2-8ffc-1064c3ce5542",
        "cursor": {
          "ref": "0698fbc9-321d-42b6-bb20-5b8d7fc7ba54",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8e01fda3-f670-48ec-817f-2e93cb279bcb"
        },
        "item": {
          "id": "fcd6c648-c8f8-4db2-8ffc-1064c3ce5542",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2e330012-0471-4418-9a62-81f347969e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662b4ec1-6320-48bd-92e4-d3eccc5488ee",
        "cursor": {
          "ref": "668264d5-0d8a-4b06-bebe-79480466874c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e8667a59-708c-44fe-b0fb-8da8422a9a26"
        },
        "item": {
          "id": "662b4ec1-6320-48bd-92e4-d3eccc5488ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "188f9b20-9f1c-461c-946e-127c96f49df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893b9a49-4e4d-43e5-8c93-ad7f6887061c",
        "cursor": {
          "ref": "8a35d787-c461-4490-a361-15d08c57d315",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ada2fd1d-1a01-4ae6-b67f-66b5e8565799"
        },
        "item": {
          "id": "893b9a49-4e4d-43e5-8c93-ad7f6887061c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "baebd100-1b0d-4ec6-a4f2-6cb9d51b6e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5ae3d1-5d63-48ec-a6f0-2596b90321c8",
        "cursor": {
          "ref": "0063e8b6-67fb-4720-93d3-63f174be5276",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fdf61d21-1e1f-404b-addc-953598d61130"
        },
        "item": {
          "id": "bd5ae3d1-5d63-48ec-a6f0-2596b90321c8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c03d8772-eb0c-4ada-bd95-6a14b73eb3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e480cc36-d268-483a-86c9-a99568c1b1fc",
        "cursor": {
          "ref": "41d3d6a3-a630-4b42-8b29-c6980faa48d7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "33b32740-266d-45f6-8106-8893367347ed"
        },
        "item": {
          "id": "e480cc36-d268-483a-86c9-a99568c1b1fc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0404fd4d-187f-4744-abb1-b1d54a3398ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2bddd2-0560-495a-942a-6b46c9bb6f92",
        "cursor": {
          "ref": "bc922a7b-314c-4f20-85ab-251da004f507",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1184150e-f6db-4635-a85b-19ea0624085f"
        },
        "item": {
          "id": "9e2bddd2-0560-495a-942a-6b46c9bb6f92",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "01ee16cd-c41b-4748-9685-6a7cf291584d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d373fec-e412-4687-92d4-f5b8ad04ca75",
        "cursor": {
          "ref": "c869e300-a60b-4cb3-9fe6-fd8fdbfc9489",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "39ee33cb-b5c8-47c2-99e2-fd41d0296d00"
        },
        "item": {
          "id": "0d373fec-e412-4687-92d4-f5b8ad04ca75",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c07cd287-d1c9-4126-87d5-f3b1f3397521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c1e546-0bb5-49ab-bd09-5895361dd8bc",
        "cursor": {
          "ref": "0c9f3fca-034a-43d1-afbe-220a523b1c74",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "62f19a21-586b-481e-a79e-5aac2ba27237"
        },
        "item": {
          "id": "a3c1e546-0bb5-49ab-bd09-5895361dd8bc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b02f22f1-b132-4e97-ba5f-981489964d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9238f7f3-e08f-45e1-b86f-dcfdd6463c2c",
        "cursor": {
          "ref": "5f813445-1ebc-49df-989b-b5feec5d314a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc97fbd4-5220-43e1-afa0-7b8c64816575"
        },
        "item": {
          "id": "9238f7f3-e08f-45e1-b86f-dcfdd6463c2c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5456b40-756a-4522-b47e-adbe85d64d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b38cc40-49d6-482a-8d09-0432f02d90eb",
        "cursor": {
          "ref": "a8e7ed07-e1a8-42f4-90b7-5c623e075b44",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "459f1075-4b3d-4b04-9055-a84543966abf"
        },
        "item": {
          "id": "4b38cc40-49d6-482a-8d09-0432f02d90eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4db99f21-7e0b-4605-ac18-76ccff148f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ad0228-13b2-41c8-98b7-8f011ff272cd",
        "cursor": {
          "ref": "b5913dc3-7b17-4b50-bd56-731324c8914f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe8fd87b-ecdf-401e-a878-4695ba1e078f"
        },
        "item": {
          "id": "e4ad0228-13b2-41c8-98b7-8f011ff272cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "03248ec4-df55-4f04-b140-8ca1dad46466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a385817f-f05d-4024-a579-2f6f012e276d",
        "cursor": {
          "ref": "f3c3bbfb-5ea8-44c0-9c8c-be5d030f7407",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3df635c7-fccb-40a6-b4b7-08b320693d84"
        },
        "item": {
          "id": "a385817f-f05d-4024-a579-2f6f012e276d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3846d2a7-bb4a-4f04-a3c4-70d5c6506524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b760fc-cc87-4999-91bf-2bc2a5138115",
        "cursor": {
          "ref": "644e3ab0-b5c0-40b0-b5e0-05d74417ce3b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9eb6afc8-6239-4b06-ac39-1500997f6b06"
        },
        "item": {
          "id": "43b760fc-cc87-4999-91bf-2bc2a5138115",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a80de19-2aed-47dd-9208-447598820224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6756f67-4dc7-4be1-b758-f87a2bd4ab27",
        "cursor": {
          "ref": "5f70c285-d890-4728-a164-3cc9334229de",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4e7d7775-e7f1-4b03-98b9-69508a6eed63"
        },
        "item": {
          "id": "e6756f67-4dc7-4be1-b758-f87a2bd4ab27",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ba8ea10-7a10-465f-b044-dec078220139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77579aac-d871-4f5a-be99-dee156e2b794",
        "cursor": {
          "ref": "386ec538-e5ff-40ac-958b-e3d610bad708",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f39f7edf-6410-405f-9b65-84e74c6206da"
        },
        "item": {
          "id": "77579aac-d871-4f5a-be99-dee156e2b794",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "02b30cb7-be18-461c-85e9-f3dbf53e0ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0543582e-9d76-4d8f-acbf-4d0112174608",
        "cursor": {
          "ref": "a34be4a3-4e59-423b-971a-a4ad46566c10",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "395c45d1-34cd-4085-b406-3164adc6465e"
        },
        "item": {
          "id": "0543582e-9d76-4d8f-acbf-4d0112174608",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "30957a6c-6981-403a-b6fe-e28a6c8229fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e7f98-246b-4926-87e3-a28a792c1129",
        "cursor": {
          "ref": "3927b206-16ef-46ad-9766-5fd6ca86411e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "117fd79e-1fb4-4831-bd24-de7ed4de940e"
        },
        "item": {
          "id": "230e7f98-246b-4926-87e3-a28a792c1129",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "28054838-967f-4688-9aa1-8aff7e90367f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0af7091-bc1b-449f-b52a-9144b919127f",
        "cursor": {
          "ref": "3f6323ed-d68f-4ccc-a0ea-a7da6cd9438d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ba63fec-f353-4943-92f9-e0a2aca3f506"
        },
        "item": {
          "id": "b0af7091-bc1b-449f-b52a-9144b919127f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6278b2ad-7774-45ea-9594-da404fdafe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85dd184-6e8c-4fbc-8815-4d8036f22e89",
        "cursor": {
          "ref": "a423488d-bef5-43f3-9d6b-84bd418db9d7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c762a936-1eeb-4e2f-bf1b-7ed4b616c132"
        },
        "item": {
          "id": "b85dd184-6e8c-4fbc-8815-4d8036f22e89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "583d9e90-f92a-4dc5-bf1f-4147ec4db35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e0b2a6-217d-4f4b-b2ff-1a8348b8253a",
        "cursor": {
          "ref": "00d85b52-ba28-4e12-927b-990e97f38ede",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35848841-766a-42ad-954e-6df1bd69c3d3"
        },
        "item": {
          "id": "c8e0b2a6-217d-4f4b-b2ff-1a8348b8253a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c1f9d97b-5eb3-4b9f-97c4-6dfc31b0a7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f87378d-3f47-4234-a648-0857ce770093",
        "cursor": {
          "ref": "7a5ea7ae-b856-450c-a721-718043fbedcb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d26313e-a2d8-43e1-b589-4d924d4b2f55"
        },
        "item": {
          "id": "6f87378d-3f47-4234-a648-0857ce770093",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "97a9186b-f8a5-48bd-8771-c0e0de99b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85fed51-420c-481e-af61-c15e02ff6f0c",
        "cursor": {
          "ref": "112bd9aa-6260-4c99-940a-1f8583502265",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "29777d22-984e-4d98-8c09-a0497177ffd9"
        },
        "item": {
          "id": "b85fed51-420c-481e-af61-c15e02ff6f0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "adeda0ce-45f3-492f-af7e-7adc48396c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ac6c6c-59a3-4e7d-bb8f-e490378f799a",
        "cursor": {
          "ref": "e776b9f1-235b-413b-9802-bed87c3fcc2e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eb733ed5-9fc7-4f0b-9fa5-d1b0d79ebed1"
        },
        "item": {
          "id": "c9ac6c6c-59a3-4e7d-bb8f-e490378f799a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "81c96ca3-febf-4b75-acda-a01746f18b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fb0b3c-58c6-4001-b3a0-b7845afa5c09",
        "cursor": {
          "ref": "01b5a288-cac0-422a-9ec5-9318bace5453",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f1df1d42-83d9-4268-ab1b-40b0cf126344"
        },
        "item": {
          "id": "65fb0b3c-58c6-4001-b3a0-b7845afa5c09",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0db2270e-a055-4be3-b5e6-4bf8d84fc620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0587b32-e8bd-4a12-80ec-fb7ef308d1d4",
        "cursor": {
          "ref": "bf4f625a-9868-47af-9c61-462c6161d89d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7dc6a241-2736-448f-8655-409eaa21abd6"
        },
        "item": {
          "id": "b0587b32-e8bd-4a12-80ec-fb7ef308d1d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b229642d-ba2e-4209-afeb-ee1687f08219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dd7302-b3b5-450d-99b4-dd4bf0edc0bc",
        "cursor": {
          "ref": "4c93827b-a66a-41a2-8610-5af32c458a2e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eb8c2ef7-9107-42c9-b61e-84bec11a9869"
        },
        "item": {
          "id": "34dd7302-b3b5-450d-99b4-dd4bf0edc0bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e428575b-cec6-4cd9-b2ac-8e3120bd090d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8aeb23-25de-415a-abf5-b374ffa3ff97",
        "cursor": {
          "ref": "7d9eb26e-dc94-4f66-9e3a-fb3125c60466",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1d13e7dd-c92b-4f82-9081-59010d5aa4fc"
        },
        "item": {
          "id": "ac8aeb23-25de-415a-abf5-b374ffa3ff97",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a9dbe5ec-92ef-430e-b0dc-a75bafed30fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c2b89-52f4-471f-bc2d-e95a0aa2cdb9",
        "cursor": {
          "ref": "8ae9ac66-eb3e-4348-b992-73b9e76c2990",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0f856e52-ed47-4de3-8a8b-72f222c7cea1"
        },
        "item": {
          "id": "a99c2b89-52f4-471f-bc2d-e95a0aa2cdb9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0210313f-8ed4-434b-a482-1e7d70b3c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ebcbd1-2612-4d99-a73c-41d7dd9a9e35",
        "cursor": {
          "ref": "ea2aa0fb-fe17-4229-9768-2173a01ce140",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8ea5c96f-f1fd-464e-aaa4-7e7d45ce3097"
        },
        "item": {
          "id": "e9ebcbd1-2612-4d99-a73c-41d7dd9a9e35",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9ee5ae01-a675-4ba6-b32c-78194cf0503d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbadbad-0e31-428a-bcd1-aa85b1607745",
        "cursor": {
          "ref": "f94265be-08e4-4c14-b06b-7afb4e83bddf",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e4459f85-0255-483a-9e5d-2831e500c8b5"
        },
        "item": {
          "id": "ecbadbad-0e31-428a-bcd1-aa85b1607745",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "217dcd90-c54e-46bc-bf3b-b010e70a0e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e4d6cd-328d-4a99-ba6e-bbc573c4a3d1",
        "cursor": {
          "ref": "c28ce071-f98a-44c4-9bee-43ff0001e9c0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0fbc76e5-4a7b-4585-b211-24ac7e0c5dba"
        },
        "item": {
          "id": "f6e4d6cd-328d-4a99-ba6e-bbc573c4a3d1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b09628f5-88cf-4119-8b3e-b928b0f95b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dd9216-420f-4485-a26b-d41c844ab76a",
        "cursor": {
          "ref": "3ab7fce3-7504-4e02-9459-ed55a1cf5d98",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "49ff153c-7f3b-4040-a489-6fee9feea9d6"
        },
        "item": {
          "id": "76dd9216-420f-4485-a26b-d41c844ab76a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "09634a36-86f8-4e5b-9e70-26df23289a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f2fe36-e604-4bf7-a95d-0409af456949",
        "cursor": {
          "ref": "5b204e3d-4efc-4d1c-8012-e692a083b811",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "21a60836-97d2-4800-85e1-ff84bab9b1b7"
        },
        "item": {
          "id": "09f2fe36-e604-4bf7-a95d-0409af456949",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73bbff51-1408-4669-a789-6eecff25ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc81f592-6df2-4808-a29c-2a94f0229b9f",
        "cursor": {
          "ref": "4e97ed4f-65c2-4b00-8f0f-7d92bc291055",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "472b9306-fbb3-4bd7-826b-415f6c238242"
        },
        "item": {
          "id": "fc81f592-6df2-4808-a29c-2a94f0229b9f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8df83dd4-0da6-4ea1-bb29-7b39294ec8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105e364a-7e1c-4655-b0d1-96fbb187b883",
        "cursor": {
          "ref": "bb4440dd-380b-416e-bdf3-4fb47eb250d3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1181e2fa-aab5-42bd-8a8a-a9a069aa6048"
        },
        "item": {
          "id": "105e364a-7e1c-4655-b0d1-96fbb187b883",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7b4b26c5-2241-4a33-9b5d-716e8b88aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc66aeb5-01db-4e05-8ae7-8f1e9baa179b",
        "cursor": {
          "ref": "0eb1d5b0-196f-43e8-a857-ed67897e88ff",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c9a4c0af-a824-47c1-8163-f2120e182e21"
        },
        "item": {
          "id": "bc66aeb5-01db-4e05-8ae7-8f1e9baa179b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6fb31e01-ec48-4f90-8b6f-e1da2de0a9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58613154-72a3-471b-8145-6f9a8e3be67f",
        "cursor": {
          "ref": "2863fcbc-e7e4-496b-9b23-2fcb2ab7f691",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "32f3802c-4900-4b73-a8b4-1c7f6da58cd6"
        },
        "item": {
          "id": "58613154-72a3-471b-8145-6f9a8e3be67f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d031b8c3-e960-4eb3-aea5-220105a6597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289e2937-8982-47f5-be68-8da0dfac17f0",
        "cursor": {
          "ref": "458d4382-82c5-49a5-8d82-f8448b75afcc",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "055577ee-5aa1-44ea-9852-a144520f3ffd"
        },
        "item": {
          "id": "289e2937-8982-47f5-be68-8da0dfac17f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db4f8445-0d36-4365-8c69-6a057cfcadb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba0947b-1eee-40cc-a7c5-9d4b8e20e15a",
        "cursor": {
          "ref": "0c52afae-8fcd-48d4-b3ee-a34f194f9a1d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7493fc34-87f6-432c-821e-7a089e0c1cf8"
        },
        "item": {
          "id": "4ba0947b-1eee-40cc-a7c5-9d4b8e20e15a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "766a210a-d908-412d-8488-366d1581fb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8347fbf9-3cf8-4fa8-a6ed-378dc99f3f73",
        "cursor": {
          "ref": "18c8ae59-9a89-40c8-9a56-487c66bcd5f1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4325cc7-dbdb-4acd-915d-892bd42de6d6"
        },
        "item": {
          "id": "8347fbf9-3cf8-4fa8-a6ed-378dc99f3f73",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3b064f3b-df89-4d47-be40-0e29b83d534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36108dda-e3cc-42e9-9956-001f848042cd",
        "cursor": {
          "ref": "479724d2-c5a3-4175-addc-bb3cdd898f8f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5fe8be42-fac8-4802-af7c-3e56d8f2fd80"
        },
        "item": {
          "id": "36108dda-e3cc-42e9-9956-001f848042cd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2f295390-ce82-4bed-8d99-64895e8bf58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f45635-9f68-46ae-a1e3-684f8147cde9",
        "cursor": {
          "ref": "8f568bb2-3974-4646-bffd-6427b63d1193",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "41b2ed18-fa9c-4310-84b1-64067f89f9ed"
        },
        "item": {
          "id": "c3f45635-9f68-46ae-a1e3-684f8147cde9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "85c55514-0088-4bb6-9ac0-60090bb244e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b654d-de29-437e-80ef-f344da81c0d4",
        "cursor": {
          "ref": "0b9111a3-dd59-4156-88d5-6c3dd8220bf7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8020fcc4-471f-4b2b-b1b3-41313f9ed10a"
        },
        "item": {
          "id": "450b654d-de29-437e-80ef-f344da81c0d4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5c80b07e-7ec5-4b7b-b7f3-1eb03570c36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896e4ecd-1bd9-4cb9-b719-25f83c80c398",
        "cursor": {
          "ref": "5105ae44-ef49-4ba1-936e-bbc9e52c1588",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e4ffb0b0-6fa3-4f02-9ca3-f271024ac2a5"
        },
        "item": {
          "id": "896e4ecd-1bd9-4cb9-b719-25f83c80c398",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8b19fea3-23a4-4cc4-8ce4-02d70c5451e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374932fa-33a6-4b27-952f-6774cf28d25d",
        "cursor": {
          "ref": "26497471-88c6-4580-adad-1fb9c7d2920d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c587c150-8d28-40af-8503-e702877fa29f"
        },
        "item": {
          "id": "374932fa-33a6-4b27-952f-6774cf28d25d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "be522b59-0e4a-4d3a-9be9-0788af9be369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d60585-2183-40f1-bdad-0e0226008195",
        "cursor": {
          "ref": "1468c475-83b4-4a19-9810-444b325218cc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "94fd0fe0-e904-4ede-80e2-26d3acfe2368"
        },
        "item": {
          "id": "43d60585-2183-40f1-bdad-0e0226008195",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8c9e9fe5-8ff0-4a2b-8a8d-6cbfd461cacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2cf9c8-c797-4be0-9eb0-6a2b39040b3e",
        "cursor": {
          "ref": "7d9d6034-ec03-4e4d-ac9f-655b11a5a75b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e2af55ce-d66c-4935-b6a0-8a03377e6c32"
        },
        "item": {
          "id": "3d2cf9c8-c797-4be0-9eb0-6a2b39040b3e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ce3d8c79-e52d-4b23-be87-9e2e40972927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c058bfb5-5934-48c3-b578-efc5831b6c2c",
        "cursor": {
          "ref": "536951d3-5c5c-4231-9b5a-1f61a4e0f1c1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fce4438a-932d-4714-8ac1-de4434352877"
        },
        "item": {
          "id": "c058bfb5-5934-48c3-b578-efc5831b6c2c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5db351e9-a8b2-41c5-8a15-df210ea61d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667e9538-b47e-458a-935f-7db574b2d7e8",
        "cursor": {
          "ref": "7d08b886-cb08-43c0-aa8a-77b36f19021b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a2283a5a-0302-4698-9e3f-2601e1555e51"
        },
        "item": {
          "id": "667e9538-b47e-458a-935f-7db574b2d7e8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2b4675c2-bcf1-4b4c-ad1f-e9777dc89487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a25315-9209-4060-b0ee-67ebd9fc134b",
        "cursor": {
          "ref": "378c8804-f4e0-4740-bc63-135b51a4eebb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07a9c8a7-bcc8-41e8-8dcc-ae919dc33a19"
        },
        "item": {
          "id": "e1a25315-9209-4060-b0ee-67ebd9fc134b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12f9985a-c8ea-4da0-905d-8443cfb6180f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92beaba-a39c-4334-9e17-b6f4daa6fa4c",
        "cursor": {
          "ref": "c732c51b-ffe2-45c6-9d21-1f793b1bb1db",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5de69880-f70d-4378-8d64-f9ffd6f0bd54"
        },
        "item": {
          "id": "d92beaba-a39c-4334-9e17-b6f4daa6fa4c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ead84e5b-2489-448c-a6be-9a2e2617b169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ed57a-04be-4360-b8ed-5ecd45157214",
        "cursor": {
          "ref": "83e4198b-29db-48bb-bee1-689301ff6497",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5195b7b7-4ff8-4a2f-8846-31c560414f36"
        },
        "item": {
          "id": "679ed57a-04be-4360-b8ed-5ecd45157214",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0348264a-b2ae-4a80-9396-6c8a20148167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4d928b-4e88-4c29-b4b2-2cb4b4f8fd9a",
        "cursor": {
          "ref": "bd2e0944-e870-4fb9-be77-bd64bf3fca29",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1deb7744-8def-4dc7-93a0-b86f235e695d"
        },
        "item": {
          "id": "2f4d928b-4e88-4c29-b4b2-2cb4b4f8fd9a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fe94f634-ea56-455f-a12a-989f788b9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ab814-2d8a-4f24-a3be-ce5f8e9a3618",
        "cursor": {
          "ref": "8ffe202d-ad91-45ed-a30b-911bcc40e518",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b728fdc0-f307-492a-b7db-05db2ce36956"
        },
        "item": {
          "id": "6e6ab814-2d8a-4f24-a3be-ce5f8e9a3618",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2dbfd0f0-36cc-41ad-9864-9d773f1905a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b82cfae-e6ef-411f-9c2c-cbc48edbce44",
        "cursor": {
          "ref": "a38fe39f-3974-4ba5-86fa-fb5c328bfab2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a48d5b64-f94a-4a03-99db-75e1b427f892"
        },
        "item": {
          "id": "2b82cfae-e6ef-411f-9c2c-cbc48edbce44",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "31b6b74a-388e-48c4-9800-ec73e411c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "11e0912c-09db-45f6-9b34-9fcfa9b023ce",
        "cursor": {
          "ref": "845d7625-c887-4bd3-a5bb-7bb2ed62adbc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2ef1672e-da1d-482e-b972-c7a9eea58e6c"
        },
        "item": {
          "id": "11e0912c-09db-45f6-9b34-9fcfa9b023ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4a800995-ff94-4144-ad9d-2a3b1401ec39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "01d4864d-ee55-4838-a23b-84f73cdb4f5c",
        "cursor": {
          "ref": "8e622850-9209-4f07-8a28-313be0e263d1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da868372-6b5d-49b8-95fa-dd12ac223626"
        },
        "item": {
          "id": "01d4864d-ee55-4838-a23b-84f73cdb4f5c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a52c36c-b064-4914-aa54-8733ddb0be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2af1cba0-6e94-4379-8f88-21ecd4c7f067",
        "cursor": {
          "ref": "3ce16710-487b-45d8-bacb-5003af601737",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "45a95091-5bd9-421b-93af-c7da80f99df3"
        },
        "item": {
          "id": "2af1cba0-6e94-4379-8f88-21ecd4c7f067",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6718073-cd97-418d-80ca-6f1c2bb8d37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9b154994-0002-4908-9b3d-203e473ae820",
        "cursor": {
          "ref": "d146ae4e-09df-4e93-b338-871e5854aa26",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cf3af937-d788-4be1-a5ed-a8c5cfdc3dbc"
        },
        "item": {
          "id": "9b154994-0002-4908-9b3d-203e473ae820",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0a89361c-dfa0-4f6b-aa7f-c2a0abd37236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1dfab19f-50db-43a7-adc3-53af8a00509e",
        "cursor": {
          "ref": "06fbafdb-ee14-4e5d-82bb-1972e61529da",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "033bcc90-1d10-45c3-8365-ba7ec4fd91b7"
        },
        "item": {
          "id": "1dfab19f-50db-43a7-adc3-53af8a00509e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bdc77873-3a89-4c90-824f-99bee9351537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "61e63e0c-06dd-4336-92bf-08df4909e1fe",
        "cursor": {
          "ref": "7ddf99c8-e9af-440e-921e-3912b394d039",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a8959da-416d-4ee2-86e2-8948c9ea8c6f"
        },
        "item": {
          "id": "61e63e0c-06dd-4336-92bf-08df4909e1fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8719cc8d-d817-4fb6-a86d-4a5143dbcc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "98880c0d-b75b-4870-8633-c27aa4c7805d",
        "cursor": {
          "ref": "08be1644-3f1c-4552-9cd2-909a28e550e7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "829c4268-432e-4e69-80cd-94182fa945b9"
        },
        "item": {
          "id": "98880c0d-b75b-4870-8633-c27aa4c7805d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b91c7b1f-5a80-4b0b-9e89-72ca79fb3a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2d88e5-51dd-43bd-a87c-081b230ef113",
        "cursor": {
          "ref": "dd70df21-c6c6-40b9-9643-af395e2f108a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "98811163-9f89-46db-b355-39f17daa9530"
        },
        "item": {
          "id": "cf2d88e5-51dd-43bd-a87c-081b230ef113",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e895e0a6-3c9d-4000-be81-b3d0c3e949e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28954da-d8e5-4fd8-aea9-ffdaefc2677f",
        "cursor": {
          "ref": "daa5083e-b526-47a3-94db-6d703526b036",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "18731ca5-d34f-4145-9ecb-cd7392a14978"
        },
        "item": {
          "id": "c28954da-d8e5-4fd8-aea9-ffdaefc2677f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41f8012f-0bac-4354-aa52-dd8216e9e0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f666ae30-dcdc-449e-970f-8f8e7d9ab9de",
        "cursor": {
          "ref": "5e9ae8ab-73bf-4a91-8d05-4dcbcec81dfd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1b343bc5-971b-4ea1-b0a8-7ac7c6764bee"
        },
        "item": {
          "id": "f666ae30-dcdc-449e-970f-8f8e7d9ab9de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6cdf546-522a-497f-98c6-2f9204d4a5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362187b8-59aa-4da1-bc85-4b5c3c4338e4",
        "cursor": {
          "ref": "223061f3-0d01-4aae-825c-2aadf8f6be93",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bafc9031-b51c-4463-96b9-fd7a5e6b0335"
        },
        "item": {
          "id": "362187b8-59aa-4da1-bc85-4b5c3c4338e4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "133c4c25-e7af-490b-a832-d84940b089b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f339db18-cc5b-46d1-8915-d6750a9fd945",
        "cursor": {
          "ref": "7389097c-1292-488e-a208-67958b53a02c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "90bb1a38-43d2-46fa-ba4d-d440dc565982"
        },
        "item": {
          "id": "f339db18-cc5b-46d1-8915-d6750a9fd945",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "35ac1c65-2727-4121-a928-f446dae84f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0357bfa5-8001-4171-ae4f-d25ef26746c4",
        "cursor": {
          "ref": "8e4825ec-7a1f-4c56-8ea3-3ad8364a90ef",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7042f9a-5a51-425a-9aa3-1f9bbb934dea"
        },
        "item": {
          "id": "0357bfa5-8001-4171-ae4f-d25ef26746c4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1fd06d72-0b96-42c6-92ff-a4c4f64dc035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a409f9-5aee-4c0f-90d9-c5f851c5d918",
        "cursor": {
          "ref": "fdc4c87e-938a-4c22-a74d-ac81f396373e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8961da06-a9af-4a4c-8385-0241f4feec7e"
        },
        "item": {
          "id": "73a409f9-5aee-4c0f-90d9-c5f851c5d918",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97f40cb6-754f-4e2a-b3bd-47f6b67a8e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb0b984-b799-431f-83f8-e1887255b9b9",
        "cursor": {
          "ref": "a2eb2a2f-f5c4-467f-9f2c-3618db26db9b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bd48ec97-75cd-430f-a484-c4a5fc2131de"
        },
        "item": {
          "id": "5bb0b984-b799-431f-83f8-e1887255b9b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1735cbd4-c0f5-4816-9c99-b3c9824aaa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68afaafc-eeb8-4d36-bdc8-b178f8059a70",
        "cursor": {
          "ref": "4910ed6c-7cf3-4e47-9cda-9f8b460b6159",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "316d7720-7352-408b-bed8-7e9305ebe909"
        },
        "item": {
          "id": "68afaafc-eeb8-4d36-bdc8-b178f8059a70",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db9177ed-d862-462e-927d-fba7c6d87bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1006ba63-480b-4f2a-b7bb-02cc437a39aa",
        "cursor": {
          "ref": "b9758437-d5b4-4376-a8ed-7efa971b6d59",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "01815081-910a-4dc5-8729-81f007ea79c7"
        },
        "item": {
          "id": "1006ba63-480b-4f2a-b7bb-02cc437a39aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bf9e3f23-92c8-4268-8c4f-9765250de255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45b072c-52cf-4161-8c4d-d6c1e521446f",
        "cursor": {
          "ref": "6b72dd39-3293-415f-8b3a-043215353c5f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "07fbb486-166a-41a4-adb9-8ba7ac59987e"
        },
        "item": {
          "id": "c45b072c-52cf-4161-8c4d-d6c1e521446f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10829837-7ed1-4773-80fd-892a1c0ab910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9a2061-8ba3-45f6-a6cc-f6cf37842494",
        "cursor": {
          "ref": "9e01f54b-a8df-4fb8-969e-61741a7a2a43",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8016687-bce2-45c7-89cf-4de1e168c373"
        },
        "item": {
          "id": "9d9a2061-8ba3-45f6-a6cc-f6cf37842494",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d8a7dfd7-75ae-493f-88d5-fff27b9aaba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d6c9fc-015e-495d-9fc8-0f9ee7514489",
        "cursor": {
          "ref": "450d6ace-db01-4792-b6bf-bb809432badd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5f73deb5-9d96-4b8a-857a-1d94bb493740"
        },
        "item": {
          "id": "43d6c9fc-015e-495d-9fc8-0f9ee7514489",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6d14c61-7660-4a6b-a3f4-5cebdf282d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee54019d-966a-4526-9801-e97df8aa95bb",
        "cursor": {
          "ref": "2c8fd945-086f-4318-b07b-7c68470fc47d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94172ab2-ca2d-4906-96dd-fe27ebb54272"
        },
        "item": {
          "id": "ee54019d-966a-4526-9801-e97df8aa95bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47e2c6f7-bc6f-467b-a33c-0f21051f0fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6fb3af-2d29-4349-9087-0156d511201d",
        "cursor": {
          "ref": "8d40bfd0-0968-4782-8e31-a5983537c181",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1fa02807-2e94-4b91-b16c-c6b11de358d5"
        },
        "item": {
          "id": "3d6fb3af-2d29-4349-9087-0156d511201d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76430d36-fbfb-4ec7-9b80-bf11dee02486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d71240-12fd-44fe-874a-78bf618a6218",
        "cursor": {
          "ref": "47582a68-80d1-4721-a1b4-3affde598863",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fe11f573-acab-48bf-8dc3-25f9af69d373"
        },
        "item": {
          "id": "14d71240-12fd-44fe-874a-78bf618a6218",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f03261fb-fdbc-47d4-9b73-ffbd8e2e322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2632067b-eb03-4167-bc8d-68ee2116e256",
        "cursor": {
          "ref": "47853e0a-a623-475d-8e16-bc865410ca14",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "27b3385a-1e27-499e-8af4-122e5864814e"
        },
        "item": {
          "id": "2632067b-eb03-4167-bc8d-68ee2116e256",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3c377951-4496-4b30-a8fa-6a8ea1615486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50958cfc-f7d7-48f4-980f-b449499c17cc",
        "cursor": {
          "ref": "7fd31c87-7ef6-403d-8a37-548d872160bc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0e4c05dc-3c9b-48e6-b3f9-7ee56d16b434"
        },
        "item": {
          "id": "50958cfc-f7d7-48f4-980f-b449499c17cc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ba1daabb-6984-4e51-b2d2-6e16446d2f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41fc8c5-14d8-4473-bb3b-57087005dee8",
        "cursor": {
          "ref": "f688c54d-e30e-4b53-9a9c-0065a268946b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f6f5b3ba-cec0-4bac-9e2a-f9820b108270"
        },
        "item": {
          "id": "c41fc8c5-14d8-4473-bb3b-57087005dee8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0eb4c0d-434f-4b65-a95d-7a1ff10b4a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fae8ec-2e17-4149-91f7-7f21080cc314",
        "cursor": {
          "ref": "94b8f917-b50a-4248-9b85-577b398f06c9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "47e43a76-85da-44a2-8b33-40e455f8e1fd"
        },
        "item": {
          "id": "81fae8ec-2e17-4149-91f7-7f21080cc314",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5ad45261-efbf-4b49-80e6-49b224259f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8034312-2a1b-422f-bb48-4729f00161e9",
        "cursor": {
          "ref": "55aae836-5c39-463c-96b8-353219617e2b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "17c83204-e03b-4474-9498-e44e28edbb3b"
        },
        "item": {
          "id": "a8034312-2a1b-422f-bb48-4729f00161e9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c307ce25-8e9e-45ba-a980-5d5159d09aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37276aad-c9d2-4b47-bab1-f97762c2ffd0",
        "cursor": {
          "ref": "8bd4728f-78d6-446c-b8ae-114094c8c02d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c84da990-7fc3-4466-9f5d-d9f98ba6c29f"
        },
        "item": {
          "id": "37276aad-c9d2-4b47-bab1-f97762c2ffd0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c45e45f-7928-43b5-9649-590290e1df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a93beb-882d-416e-9ad9-e6d13d95ea4b",
        "cursor": {
          "ref": "057f37b9-16d1-4aeb-9ac3-0d9dc5de65d7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "96c657f4-b49e-4e4c-93fa-ca4956bc993c"
        },
        "item": {
          "id": "48a93beb-882d-416e-9ad9-e6d13d95ea4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d6800791-3ac4-410a-9523-82a6b550a2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cfb019-b74a-4b46-8989-059a97ad8166",
        "cursor": {
          "ref": "4365c89a-4b12-496c-8df6-34ceb6aec27d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0c7f565-7057-4209-a4b8-5235d2469ab1"
        },
        "item": {
          "id": "a4cfb019-b74a-4b46-8989-059a97ad8166",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "57a005be-da89-4925-8bca-97619ba8dedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1f3aa8-b2fe-4d82-a4f9-f5bcfa393daa",
        "cursor": {
          "ref": "1d630325-3ae0-406e-8249-8c161bb3540b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d83d45e-609a-46dc-b656-86e25be3635f"
        },
        "item": {
          "id": "5c1f3aa8-b2fe-4d82-a4f9-f5bcfa393daa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8af6c42e-5e5c-43b7-9fad-da93b36126aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72416a28-b14a-4827-bb6e-35b47bc169f4",
        "cursor": {
          "ref": "ee71f5e3-812d-47e4-a34a-f6118fe637b6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d84473a8-1c0d-42c2-ad9e-7f138cede915"
        },
        "item": {
          "id": "72416a28-b14a-4827-bb6e-35b47bc169f4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac498dfd-4299-4e88-8207-b3b3deb8c594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7a1a22-68f3-40d7-8458-907ae27ac4eb",
        "cursor": {
          "ref": "ad2210c0-0338-48af-b88c-89a9786cb6f9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c970bba2-13d9-40c3-904a-055e7c5a697c"
        },
        "item": {
          "id": "eb7a1a22-68f3-40d7-8458-907ae27ac4eb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "63128e98-e17a-4f83-9805-c4f3c273e5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d32c9-cf38-4fbf-9d5f-4bf0e9cd579f",
        "cursor": {
          "ref": "36cfe8a7-2320-4e50-b912-0c612f1152ad",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e93be387-22e4-479c-ae51-459b3a322aba"
        },
        "item": {
          "id": "d45d32c9-cf38-4fbf-9d5f-4bf0e9cd579f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "08f3f7b9-396e-438b-a7f4-230793ee4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e735034-cbb9-487f-b57e-2e23dc992ffc",
        "cursor": {
          "ref": "cfd45992-60ac-4d32-8159-b51f36a8d95d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3dfc7ee3-f99b-4ac2-9290-902cfc916e91"
        },
        "item": {
          "id": "9e735034-cbb9-487f-b57e-2e23dc992ffc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3173d48d-2b86-47eb-9178-0381a78cccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f9013c-3c1e-4fa1-a396-eca82dd471e8",
        "cursor": {
          "ref": "4d288f65-5a5a-4dc7-a9b7-e4204f0d8b89",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f8b9a38e-7bc6-4742-a86a-c5ab9af92b37"
        },
        "item": {
          "id": "a0f9013c-3c1e-4fa1-a396-eca82dd471e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5c3ffab2-e69b-4748-b141-b4a06ba45817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427b29a9-8a31-476a-9426-80bcd8132d53",
        "cursor": {
          "ref": "d9a3cbdd-5cb9-49de-889a-af247a62f9d7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1c0a75bb-e8ba-4006-8e64-44f1bc084d4d"
        },
        "item": {
          "id": "427b29a9-8a31-476a-9426-80bcd8132d53",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ed12209d-f639-474a-83da-4a49ab7272b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fed18b3-bcf9-48fc-a9a1-54a2ed96b6cd",
        "cursor": {
          "ref": "38a59e61-6d7f-4f55-ad36-57281ea5e3c3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0ace706f-ead4-4908-a7ba-87e8b6cd0b57"
        },
        "item": {
          "id": "7fed18b3-bcf9-48fc-a9a1-54a2ed96b6cd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6331ab7b-909a-49ce-acf1-b1bb7697989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a4d71b-35a0-4caf-83d5-c75b0a7c1c0e",
        "cursor": {
          "ref": "9a0492d8-cd71-4375-8506-fac3166391bd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "221937eb-e6df-4c07-92c5-71c340388098"
        },
        "item": {
          "id": "45a4d71b-35a0-4caf-83d5-c75b0a7c1c0e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a3896c1f-7252-47e8-9781-0a021e693f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac31d157-a20d-4280-906e-bc1285f38d76",
        "cursor": {
          "ref": "581a56b7-374c-40d9-aec8-af297a97fdb4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "16be0ac9-abc6-4198-ba0c-f9680fc1392a"
        },
        "item": {
          "id": "ac31d157-a20d-4280-906e-bc1285f38d76",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0e597471-a87b-4b7a-8a75-c3c311860fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e60943e-c568-465c-bb32-feb1843945dc",
        "cursor": {
          "ref": "d2ea8b05-797b-486c-b129-b348da474ce6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22a8c7c5-3d50-488b-ad97-989c25feb39c"
        },
        "item": {
          "id": "8e60943e-c568-465c-bb32-feb1843945dc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1d213721-bf22-4502-bff8-4a17bb2a3abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7856cf-6ec0-4280-ac38-3865abc30b36",
        "cursor": {
          "ref": "98416291-f5e5-4e47-bc59-a1e7040d31c4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "36a04218-bb63-40ae-a0af-ff8fa322651f"
        },
        "item": {
          "id": "1f7856cf-6ec0-4280-ac38-3865abc30b36",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "89d4da25-a5c1-4675-938f-00dfb895fdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc6bfde-f367-4a73-8caa-e7a25a1e89ea",
        "cursor": {
          "ref": "5eaa50ad-55ee-450e-81d8-f7a9c4d60f23",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66d75757-05e5-4c76-951c-eb3d303b1590"
        },
        "item": {
          "id": "7dc6bfde-f367-4a73-8caa-e7a25a1e89ea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e1e5a9e3-4ec0-46d6-aa05-44eebfc94188",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba5d1a4-c76b-4d8b-8c19-280b4409d1cd",
        "cursor": {
          "ref": "a5ddb809-fbb5-401c-ada9-cd4dce4591d9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb5495c6-1305-4015-a044-f5403fe7e463"
        },
        "item": {
          "id": "fba5d1a4-c76b-4d8b-8c19-280b4409d1cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6998b9b0-0e5e-4f77-b788-cbb19bdf76f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d082ce3b-d016-465d-958c-68ae8d48f8e5",
        "cursor": {
          "ref": "79c97d65-19f7-473c-b9bd-d89234e74102",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0ceda234-7e60-4bb6-b762-916f576338fa"
        },
        "item": {
          "id": "d082ce3b-d016-465d-958c-68ae8d48f8e5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f1112cc5-ca7e-4ae2-872a-9aaec4bbf068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9066b-732b-4cc7-9a8a-7e5e4776ee78",
        "cursor": {
          "ref": "560009f3-6bbf-443d-a1ad-5323aec74f92",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2ac87be6-a7c9-4ec5-ae68-cdee36b002a4"
        },
        "item": {
          "id": "eed9066b-732b-4cc7-9a8a-7e5e4776ee78",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bc7cd70c-72c7-49ff-a07e-cb390bc8e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a2f1e4-a04c-4876-91cc-7da37fb8c5f4",
        "cursor": {
          "ref": "6c043a05-0cbc-4b19-8bd3-0de56f6efb18",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5391c938-65d5-4da4-95ef-b888fe2b9b37"
        },
        "item": {
          "id": "04a2f1e4-a04c-4876-91cc-7da37fb8c5f4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0b4b3028-d71f-4340-a04f-61b8ece015e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44b5f2b-2ca7-44d3-8d91-8e8adfbb01e5",
        "cursor": {
          "ref": "51cb1700-82e5-424b-9eeb-838cd0e03101",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "95959c78-7e60-4336-ace1-9c218afde41f"
        },
        "item": {
          "id": "d44b5f2b-2ca7-44d3-8d91-8e8adfbb01e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ae9c4dc3-bfcb-436a-9f60-a26fac9b10f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17733eee-d4ee-4ead-b6b4-1fa9b8291470",
        "cursor": {
          "ref": "09094eb8-ba86-4a7d-a39f-33c63efda98f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "286d7d59-2788-4ea3-b6a7-66c60812dec3"
        },
        "item": {
          "id": "17733eee-d4ee-4ead-b6b4-1fa9b8291470",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "335532e0-a146-4169-8ee9-6a6af28c4ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0b1185-df52-44fa-ab5a-0bbd77541f22",
        "cursor": {
          "ref": "742bab4a-243c-4a7c-b575-e2c1aa692361",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10696f89-2f52-405a-9ad8-429fc77444f2"
        },
        "item": {
          "id": "1b0b1185-df52-44fa-ab5a-0bbd77541f22",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cb51d952-a150-4013-945c-93bf742271be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd999492-cb48-4b6e-8400-6abb94a0b194",
        "cursor": {
          "ref": "bcfcee7e-e91f-450e-83b1-d8175d214a6e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0800d5be-3a0d-413a-b298-737d9988995e"
        },
        "item": {
          "id": "fd999492-cb48-4b6e-8400-6abb94a0b194",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "559d78c1-d1f8-4647-af05-b95a27d92c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c59849-39f9-4ed1-96d3-1ca9c9f6828c",
        "cursor": {
          "ref": "61321369-44ff-44b2-b31b-5b76e8e1303b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dfa48c15-5834-4579-b1f9-f372f94a4f04"
        },
        "item": {
          "id": "96c59849-39f9-4ed1-96d3-1ca9c9f6828c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a49a865a-7317-453e-a2f9-0c4c5d212741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75f055-8b9b-464e-bb53-ea381f5f8eb5",
        "cursor": {
          "ref": "8b42e815-43c7-4246-8bb9-e53a95b0afc4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e6305dd-0b6f-412e-a960-1391a4cc415d"
        },
        "item": {
          "id": "aa75f055-8b9b-464e-bb53-ea381f5f8eb5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a303f493-5a15-495c-81f8-3f853135de9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da858693-afbd-4e97-862b-3ecdfdb71fde",
        "cursor": {
          "ref": "c9784261-1eae-4f92-899f-494561730a47",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "22f4e564-6719-4d4b-bc26-3ac8c1f14b8d"
        },
        "item": {
          "id": "da858693-afbd-4e97-862b-3ecdfdb71fde",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6c8bbba6-62c3-431a-b293-91a651f6ef97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b33fda-0b42-4962-aeed-3dbfb3a660c3",
        "cursor": {
          "ref": "c02d7987-9ede-432e-a599-4e47c783a04c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0623b610-7ea7-49d4-9f2f-1e5c65827fb7"
        },
        "item": {
          "id": "e4b33fda-0b42-4962-aeed-3dbfb3a660c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cd57b7a8-4671-4475-896d-1120c9f313ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a607bc-2dd6-4aaa-a33d-4478a570bb9e",
        "cursor": {
          "ref": "d1ded766-97d7-404d-8aee-4f8fa33cb070",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42da2cea-e1ae-4e8a-8fc9-8a6cdc738185"
        },
        "item": {
          "id": "c9a607bc-2dd6-4aaa-a33d-4478a570bb9e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d84cefdc-446e-4849-a772-c8253595e322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33d9505-a758-48ce-886e-83f26b0e93a4",
        "cursor": {
          "ref": "e949f390-8c6d-4aef-b1bb-5ba1285867a0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f38c4748-bfe2-4c6e-aa6b-0ec48820dcbc"
        },
        "item": {
          "id": "e33d9505-a758-48ce-886e-83f26b0e93a4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7c8789b5-2a8b-46d9-958f-74852272a981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a761e-b4b5-4b52-9f60-f00365b486da",
        "cursor": {
          "ref": "71b79396-d68d-4829-a36e-60620717bd1e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b78eb7bd-1417-49a2-b93c-89aeca2d1d7b"
        },
        "item": {
          "id": "443a761e-b4b5-4b52-9f60-f00365b486da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e6dc9eb0-7c31-4641-b3b2-e39e5d84d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1b7a7d-39b0-445a-bc5b-2ea1e02d2ebf",
        "cursor": {
          "ref": "a30298c9-78eb-4811-9414-8485bb55317a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9c7d3380-33b6-4f31-9c18-c8386bb0dfff"
        },
        "item": {
          "id": "5b1b7a7d-39b0-445a-bc5b-2ea1e02d2ebf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "97375679-d962-4dab-ad03-9999d291d6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d01fc-9746-40f8-87f4-1012c19718f5",
        "cursor": {
          "ref": "d758b8d5-c370-4cbd-b86b-ee5f2ae462fe",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25df6191-e956-4553-aea5-bf73fc798f65"
        },
        "item": {
          "id": "556d01fc-9746-40f8-87f4-1012c19718f5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f6f89657-4715-48ef-ac71-51d8597eb92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520e3fc7-6c00-4192-9dd1-feacc244744f",
        "cursor": {
          "ref": "6517644d-c76e-416a-901f-e75ea2e5bc6f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dbce6d79-766f-44a3-a816-b7806aee1ad3"
        },
        "item": {
          "id": "520e3fc7-6c00-4192-9dd1-feacc244744f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ffc3294a-b6d2-4cf6-b443-b6a3215007f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a2846d-8506-4da6-9ab0-61cda59f616b",
        "cursor": {
          "ref": "e748a46b-5bdd-4aed-9433-e9e8483a524f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fd73b9ca-952c-4a92-a399-38b7c5581d82"
        },
        "item": {
          "id": "f8a2846d-8506-4da6-9ab0-61cda59f616b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c7788d08-6eca-4eaa-b79e-77a6d800222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b70db1-be83-4f95-86ae-c7df10509812",
        "cursor": {
          "ref": "55b86948-0913-43b1-8e75-fbd835651bfd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b645e4bc-45c8-4b7a-9caa-930f64405549"
        },
        "item": {
          "id": "e1b70db1-be83-4f95-86ae-c7df10509812",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9d983664-fe07-44fb-b876-ad02ccf86cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f760d47-b8d1-4fb2-91d8-e6bb988ed58e",
        "cursor": {
          "ref": "03a8a1f3-ed94-4899-94ec-7e71a3660000",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8fb64e6c-0723-4b40-b8f8-eab4b6bf5df0"
        },
        "item": {
          "id": "6f760d47-b8d1-4fb2-91d8-e6bb988ed58e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9429f77a-58f6-43f8-9a71-201df2088834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20324e7c-2626-463f-903d-51b39d75a1ce",
        "cursor": {
          "ref": "e35b13eb-c28d-4546-9e55-1886c3bdd858",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "607b7f94-9825-4489-a282-db4fe377c308"
        },
        "item": {
          "id": "20324e7c-2626-463f-903d-51b39d75a1ce",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ebaca75-2e53-4fb8-95d1-1dec2b924127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7381a5-e768-4762-bd34-83c69c9b7e44",
        "cursor": {
          "ref": "f1a1e4db-123e-4146-8394-187b14662e9c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "77dca8e3-ef15-4a4f-adf5-b083914e55fa"
        },
        "item": {
          "id": "ad7381a5-e768-4762-bd34-83c69c9b7e44",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "79f73006-3c22-4255-9022-aa3407bd1c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0203f1-d14d-4b5f-9ea3-424cc928fc1c",
        "cursor": {
          "ref": "c5d5d56d-c998-4dc4-bda9-d5cce18361c9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b3630d14-fb84-49dc-990d-ef7c33311965"
        },
        "item": {
          "id": "7b0203f1-d14d-4b5f-9ea3-424cc928fc1c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8074f725-f32a-4f40-a283-6e3de7491abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36fb300-5d41-4b49-a7b6-6b3a5d2684d9",
        "cursor": {
          "ref": "5e97e5cf-06c5-4f99-b8cb-0375c52aea8b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f62c0ce7-762a-4d48-b39d-4c0601c519b0"
        },
        "item": {
          "id": "b36fb300-5d41-4b49-a7b6-6b3a5d2684d9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "730ec645-1273-4285-bb2e-4410045e65cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636e5ce9-bf2c-413e-b217-256fe94148c3",
        "cursor": {
          "ref": "ff769cc6-1316-4877-9590-550d767ce802",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d08bee5c-3fa0-4b91-ba71-a48105dae9ca"
        },
        "item": {
          "id": "636e5ce9-bf2c-413e-b217-256fe94148c3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "68d75046-2318-437d-85a8-4d52a373c290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df660b49-6952-4048-8bb3-b0e08104df6e",
        "cursor": {
          "ref": "69d934e5-48cc-4d55-82b9-4f8fea913c93",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c2e105cd-3431-4b87-859f-ed460c66858d"
        },
        "item": {
          "id": "df660b49-6952-4048-8bb3-b0e08104df6e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3bd4a281-1739-457b-98f8-ad211c3915a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a021d4-d183-4ec6-b194-e1214e1cc4ff",
        "cursor": {
          "ref": "b7d60a5b-24c3-4e2f-bd96-b662fc32aebf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2570a1ac-08b0-4055-bdaf-87180d6e8235"
        },
        "item": {
          "id": "44a021d4-d183-4ec6-b194-e1214e1cc4ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0ab6d80a-7a2c-4a20-b58b-d09cb4bd0f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b34faa-9b01-42b7-89d6-4307406fa62d",
        "cursor": {
          "ref": "af08c27c-6b2b-438d-898e-54924d2e3195",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85ca9b91-da9c-404f-a5c0-ffa11d935b4f"
        },
        "item": {
          "id": "80b34faa-9b01-42b7-89d6-4307406fa62d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7fe56bad-f898-4879-9e53-f20d7da6ffe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494fcafb-2c26-41ef-8eb7-dfbf51001ce7",
        "cursor": {
          "ref": "a3cf7009-e2ee-474d-88ea-ba6ff2c0640f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fe0390ff-1589-4548-a710-6d994af21dd2"
        },
        "item": {
          "id": "494fcafb-2c26-41ef-8eb7-dfbf51001ce7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd00d715-0516-4335-9be5-aba4e417a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f06f7c-227d-4823-bf45-eac309599bb5",
        "cursor": {
          "ref": "d767c46e-8f67-404c-8043-4f54cffdc722",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "05f3ce35-2400-463d-9d20-ab3769666637"
        },
        "item": {
          "id": "55f06f7c-227d-4823-bf45-eac309599bb5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a677716d-de68-4350-ba85-7a75417642a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd67c482-fa7e-4c93-92ea-b2906b71d484",
        "cursor": {
          "ref": "9208cd5e-426d-40a2-a938-46c2a8b35fcd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "03182555-c547-488c-be91-edd746411e10"
        },
        "item": {
          "id": "fd67c482-fa7e-4c93-92ea-b2906b71d484",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6ddf64eb-a710-40e6-af5d-a1bf045583a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddc1b19-9866-4589-b635-9d9ab154dd3f",
        "cursor": {
          "ref": "a95e8bd7-e989-44cb-9439-e89a950a8b8b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "19a43921-cd1b-491d-89aa-0d002146e4ac"
        },
        "item": {
          "id": "3ddc1b19-9866-4589-b635-9d9ab154dd3f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "13e5eb37-20c6-4335-bab2-5d061cb9cc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a74930-4398-4e8e-8dfc-8b5ca280e493",
        "cursor": {
          "ref": "7c435d45-77e1-4736-a088-f274217676f9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "981e3bc1-8417-4c37-a5a0-c9f09008ebb7"
        },
        "item": {
          "id": "10a74930-4398-4e8e-8dfc-8b5ca280e493",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cdef33ca-4e15-49a5-b5b9-5f52ff0974d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0635b0f0-d06d-4c8f-ad45-abd5b6a28dc7",
        "cursor": {
          "ref": "aa5ae3fe-ace3-4edf-a390-6bfb74841305",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fa4b71b5-b31b-40b3-b8cc-b0ac7d0f0086"
        },
        "item": {
          "id": "0635b0f0-d06d-4c8f-ad45-abd5b6a28dc7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "39fe56b9-7f20-4d52-a461-82caf25dffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60484358-4a8f-4008-8e23-de6a3c51954a",
        "cursor": {
          "ref": "79c379d5-0e9b-4f5f-b384-0c3012147ea8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8589467-33bd-43cd-89e0-3cd4a35875f1"
        },
        "item": {
          "id": "60484358-4a8f-4008-8e23-de6a3c51954a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "08237b26-88cf-4ae8-a489-2024244d14d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076176a9-93ac-441e-8a18-52f9dc70a804",
        "cursor": {
          "ref": "741a093e-06c4-4e6e-8680-f50da6438f75",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "80898b7b-2cbd-48c2-babe-7582fb32d9e3"
        },
        "item": {
          "id": "076176a9-93ac-441e-8a18-52f9dc70a804",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "544dcefb-59c6-4fc1-96b6-d63b4cc27938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c826133c-c8ce-484e-af7d-65d750197eaf",
        "cursor": {
          "ref": "048c7528-4921-455f-9fce-a254a11a46d2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3443a4ac-7676-4365-bc55-6f3ac32ac8a1"
        },
        "item": {
          "id": "c826133c-c8ce-484e-af7d-65d750197eaf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22df05eb-0cfe-4d6e-9b70-5dc32665f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7e745d-e84f-4ca3-aff7-2eef7425ae30",
        "cursor": {
          "ref": "9d593dab-8aa5-4014-9f32-83806944942f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5528cdc8-ff3e-4696-91ae-e4945b08938d"
        },
        "item": {
          "id": "ef7e745d-e84f-4ca3-aff7-2eef7425ae30",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e42c180-c8c8-42b8-af36-884e96b4278f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c4fa5-9f5c-4935-b58a-1b3ef3458518",
        "cursor": {
          "ref": "9395c0b8-8fdf-4dd1-867f-130afd40a49b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "60efca93-9c2b-4189-a089-1559035b2f7d"
        },
        "item": {
          "id": "2e4c4fa5-9f5c-4935-b58a-1b3ef3458518",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "403efe28-4aa1-40ae-ba14-c2af8f575bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dc0834-b7eb-4119-b06a-993896376035",
        "cursor": {
          "ref": "e4edaf86-7847-4317-9266-eb46ceecd373",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7d4b782-5338-4555-ac67-af8624d9b5a0"
        },
        "item": {
          "id": "c9dc0834-b7eb-4119-b06a-993896376035",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1090581c-a460-4ab0-ab4f-03d14d364ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0123d8-7e59-472f-a6af-aa6b3016d5a3",
        "cursor": {
          "ref": "ca9ab87d-5c0d-44cc-a5be-165a5f6f1305",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c266ec0f-5221-4ed7-9f6d-c06a9cdb1d84"
        },
        "item": {
          "id": "7e0123d8-7e59-472f-a6af-aa6b3016d5a3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a77acad1-d119-4c4e-8588-1538cd26da8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66123ad-150b-4057-8a7a-6beca1b899ee",
        "cursor": {
          "ref": "4f4910b0-67e6-47d4-8551-044680cd1adb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b7d0be5-edf2-4757-acf1-e8c77a53224b"
        },
        "item": {
          "id": "c66123ad-150b-4057-8a7a-6beca1b899ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee45a194-23c6-4e6e-b7f6-83b61e8f3e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b43abd-e630-445e-9b2c-795c85d58b5c",
        "cursor": {
          "ref": "de559f4e-b4ad-4c35-af59-488f4d49363e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c0a2f728-e7ae-4f5c-8f02-3a7b4b09cabf"
        },
        "item": {
          "id": "19b43abd-e630-445e-9b2c-795c85d58b5c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2ade8e1e-e7a5-4c45-8149-b8f6e197d758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c5ea6b-58a0-4657-aaed-0d9a58c30819",
        "cursor": {
          "ref": "e5937216-875c-4dea-bc03-20daf120eac0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6d16e6c-cc78-48ec-b3f0-e057ea891fdf"
        },
        "item": {
          "id": "a6c5ea6b-58a0-4657-aaed-0d9a58c30819",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f8d835dc-88da-4c71-be7f-68b681137e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4eac36-da40-47d0-986e-1c8f0095682d",
        "cursor": {
          "ref": "52ce4160-ca71-4509-832b-9c062f3ae565",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "05faf96d-765b-4f01-9f6f-a43c3f2c0041"
        },
        "item": {
          "id": "eb4eac36-da40-47d0-986e-1c8f0095682d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eb84a820-e592-4889-905a-735a80ad7dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c889e03-cfb0-4bdd-9a6d-fbb6d55f33b0",
        "cursor": {
          "ref": "8c80e22f-a3b9-4abd-b793-ff235fd5f7ef",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a0d63f7-1567-43e9-a700-590ff2d5aa3d"
        },
        "item": {
          "id": "7c889e03-cfb0-4bdd-9a6d-fbb6d55f33b0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ff486db6-d6d2-4e84-bc0f-d450bb6ab10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e963a7e7-f30b-41f4-bf6d-c0b0daf18656",
        "cursor": {
          "ref": "db46160a-afcd-4cb1-97fe-eaea46d2fed6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "036f3115-d37f-40a7-9cbc-5e8683e43bee"
        },
        "item": {
          "id": "e963a7e7-f30b-41f4-bf6d-c0b0daf18656",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c2f2767-0bbb-461f-830c-d49addfbd4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a58315-3553-412f-9fe3-bd31745516ef",
        "cursor": {
          "ref": "e3c273da-f683-4802-9dba-b6cd2c827f46",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "80b99c01-febd-419b-a8e5-6396fcf470a4"
        },
        "item": {
          "id": "92a58315-3553-412f-9fe3-bd31745516ef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "899542be-18a3-49c1-b4cd-d617a536ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70fd7c7-8ce0-46c9-9cd9-06404580a931",
        "cursor": {
          "ref": "9dd50514-1a6a-42e0-9221-8bde3c8402fc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c864802e-2130-4ec2-a91f-1bcad69daf80"
        },
        "item": {
          "id": "c70fd7c7-8ce0-46c9-9cd9-06404580a931",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d501e304-3905-4ddd-b7a7-dd10bf7bed99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89f6c37-8d08-4bad-bc4b-536a1e8cb3f9",
        "cursor": {
          "ref": "200a1271-b19e-4485-bbbb-4756175b93d4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5b792eed-60fb-41fd-b5d8-5526ca85af1d"
        },
        "item": {
          "id": "d89f6c37-8d08-4bad-bc4b-536a1e8cb3f9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "09db6cc9-b1e4-4d30-8216-8e212bc7ce78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c83fe-8c76-4371-a0f1-7df2a3a6b3b7",
        "cursor": {
          "ref": "04d2b238-7dae-42ee-8ed3-bc13e7f1bcc4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "01b8363f-e069-4abe-8daa-936cdf5f712e"
        },
        "item": {
          "id": "670c83fe-8c76-4371-a0f1-7df2a3a6b3b7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ef4c804-ed4b-426d-837c-f5a8955fe81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b2ee39-5118-48e9-9913-956dbeead9e6",
        "cursor": {
          "ref": "6ad4aaad-62f7-4ba0-bdb7-be39e0eb7444",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33e83e2f-2342-4792-8d28-85d1aa716c15"
        },
        "item": {
          "id": "b2b2ee39-5118-48e9-9913-956dbeead9e6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "79ea0c9c-8efd-495c-89bf-ca0a0f3821c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c69c78-f61f-48a1-940e-5ea2906036a8",
        "cursor": {
          "ref": "13e27636-02ea-43be-912f-cf8a88f659da",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2162dbb-227d-4bab-8da2-660fb3b9afc4"
        },
        "item": {
          "id": "d5c69c78-f61f-48a1-940e-5ea2906036a8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d50a666b-ef00-49b4-ae00-813830706316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28609898-8739-49c1-9963-0f0680f43160",
        "cursor": {
          "ref": "18c5d2e4-0e69-4595-9b7d-a7372703049e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9a187b1c-3585-4ecb-8b2c-f16e68743922"
        },
        "item": {
          "id": "28609898-8739-49c1-9963-0f0680f43160",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a48b68b7-604a-45a8-ab21-52d5e9de967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40afb571-b36e-492a-a3b4-cb40dfea5691",
        "cursor": {
          "ref": "9401297d-b5ad-4fc6-853f-cf04ba4f8ddb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "532e21b8-e3f8-4a20-a5e9-eab7bd5b21a0"
        },
        "item": {
          "id": "40afb571-b36e-492a-a3b4-cb40dfea5691",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dd4a370f-47b2-4b76-aec4-7f64cc16baa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7648d8f-fca8-4a59-ba20-ef61e6b2f034",
        "cursor": {
          "ref": "cdf6ad02-0da0-41db-b732-357e4c402b30",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6106fd33-da00-4eed-9a28-bfc587fd53f5"
        },
        "item": {
          "id": "b7648d8f-fca8-4a59-ba20-ef61e6b2f034",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8ee6c807-c38c-4ffd-a30b-9fd7512a9deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec158da2-97f3-41f1-9979-16bfc312cbc4",
        "cursor": {
          "ref": "926181c8-c83f-4aab-8d90-0787614ad7a9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9ef5731c-a692-497f-a2cc-77b66a50ff06"
        },
        "item": {
          "id": "ec158da2-97f3-41f1-9979-16bfc312cbc4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "beae8941-0ea8-4a2d-be83-2edd381ead69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3709ec53-c159-4248-a72b-83c5eab81b7a",
        "cursor": {
          "ref": "90d7551c-711e-42d5-aa9f-0e46bfd660c0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d6efa71f-8ae6-4674-ab80-6c730c7652b0"
        },
        "item": {
          "id": "3709ec53-c159-4248-a72b-83c5eab81b7a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "495dffe9-5eed-435a-9608-4c74defa6ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b3510b-cd0a-4ff0-9d72-731d2ef40ed9",
        "cursor": {
          "ref": "0817deaf-1d90-4831-b46f-2e9e8b9c9a28",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "49b16a64-9a54-44bc-8e33-262f4a10f394"
        },
        "item": {
          "id": "f2b3510b-cd0a-4ff0-9d72-731d2ef40ed9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a3687080-987a-4a44-a5cd-cf61e9033088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9321e5-cac6-4d9f-b1f2-02bb6655f5a5",
        "cursor": {
          "ref": "50817287-ed0d-4f63-a23f-772d063b4689",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9901c723-826f-4ba0-b641-37862056b241"
        },
        "item": {
          "id": "dd9321e5-cac6-4d9f-b1f2-02bb6655f5a5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "78d2de80-a249-45c6-bbfc-13011f6ae033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62495213-8e9f-483c-a351-aa778868d171",
        "cursor": {
          "ref": "747a9608-f747-4a19-8584-300ebe18d5ae",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56517136-a3a2-44d4-9859-4a52623103a4"
        },
        "item": {
          "id": "62495213-8e9f-483c-a351-aa778868d171",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f6f603f5-2624-4b6a-b898-fb63d3da92a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a587a76-14c4-4a5a-ba03-4f061e15083b",
        "cursor": {
          "ref": "209e8dd5-c0de-440e-bf99-3843c4c90f46",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5538db9a-4c9f-4b5e-b687-4ca80843a19a"
        },
        "item": {
          "id": "7a587a76-14c4-4a5a-ba03-4f061e15083b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bed30c19-966d-42fc-b3e6-048f8069ea58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e969263e-6716-4b7a-b25e-d8433db25737",
        "cursor": {
          "ref": "c0edb528-5ee2-4c29-ba8f-778158a2c8c9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f04b2308-8770-4445-8e9a-0d613c0b0b1f"
        },
        "item": {
          "id": "e969263e-6716-4b7a-b25e-d8433db25737",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aecfcab9-bff2-4d2a-9ff3-14dcf561af5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d9f753-8a5b-45d8-be3b-637a29272a83",
        "cursor": {
          "ref": "0949284c-77b0-437f-a298-6b9dd7d2815d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0a52366b-7ded-4ef3-8554-cd1173a15416"
        },
        "item": {
          "id": "f0d9f753-8a5b-45d8-be3b-637a29272a83",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f51a0a34-3367-4330-a151-e6dba618c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e65e711-0187-40e5-9f8c-c6f8e8ea184e",
        "cursor": {
          "ref": "62032f76-8082-42dd-9706-07471f3b15de",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "05e5b8b6-e08a-4316-a913-49e4a74c9303"
        },
        "item": {
          "id": "6e65e711-0187-40e5-9f8c-c6f8e8ea184e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1314cab4-2a4b-43e8-89db-34469a7c69fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2524e0-aaef-4a1d-b897-d960ec47991e",
        "cursor": {
          "ref": "89d9644d-6f4c-45c1-aff6-f9fe18f0dc91",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d1ef5654-70dc-4ea7-aa8e-012454389a42"
        },
        "item": {
          "id": "4a2524e0-aaef-4a1d-b897-d960ec47991e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88e5abe9-eb94-4a5e-a362-a2651b9e9ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edccbef-d3bc-47af-8d46-9e733e49b593",
        "cursor": {
          "ref": "9e0f15f5-ef49-4060-8640-a2941d902a36",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "02131092-4935-450b-8a18-83c979d3cbbb"
        },
        "item": {
          "id": "1edccbef-d3bc-47af-8d46-9e733e49b593",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1bb46fe4-de7b-42a5-b51d-e542598c9f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437b926-9e2a-4c6f-97be-a07a73e4f279",
        "cursor": {
          "ref": "1ebf0f65-5679-42f5-b527-2aecfd742251",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b6e2c6fc-09ec-4d88-8f64-f8fe887601dc"
        },
        "item": {
          "id": "4437b926-9e2a-4c6f-97be-a07a73e4f279",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "53848ef5-f616-4c1d-921a-2f63f3221c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9fff2b-7552-47fe-8871-6b433c93164c",
        "cursor": {
          "ref": "28c67878-6fba-43e8-8768-15116ca0aef1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "20bbc329-7ff8-409d-98f4-ba4a38bd0280"
        },
        "item": {
          "id": "0d9fff2b-7552-47fe-8871-6b433c93164c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ffd27f26-b04c-4386-a553-270e49f7fcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51593cc7-8166-42e1-a1df-709a7902e48f",
        "cursor": {
          "ref": "af1f1324-48a2-4630-8214-c907e2b72e10",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2fb4c0d8-4975-4a71-bf6a-38899d4b7f48"
        },
        "item": {
          "id": "51593cc7-8166-42e1-a1df-709a7902e48f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dbf1005c-fc3a-4eb4-aefd-7d033dbefba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebccb9c-a1f1-417a-abfb-e17d54644e4f",
        "cursor": {
          "ref": "c63e6a34-707b-4c0b-a8d7-c4a5b0c99997",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0f3db224-6a3f-4599-b654-c8c9a26b40f9"
        },
        "item": {
          "id": "5ebccb9c-a1f1-417a-abfb-e17d54644e4f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d769d49d-ae94-42f8-8f20-f429b1273f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e95ad-fb7c-4b81-9d9e-b704bdbfd5f8",
        "cursor": {
          "ref": "5a379b3d-3749-4485-9d0a-75237ebfadc7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e73f0a1b-cbb6-4944-ab17-2fac2a71f9db"
        },
        "item": {
          "id": "568e95ad-fb7c-4b81-9d9e-b704bdbfd5f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8558ee49-7c75-431d-a82f-5098919619d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752b91c5-1bf7-4396-8d25-71adc1462cb1",
        "cursor": {
          "ref": "fb99e9ac-8557-4d8c-9a24-2edad57a857c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f6c7d357-467f-4f36-8242-348cce6f9a9a"
        },
        "item": {
          "id": "752b91c5-1bf7-4396-8d25-71adc1462cb1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "779bcae8-1b27-4576-bbc5-421da3d7baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382c2dd-7cca-486d-97be-b664f6b39329",
        "cursor": {
          "ref": "c4838a7f-4124-4691-93a8-5292fe09828a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab029743-9217-49f9-be16-8ddca388aa8c"
        },
        "item": {
          "id": "c382c2dd-7cca-486d-97be-b664f6b39329",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8bdd1567-3904-476c-8f54-43277b624929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2f1ad2-2445-41c5-948f-55d6047e6228",
        "cursor": {
          "ref": "6f24b2a7-8193-4504-841b-ff549cc4d9af",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4c28e13b-dd54-45cb-a917-5e399ef8dea7"
        },
        "item": {
          "id": "7f2f1ad2-2445-41c5-948f-55d6047e6228",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1102f1dc-efa2-4b1e-b2ea-9e31cbb0c918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b84a7a-f7ca-4c70-bebd-7838686aadab",
        "cursor": {
          "ref": "097795a8-020d-4541-9c28-1f7a0bb89502",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8e2bd7c1-9d30-4bd7-a6ce-bc1fae61ad8a"
        },
        "item": {
          "id": "c3b84a7a-f7ca-4c70-bebd-7838686aadab",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c91587b-e3ac-4e12-bdda-1cc94369f751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07889feb-a2cc-402f-af9d-d659e9e68922",
        "cursor": {
          "ref": "621a64b3-4987-4c1e-b165-a22206619441",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "052c5425-2df7-4732-a623-b44efbaef2a5"
        },
        "item": {
          "id": "07889feb-a2cc-402f-af9d-d659e9e68922",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e48354a6-0d2d-4696-9090-dd9051ef6d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b275d26f-4d1b-4a16-b821-0e56f78d3b39",
        "cursor": {
          "ref": "311d4ba6-c0fa-45fa-8634-f0c9c0092c43",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "12c274fe-2a31-42e7-9dca-b1e2ead6da7d"
        },
        "item": {
          "id": "b275d26f-4d1b-4a16-b821-0e56f78d3b39",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "df4e11c1-53eb-47ee-a264-3b4829a4ab98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ddbd30-a16b-4138-96aa-6207491ae0e5",
        "cursor": {
          "ref": "c867013f-a11f-44a3-8a52-cd2a5025e5e0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c36f5980-5437-45b3-9c2c-c7976c369d3d"
        },
        "item": {
          "id": "30ddbd30-a16b-4138-96aa-6207491ae0e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7a1b3682-bd62-4dad-a507-e7492ded0a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0e9791-8dbe-4e51-94f1-309e641c5984",
        "cursor": {
          "ref": "aef611cb-0c16-4a21-a665-03d3b619b3cf",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5cd63259-d1fa-458a-a091-dcfe287cdc1a"
        },
        "item": {
          "id": "fb0e9791-8dbe-4e51-94f1-309e641c5984",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5b05e7d2-6ead-4f04-86eb-6e3dcc23fbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17819dc-f703-46f2-8e7d-843c86347339",
        "cursor": {
          "ref": "04966ed2-7133-4484-88f8-cad5d25b5307",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16d3e21a-8514-46fc-89c2-2551b84ec7d1"
        },
        "item": {
          "id": "f17819dc-f703-46f2-8e7d-843c86347339",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6246fc83-27c6-4776-89f7-b3ca8ee13149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16aa103-1e48-4ee3-96bd-37f8bd8cd4c4",
        "cursor": {
          "ref": "c34046fe-d5e1-4dea-b8c0-754d7e3d795c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d7a254ee-7bf3-453c-9ec0-0d737b63934b"
        },
        "item": {
          "id": "e16aa103-1e48-4ee3-96bd-37f8bd8cd4c4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "91ef61a4-06c9-4dcf-bcf3-ff0c248ba697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a554e95-b0a7-403f-a970-73d1051fc63d",
        "cursor": {
          "ref": "4e0fdaae-ecef-4116-b288-3d9f5c53f183",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b422b7e-2672-4088-a7d8-4107a845d8d6"
        },
        "item": {
          "id": "8a554e95-b0a7-403f-a970-73d1051fc63d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "348efd6b-e862-4b09-83db-f4beeb25fe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b9daf-84e9-4567-967a-4eaa9d48345f",
        "cursor": {
          "ref": "8fb7231d-376f-4256-b975-945a18146372",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0eef9217-81f9-458a-a421-31e5f2782e50"
        },
        "item": {
          "id": "8f1b9daf-84e9-4567-967a-4eaa9d48345f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e006d926-eabe-40db-bd8c-8bcf7e7299a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c195e0-dd79-40e0-954d-0af94a7c32d0",
        "cursor": {
          "ref": "18ca9149-ef1e-4d2a-a917-476a9761609b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "173dd479-1205-4684-bfbc-9ca462480687"
        },
        "item": {
          "id": "c4c195e0-dd79-40e0-954d-0af94a7c32d0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fa613318-8909-42ab-843e-a0fb098754a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81976892-ae20-4bd2-8a72-91454581216b",
        "cursor": {
          "ref": "deb96723-b7a7-458c-943a-a7106f40118f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ca7f99bd-3661-4bc1-92ec-251b7dc0ca31"
        },
        "item": {
          "id": "81976892-ae20-4bd2-8a72-91454581216b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1123bd4f-3989-4882-ac53-f1ea52f30e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09089ff-40c7-48dd-95a9-acd955b61543",
        "cursor": {
          "ref": "6db8b024-2301-49a9-8dc6-f88d642540bb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "def38d47-3052-4287-bd81-bcc6ec518bf8"
        },
        "item": {
          "id": "b09089ff-40c7-48dd-95a9-acd955b61543",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f893fc3-856d-4349-afa7-b3d17daa71da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31564f35-b4cf-4cb4-a4d7-6cde546e827a",
        "cursor": {
          "ref": "00699693-87a9-44f1-a8c8-6088a81694eb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f367762-8ded-47bb-88bf-db7441618a8a"
        },
        "item": {
          "id": "31564f35-b4cf-4cb4-a4d7-6cde546e827a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "70d0b17e-5c89-453b-b3ca-950f1b930119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a6170-16e3-42b3-952d-c918726aa7ca",
        "cursor": {
          "ref": "015bfa5d-c3cd-479d-8196-34a83a77b089",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f826572a-1a0d-434f-aefe-732656c69679"
        },
        "item": {
          "id": "2a3a6170-16e3-42b3-952d-c918726aa7ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4faaf21a-6431-4d19-8ce1-b18293bba978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b32d56-0817-4d9b-a2e3-5faad7b19090",
        "cursor": {
          "ref": "4cc618d9-15f4-4d4e-954a-15e0de7bb0e4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "624eb5fb-9610-4903-a5f2-c945664abdde"
        },
        "item": {
          "id": "70b32d56-0817-4d9b-a2e3-5faad7b19090",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6255e7f0-81d4-4d2c-822e-eb4aa70b70b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef5bc1-535d-429c-99b7-665255b20e96",
        "cursor": {
          "ref": "e9be6a40-274a-493c-a223-0b7d0aa4c801",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "346e18c5-f3f9-4177-a8f7-942e97f181c1"
        },
        "item": {
          "id": "75ef5bc1-535d-429c-99b7-665255b20e96",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c670bea6-c84d-459c-9059-625f20f296df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce72f8c-2140-45b6-b54a-f7d4cc4e3a5b",
        "cursor": {
          "ref": "1cdbf96f-95b9-4210-8760-9c2e0cdb037b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "485994f5-efbb-439c-aca6-bb9f08ceb2d4"
        },
        "item": {
          "id": "7ce72f8c-2140-45b6-b54a-f7d4cc4e3a5b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21e39c4a-92c2-41a5-b1b2-2fcde800db24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b482d3ff-8be2-4746-a420-2edef6b02569",
        "cursor": {
          "ref": "6d0c5ebc-bf38-4a18-aefa-74f8fbe71996",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d83d73f1-a86c-430e-8393-e6e02939850a"
        },
        "item": {
          "id": "b482d3ff-8be2-4746-a420-2edef6b02569",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c891cf68-c8ce-449d-85ae-c0d00512b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd45cae-3fd3-40a2-a3b6-62f9ed570d8f",
        "cursor": {
          "ref": "eb9af158-2b68-4700-8509-561a16cd0c27",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0bb37cca-ece4-43ea-9a75-3e1532d90be9"
        },
        "item": {
          "id": "fcd45cae-3fd3-40a2-a3b6-62f9ed570d8f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "29cb8940-44f6-4b67-8ede-2b594a00715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48237a3-01af-4a41-a9e6-cfb562deb7dc",
        "cursor": {
          "ref": "f9ed592f-a71d-4f04-8ddf-0ebe089c50b6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "77a7edea-8962-42a1-8716-915d6b50faf4"
        },
        "item": {
          "id": "e48237a3-01af-4a41-a9e6-cfb562deb7dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c6ff4066-5d60-4b10-b0f4-c99f151bab7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755f9968-a2f5-4822-9948-482ff3ef1cfa",
        "cursor": {
          "ref": "5cbb0541-09c3-43c8-8d37-74da13fe364c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "daa3a0cc-9e47-48f6-a0d0-9a4143f1f13f"
        },
        "item": {
          "id": "755f9968-a2f5-4822-9948-482ff3ef1cfa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0d44ed72-aa78-42aa-9f42-a436cabe879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95820156-13b0-4a35-8505-595a7b853ea7",
        "cursor": {
          "ref": "8f513d2d-71dd-4e64-bc6a-832e9e381399",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a3a099a6-7159-4c1b-9689-c5f5dab0ca6a"
        },
        "item": {
          "id": "95820156-13b0-4a35-8505-595a7b853ea7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "36eae165-c9c9-4883-9e79-14e2c316dc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf315a9-5bfb-4bec-ba5a-08d2e2c25c1d",
        "cursor": {
          "ref": "9ea47f7b-a402-4d1e-bb0f-608e21700fa1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f5d9c935-f67f-4dda-a2e2-a0bea2e484e8"
        },
        "item": {
          "id": "1cf315a9-5bfb-4bec-ba5a-08d2e2c25c1d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ababc9b2-2a58-41b9-8a0b-4e0fb0750fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "6a629212-24d6-4629-af13-350dee104691",
        "cursor": {
          "ref": "c0053baa-ec46-45ec-9c0a-b6a5bc20df4d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "232e1d33-8190-4128-b714-67c9c8f28b42"
        },
        "item": {
          "id": "6a629212-24d6-4629-af13-350dee104691",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37289604-f1a2-402b-bee0-1ae917f607d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e27d514c-c992-4ea7-ad4d-cc20dd913cb2",
        "cursor": {
          "ref": "01aeafb3-f0f4-44ca-803d-f5b7539acb7d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "318d51f1-d3ee-4528-a990-74d0fc590b36"
        },
        "item": {
          "id": "e27d514c-c992-4ea7-ad4d-cc20dd913cb2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1dc603e4-e81a-4f14-8ef9-e58f7c7763ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "48f99d2e-9a94-4991-8b80-3fefafbe9992",
        "cursor": {
          "ref": "d7859938-c1ac-4b56-945d-bdbfd413517c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a1e264f-14fc-471e-ae71-985613ce08a7"
        },
        "item": {
          "id": "48f99d2e-9a94-4991-8b80-3fefafbe9992",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06ef6a73-4548-4d84-84b5-ef01f30adcce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f99d2e-9a94-4991-8b80-3fefafbe9992",
        "cursor": {
          "ref": "d7859938-c1ac-4b56-945d-bdbfd413517c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a1e264f-14fc-471e-ae71-985613ce08a7"
        },
        "item": {
          "id": "48f99d2e-9a94-4991-8b80-3fefafbe9992",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "06ef6a73-4548-4d84-84b5-ef01f30adcce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5addef10-f352-4dd6-ae26-d4ce39d7a0aa",
        "cursor": {
          "ref": "96f8f328-0d7e-464f-85b7-0911b33e2499",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a8539f15-3a2c-4d20-ad21-3d1c2bfdd11c"
        },
        "item": {
          "id": "5addef10-f352-4dd6-ae26-d4ce39d7a0aa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a93cf4aa-7da9-4acd-aaca-9807ad04ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ebe5df-b12a-4749-a767-bb5101f02c84",
        "cursor": {
          "ref": "700d6a42-8f02-424b-baed-a528c5abcd36",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "62c5388a-78ef-44d9-8467-08fc19d50f30"
        },
        "item": {
          "id": "c6ebe5df-b12a-4749-a767-bb5101f02c84",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "046a416c-8cb6-4286-8289-fd342c312062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}