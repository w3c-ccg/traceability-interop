{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72e695a6-ceac-432e-b9c9-1c6313cdee0d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9936ea62-f2b5-4614-b009-21cfbe3335a8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6efd9dd-97f7-4886-ada2-b9774d2a6680",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27082e3d-c211-4a90-8d97-4b2f6aed8ffa"
                }
              }
            ]
          },
          {
            "id": "23f62bde-3457-478d-aff6-dd0b1e240242",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "090b7714-ef2b-48eb-a7cd-291238d5a5a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab10b7cb-9889-4356-81f3-c55fe1195b07"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6adc6c96-c677-4ee4-b469-44d8f1021c70",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9f9d381e-ac25-47f2-ad5e-a21940f882b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf39d887-62da-4810-87ee-aa7c1795a57a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fa0d7f3-06e2-474f-b41c-f25447f7a689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5b50a5a-d00e-43ad-9dfe-1aefea0d023a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8902c88-904a-40dd-a1fd-ea6a164a994c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f1ae8ce-d8b5-47e4-bb62-33351ba4a175"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4fcd0cca-b758-4faf-acd9-22e867824848",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2189d12-eb95-4cfa-b6e8-4222330642b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72791d88-9c6d-4297-b023-02ff5be0164e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3f604763-0284-4d6c-918e-bee5d3158aa8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cd07dc5-6112-4bf1-8e2a-26a2306b80d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01ea6c35-87c5-4e92-894d-b12b8dc062c2"
            }
          }
        ]
      },
      {
        "id": "346bc578-2763-476b-bd65-c590d6c36b5e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1756b838-0cd0-46d2-996c-93505ad2afe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2099af8-3afc-42e1-8589-8d0e0e1dc2b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31513981-1391-49c0-9fb3-6c58295540a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8218c5-0b44-49b8-94e5-462dfd186496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7558b6c8-70dc-474b-b08f-9dabd9628af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed42c84-4a3c-4121-9335-c8dda957cb5b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bbc682-c2f3-4d2e-80a7-4e3c8136ef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a09da34-d505-4178-b8ad-379d66fd418e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a2d79d-fb85-4f59-9807-dd7d6490c191",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b307ab-61ed-4249-a31b-63a11b343e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ddb471d-2d48-4f00-bdf1-3b28288cadb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1e54bb3-c260-47ab-a5ad-62cd12c43a35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "684b8b45-2f77-4a26-a6ba-377796abcecd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f213da4c-c485-48cc-a0d8-ae71254000ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1182baef-d66b-4427-9571-2de26440fbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e896cf15-7860-4946-97fa-4e1f62bc6d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da21fec1-6189-4dea-b382-6dfb071c587f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "384b9e96-feb1-46e4-bd1d-828f322013db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a42e6619-6aeb-4aeb-8d3c-0ee7eaec141b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c64f1c66-548a-4dfe-853b-78379f7dad32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b911aa7-7f7b-44b9-910a-83df96b0438f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33d6ada3-face-4370-badc-b27ba4861294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "56b57c3e-cbdb-4e90-8c97-2fdae4465434"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "176cf50e-4ce4-47e4-8bc9-5216ac731592",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "162fca01-9ccd-4d82-897e-bc0487298341"
            }
          }
        ]
      },
      {
        "id": "9bac514e-6ba3-4787-ace0-4bdabdd920cc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4a6a1fb2-f2f1-4db2-ba27-50e3e88c2561",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb44132a-f17f-48f7-8e3b-b322cc2934d2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "85b9cf27-da76-497d-9289-1b5eb3328ee5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97d3a6-8449-4177-a115-72c89d29ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8551da6-bda6-45f5-8b5b-28e38057f6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12be15ae-5cf3-43af-b69f-575a0df8a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2e7ffe-10f6-421a-8fa1-ef55a2f54b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4ee7ee-e525-4658-9c51-34dc2bd92415",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71750a05-3f09-42f5-9b7f-3de47ecd9114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e6ac41-5258-442f-9f3f-a4d7f70ec2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a584bb1d-190f-4425-b578-0f230df2a683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c30116b5-9682-408c-a053-3797a588c317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7533bf86-6326-4e26-b131-75d41481b63c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84573737-82dc-437b-9c64-daec9fceac2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca73b73-aa5b-48c3-acc4-4014da43817d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae94a9bf-a41f-4562-972d-7548a08750e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bac7fb4-e6df-4646-abff-512f9e39916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2310134-aaea-4ba7-b2eb-f451d0d28f8a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2837b48-0531-4efc-8be1-799a67c07085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af41e4c-afbb-4f8c-80e7-47b274c22f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81b3b10-6eac-4aff-a914-d3d67c09c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87bcbe5e-66b2-4d7c-a902-34df36bf735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ca3b7-e6c2-4cc4-9a06-28769990d15e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ff7205-0de6-4b5e-83c4-db6dfb161e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da37bd8-11d2-42ec-91c7-da773be3be60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25fec8a-57da-4e64-9200-df5f92346b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a797719d-2f55-4247-aefc-5302b42d4c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a27ad6f-2fa2-4f44-a2f6-dacb642e74b6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597434db-6d28-496b-8bf6-8d691228c6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4291d3df-6a00-4bf3-943f-1dd2baf36068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a474524-768b-4f79-8ba2-456f53ddd97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dbc6bf9-cf45-4460-beb1-8dd9439346a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfc324d-a60f-4700-97bc-c665bf2d5520",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b70f1ad-1b40-440c-9e4b-67e9365d695d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7207d3ac-a989-4dd5-8e06-b2843dc26c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e7f407-b385-4fd5-9bcc-ba552a1e64cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc3f3cd0-80fd-4f84-9a12-e67bba3216b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2774f5-94f7-447c-a689-1ffc735faf4a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceea9370-fcae-4a58-9dcf-24751a220343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283f6297-f849-401a-878d-7182a957cb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03825c65-4a92-4e4d-8d36-d3d6d88a2a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "840bf37e-438e-4011-bc74-52cbe59b61f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9715a603-3c7d-4069-b2b5-19bb49d77f58",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6187b6cb-9e77-4ba0-bb0b-54a2a5d7a0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f675d5-f271-4204-bff2-3ae7a62c1bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25612bb-bef6-4676-be23-5429becf0aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7489729c-c8f9-435e-8c9a-82d79f8f4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9258101e-910e-4ff6-8722-5f30044475a8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99544aaa-7a64-4a38-a843-f7bbf10a96fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c904e2-610a-4359-8bba-069bdebe7b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f5e7b-f1be-44d1-9f3a-4315e252addc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11925b4-607a-4f62-8dab-2bcf1745e998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d7e6e-b6c0-44b1-a220-48beebb83660",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6106c6b8-593a-46b2-b4a9-9e3d07d8d619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a95c90a-4b67-4393-8387-f678b00d980a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f36d4-15f8-4640-afa3-769c0b771228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "166f7413-f06f-4570-bdf6-1ae74b9e0491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ba48d5-6f60-465d-92cf-e3ce65f72f77",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab7ae0-cbfd-4598-99e2-01c0b4531fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3095edd-b811-48f0-8368-0d1f5b806f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a1341-5460-4d8c-91a4-fc14910d8601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd32abe5-74df-4008-9d61-85040d46f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a19657-27e4-47ed-9c68-167f19b5a2db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf3ef0a-7225-4525-9f4a-16750a3e5a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4465efec-45f9-4ec8-b27c-e25c8d469711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d6171f-3c58-4b38-b93e-e160a9ed9622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f68488e-8327-4081-bf0b-cfbcbdbc738d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f85f9f1-4ffb-4843-b978-7882270c793c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fbca4d-6a60-42bf-b4da-830fd49189af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1847581-9163-42de-8eef-f24b0ea715d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d527f2-72c7-479a-b19c-52094017d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e23359ae-689d-4674-9b8f-05d86fb45eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00e933b-6a78-4296-b35d-696e15704eff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eacdb12-e3ed-4567-9869-34252d6b63f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e80ff4-e2bc-461c-b729-ce0ff38f9a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a8a7c7-5378-4d5e-a116-20b80a509159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b5346f-6a4c-4f39-91ea-6c867e245c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac0ec9c-d580-4999-88e8-b600c240d57b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7972961-7378-4cec-8c3f-1b98f26e7b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deaf9ff-d495-44c1-9251-a06bfb680177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a2e56-8f90-4c26-aa83-9cb771e54950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f973977e-9c28-4b72-af9a-2466c7c76571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d78a701-358f-4dcf-8668-6eba1993fd2e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f51a54-b223-4b59-bbc1-76560475db62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88242b3f-0e41-4419-9fb6-f612fd1487b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5762a4-f291-4aeb-82ae-ce9ae8dff12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a6b9812-da2e-4e20-aa28-932a2827029d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f323be4-552d-49fb-b2c4-c0830b3a4429",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aab1b7b-312e-4d0e-89d1-90756949103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6580c80-522c-40af-8e78-4c201c8ce503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6972e724-0bd0-4996-8b2e-bb41f5be8b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "184626b9-3631-4865-940b-f4c720ac084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5879c711-9040-4e1d-b636-cad187d5939d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186e1717-a0f3-49e3-86fd-6ad18629ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41020926-d286-4d7a-b86d-b7b657086a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301acb32-e21e-4f5a-b4f8-69893f67b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f072f39-b5e3-409e-a930-70e455b8556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abafa46-d6f4-42c9-b87b-7627c930a269",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71999231-aa26-4bb7-8adb-3961db5a9388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ce9962-a093-4252-87f4-d1f342e34c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def7621a-0f7c-4c8b-834d-a21edffa2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7538674e-893e-43ac-9867-936eb70584f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aef9ffd-e8d9-4d87-8a8b-f74f9e2b4d55",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165ffaf8-e380-4f7e-b07b-e7ca957734d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312f5f29-42d3-4d06-bf74-d79dd8d8769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80257e3-4b3d-4315-8f78-4c0ed96791a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec8680a-977a-4482-a78d-9debb5fd9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d690dbe-e7fb-4e02-914e-d1b1da015d9f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515d1b9c-617e-4204-b901-85552ecba3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb4006d-471c-4c7f-a6e4-b02b753e2bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9485d3-cf0a-422d-904a-4bc31747d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c83b83-4c74-4c6d-9472-49fe57a55c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89035d2-54a0-4684-ac97-f6584dea5cc0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0b627e-ddd9-4d05-a5f6-3b595202f863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86978da8-b3d2-4b23-97e5-103514d2e117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6494dc0-8c01-40cb-9965-8ba298b7cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "189b710f-45ec-45c6-8d70-54906e15ec9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a38d27b-db93-427b-a3c1-36dc33a05a20",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920705e-4f07-4e41-9e72-50fd4cfd429a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbdeddb-4262-4b1b-a53e-0b144809fbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdc1484-d530-4554-9d89-bc72a41a2008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f4cc19-cbb9-450f-83a4-a604dd85e54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc56e3c-d857-45d8-971a-e853ff6a5827",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b4f4a1-e3e3-47a0-9661-d88e8c9c9c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7540c7-7942-489c-93ec-90ccf7354ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d978dd-f888-40cd-86c3-4180158ab81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbbf5ea-dcbe-4c18-a000-2b9de00a7e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112b4550-c501-4b7a-b51f-04b55c259316",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a26e64-a538-4fb3-a9ff-b5c0699a70d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88b7050-b4a5-43ec-908e-56e6f49c42c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2eec41-9be4-4123-b46b-ca4f86d5cbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1467407-1a8e-4182-bcbe-15fc0e98107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dacee24-c42e-4d0e-9506-ac0791aa44bb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e0c666-16f8-4f53-84f2-eb6e7d0ecc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ee144c-90aa-449a-8993-7107a2364762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfed127-8fa0-4c88-8229-37ec71b6efec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47276c08-88c9-4425-800b-e54b787a239d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e902197-d347-4bd8-886c-6cc818af8fb5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67143b5-5f8e-4ebf-af3d-1616f6b4dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c01915-a749-490b-bd4d-b7e1d97d120b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747f5591-4fd7-4e60-8245-7055a29dfb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15df14c1-3ff2-4fba-aa70-483716713246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46cc09b-d37d-4c7e-865e-ce69638d0e7b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9406d3-a81b-4766-8376-0862c91b8885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7c2898-7692-46ff-b157-c372316d4fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b847325a-e61a-4ac8-beb2-374d37ca7a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8680bdd-6bfc-48d1-b678-c0fee2ac9305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379bf38e-987e-4fde-a9aa-ea9d9fa17467",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d40d67c-ccd7-43b0-a456-d822800a201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26ec029-6298-4783-995e-1c41ea837ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328527eb-af75-4ab3-8ce1-18927c052181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcca0f81-8134-40f2-bc05-7ddb4c4a84c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c6422a-1352-4469-a5fb-dc423ad7f71b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6add724-66ee-4eae-9f4a-4629b01d7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20c4111-634e-449c-a3c8-8990a52b8f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f6805-2673-4cd7-80c0-ad3c6a0b4ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba7929d-13cc-4ee4-9349-84ed55cbee87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9d63c-1076-4eea-8099-6ba2b8b0c154",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e76817-f321-448a-987c-0b619ab85873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b617943-924e-4c1b-9948-0327de30dcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf4c1b-e9e5-4b7c-abc2-d9b9aa0fbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e073fd-6f02-4d25-94ff-4d509cb86193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f647b91-325b-4c3a-a75b-05613ae26835",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ab4c32-2141-45cd-8055-d7685a917708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730ab104-d08c-455a-8a21-a901d2e660c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96a03af-f4dc-434d-b31d-12bd17d578e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a4ee21-3d65-40ce-a104-034fa746f734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc156d-ea98-4da7-8b38-af6baf5c7d76",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ab0b2e-5614-4af8-a1b8-496527914c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ddec27-f762-4525-8e1f-dd9976bc389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef9d1a6-4c03-40da-af0e-63e5ca7cf7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd51aa4-8114-4920-9e2d-01db877189e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d4a78b-0ee3-4afd-bebc-03c2ccee6198",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6256731-e1fa-46b0-864e-fe26accfc2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1806acf7-b8e1-40d4-bd32-86ec76c5cd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c4b8e4-5237-4701-8d31-464429880664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd09ab-e7bf-4c33-b6ab-7f65875965f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13059ddf-5bb6-4ebf-ab98-ddaffe145426",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f825228-0dbe-4696-8980-7a517fd30e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a03c15ef-c7d6-474b-8769-f420ec36b441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fe2435-09ba-4a66-9869-165c0fb7ef47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96012bc6-8d52-4255-b5ae-28478ef7052a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb782bcb-7510-4fa8-a115-d2f47cb076f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a7dda9-d1f1-4def-a7b3-6d88ac537aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04840e2a-fa30-41f5-94f7-74a48924bded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaab0e9-aaba-43fd-a0b4-347e215577b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fe2a00-fd53-47f1-9033-95ceae229d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa8930e-67f0-4b7c-8ba5-75a2459f7678",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23e5bd-4c56-46fb-b637-0c8575f5afd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cd4c1f-3498-43cf-ae1c-019b6f14abec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4cbc74-2141-4292-99a1-576282bcceab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "893676bd-f1f6-40d2-b351-e1141b6585e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74461c13-9639-4853-acbe-608578f0e5cd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a06ed-6401-478f-bc64-de1f90ffc23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47bef6b-ae42-4a53-bdd6-2df9b9679655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d2cd6-bd9c-470f-9312-b2a6299cf8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "919d7215-30fb-485f-b043-a2a3f3427833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c366d818-d690-488e-be2d-5e2ecc70e169",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b867705a-16d4-43e8-8366-abadcf39a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9de7816-f03b-4140-8a31-b84a7e13535b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247577d-5e5c-4434-9fb5-75ff02b82e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7d5002-5724-4c75-acc8-c8af4b6f6413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b254f0-eeed-45bc-be80-192ab298a647",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fdd0bc-ee6b-4a00-bf52-c63bae520992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa337ea2-0d8c-4749-8319-533874a917e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba90e226-3b57-440f-8c6b-13269ab78eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f59211-84a1-4c45-a1c2-b5358f24c9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5749bf2-c2bd-48e9-b6d4-cdc2c12f631c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b7192c-c329-468b-a41e-369ffefedc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd755e6-c6e2-4a52-9653-f8a17b11edb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63401c33-396d-4d27-b172-f38ca4e15cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f085234b-c87e-460c-8cc6-b54d86043488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59adc16e-da25-4713-8d2a-1dbb4fa19619",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7822c154-92cc-4759-9877-e6c078a9ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17ebf0a-24e7-4dbc-aa09-f437474c6eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c024262-7c4e-41ae-b28c-fe46bad7d879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e044da71-1b4e-4e84-9800-c9790f99f7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e54f15-3061-4a1e-b951-41c7520b0c7e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29ce8c1-8ac1-41d3-b010-13561e058edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc4dbe1-000d-47bc-8ade-50e33047eb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dabf5d-9a57-46db-bb5f-5ee0e2cef34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d32dd4-5060-4964-9ce4-58fe6e55c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb6d20f-e3f7-48a0-93bb-6b9a54142533",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83a4c00-60eb-4f6d-a36c-bc322eb93541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b8154a-0cb6-4a16-95d8-7e5e22411d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6ba7a-0447-4367-b187-192d40b1087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f3c357-a21c-4f1a-8f33-76c977b29da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf1b6a1-6e7d-4b79-ac1f-308b38233869",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c561d5d0-e8a5-4cad-abab-8dfb51315cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbe13a2-8c97-460e-8eee-9858d80cf8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac67be-3b34-42a8-97df-6e14c91bb8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "245c9d03-e349-420e-8df4-250020f81424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be933f52-8c44-4c01-9719-5f72e98fdca2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4c8acc-d46a-4581-af9a-1f841324aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f22597-ccf4-42e6-8e11-ee1f3f5372db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2ebc98-4b5d-4a64-9926-34070732be87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3865ba41-3a2c-42b3-8105-09b9bc22e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eb5586-5a01-4c7c-8992-ffc8d67bdd6f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfb6c3e-f9ca-45ae-b030-8d6b8b87d553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c69ec8f-57e0-4dcc-b5af-560fc5ec27c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac0ac3-ba48-442b-ad0e-69bdaaa57052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3053b90b-3d39-4d53-a9b0-15bbd421a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e60313-7aa8-4bec-836c-8b5d717c4e73",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6ade17-cee1-4224-b736-4326fddb76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f2860a-825f-45ed-b9f8-9be28331de0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e50a1c-b243-4072-9ee0-6352ed9501b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "044630cc-be6c-42a9-8432-da43faf6a1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2fd63e-f051-405f-8699-2250209f71fd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcde1e2d-3e33-4127-9466-e42a4ee32e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1e6c46-26e9-4f2f-b684-555ee2b467df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5b48d1-059f-49b9-b775-4872931038a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed98656f-1e6c-4a5c-8c03-526b74eace12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9453bf6-0d03-483b-8ffc-e81a7616ae14",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe2be2-6f54-4e30-a9e5-5837cb687ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41dadee-a603-4da5-9770-da4928ddb26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cbe2e4-01e3-4269-bafe-98f4450b395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f963acd2-fe69-413a-b19d-097e0cfcfd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49252642-f8be-4d59-a8ae-26431fda70b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf6ce4c-d551-4b6c-92c0-81bb9f8a3559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917dbf41-915d-4a85-8b96-b6172acdfe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b156f1-4fe0-4f6f-9d4c-8261e3c40a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b257828-7300-4614-823d-9bbfe75b285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e3cc7-0453-4324-a322-022e8c773e72",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f134ad3c-7271-4e09-8abf-374125ac9b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e17781-1da1-4f0b-93c6-7a7597a9bbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d488e1f2-7452-41d9-8bc3-420b303eb760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e692a5-9bf4-48c9-9dda-52b4f4f5d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f3796d-ad34-46bc-b80d-442540d74dd0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8110cd3-1d74-43e7-8ef6-2b607709a36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47261154-5766-4152-ae33-89c151d2297b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1696ca-b4be-4d64-b609-818e43db5832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aea58af-ff6e-4835-8bdb-c2396fb967de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a4a2cd-644a-4e97-af2a-04fcfb3eda95",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e3cbf5-0ace-48d8-abbb-2e5ff406feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278a10c3-9750-4107-851e-0d934be08275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30131b2e-7337-49c5-a2f5-0ed9ae802fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14361760-47c2-45b2-828d-b6bd5b4fe57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da81039-22b3-4ac7-9be8-6d49850f750d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8d6a16-3da1-4064-b206-a44f96c2e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ac75c1-90a1-4a2e-9adf-07cacb08ce39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd76178-32c8-4517-9fb0-e9931fc071fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3377f21-e483-4d65-8bc0-d8acae3d9ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49c34a9-15d0-43bb-9e72-07b6421689fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e64404b-1231-4230-b5c0-7a7e2dc15c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613e708c-0eb4-4805-a530-dcf999b69b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3faf77-2cec-43b0-b34a-f5fc7a0ae6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc59e5ce-db61-4630-b1e0-07f0b8592bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25db7146-2ddc-4951-bfce-fbff0cfb71d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bed7ce-a39a-4e7d-b8b0-15ef03a53702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edbe25a-3c69-4aae-bf3f-3e27f4a56839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9f902d-411e-4d81-ab5a-7dd99e1c835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8db982-074b-4d94-96d4-66289cd9b76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfde3386-8d6b-4b0b-9f9d-edb7c1e154d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a9905c-57d0-408f-ba8b-157555c3ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f12ec23-8b99-4b84-946c-9b4ea3246ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6ea1dd-18e9-4906-8d00-b203ef3cdda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7cfbc2-5ac2-46d3-9508-ebc25e6aa0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d83a69-1451-4cf5-bfa0-8601b42744ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9610f468-5b28-4c93-8a29-d9e99eddb416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8ebc2c-2899-4d07-9cef-c05ba6ac64aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469177d5-1040-4434-bb06-c4045d60e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a338abe-0124-49af-9559-70318dfebd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e54ae-6ab6-4723-a429-f793cf481fe7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3029bb0a-d316-407e-a687-35ce6e3d4eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df610368-abf1-4e34-9b36-2ea74c2a5f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4a9676-e5ed-4c12-b9a6-7b01f763f56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b2ab1f-07b0-4654-8ed5-d799590a91b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd9368f-451a-43a0-9ea2-1f06c4d43211",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed37a2-44aa-4029-89d6-e799552332a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4331baf3-c61c-44ef-b2a9-f8f510a588a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9aaf4-97f7-42c3-9f8a-5cc274714b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "756e5a25-0595-4d69-8939-66ac7e7c0471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7af3c90-1c65-4797-8732-81d54086d320",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbe7fb0-cf19-43e6-bb03-e3e5f3ec14fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb553cc-a4d5-49b7-aff9-a51b6a08143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0001f7e-72c9-440b-9eb7-29ace9649fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7395579f-d688-41a2-83c3-6c4fed016466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da9462-5d04-403a-aa45-07816754502e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de15b0c0-f74e-4f48-891c-2eac5a7521d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7efc4f7-5157-4cfa-b9cc-27d0a83be38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723195af-c77c-4ca4-9db0-bc92f5fdb5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8afb18-2104-4375-8365-7d9d0cee6f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85363c2b-e3ce-4b2d-807c-16b10a6de9fb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abe09b5-031d-46b6-8969-47476d2c0d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6835bbef-1a06-40dc-ae9d-096fc4d6e2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75179e8-5150-47ab-91e2-d8acace922c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa602ff-3a3f-48e1-8c8c-146bacda220e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c40eb2-6e88-400f-ba2f-191cd80c76f6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7e61d9-7a40-484f-86d2-41ed8fdc9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13936c3-a248-4ec9-bdc4-8582a692439c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc8482-757f-4270-91c0-0b65d38f1005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9091671-e5a3-4a31-bd6d-1bd5a78a5aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fd4b48-7140-4ea6-8fac-dde962ce2204",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50652e7-64fd-48f7-96a2-efdafb6fb79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0d66a7-03a6-4bb5-a9dd-fe998a157604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3199df89-20bd-4499-8979-4b1f6f74584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5741b648-5b4a-46ff-8864-6763860a33d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7bd216-1751-4cd3-b520-df3d77a477ba",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d700b-73c8-4055-b8d5-2b0a14de1304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561a7354-fc48-4783-8750-3630d332d89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dd3367-b05f-4341-863d-d0c2dd4e5fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2924aba2-a054-42db-ba15-66ead38e6686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91407f62-5b0d-4fcc-ac08-a608251cd97f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81e4197-51d9-4671-af8b-e08c6f0805a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2103ac-5a39-44cf-a4b3-db211f4a0b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2580075f-f808-4364-9f4d-8f740d388fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b174f6fa-a922-4e7e-95ac-4dabd8c67448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9453c0cc-ddd3-4e2c-89b7-b653e091e026",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4247b02-5fd8-400c-92fa-16c30d0db4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382b99a6-8817-4fa9-b2bc-d7d3612a3d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7accb975-b4ad-41cc-81a4-8c505875e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7b43f6-baba-4220-b2e1-5270adcbe3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84e002b-7c80-4e0b-baeb-ba5d904ab6fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e97d7b-9a39-4a6f-ae11-2dfda04a2063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2a0a99-15ef-460a-afac-9a2469897e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab3cda3-0e5c-4988-9bc0-79314601e54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6981d85b-0e5c-449e-97e0-17bbe9f942fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e20b5-05cf-4c60-8a9b-cf582e1bdebd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb69dd-407d-47e8-ab29-0f28a5de7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586227ad-b98b-4302-a61f-6897f1a81b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c72d84-b623-461a-b8f8-d7c07d5dbad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b11611-87d1-4f8a-a89c-f23db52b2b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174311ec-a228-449e-8e6b-3654affc3558",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054f374a-9f69-4728-b86a-1ac843753e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d015d14-abed-4402-8bb3-ee92c50bf8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831bf116-5db2-477a-aad9-186b76d307af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19492eb0-ccf0-4ccd-9e2f-f3f029bd6336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b300310-bac5-4547-9c15-c31ccda80ed0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab88885d-aa06-4b5c-9447-55eb0ad2eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d082bd9-451a-43c8-8d74-a7b90e5e612b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8058b406-d52b-4331-b30f-1f43a51111ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d154d2e-b453-459f-9f0d-c538a6af6d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf33d1c-703e-4634-a51f-b807ffaa1f79",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fecec1-8c83-417a-8f04-09f88b165a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c23fa59-6739-48db-be12-ca1afecac80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d369abc9-230e-442e-b134-971bcefd95f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66df29dd-f78b-422e-91a7-ac47cacb6bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83576061-a3d5-40a1-872e-b7f612a6b157",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2105ba-99ff-4e3a-b518-c73a1d359c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aedb1e-90fe-4736-9ae5-907bf23e00f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79ddd4-347e-4946-9349-6d5e73bd9d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7a7910-ccda-4806-a767-ccb3d002f7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf702735-29e6-4764-bd37-0d31f320d4dc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7699de6-3638-452c-a663-0d1180d58f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85d4328-6bf5-40a8-8d49-32839d33f1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ee1055-d897-4b5d-b964-b16cb9874ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9f481-b564-446f-9560-5c17862a1ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5359f9c6-8482-4f19-878b-88f134a0144f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0b797-1c9b-4f9a-b3c5-d80b87ba895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f2790e-7ae0-4c9f-8b5e-f8c3a08571f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6713bd-c82f-452f-b728-a915ac51f949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1d1d50-8592-40fe-b785-e72dadc632a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248a4cae-7922-4c77-8a35-f50c8c0fd680",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6586f9d5-664a-403f-a2f9-86dd79bc78fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db17c11-8eed-427f-a79a-266017e694cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be53f51-8da1-4f40-aeab-4fe6e91bd5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0377e8a9-b0d1-4822-b575-8e4ae95e86a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5b1b77-47ab-4807-b095-7fd4002ac84f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ababc248-9447-45d3-ab93-4857d0d160f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77946720-4339-4221-ba31-6464aee688a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe435c1-ab81-44b4-bd0d-ceb495f45a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ec03c2-0a53-4047-aa3e-7d69621ec7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f7bf7a-c1ae-4716-ad3e-8597d64fb523",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4662c3d-5129-4748-8dcc-992504bf7a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfc8d77-2950-45ff-9f74-3488816e725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9221775-f970-4c86-b829-323a333db6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a2d707-8de4-409a-8430-7d5d851efad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bda1c5-2860-42cd-bf7e-e435f709fbbb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562f34db-4ca7-4b04-b136-8b7f9a0ca8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb0786b-5255-43be-842b-69753abd7c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f80269-4bc0-472c-b7e6-9d2bfc0b84b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8713a567-2be7-40b7-bd24-6f4597ccda59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e6cec0-1b44-4e8b-804b-c7aed4ae3242",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f091f-3342-4c51-8736-4b2f87ff498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e56af8-7aa3-4381-b1a6-b0c40adbf413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4a9395-7b77-480d-b625-af4581fd6340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cab33bf-f7a6-4c62-81db-a32cb6b90185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2f002-9d4a-4e85-9342-41ca64a18faa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd663897-8ae3-4590-9761-aa464de2c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ec5183-8415-4e22-8757-fcb681b2bb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb8a206-a0e1-4300-b8aa-ce7bd3394eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "552e602c-e8ab-4dba-8ec1-8b00d03ccd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caa99b8-7e3e-4171-98e3-abc07e11fdcf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad229b-1131-4584-b69c-a4da31de6853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7535d710-7795-4bff-81cb-2e83ab8bb944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b4fbf1-16a4-4873-b1c8-8f05d115337c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "807f47ac-2c59-4925-b559-337425621f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aab32b-5c0d-4c51-8b07-47fb9119df6f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9fa6c1-cda6-4e22-98f7-a52a6ed25c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ea9c41-c8bf-4de8-a8ff-c9ccb02b2574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7b3588-cf3d-461b-9033-b7ad7cbd11fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75c942b-500d-491b-a5fe-6d56565b0b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746b32d0-f531-42fa-901b-5c0d576e5d40",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a121a296-0997-45d7-a919-2f6cb18769d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d2a959-7e24-44ad-8cca-777c3f6cb73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bac76cf-ef72-4662-9d34-326c2ec7f03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30ca0724-7a74-402a-8957-c9996dd9ddcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfde063-6d13-473e-a7d2-c6b15cb91e79",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d73c99d-322c-42c0-9934-945d66e8b7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd886ed-d198-4140-b20c-f7ba4db4febe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a07a15-a558-41e9-9815-fefbcb0db6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77344cac-9d7d-4f83-bd23-628b1d3ffbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a69decd-14d5-49c5-a422-6b0577885bc8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bb55d8-3624-4e80-9f0d-81cfc00d01c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8aa2f1-3ce1-4653-bbd1-8b8a6522e42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1dddd0-875e-4a4e-b58d-5126fba8fa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "032b0e4b-fefc-4033-8210-bcef2027f0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21d80ec-5b88-4fc3-ab52-f133a8fe4ece",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33253749-2255-4a4b-8a6e-b5b031d25709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d546e5c-00fb-487a-aa28-65e5a72344da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0281a-43de-4604-bdb1-96ab7f1cf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff4c38c-1328-42f0-89c9-035ac7496ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe0aff8-0e37-4600-b897-a90f4ee22d38",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b6a47c-1831-426f-8a03-c5c843db2c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df41f8da-2c45-4873-aa89-9f8e8d3825c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4112c764-d34e-4e42-b1fa-b2956bdc7eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "73eb4d1f-54ef-48c5-9bcc-7a6400b02c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e36178-3966-4179-8e43-0457e39d8aa7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c44766-94a0-4bd8-9b87-de674f5367af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "243a000a-6900-4472-ab8d-0f2940d0cd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0465a288-4687-429f-bcaf-da2687e8e2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfc0fbb-bf06-4d51-baf6-399aec7d2117"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50bc735b-5e3d-4ca9-8c2c-1e2f6e935c98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "487df789-dc63-4fd4-a103-58d6f59b79bd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc6bcb5-6ca7-4016-ab27-7edaa8aa963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e089b04d-5855-464b-ac4d-6e81c685cd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f41f16e-0ccd-45eb-b5df-62064121449c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4affea89-7cad-4994-8aff-20c2ca16fae3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c3655ef-fe63-44af-a788-012aaf6ad05a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "021d5663-af02-4ade-812b-04ef99503902"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7472a3b-87e2-470a-adac-99bcac2df865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f006fd7-df16-4b87-97e2-2f1809a63462"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5687c8f8-5565-4c7e-a39f-f118cfc149f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c68331e-7679-4392-9563-2dc1da9be710"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6bcc699-2091-46a0-981c-a64a667d2c0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4acbbaa7-e551-4c7e-8a09-bf0dac5055b6"
                }
              }
            ]
          },
          {
            "id": "92e3da79-31c3-4a7b-a002-79602b111fe9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3d29431-d7fc-425b-b4f2-ab3d98e48659",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82d5ec85-1cb6-46cd-8c80-2fc55141c0ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f58d09c-f2c7-4c63-b791-aafe15d6db9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e44da54-4c97-4fe3-9e23-80b784f20aaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc8050fd-29c4-4268-8c21-6e673302f3e3"
                    }
                  }
                ]
              },
              {
                "id": "4cc66552-9cd2-40ee-90d3-e38d9f9bcc20",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8b7f088-53c3-4ef7-bf0f-3f983b11415a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88a80231-8252-427d-860f-390d1937b193"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4975c599-085d-461f-827c-f016b5b1816b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efb38627-13b9-40d4-b6c4-c2c01bb49b07"
                    }
                  }
                ]
              },
              {
                "id": "c7abc685-d6d6-4260-b4d1-073a06ac602a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bf255cf-7d6b-4367-8f26-ff9ffdfffa81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8f2dacc-c0e7-4932-947d-aa4c8f3fc51c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70b5cef6-0e52-45f5-bf08-b700be269be1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b514a6ae-1a9a-43d1-9774-a223b3809ef8"
                    }
                  }
                ]
              },
              {
                "id": "72c0a26f-03c5-4723-98dd-6034d018e5a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef29e133-41f8-42a5-82a8-2e1689f31250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c66c58a3-1819-4548-aa2e-ed6ee220e316"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3cea857-6abc-4fb7-938e-05327d5f9289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4b400706-610c-4911-a496-1c8f747abf1e"
                    }
                  }
                ]
              },
              {
                "id": "19e3e1f2-5fa1-4213-bb26-6f5bde6d34ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b23d77-32c7-4de3-b0ae-fb60398f37ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01424893-65e4-4f9b-8630-17b8acf93126"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74205b78-76bb-41cb-9e79-76e5527f657b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "41a78775-ba11-4cf1-ae00-dcf8a601437e"
                    }
                  }
                ]
              },
              {
                "id": "19e6ef2d-fff1-4b25-b2d8-5f73f260acdb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd57449d-6930-40f6-9567-19da100132d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "badd0c1d-9dca-4401-8296-ac8fbec3ea05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e06f520-b722-4ea2-84ab-19bebbeac9b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33b36cf6-8feb-4b61-b25d-be2fe8645cde"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e717ffa5-720e-4f94-83ff-172f69c37aab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9500f33a-ab56-41f1-80e9-8afec3e53940"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e87169eb-d44d-4956-a34e-3479227aaf56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8209accd-cbe0-44b5-8606-87f4a50e1141"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ee1988c-3c33-4250-8263-b542e91091c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d01eb84f-9a75-4ca7-a5e0-6ea6522a78cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b179409a-a555-494c-9c59-33accfa531c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "081d7669-7d95-4499-94ac-d5fa18504e42"
            }
          }
        ]
      },
      {
        "id": "7754e8ba-5227-425a-bdec-879c7af08a96",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eb3ddfb0-e09a-4789-a13e-686292db49e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6418cb07-b13f-4592-80be-c7cce0bf8e9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ed1ac42-323c-4210-a3d5-fb7f8559475a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9ede84-1a2b-4952-a35b-750878d924ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c4d4be-c072-4f75-a324-4412f9bd5c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25948942-70af-4874-9e94-d29b6bf707b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e8a123-a951-4adc-bd3f-d8df38f2868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b13f7ab-af97-4a3c-b127-716b2239de35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f74085-fbd8-466e-998a-0ae163376a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e1d7e9-df69-450c-9ac0-2bb77aafc024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867907d-f66f-4d88-b077-019eb7dc6259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c38d3e7-b45a-4771-9004-eafff90d99ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94e0f25-e2a6-40aa-a52b-ed136d89ed9b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4da27a-3ec3-42a8-9bd0-54a11fb7c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c65dd75-0726-4e20-ab39-3af526fc710c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b72492-ef59-4023-881d-5fb4bdd525d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "340184e9-6106-4f44-b8eb-18212171d0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f2525a-a0f3-44ef-992e-0ca444be7ec7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52856ada-466d-4455-bbd4-4ef6993f5257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7f09c7-1da1-44ff-b355-f8b22ccc0e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b4f71f-f314-465c-b46f-f241c03e6884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c936b6d-fc51-4b13-9bba-570e735cd213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabe6398-e579-463c-acfd-af8529ca8c98",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f7e41-c5ba-4617-a56a-7c3ac968ddee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0bc90a-161f-4eea-943a-bed520e71b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679fb2b0-630b-4a34-8628-c2008b28e500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775f62fd-c9ac-4180-b741-424b53bb3315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d64d4ba-78fa-47d4-a151-b45791909a38",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2677e180-9a04-43f2-b3fe-9b5770ae89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c654e4da-c69b-4d06-ac1c-4e0fd748b1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2bca71-5d5c-4a6b-8f1d-c79c80b5ae23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "026a72a5-04b5-44d3-89f9-fdd913fe3be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b3750b-e4d5-4c5b-9e06-4ad38b8072f4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605cca36-3c09-4f04-b6b1-55c72889d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4470b69-8f40-4328-93a5-0c37fdac1674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41361066-e21c-451a-af1c-07b4f7f02b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e28f99c-1699-4ff6-a01a-9118c744d07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a20560f-e096-43d9-960b-4e8e6064ca38",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2d9e17-438e-445a-9824-5b1fe29ea5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e118d711-7992-4f99-8399-ced2f8da90ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bceb0a8-0faa-405d-9879-8c74c5cfe16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e088ae-2124-4773-9a25-99ae92e49c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a119e0a-8e28-45bf-abb9-087ce46e7a05",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1a67b6-67ce-4b7c-a320-b6fd55d02d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbdc8e8-98de-4684-b564-35bf3ef431b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6faa8a-8c2d-40a8-8e77-0f67c2c7ae68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7ac9e6-add9-436f-8493-fc1ff9d51fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0163afa6-4858-4d15-afc4-bc19000b8e36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a28a99-df09-4e32-a419-33462df27825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c610b67a-6b29-470e-aa01-4e6fbb6809e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2901b7f8-df29-4bac-ba80-78b004e8e85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "600e2987-cc95-479d-b63f-e6ad96fbf1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c723fae-a7d5-4920-aa16-c5d2f806ff52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c9686a-3d38-42f9-8e01-ce89823e02f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e71394-af3b-4da3-85a8-5fe5a424cfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252f9a59-92a3-47fd-8818-aef7544885c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "329b67f5-db39-4dcf-a79f-17228ea8a830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd0a57e-5d5d-4111-baf1-6bfabc45877e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d301adba-1288-424f-b20c-84ff6cd613dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b8333c-36a2-4209-be54-c6c9664cf7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ed252c-eff2-4fca-9645-f5a84fa9ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "506bd287-dd45-4b86-ae01-1c99ed5e249e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b059c7-661b-45dc-89ab-dad9f14fded9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37bc2ab-2aae-4342-934b-f37519c11dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d772754-90c7-4a53-8d8a-02a0861a4708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a3958d-46b5-4475-bf93-98118e1090cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec55ebc3-6288-46d5-98fb-b7bde50d2891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cbe598-8434-42c7-a09c-a6bc9174202f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f10d9-e3c8-4aed-af45-813630bc1eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72f7efd-6019-42e7-bba7-8a787df9dc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fb41db-8740-4cea-abb3-07fd0a178756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7b551e-0e98-4205-86b7-28d1affe9ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419bd83e-9774-4b05-8b3e-33ecf85c5fbe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e912415-129c-471d-a186-2218be58a657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20bee30-aef6-4006-9832-8b0051a2b85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7fab66-43d9-47b7-8907-c4ab7c22544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "21334289-d587-4be7-a77f-de6f05eb4fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c132f1-e392-4e30-a1ce-757d04b1ccec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaeb73d-2cee-4fa2-82f4-52abbb2eba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d02a1e-c87b-448e-a196-e116b399e50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f0a467-6af6-4301-ad92-1c0239a4cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d3a20b-d921-47e6-a79a-e54152ec49a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102cdfa5-424e-4641-8b58-cc8505ada746",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6777da8-bd76-46ca-a90a-cd3ab958325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd00e27-b10b-45cd-948d-34b47bb7fe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2249257d-2408-438c-9131-471340f5faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d9998e-8f16-4087-a0d6-f58c1db095d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f68758-c3e1-42c1-98ef-24a47c44c30e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4418db3e-db44-45f2-8dec-1fa581dc6fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3a8113-a591-46e3-934f-55eab1e0ae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66b05f1-5b4f-4c7c-bfe3-06287bf0b84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c240d58a-0c53-44a8-95eb-f2e1d5384900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3770629e-f6ea-4b35-84a9-47b954267f6d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13057886-57c4-4c64-bb3e-00ce6f74f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9c0248-2001-499a-a9eb-1fef90f5b1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68361609-5a15-48bb-931a-f819dd52ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe0feda-0bd6-4d1e-bf8b-442b5ac4a11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1078e95-0464-4676-8e91-7102ae0fe117",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a5826c-8194-4367-8e6a-2f2eccc6632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa660c89-1fbc-4655-a218-e720569963af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db570e0-c13a-4ed4-bf81-812917a38726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af393aa8-1a97-4941-ab0f-67e9075d5d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e74e7ff-b501-41d0-badb-2d1971a3c9d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d5e8ec-b023-4080-b2fc-ca658e8c0aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0623a95-c3c6-4c5a-98db-86ee52b6aea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf0162d-2dec-4f0c-aa0c-db6a99707e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2e5557-0531-452c-91c6-e4c522e72d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4d3fb7-daf3-4f38-88e1-2b04ecad5c7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1d4f25-3a81-449f-a27f-6ae425d6dafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4987b9-7df5-4c37-b401-b8f058b8ed3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d0a5b0-e601-45bf-87fb-88409ad47de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae2a709-bf6e-407e-99fd-b14e2349a00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eddcb6-4ee7-49f8-99b4-7b61e67fccab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21abbe18-bc86-4f62-a6e2-34f360ef34b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c431d492-e1bc-4df9-ae82-3946f7389b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569710ca-7b6a-45a8-8761-25d0f9b30546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb74d4c-2b34-4a5e-bd5c-c0e29de25e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab2228-24be-4b31-ad48-af67450959c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8523764-b331-4194-8340-0f50f2f91fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36fc2fc-c2cd-4e10-8566-7d0111099393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73283fd-db78-4812-92da-3286330c41f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "441824c6-59e1-4a75-901e-d663991f0dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42675fab-7820-4e30-bdd3-ae2f350b1fc9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e545a9e-3f9e-4dc5-91eb-00856a0974ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b60a9c-f8dc-4c63-be92-56eca74dbc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ecc8f-a373-423d-a477-8e033d3b9d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7fc80e-25c8-43a2-bf67-f5566d56789a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae08bb72-ee95-41e1-bc99-be927bd854fe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402ba695-9bd8-4c96-a939-d5dce627bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f54acf-774f-4692-8661-5129bc105d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbd6bb9-38bd-4d6a-9efe-8a752ba7ad90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1aa6b8-7e34-4776-bc9f-a6d9d25975cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a6511-0f57-45c5-a469-ac115d96e300",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95365a49-fecd-4dd8-9e24-32a2a2750960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4ec130-f249-4fed-a4e4-ecdfdf633dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0471989-c8b9-4d2d-a67f-d670f02058c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2acb0d0b-25aa-4ca5-85d6-37ba78afb477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e440a4-bb01-4f34-bec8-4d0a096dee4b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfc1016-81a9-417b-960a-626534626d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b328e1-fa95-4092-bd55-385bccc07d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6790a339-8a3b-46b1-8c13-95213b92c426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "437e7124-7644-4ceb-89da-632a6732fd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a38fc7-fc30-4fae-a43a-8eeaa075cfd2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11261b3-90f8-40ce-89a4-c2208f7fec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2677b4-4904-4c7b-81ee-d0fe2b5e04e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec799f3a-9d9f-4a74-ab2d-4a5df7ad9a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e927781-3661-4fc4-b35e-9476d288d259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc216e1a-e509-4d70-be0d-9fcbb568d7f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c95f6-801e-4619-b88b-5a42eb434232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767cf515-726c-4499-afe3-30da5a060259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1b534-3c1a-40a3-b00e-9edb58426f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c45ba6b-22c9-41cb-ae0c-29b425615dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a704d79d-8b96-4ba9-9c7f-eaa16e92b0c2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cbc9ca-7578-41a1-895f-cf3e18b95291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a6cd79-834d-4b18-bd78-31c64c3ea884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2635a994-5591-487c-abf2-d684731a1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25267504-ca5b-424a-bcd9-0bed198cc5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c33868-9cb9-4714-9a81-231109a0c6a3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36093ad2-2121-487a-952d-b9cb946bb4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c929c1-b2bd-431b-b0d2-dc7cd4231f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae23be54-1ad0-4853-9aaa-18408fac97ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6efe7a-f4e2-4f72-9e86-f5f4d2e160ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e16077e0-f387-44ea-8f94-0ba5defda8f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea34d535-178b-4130-95a2-d6ae80d0b71d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7137d5-ed25-416d-8185-5e95f759e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fcea8daf-4732-486f-a24e-c405f550ba73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b74907-30d7-429c-b63f-f2b6ed6aa7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9b98b7b-8242-4abb-ace2-6bcdcfc4104a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeba19ee-36ee-460b-b119-32ef07350102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "511c6a8e-932b-4ce4-ab31-a750ff26af49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f69440-9b3a-4c3a-a641-0f2a5ae177b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46614c0a-e205-47ec-8dca-7524fc9e0eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "974bddf0-c28e-4743-a3a1-e89b70ed9311",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02e608c3-94d0-4558-898b-4dd5ca69c168"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4638e11-5671-4f6a-947c-f507ec8c9146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f461f236-2b6c-48b3-a6c5-a68f7f2a9953"
            }
          }
        ]
      },
      {
        "id": "bd7fdde7-e0a9-4422-af09-516da4d1c974",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "978b017a-4bc5-492f-be89-43eaab4e5cbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e49fa5fc-3f42-48e5-a1f1-7ef224dd955e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09c6be76-25ec-4fe1-9817-c80db93fca20",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f3ee96-75a6-44a0-b205-13af155da699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa975672-1930-441f-8f3a-b9a457d308a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c8b4bf-741e-423b-98c5-1560913c900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d2f913-c27b-4625-8ab6-8f99adaa1582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4302a992-2815-4c32-86a4-9810032810de",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec15dc-f3f5-4df6-92fd-8d5a6a349918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929a9e8a-2585-4ca7-9c7d-f0695bfb8916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ab7ac6-3f2b-4fbf-a121-57087aa3cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8858ee2-f3d7-4e92-911c-bcca52cca8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7fbc36-b1d0-4ed8-8251-822f887ee588",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeadd1f-cc2d-446c-b29d-5075e7c5ae2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5431a3-9574-4d36-8dc3-5ef41b0ca0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c760e058-a11b-4e9b-a0bb-5d6458038768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e52db6-a448-49b1-813f-3a5dbb540b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f4c857-82d8-4c34-93b0-a9d07e9f5a33",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b74bf9-3df8-4af0-8ee3-cbcc0da774d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c332891f-8bfd-4686-bdc4-82084b9407a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81775f33-7487-4b9b-80b1-40555ebe5ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebfee31-6553-4e86-bec7-1d023966c2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ddc48a-f17c-47c9-910d-9ee09d7687fc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6141d1c-a826-4036-801d-f2d30f49eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36102301-fba2-4420-82ea-ca35e2b5eabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab08cd9-2934-46e0-85f0-0b70a1f1961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08472470-7e29-48eb-a2f9-2cbff10a5f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e05672a-827d-4578-8696-216454ec2596",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07e224-3169-4e02-8fc5-2ed6a67caaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d976d3-81af-4879-bdf9-bade75833299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a412b11-ee51-411f-8069-a7a014c3c01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43afa4c-218f-49f3-b103-010d9f5a67fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ad98e8-5a6b-4af5-95c8-3a8af02edfc2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf71571d-ab07-4cbb-8d1b-90df79e621f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3135c8be-2f8b-4091-b357-0f24a9c7a10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db6044d-6032-4d4f-8d4d-91079c0f7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ed4d4e-91d4-4914-89d8-035d4d677b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58948703-1065-4d99-a0d5-b5105bb55439",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002d2efe-820f-49c8-b9bd-7b50074bc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c932d89d-7935-448e-b42d-9f66da49bd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8ce171-70b9-438e-a219-0fbfe5261609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de06dd3-98a5-4604-b991-74e6da2ba0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2be76c-537c-45c4-832c-1274612f1d5a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c0c9bb-658f-4178-b504-f24c6bc67d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f5093c-dc3b-496f-bf9b-f6edd49b49de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8f29a5-d0f0-4c89-b7e4-d37f4a18ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9485d9fe-c091-44c6-a66e-be45c780a60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6786eebc-4c3f-4dcc-8840-e11f72ec8beb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ec329-5298-4424-a1da-61680cfa2889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f08395d-c897-4927-91b1-fed759c9260b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6181b160-cff3-46c8-83f3-ced368c93b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3b4952-a946-41ab-8d66-94e973b8f55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627c2b98-82d8-450d-a829-8761920e2d15",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b69eef-432b-49d4-960f-bcff060a0398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f1207d-c954-4e12-b8b2-3ad1e1c3f741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9ca0aa-be87-4a17-bc7c-7b2591203c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0d8e0b-e8a4-4246-bf60-590991ae590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39b8e98-e060-4628-802b-a5f7b4bdc573",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d71fe5-970b-48a7-86f1-d7cfb7f6ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3002b25b-402d-46da-bcf1-0949a1edfb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9bf5a9-086f-470b-9a89-05f19ef7fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "949039d9-b472-4d9c-9495-b2f7c3b1e562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9541334b-f6c2-43f8-893f-24f983481ffc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c56ed-0671-4ace-a662-316c1d240767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad41209-aa7d-4d2d-aae4-5198481a7c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20584adf-2e0e-471a-b726-ee8a9777fad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d7c3ea-1a83-49b8-ba6e-d883dc5cd0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82350004-35d4-47ae-95a5-0048e059b92f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abeaa36-1729-49e3-9a1d-9adf2357903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6643f881-81a5-44b2-a5ae-bd18303c7f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3287e35b-7142-433d-ad67-af5a1f469a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c949ca1-19b5-4992-9bd5-9fa9187d4bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5beff78-c2a4-4a69-95f9-949a046fef0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a871c70-f1d5-46a2-be88-7154206bc9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb47308f-8ebc-4020-8e24-354a6a9ae37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8833a186-c12e-4f52-bdaf-774ad3db7c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca48b70b-6f8b-4d85-bb20-a548f531057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd66f1b-e611-48bb-b85c-2973000c25b3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a4dc9-939d-4b6a-8723-b080d5d89b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1f0ef0-0fef-4fc6-a538-afbd16cd2b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c673c-e3de-4358-bb25-3a17e397f07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbd4000-a80c-4b5d-99c2-3904e69631ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc40a5b8-4050-408d-b984-4d3bc9dfc1f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8ca5a5-ff61-42bc-a73b-4d73e5bfa54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225e3cf3-4ccb-4271-8a4b-60a4b9b64ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e3a107-2ef7-4730-bbb6-8c4f0c821de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7190049-ff44-4943-a6ad-f0d962fc4bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a541738e-6bce-4611-b030-46e0c1f77462",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb637c74-83db-4f85-9938-128e9623b44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bd7657-3f12-4729-8e0d-ad73a15b82ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e817b775-48a4-4aed-8f78-0c1a9bf3e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11a436e-cc6a-4542-af49-166b494fc101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd9f9cb-394c-4192-a841-e667ca5f9580",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1246c207-f820-46d7-a6be-38bf4a74c818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e58df0-ce5d-419a-9ad0-405a2c9f9d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e899bd-f445-4570-995f-02418204614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b532ed8-f087-461a-b363-8631e73aca58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2e80c6-62c7-4809-a5b7-5cf4b77dac45",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4041523-4a83-45dd-b40c-0f57f34f7e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87ec4b3-d1f0-4fe6-b6af-d60365e9a904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83985f41-e1ea-4626-9a03-33b65fd25a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1788e825-f8ce-4d47-af37-1d45803f184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8138b8e2-537c-487d-96de-9061180ccde2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ac7b36-4416-4417-89d6-7aa0efa9babe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d2f587-1379-46ab-a627-2f7b33c14415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd993b3-9a61-4d25-9b06-d98dd2557ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdca8de-57fd-422f-8743-33f2319a0d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d0cf2f-9a9a-4cc8-9ee4-c86d5261f43b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34959b04-2e64-4793-809f-1e6d40aefbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca00ee26-2772-4d78-adf0-585ebe69f298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de522f1-e129-4cf6-ab91-9d7b1d67718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4848568-b9f4-493b-8d1a-7a842452c03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0600eab5-9ae8-45fb-839b-d0bf9ed102b4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702e2824-9547-4a1a-8ca4-f38faf5f69d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2facb99-92f3-43c8-9959-cda2b752451c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eedabdd-ce0e-45bd-a52d-c7a45504038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e41282-8c98-4e62-b244-94225d0f9a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734f2b9-f00d-4580-94c6-691d188377f0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a23b08d-8527-4b76-9887-7fd1483352e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d327d9-84c6-4350-9c40-b917f80a1067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4ed6fb-ea5b-4e1f-8a00-66b570176a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "581b094d-42f4-433d-b025-e7ae6d1cce05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac52d820-2fff-4979-bd89-f2515e482d05",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac61c16-faa7-4fc5-8bde-0edde3110a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58643049-4570-4b91-b802-de2bf2e634b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8fd1e6-0403-4472-a1a1-7607a1cf7fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffbf330-4433-45fc-b5eb-0fab6b59415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12013e25-22df-49fb-8fb9-502780460dea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f18ca-0364-4bdd-ad7a-59fe8b7f5ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1ed61e-a549-452b-8a89-a44a39293517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec3eb3f-a969-443f-832e-d4531a533ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38334d4-5719-46db-bc43-72efe87dedaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49253e9f-bc5a-419e-b9b6-f9325785cb81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7166e249-7607-40db-97a8-a01cc35b7d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ed4126-5457-4732-b4e0-a700f5061ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fabae9-5f2c-41dd-83b3-9497c8a45793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fd56d6-308d-4378-b2f5-45d7d1ce95fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fabbb9e-e159-4d1c-bec5-34d76ae09c7e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0efb90e-b44a-4453-b44b-d63116d064fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a57c8f8-7499-4b4a-82f9-805f635e92bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d0e149-cae7-46c8-82cc-b171e7f4fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ba9e64-5860-4dc9-8301-2accdd3a392d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9355d7fa-ccc4-43d0-920d-6107144286df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d039d7e3-d6df-4408-9859-0d20000e6040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fff50d-a77c-4a95-a5cc-eb2575a4f718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7782bca5-20d0-4d13-9d6a-1abb81978e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d41a33-2b02-40cc-8ced-2a640f8d9972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa13646b-6bdf-45e0-864b-fdfe91f3f670",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d693f09-39ea-43d1-8551-f3fd8b0d1286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79accb6-edc3-4a36-9d7e-93ad6e29684a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150afe23-297d-4631-9ecc-b39fe01a1597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "564400e7-8611-4083-bc40-57e38219a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628724b8-ef99-40ab-930d-8e1012ea1a9c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96e500e-e5b0-45b9-9cf1-b68111ab934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee6f22f-fb6b-4980-83bb-227a9af88613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8d7635-4020-4430-8678-b242a33ea20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1c8140-a8d3-4b59-b47c-4819e30cdce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03981e84-7033-4502-8f74-8af20718f94c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cfa447-3941-4904-9adb-a8247026945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee14058-e323-4783-b5fe-5d6b30f1b0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521dccae-faed-4168-888a-9ef9b6c8129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49af470f-3b45-4b96-9c1b-da30c899cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038362a9-6b20-48f2-a60d-20b5361afbe8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f57792b-bc70-48d9-8d5f-1b0e663da49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4313b17d-cd60-4e40-a2f3-794edcf278f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd54daec-c712-4423-aae1-ac68b048cde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6878897e-e66c-4edf-ae30-2e7cc2d19b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1af58-906a-4c40-bf58-e13dd2b59bb0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c618c1f9-9a2c-4aa6-93eb-3dbf029a7f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261a98c8-18ba-4369-b442-8eb7d1401d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d96363-baec-4773-a659-df509658b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2856f986-cafc-485c-bdc3-fd2cb54989bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c7beb3-d143-4f30-a040-e592bfbced57",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e88d77d-5df0-4098-bcc6-04de2d388407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18495919-f17d-49db-92c0-a4070dc4b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4d076a-93f0-409c-8aba-985d8731ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df6970e-7b54-43d2-ac3c-13c0d8da3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07db758-97b9-4853-ba5d-162332842787",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82af78f-9fc5-4f2b-9020-5125a1512221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1664b386-788b-4bf0-8626-84f529c0239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6364e8f3-069c-4439-a775-05333bff4585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1249ad5-f0fc-4d83-8714-140fa45cb67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e42054-7f9c-40f9-8bc4-be41b9973348",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927e72cb-3863-4cee-ba59-f7bbaa95fc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eecd08-e315-410a-93df-a64a097f5f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ed1ac6-2202-4b8f-b015-a467402a5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7939192-8fcc-43ca-a85c-a5b483dc20a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8e0fbd3-86da-4bd1-8107-1d3e8e5e5c89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfa61b03-f7da-40e0-bba4-6069cd956400",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d64b40-bca3-4188-b503-5493885b8411",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33afe2f6-19f2-4e8a-9514-9c69c21c87c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de5a736-d5fd-4771-b6fb-50732b36b18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23be3fcb-8795-4d78-a23a-89323a121702"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6293132f-d074-4d2a-87dc-52d2f1d62ed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "401f0a7f-8ae2-4373-a6ec-d4bc83b6b001"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2298ebaf-ad29-4434-87c0-9aaef1d37c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c34920d-7841-4c89-8234-67b31c4f62da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c840394-84ce-44c0-93c4-3faf8ffc3f89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6089b1c-47b5-4adb-a0a8-375a9e181da3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0ccfc3e-149b-4468-8b2a-36c3e74fa2db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a14403ce-e68a-46ed-8063-644301895f1f"
            }
          }
        ]
      },
      {
        "id": "428a8ac4-208e-4984-b4e1-99a0abd2bc79",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8d4d36a5-916f-43d2-a9f4-96b60a141a9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62ceec75-2833-4a7f-86b6-de8a2d9795a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f0ba793-6aae-4638-9984-74fd0a3d3ea2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bee527-b0e3-466d-926b-bd1d339788da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d20aa6-5fcc-4521-a43e-fcfd4748d912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b2e04-17b3-4b6b-ae40-5368d3c6e6c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5c5413-68ba-451c-8e3d-34debddc4251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df458794-d27b-4dba-8011-b6d958d31136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1305a-e6cb-46a2-987b-271a04cd76eb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e43da57-31ad-4cc0-8d9b-af195cd646f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3b908d-dbf9-472a-a3fb-e8926383297f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b35e8-f038-47a6-8afb-817ad10d37d5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caccf7da-bf2d-473e-bc1e-a4bae1630cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05dafb-37cd-4262-a14d-396f5ab6466a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3025ce0d-7140-4d59-994e-9f9cd044d1e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1d24f-2018-402f-9a88-ca85e48b9ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023b628c-67dd-4d46-8678-c3be9976921f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97ac0f-e3ca-419e-9c7a-31515be20ccc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b499a0-0d6c-4577-8c80-c305b0cda232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bdefbb-3134-46da-b550-f924d05eb8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d069d819-8a59-4c0a-92a6-674c607bd694",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812f8c11-dc64-490f-8458-e31391203923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9736e70e-f3b4-4332-a710-b627558224c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177a8e25-cd69-43b1-ba2a-357f5c58dfc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4569b31-f0af-4737-af47-974559141d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd5e17-67d2-47f8-a9ea-3a5656e1e747",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a65970-8f7d-4f89-9449-371169b6a290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e457621-3e77-42cb-98c1-bc9c5b4558cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54b0be0-a6ab-4de4-b1c3-fab86bfa47ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2048da-b69a-4e2f-bfc0-69d104ec17ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fbdf6c-6cd7-4843-81b1-ce58ef6a6fda",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d084bb20-720e-427c-8ca0-553c440f1c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8051cde2-fa3c-46d6-87be-7c6ecf7ab501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0c64a7-8dbb-4f66-ae30-01fb90f5ac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b744c8ed-a31d-4a11-8b99-db54850ef005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd588ad-5e6a-428d-9d6e-4af54bbe2511",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed57b38-39fc-42ad-a42a-233a914a901f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fffbbea-a4c5-4f7c-b627-5f11659bf086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dbf13f-7eb2-4433-93b8-b67d9c68b147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9983a02b-5461-409f-92fe-1e2738ad7b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1486e2b7-a9a7-4b5d-b10b-19a91440e262",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e237b77-1e2e-4f76-b84e-f38be0e17d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f9bfa2-1c10-42c4-b8a2-5f1a071831d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aceb87e-1f11-4ac0-be0d-bf9751a5f6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bceb15-8575-482f-bbbd-c68d5c38c036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe92da3-3d2b-4e92-ba40-0715d22f25e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8409ef1-b169-4289-9c0e-8d12de6d0427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fea6f0-0ed8-439f-b72b-1140a1dc28a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18c49c7-a4dc-49d0-8db0-fd3212eaa0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f055bd-6e37-4137-abf2-dcfd3d2c2b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696dee5f-e32c-4791-b23a-a7677552a229",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60559d6f-0079-470e-9684-411bc1da47fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86da3085-7c5c-4fea-b6e0-d12709a7ffb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b270c33-5c25-4ef2-8c8f-101c23be874b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f862ec-da0a-4e7e-b591-6f8f595c0715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c541e56-bdb4-4f5e-a34f-4a0389d186f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ce4d3-b049-419e-8a20-f93801d2083b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3d74bb-df94-4272-aa8e-49846e675842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8f769e-f157-4ae9-8732-6c2e6d9060a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c24a334-2c31-4da6-a4f1-998ee174c248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eb76f2-ad15-4a21-9d5c-e105075d016c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be3c501-80d5-4f23-92df-e03fde4f32d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90e501c-8430-48e0-b8c8-1b7c2c8dd50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a1ec11-2614-4702-a0f3-5eeaf6137f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e83e60-2fe6-46bc-b6af-ffd107671162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abffb516-a540-48d3-918b-22b4e6031465",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cd42f9-3ad3-464b-bc26-1c5027dd626f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbb9609-d1e6-4323-aa94-634c84426376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b337573c-b383-4968-ae0b-78c1d17d5870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50416a0-a7b9-4796-8c96-749bde86c0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f497302-8e3c-47e9-89db-f5a65530dbae",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d157e-7e8b-4215-af78-b9f212e436b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710b0542-5721-4f05-83d1-c1dcee49e2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728a7829-73dc-4672-84c6-8d07ba8ccc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed48b3c-ba20-4849-81cb-0c3f52a5db89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95638a6-5853-4c1b-b4e9-3f42cd736b7b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d80b8-009d-43e5-aa3d-bb9fb2629d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedc266f-6c28-4afc-9837-afb0ceba3686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930ef340-6a91-46b6-bd35-c267e55cf793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319e8e79-991a-4ce7-a3e2-a37bab761c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be68b49-b56e-4f32-b3fc-a367c5019fd0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b648c8-38a0-4973-850b-88a72aa41845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abede43-5d9c-4322-99fe-fedd2975e511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e2f26c-dcec-4525-b0c0-1f97dcd26809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbbedde-362e-4609-905f-bff9b134a2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64958b38-9715-4fd3-a2f0-62f3213a3d8c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39a32c3-5056-4e48-96e6-2daa94cbe682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f44a42-ee3f-4d34-8d63-612c6531cf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6685d887-dc28-43b7-8e90-28312a30d9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31a4a15-2611-436d-a5b7-5962e9b87e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dd56ce-9ed1-46a4-91ff-5542eff14f1a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81bc30-ca56-4fb3-8a25-0a2540195068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eea168b-1b8e-4872-b3e2-26cf5976ba4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110babf4-7589-4fdc-a4a7-7fb4eba7c064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36326e14-9f82-421b-b004-07387fa0a9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbab1f1-f2e0-417a-bd0a-e8574e07ff78",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c779569-b7f1-460f-95b4-b1342703f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d228c894-0d77-4dd6-813c-9bb44b8ca70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8710f6e-99f6-48b3-a2c4-f421cbc50055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aec691e-b9ef-4f04-b2aa-ed4400e55c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2e67f0-e6af-4b1b-8abd-cd489ed0c740",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f0e9de-8c7c-41d1-8a9a-001be715f7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be94099-14fc-46ec-aa6f-391ff97683d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3255274-8423-4749-bfa7-52ac415f060d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a0c317-830d-45e8-bf14-5d6b72122721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054b785b-a39a-480d-af84-2f8812397a09",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a533c99-a42e-44ad-a7f5-23801f12eb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a132d1-0ca9-4138-8f2e-c7ed3c2e842f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45eaaf7-3703-4a64-a230-afb09b9f5f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b548b2-0671-472b-8c71-b6e03071ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254c18a-7d26-42e8-a58e-ca8e8b156d3b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7288d90-8004-4356-b423-b2e21aec0968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8493269-ecd2-4551-9a58-0fb0fb17f7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06744e-4fde-42b3-9fae-55e611985c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1658a8-50a7-4368-9a78-319f8347f355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a93e4c7-72e2-48c5-9c06-15a420fc04b2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccebdc3-dd6c-475f-9156-98c92a1490a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a5884f-0cea-4f03-a029-f509c41515d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aaa50d-f431-4e0e-affb-a79927e89f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b5fd28-3b2a-4f53-99ad-a116d855f58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28469ecc-7755-475a-aca1-340e54fad878",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6efc282-245e-4ed3-aebf-238eb393bb6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019f04a3-e9fe-48ca-8146-7e02c886367c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe3567f-26f7-4acf-b002-c345c86882df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7056933e-2273-4cf9-b45e-24722007efa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34986c49-db59-4bb5-86f1-a64799429375",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ea3afd-a5b4-42e4-9a1c-543e59135431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d23e936-333f-47e6-b74b-9f85894add15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24213930-4291-45f9-9f80-29f2f031197d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a52cd6-39c4-4337-a3fd-dd3f1e5ac1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477cc018-57fd-48b1-a210-6d402d715663",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7acc3a7-91c9-4405-91e2-5610d016c5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1983a4e-fea3-474d-9f72-39209d5be615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403ddafc-6787-44e0-83a0-0da3eee2541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546484b0-b166-4db6-9f90-abfc38ca14ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b7c44-0cab-4e9b-8774-c96a7330a5eb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0bb1a7-4edf-43f3-8f3b-c81d2cc8e359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fb3689-2fbc-44f8-ad71-7ab74bd0608f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8637ca70-1281-4eee-9362-1380599cf9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e697f0-1397-4b02-bc1b-d11f232341e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7b67eb-2caf-457b-9b1f-e85fb209d393",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9375cf8f-b716-4157-9c3a-125c43027c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc8edd6-fb67-402f-bfab-52b0f6056200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca02f5c0-17f1-4882-a509-a600dd4e24b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e531c3-3cee-4a3b-a242-08d8dd6fac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30555cba-a38f-4d85-b28f-649dc5069a3d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7243b4-2511-414b-bd25-f05fd7cd2a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3c2a18-9aee-4c92-8a55-9174d1a7e6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a88c0-f410-49de-8a77-dee524d2851f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da864df-d9f1-43bc-b384-87e0015a069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b65cc4-c004-4d74-b5ae-a2b3e3fc9d58",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa7d468-6550-4f87-8321-32359bd75292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6d0d5b-9f21-43ff-bbcc-f5d648e258fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397ab074-ad91-4214-b3c9-df6be255c4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f862c741-5ecf-484e-a081-c2252f79f7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c69677-7d48-4516-813d-4acc5ec2f068",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170a2311-5f7c-42a0-8707-37875edee6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89b590c-88cf-4aac-ad5b-23bec4fda680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2976cb6-5426-4942-87c4-2b37c95c4812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153db193-f560-49d5-9d4a-d6783a147712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d09ef3-53c4-48a5-9575-5bae9c107bbd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9213c930-31dd-4118-a133-e70b1e673978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a1a525-b23c-475f-9257-0caa74dd944a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48775c81-ba33-4fd6-9fcb-ce4c7569e855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4355b8-6e74-45d2-8ffb-b5b262425df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a45bf-1950-41d9-aa6e-70b2ccef31c3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e123f7-fa9e-458d-98a6-608fb389ff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52179e7-6006-4069-9326-8ff0dc5dfcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee4996-4272-4916-8324-2f8662da6a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6dde2d-b1e7-480b-b905-3ed24bb8fe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d6e8e3-f478-45a4-ad0e-d9ac53f7b687",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cbff69-ef7e-4aec-923a-d2d77dbbc3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e0905-1a5d-4e50-9fe1-0f70177c0ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a738d559-363c-42c6-ba7a-28f7259722cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1152b474-4612-493d-929c-e2a1a5904123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e79a32-6796-4b85-8bfa-f0075d35d43b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e52f24-7ad2-4269-a136-ee03f5a60caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2328f3c4-47ac-4f00-aa8b-5d6620da31f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05ad15-b1f4-4bc1-a88c-b7b093e755a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0577cd65-5392-41fd-bff2-0cf215072a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126cfa6c-ab8d-4f74-a32a-06c29ee995aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0c48ce-ecb5-4333-8b30-22c1177abff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c64b08-cb4d-470e-824a-3eb892209c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb580fe-94f4-4927-9c2d-126ae881d327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5db1e4-5772-417b-90f6-8f15f4697f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7a9a4-220f-4214-8383-c14fd8389248",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24667c9c-a401-4284-9cb0-945a875559e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6a9854-f5eb-45f8-82b2-1acfa2d3027c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6ef8fa-b01a-44fc-84c0-c554e6e8b637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187819e-8f4e-4303-9e28-87618605e664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f43300-8655-41fd-9a13-c613383ee9e7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e95eaa0-c67d-4d99-94eb-8c5c7a6860bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026c54e5-531e-4082-be6b-020f4cd6d722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aff591-4fef-471d-9c2c-7e75d9f14376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c24e816-ab51-4b23-aa26-05d227a1fdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f8470-1709-4270-8f3e-9336d31f318e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eb37d5-6005-45d1-b8c2-c65891b63fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3011bcb1-2485-4d79-bf35-1f8a66f219ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04261d46-248a-44b3-9226-e6266e0a34e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9bd468-4633-4eed-847e-13166b7d49fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66342b-3758-4b18-963b-b869296c71e7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84723f02-d690-4fc4-8876-0a304f1ef523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da62257-df14-461c-b855-8028d3a38943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a3f9f7-92e6-4c1c-af0b-22fc715fcad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f700a65-cf95-4c63-9560-a8debb17f790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52966e2a-efb8-4388-b071-a5dc4adde90d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77675bb3-8c79-4674-9107-b739a7dc454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58a6acb-cb6f-4bf9-ad74-e8423b667e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e6d347-6b64-418a-84d8-8725cd1ae589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee4155f-eb71-41a6-bea2-b6b49d86f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2b59c3-612d-469c-8700-19e012587272",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94bc91e-c279-4578-8a71-fdf83f48d295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3642f7d8-68d6-49c2-8452-34e8479d217e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fa5f15-b6b1-46d8-875c-543357f956fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109764ae-ef0c-4e00-a06a-8dbefce8d820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c565ca0-3c79-4a68-99ca-052761ccb5fd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce74e5-f487-41ce-8ce0-9275effd4586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e39763-4dc7-45a5-9b29-8836c5c68718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af261087-96fc-4a11-87ad-5b2a2f4fec35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5197d5-cf61-461a-ae46-bc64884c2119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c88a4f5-caa8-4725-8c08-9bb3e33afcb2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b891145-e3d7-4b18-a1c8-6901afa29592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feeb6840-6256-4e39-8625-4149b1ce9024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec26f246-ded9-4b90-b58e-b44d57513505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fd4426-c89d-4731-8d79-88cfcf57885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecea70fd-19f1-4851-b774-9fe0b2b99fc9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440f9615-551a-4f0d-ac29-3a11a74769c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211b66ca-4097-4382-b05e-58a5e0b8d885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9bb2ac-2e03-435c-9aa0-7d03c9321bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592cc4a8-4c88-4827-9072-e77212832a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305586f1-c784-49b0-8cbf-b4e6dcf494b2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0992466-674b-4da6-a66d-2a4adfdb02ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c765379-3557-488e-a4c7-52f4c27d4c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9247e0-d0f1-4ed6-9577-cd6c0152a74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389d82b6-3c7c-4d01-b166-5054fa7b59c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff3d9f-ed77-4cc6-b277-c2e9662bca5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c92005e-2710-404f-bad6-8f1d673805a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2cc695-5237-40a9-be2c-997abdec5445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54ef4e-0545-4281-bc5c-42c12dd68d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316042ff-5d3a-40cc-93c6-abcb1a90499f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a273e0-7083-49af-9045-85e5aac7da3f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0e5a81-7e44-4b35-b0b3-0a62ef1e4e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17005edb-f463-483a-9c6f-16ae169de4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c82c72-1e77-4974-a7af-214bf0236511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad348fa2-0bfb-4c7f-9ccd-af9eeee00d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3c0efa-f963-4cdb-8674-d73aecf88069",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e2cfd0-a082-430b-b0f6-6c50fef90bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1cdc36-0dc7-4191-9b8a-867d9b187892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95ac205-ceeb-4a53-936f-6e78bb46b206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a542d2ac-77e9-4d97-970b-faf1e18928bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287dc2d3-7a3a-45d7-85eb-e8be1396263a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d69c42-2ed1-4528-8102-49d050a95143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf52fcc-2358-48f5-83e8-655b11337b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5c7d99-9ba8-4b68-9bb1-551e9b45ab2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623a776c-4b06-4b6a-91df-ef4b67fb882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd29ffd8-2978-41ec-bca6-84b1d5a68cfa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09e6983-c66c-4b43-ae37-c31eb54650ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1092111-c50e-4f8a-a1a5-2f0c415c0c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f719e79e-a963-490a-ae8a-9f4999ddb98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b236642a-9a25-41f6-a04b-947ac447abac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d5853a-8d8c-4ce5-be7a-e529a1a8d473",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519c3e7-341a-4435-87d9-2c9bd4438685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16cd3a3-093c-44e4-9dfb-fbe82dcdb0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaee09f-b7ac-4f08-829c-d6d868226186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995b7ca5-5827-4329-bce0-1271ccbe6a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e966688d-e3ee-489a-ac10-094a6104daa0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b23fea-a9c6-4bb8-928f-0c6fe802fa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f59d90-ac36-41ad-a17b-ddb1c355bb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076dd6ab-5e2b-4bda-b971-fe53916e676c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534bb601-dd51-43f2-a6c2-918e35d385c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ed7c61-099b-4c23-97be-0c8acdb71111",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabbfb22-b88e-4d5a-8b98-35073f9a824e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41336d9e-af62-4204-8797-76d6f4de6410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b9642-e93e-4207-9484-8c40edc8bb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967fdf79-addb-48fa-a850-d410f0a014a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c38e43-ba1c-468f-9e1b-90ec8b3b8951",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080f6d01-cb0c-481a-b5a6-3849ecf4832e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0148a5f-8783-486f-8178-f69d81d1e4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8bb00-9fe1-4caf-90cf-6ba5aeff341c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379fc6bb-7358-4386-8de0-24ac812a20fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb2e5b2-0f1a-43ba-b27b-f723a713631c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f8858-f0bc-422c-b62a-af5dd0f654ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90b8006-190c-4629-9ee3-d4de2742999a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec693a2-b7aa-4b6a-9166-a48199c81b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690f2d34-4926-46f4-ba3b-8853ad2fd87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793d1c2c-0d9b-469b-ae50-dc59dffbdc52",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053f7dc0-71aa-4e53-bd19-916d1a4616e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0158cb9b-c587-448f-9d03-1a29f0af39b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902f6048-9ecb-4eef-859c-40d028c0201e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2ff3b9-5927-4efd-9209-ee4c9194fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fe7da3-c6ee-4e33-82e7-15e93c7694f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b953d-dd9a-4b4b-bef0-c62f32837e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812afe78-aac2-46ec-85f4-0b9002cceb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758980ca-d286-4455-918d-59f18723d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96caf660-86f1-49fa-89fa-0d769e8676b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42c3076-6df5-4381-9a26-7a03461b8aa9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4253ba-0841-4e99-9f49-8226160f341b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be14b6dd-f699-4b76-a073-83ada3d41652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0961405a-1c92-4c1c-9c17-30961cbe8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7520f8-0707-495a-b1f3-b25b4b153317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44310ab9-fa4e-4894-827e-bf09f299d34a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3238fa-9833-47a2-8718-8aed0ee8adbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd98c4e-b153-4d25-85de-357abfa7554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857a1c3b-8a4d-4f3e-8ebc-c1023feabd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c8238b-99b1-4819-9ec8-56439448b799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaf6611-26d6-4fb4-b2b9-917f5897300e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b43c475-56dd-4dc2-b498-078eaf5bba18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90564748-ae12-4543-b737-c185eda678c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71bebfa-6dd8-41c5-bfce-f6bc67665831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f2c346-6e61-485a-9599-c88b0bca0d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ed491-466f-4f6d-9a0d-0219394a0d0c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e33da1e-74c1-4cde-82d9-5ad00305eb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0120f8b1-ea21-4184-8ebb-6cce5ad4d3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72875756-e44d-4a63-a717-90f1131efd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a9190a-314d-46d6-99ee-3304a5c35977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d1f36-9c1b-42dd-8932-5cbddc3db39f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb2f3e-309e-4aef-9fde-44d81d57f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5a37eb-376e-4503-b49a-0095d0eb4329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6ee01a-7016-4c48-90c0-996205aa4cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5c8a10-4e38-4d4d-ab5e-1ab40b0aca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c185807-0526-4db9-8d9f-e7e33f77ea90",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f288fb0-98be-4b8d-933d-35820c8b784d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a20d5b6c-11ba-4c4b-92a2-f6d243f0d0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ea7cf-34a1-42ba-aa80-53c4895925ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707e706b-16a1-4bc9-979e-dcae68048384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f4b22a-94b4-4bca-aa99-7e7c8ac72c10",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38817646-8a5b-4121-a4b7-ed8f5fc319b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec785c8-3115-4e2d-aaba-3a4c54c60903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413ce2a6-1786-4ce6-b8b0-6133604d882e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32434fd-a792-481d-a9a4-cf0bc150314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae702e-ea09-4d5b-9f32-bec5632938a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a86b3a-2f32-4144-a326-8de4f9748f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cee385-0048-4578-8001-7394c1f8996c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343f8d27-ea46-46c6-92fc-e1b5ca704471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16e1bf2-78df-4376-8a7a-9543a0cfeec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680e4b9c-20a1-4704-961d-c42467434e1e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4a46ed-1d26-45f1-a2a2-9de2bcaa3176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77838de1-8b2c-41c9-9688-65d2598a3236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3de4c1e-26c4-409c-addd-d94a8479095f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa5b575-eef7-4c08-bb7c-2d2b8fd144f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7876b8-4e23-44b7-916b-b0c571afe0ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31880ec-3390-4e18-94d1-fb1371a0f529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ea3911-3896-4ce8-ae32-d92a26110e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ca08f4-f3bd-4a4d-be82-1f91ba878d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8fb9ae-4b67-4c99-9f19-2666fd3474d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5786ee-5116-419f-93b4-62535404201f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fab8d-1587-4ad7-9fa2-9d18c22ff033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34aa3256-3b4a-41fe-8127-2d603c3d316c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4924fbc9-7eac-4c2e-a81d-4bc12d124f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7afaab3-8c23-4bbc-b0c6-79e461e1a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d959ff6-2890-449b-99c1-47f242111068",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f50d3c7-96db-414e-82b8-a52de6953e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f34156-ecf1-4d41-9ab4-2151757db5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e0370a-6015-42ca-b936-9700753b38fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603bf9a5-572b-4ae4-904c-d63650a9e51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a91c03-7af5-4665-a27c-863c220cb7eb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb12a18d-6552-41cb-af26-2ba7ca6bc3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df41990e-b837-42c2-95f8-0fdb6986f0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b93f3-4f95-41ba-bbf2-1d4980f5add0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6b59c3-c4a0-4010-b476-0cafc475d0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1997eb-0332-4896-847b-5d2a3e0f7ca6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63300f25-703a-4642-b2d6-47eadf051cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91124ae5-3bef-4290-ab7d-8827d02e6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906e8b12-4ac9-45da-87d3-ea8007dc5d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c39f7b-b6a8-4fee-9eb7-413edc3b3685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea70e8ea-a12b-40ee-8ebc-689ac07d95a3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd9d898-654e-48ee-a87e-037792859af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4764a5e6-4ff8-4839-b2d4-f8c68f45da88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cb3556-d55c-46ff-8f7f-fcc735257bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82081a55-1d1d-445c-828b-8bbb74aadcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd0671-b4ef-4e33-b38e-902ff1adc902",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c676d9f-e2b3-4990-aba3-f37a3f0e345e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d6357e-0a23-4c8f-8c18-981f7c2d2476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846b8a91-37f3-448c-97a8-d368f83968c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70049d1-44c9-420a-a99d-6893d6080739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d96d62-158b-4210-9851-41051c2325a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deb7051-8eda-48e0-af85-3acc0992114e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b071c50a-bffa-43a1-bc8a-682adb4698cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362de8df-02b2-4fcf-aeb1-5134867bca5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f9c790-c569-4793-aa37-3d8d0ff0ac29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d219257d-a113-44f1-bd1d-05efc26954d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7fdd35-230a-4773-9952-3bacca0c1637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4dbebf-81e0-42d3-9efe-225d1d9b239c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b476e1-5c21-4b2e-b426-a8f4c35b3960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15425081-66dd-47ae-9301-406048c36193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07687156-6150-4e8c-8e59-0dc3b404fbb8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45132d00-7cc7-4257-bf57-64d043d1e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24eee6d5-0690-4a6c-b113-5611ecb8612a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63e695a-31e9-4698-8b77-c850f9f96306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f5fa49-caed-4252-8361-8870b03b7c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cf4e58-53f0-41ba-be59-9671e680dd57",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1417cd2b-000d-4101-8f65-7053bf3015b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662a76c6-9775-4abe-845c-c5d8f07a7ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51780133-2008-4406-b4c8-2f8d6a25f0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b655f3-ac51-41d3-9d1d-74fe2dde03c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9370d3ae-8212-45f5-9cea-525687496a3e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d33d55d-cc81-4c35-88dc-61d6ca15278e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600fbb9a-ae0d-47ad-bd9f-d827479e641e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f84f7-09ee-4665-b15e-834d1cb7db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc068fa1-4f82-4bb3-b5ee-9ac34f7ab2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd999ef-6cbd-4e93-8d87-bf6135369f5f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d55a8e-2087-43c6-a454-9d8ac4cf1c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ab734d-03e4-4fb4-823f-d5745681ad24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752b2ba0-0149-4c10-b9e4-f7ecd9fe2bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79293abb-b805-48e8-8701-eb7a691ac87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1338d853-53d9-457e-8013-ca8f6ba0283e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e1c4f-1c9d-4bb7-8aea-3c7574009afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b928a52-940b-4849-ac8f-d94049850bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d36352-1082-4eac-abda-71bd8d1415b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728a67ad-e6dd-441e-98c6-13d65166253a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee136f5-81b1-4f8d-ae75-eeaac0399e53",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e60882e-030c-46e8-b23e-beeb14235a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cac1728-abb2-404d-b5da-d77ac975e4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fd3a96-563d-4409-b480-908971daa091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0550bf9-d03d-46f2-a24a-0ef58394ea96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6892db2-d60d-49ba-a35a-23e74381d836",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab08ba1-cd2d-411b-85cd-1509a2436ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1263ad1e-c7f6-478f-b294-a910a6f5c52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c8fbbe-7c40-4b2a-b8c3-bd986fabb9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303b4a8d-0619-43ab-bd8f-ac84e5ef12d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67d4869-d204-462a-99f7-4bcd13f5ffd1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5a18b1-5f6b-4d15-a1f4-d68a0f02191c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d432f2c3-58e3-40b4-99b2-7a47e7a8ec83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bde454-c704-4969-9ffb-3ef5b862ac80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7bd66a-6035-43eb-8b75-8a7e5836f723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6f6f96-f9b3-4b4c-8773-8d350f21b0f2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b843a7c7-14c7-4c44-b79d-ed86d00967e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef0fc6a3-c03a-47c7-8021-399fbbc2ee2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaf97b1-23e5-4c0d-ab50-41a3298d58f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c252c41d-7136-4388-9309-81a716d49c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b2c8cb-b86f-4479-a459-77bc31256e9b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c626c6c-265d-4da5-a4dd-0f8cee3d0c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f2f9e9-2428-4753-9072-bcced9d16a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bcf243-2d77-4353-b28e-0926568396ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc1a6a-b2de-4cfe-8a2a-6d49d9d2aeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d1a64-2a0d-48f8-9e9d-bbbfe4582d77",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5ce80e-5a62-4054-9c00-00b22bf51fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e67e21-5b5e-4170-b179-9fe6442dbeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c26c055-e4c4-4c51-8272-998111680c71",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c46644e-9749-4cdc-a17a-83bb4253421d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9812ad94-0bcd-43a8-a895-36c4b1b8b5d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f451a-5796-401e-b40f-333a9476e1d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30528888-28bc-44c1-b80e-a242b7ff2bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647f03d-f7ce-4648-9391-b853a73c1422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29631b1-d28c-46f1-99e3-d670bfec374d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63301937-ae18-474d-8383-50daea95eff8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876950a1-c46a-4db8-9578-93d295331c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efeee5a1-1b17-467f-836a-1789550ecbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e556d77b-a43e-4a50-bf22-3d0158c25b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34743c95-51c5-42ce-a570-4c6f60f4c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aca5a0-c69e-4186-ae8a-0360c19f427f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eacf80-8c54-44c7-a2b7-5d25983ba7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1d48c3-cb10-4073-8a75-4b9496c6c976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fed372c-9adf-41db-a09d-94220d5072c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a21f7e-bc11-4b88-9f3a-b6e54d232b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b73c8-ddea-4cad-8484-d7b5d52196f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88ab9f8-e7a2-4e67-93cb-23c56e1ab206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30cb334-89f5-4d87-8b42-6843f1985fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182255e6-4c24-4806-b2c8-cdb3e4e8299b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c3805c-26e9-44d5-9f9c-210200a5a956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf3edf3-8380-4528-9535-a63a882ddda2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80431673-a3da-4af9-a83d-ae5b51313a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763e7a88-5334-4baf-84c9-2244edb11c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c997175a-1cfc-4af1-b81a-209700ee81dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825b8272-8b06-4bf5-b5d0-831572bea52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d914e8e-4ce9-461a-b2bf-87b5cd8864d8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fd0eaa-9996-4955-bdc2-b82fab92fe9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1af5c5e-e000-40b2-bbc2-5f5e8b46e1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec4346f-11cb-4c70-ae88-dc15ca8aa1a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a229628-ec46-40e2-aef0-3d6755bf4dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23deacc2-ca21-4d00-8393-ccbbd9e34684",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d16aa1-7d65-401a-b60a-b3eb4226a84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682b3f5f-6ddc-4c5e-8ada-d0d381af1cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89566b10-966d-4b33-96d7-48fa82e72f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72975ed-1bca-4893-9709-411c16b09b01"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "388eb201-e5a1-475c-aa9a-cbfbfbcaf3b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be852a54-f552-43eb-a5cb-f74ede70f5b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e443d097-ed47-44d1-9ea9-9b02d6400df9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e3eb0c2-aeb0-4088-bd2f-bdff068a952e"
                    }
                  }
                ]
              },
              {
                "id": "b5fbe6c4-b8e9-4510-94c8-119880e77137",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b74a5764-b259-4289-a418-b2a688d7cfe7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dff02f-60ff-4ac4-9278-573cd6a63cc5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0a48e1b1-d0f5-4fa1-8e04-22f12b9a712d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56de5e2b-4d03-4c74-b282-fff3bc5780dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9b93822-fe17-4e9f-8e5d-a95b26308ffb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c484eb39-9dc4-4de6-b0f3-ee5704d88756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f4dcc13-22a5-466b-a4ed-284735d2ba91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ab1e67d-f3c9-4b37-89e7-9f52cfd609a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06574d17-fbf5-4911-a646-9b809ce0aea8"
                    }
                  }
                ]
              },
              {
                "id": "8856db5c-f511-490f-b4eb-c870e0ddbff1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "86f2b64d-b5fe-47f9-9ebd-0fd60bc7b6e4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cbb488-8cea-48c7-ab9e-8ca578d5fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5fed61db-aa17-44b7-8885-313e2bf192dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c47f94-91a7-423d-838f-1bc07f9726b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0354ce-5731-4a3c-8b40-b8ab1b0b4ad3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8c29643e-3f20-47fb-b26c-fa6dc3aca1ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "048c7ccf-fefd-4702-abe1-6e09522edc4f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a812ff85-94fe-45ff-a55e-643c06e96ee5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d2b61a25-6457-4eec-83fb-27783f8a4b62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c56ab19-8773-4364-bf55-bc9d38547068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88e5db4-8213-45c6-9a3c-7da37f17e04d"
                    }
                  }
                ]
              },
              {
                "id": "0ce5baac-48c3-4466-b426-96805c74cd42",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "feade7c1-1122-4e48-8086-8519f1135d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b18ce9c-a708-4495-8874-4f4542d2f207"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0185455-5779-48d8-a22b-4a0cd48acc2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f278cb5-b96a-4a0f-b425-6d0401e020f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11a83561-d155-4877-b092-b546a28c460b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3df8cdb4-b271-4446-8500-4a1287bd48c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f82d83c1-c8df-4431-bb02-6fe72db14f7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a819e68-ceaa-4514-803a-e4fe175703c6"
            }
          }
        ]
      },
      {
        "id": "36981e11-9f8a-4153-9075-ca82b4fd3dbc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d2077ac3-8199-4930-a180-241a86875105",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6b7d652-34e9-4677-9585-34640880aebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b23e7a2-5e96-440c-aa78-adc9d4af804a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035320a5-8098-49ed-87ad-25c489ec5b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1fe5db99-b65b-48f7-83e4-29226c0f4c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fece887-2f56-4dd9-8e4d-d9df8d58c045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdce5ebc-82c6-43cb-9f28-f59156f7849e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73b9e2c1-5eaf-4e98-aaad-7e9c4d170b2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8755b645-ec49-47e7-a8b7-9561005d1a79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04eca4fb-fa49-4416-a3f9-c854920608d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be611d2-4dd1-4790-9d10-ca596c6f2521"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e05f7743-0b70-421b-a1f1-20179e868110",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4c91990d-a58a-4a68-b2a6-9986fba37e6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "682c120b-7eee-46c6-bd1f-5e4cf4da50e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0342b8ce-0660-4248-a941-c43d37b07cbb"
            }
          }
        ]
      },
      {
        "id": "8395e363-8070-4ff2-904e-11c7854b5fa5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4891d547-7925-48fd-a299-312430f1ae51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b3e71e0-9098-4b08-b78b-42baa3930816",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47efb523-c086-42e6-9937-e4cc2eef7f38",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab154cbb-253d-476c-9719-bdf46184ffe8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf0635e-2077-4b2e-a91c-9c2c26f908f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d04957-69ea-4933-a597-3b23605c1f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c4b109-26cc-4a61-a145-19f482a43b1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f5683ef-7d31-4041-91b8-6ba3ec8a2221",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93699b8c-e28e-4616-acf8-28d3451028fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b7415c-63c9-457a-86a1-69ae0b4dbd56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b5440bb-4fd4-450c-9ef6-94f42118f0b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d22fc416-5244-40ec-af01-3642b4492d11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f3edfbb-11e2-498f-9e1c-11b39b70a603"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "708d5359-42ad-4790-81ef-cf79485876e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ac11f4f-9ad6-4f49-bde8-c0760fc7a160"
            }
          }
        ]
      },
      {
        "id": "a5d52dab-4cc7-4ed8-9d9c-a5527fee2cd0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "464bda42-8bcb-49b1-a6fc-9a57ed43e854",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0edd0be1-a9f7-4230-a5aa-f1f700030565",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ae01304-db60-4adf-ba4f-14dfb91a9c46",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf513da-3506-4b86-9fb9-9e4a71f76866",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0544e39-a848-44a9-823c-928a7ad91401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4407e5-dbfb-49b6-aad3-8ad0b7199182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cbff39f-0696-42f4-8937-2f1475f9dc94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d679f101-bbf3-4616-9c74-c93f7bee6cb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f450ebfb-d703-47a8-9ce6-9f2299387241"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55b99a9f-7c7d-4a2d-bf04-3457a86fa292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc11cc5e-9e17-4aa8-a24e-b80c1b52646d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09a6f65c-8171-42f4-86bb-1e6d118152af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "331f3ab4-72af-4d1e-b3c9-a19a473d9394"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c13233a-3aec-41c9-a7a5-d68b58209f47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9647e497-6c9a-42c3-9038-8df0a6f30346"
            }
          }
        ]
      },
      {
        "id": "c3ec1eb5-4a99-42b2-bf12-c2c0791f2cd3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96d24c19-ccff-4c90-9e10-bc0735f807de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e40f3f-07cc-4a35-ab3c-28158d6e1bbe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "547087ad-d417-4f15-8e9d-cfca7c1e628e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81b1e65a-a088-4b70-b9c3-a3ae8d29248a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d951344-f48b-45e0-91b7-ba66422cbff5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 205.0422535211267,
      "responseMin": 10,
      "responseMax": 6209,
      "responseSd": 662.483976667663,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690073030632,
      "completed": 1690073100418
    },
    "executions": [
      {
        "id": "9936ea62-f2b5-4614-b009-21cfbe3335a8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fb717ff9-2d06-4551-856f-8428784c9ca1",
          "httpRequestId": "51dafc40-5e6e-4a20-94c7-670596484a96"
        },
        "item": {
          "id": "9936ea62-f2b5-4614-b009-21cfbe3335a8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "03543ccf-d94c-4d1e-907f-58bd6c9878bc",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "23f62bde-3457-478d-aff6-dd0b1e240242",
        "cursor": {
          "ref": "d7355ee1-c17a-42a4-a359-ce6e1e35772a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c7892787-3408-4de1-9a4e-2ce3d28b8951"
        },
        "item": {
          "id": "23f62bde-3457-478d-aff6-dd0b1e240242",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "423e9a9e-a97e-49a4-a62c-fc43e6806cdf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "bf39d887-62da-4810-87ee-aa7c1795a57a",
        "cursor": {
          "ref": "7772cf02-8bb5-4122-9f19-5bbdd7edae03",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b483cebf-8246-4671-bdbc-9481a718d1db"
        },
        "item": {
          "id": "bf39d887-62da-4810-87ee-aa7c1795a57a",
          "name": "did_json"
        },
        "response": {
          "id": "44591e02-61af-470e-898e-74ffaf6945ce",
          "status": "OK",
          "code": 200,
          "responseTime": 386,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31513981-1391-49c0-9fb3-6c58295540a8",
        "cursor": {
          "ref": "0064f83b-e5ea-43a7-ab95-243b8d6f0e4a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e574b15-c7ef-4d96-9527-de34684733cc"
        },
        "item": {
          "id": "31513981-1391-49c0-9fb3-6c58295540a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc1d3787-5cf4-4b85-9951-e0c713d8397d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 944,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31513981-1391-49c0-9fb3-6c58295540a8",
        "cursor": {
          "ref": "0064f83b-e5ea-43a7-ab95-243b8d6f0e4a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e574b15-c7ef-4d96-9527-de34684733cc"
        },
        "item": {
          "id": "31513981-1391-49c0-9fb3-6c58295540a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc1d3787-5cf4-4b85-9951-e0c713d8397d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 944,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed42c84-4a3c-4121-9335-c8dda957cb5b",
        "cursor": {
          "ref": "e451d750-c3b4-4d3a-89c3-6c8f988795b9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "62be3889-1fc0-4155-b5ee-29e2c4920322"
        },
        "item": {
          "id": "1ed42c84-4a3c-4121-9335-c8dda957cb5b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87b8f1e1-fe39-46e7-9e25-9de00b04a415",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a2d79d-fb85-4f59-9807-dd7d6490c191",
        "cursor": {
          "ref": "773616bc-24b5-4c55-807f-33ef9708cdec",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2419097e-f19a-4a02-8ca6-8fcd740e5b51"
        },
        "item": {
          "id": "11a2d79d-fb85-4f59-9807-dd7d6490c191",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f086e68d-e5b5-4a53-ae49-179be39b4603",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b8b45-2f77-4a26-a6ba-377796abcecd",
        "cursor": {
          "ref": "2bea53c3-be73-48dd-9bd6-0f3929018672",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac8c2b3e-e456-45d3-a75a-866731e57aef"
        },
        "item": {
          "id": "684b8b45-2f77-4a26-a6ba-377796abcecd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6fd83b0c-95b9-49db-9c59-c588dcde4f52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e6619-6aeb-4aeb-8d3c-0ee7eaec141b",
        "cursor": {
          "ref": "54f885f5-3b00-4fc8-87d4-3da717ac4181",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eb8e405b-d725-4f3b-8c04-dd08b087c42f"
        },
        "item": {
          "id": "a42e6619-6aeb-4aeb-8d3c-0ee7eaec141b",
          "name": "identifiers"
        },
        "response": {
          "id": "9257fa60-8a64-42fe-836b-791655d72071",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9cf27-da76-497d-9289-1b5eb3328ee5",
        "cursor": {
          "ref": "d0819e12-6029-43f7-8b02-c41c088cac8c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "77981042-c21f-447a-b76b-1b52ee057326"
        },
        "item": {
          "id": "85b9cf27-da76-497d-9289-1b5eb3328ee5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "11f6d662-8816-4c29-9982-cf5d45168876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4ee7ee-e525-4658-9c51-34dc2bd92415",
        "cursor": {
          "ref": "420407b5-8968-4368-8a17-6fe378258629",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c2bdb7a1-5ce1-4b71-9dc9-fd1e94766dcc"
        },
        "item": {
          "id": "7b4ee7ee-e525-4658-9c51-34dc2bd92415",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "646d560d-9d05-4e74-a8cf-9134227ee86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7533bf86-6326-4e26-b131-75d41481b63c",
        "cursor": {
          "ref": "38130ee4-04a1-4c0b-87bc-0dc585dca1b1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c6a4e9dd-e9d0-4e69-8856-d8b3865b18fe"
        },
        "item": {
          "id": "7533bf86-6326-4e26-b131-75d41481b63c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7999d26a-896d-47f1-91ea-86c741a9a3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2310134-aaea-4ba7-b2eb-f451d0d28f8a",
        "cursor": {
          "ref": "bbdff1e5-77b8-4c90-826d-27c04a95ccca",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "732ee8cf-6bfc-45cf-81c5-8c7e974669ff"
        },
        "item": {
          "id": "a2310134-aaea-4ba7-b2eb-f451d0d28f8a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cd829758-1cd2-43b5-8751-95f87bcf3901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ca3b7-e6c2-4cc4-9a06-28769990d15e",
        "cursor": {
          "ref": "0f3e6d34-5d18-437c-b1a7-7aeeaab45f2e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6584afe5-ce98-46a6-9dae-285779c67fb7"
        },
        "item": {
          "id": "665ca3b7-e6c2-4cc4-9a06-28769990d15e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "097c38ee-3166-467b-8b68-1924f28503a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a27ad6f-2fa2-4f44-a2f6-dacb642e74b6",
        "cursor": {
          "ref": "e1511b29-8317-4f12-bcbd-51a42c6e9ff5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fc11cecd-378f-4fca-a6fe-fd07341aed59"
        },
        "item": {
          "id": "6a27ad6f-2fa2-4f44-a2f6-dacb642e74b6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0128bd98-2678-4e72-a3c8-8294e1855939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfc324d-a60f-4700-97bc-c665bf2d5520",
        "cursor": {
          "ref": "4bdeee53-35ea-409d-aa89-38ed2c91b747",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bce9b6f4-6583-4930-ab3b-39b7f3b09236"
        },
        "item": {
          "id": "ccfc324d-a60f-4700-97bc-c665bf2d5520",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2c54e5bd-d92d-40ac-880c-8d6878af79f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2774f5-94f7-447c-a689-1ffc735faf4a",
        "cursor": {
          "ref": "d2d0ed5f-b6af-4d41-b9ed-2fdfdeb7a518",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e032bd88-6e61-461e-8ff3-f3e52a053067"
        },
        "item": {
          "id": "1d2774f5-94f7-447c-a689-1ffc735faf4a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2a026287-b34e-447f-bf66-e1b830705c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9715a603-3c7d-4069-b2b5-19bb49d77f58",
        "cursor": {
          "ref": "cc773310-d84b-4309-8094-0556764a0c38",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "46325a71-e644-4b67-9262-fd40db8c6103"
        },
        "item": {
          "id": "9715a603-3c7d-4069-b2b5-19bb49d77f58",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cbe89434-eb42-42cb-90cb-34e6d0fe7421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9258101e-910e-4ff6-8722-5f30044475a8",
        "cursor": {
          "ref": "9adafd2d-019b-424c-8ef9-e10bc243a37a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6528e831-edb3-49f2-a97f-6a385256c9d7"
        },
        "item": {
          "id": "9258101e-910e-4ff6-8722-5f30044475a8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ebb77fc8-0b36-4281-b638-126c14e48d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d7e6e-b6c0-44b1-a220-48beebb83660",
        "cursor": {
          "ref": "19e565fc-61f1-4d25-9791-5b53c8672780",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "58a4144d-0441-4948-ace8-59e97a94d416"
        },
        "item": {
          "id": "c79d7e6e-b6c0-44b1-a220-48beebb83660",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "86be295c-deb9-4d5b-9aa2-dc14f442d688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ba48d5-6f60-465d-92cf-e3ce65f72f77",
        "cursor": {
          "ref": "cda131b3-31bf-41a4-af5e-c6fc53bf98d3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d12cd623-3aec-4532-a456-cde6a0cdc4c1"
        },
        "item": {
          "id": "d1ba48d5-6f60-465d-92cf-e3ce65f72f77",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a0434e2c-8f74-49aa-afaf-935ebe5be061",
          "status": "Created",
          "code": 201,
          "responseTime": 741,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "18a19657-27e4-47ed-9c68-167f19b5a2db",
        "cursor": {
          "ref": "63432e13-29cd-427a-b8dc-397e6106d8df",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "40ca06a1-7a2f-48e0-9acc-ac6f5c6dd086"
        },
        "item": {
          "id": "18a19657-27e4-47ed-9c68-167f19b5a2db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "779e3931-a089-4df6-a61b-bba4754998fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f85f9f1-4ffb-4843-b978-7882270c793c",
        "cursor": {
          "ref": "57a6875a-e990-4798-9dd5-18d9d9e62498",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "988497d2-5741-42da-bba6-b97916602f2f"
        },
        "item": {
          "id": "8f85f9f1-4ffb-4843-b978-7882270c793c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9c87abc-8432-4074-9b31-0329de98e7dd",
          "status": "Created",
          "code": 201,
          "responseTime": 6209,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "c00e933b-6a78-4296-b35d-696e15704eff",
        "cursor": {
          "ref": "d58669ea-cd77-4e90-8cec-8fb9769dce92",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d9e2d60a-0ebc-419a-9b4a-23f6b6dd1ddc"
        },
        "item": {
          "id": "c00e933b-6a78-4296-b35d-696e15704eff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0941e294-dc3d-4b19-a139-639034e0934f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac0ec9c-d580-4999-88e8-b600c240d57b",
        "cursor": {
          "ref": "f2a89464-6054-4ecf-a8fc-3642037066a2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "42784662-8a36-4633-ae62-9c40c0343813"
        },
        "item": {
          "id": "4ac0ec9c-d580-4999-88e8-b600c240d57b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "42a20431-7705-41df-a1e6-d71a5d5510b4",
          "status": "Created",
          "code": 201,
          "responseTime": 3073,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "9d78a701-358f-4dcf-8668-6eba1993fd2e",
        "cursor": {
          "ref": "146d5035-1d9d-4d39-ae3a-142005c45429",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0b88e989-fb93-4720-930a-af3247a2a94e"
        },
        "item": {
          "id": "9d78a701-358f-4dcf-8668-6eba1993fd2e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89332859-c38a-4e3b-a2b9-f4d64cbd2821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f323be4-552d-49fb-b2c4-c0830b3a4429",
        "cursor": {
          "ref": "78fdd37b-0e3f-4f5b-baf1-8a63ef9d51d1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7bc35c7c-9ca0-466e-a071-d5612084d126"
        },
        "item": {
          "id": "2f323be4-552d-49fb-b2c4-c0830b3a4429",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2a3304e5-f01e-4d8d-9a34-46aa8753d452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5879c711-9040-4e1d-b636-cad187d5939d",
        "cursor": {
          "ref": "c659344f-9bc0-4f28-9a87-a5901886fbf1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "103f08b6-d259-48db-b4d8-d7ed943a95e1"
        },
        "item": {
          "id": "5879c711-9040-4e1d-b636-cad187d5939d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "51805042-cc96-433c-8135-90ac1368b4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abafa46-d6f4-42c9-b87b-7627c930a269",
        "cursor": {
          "ref": "6f67c842-9fd0-4351-91f7-0b44b4734216",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "56166753-6227-4711-a565-3bc0d1712efc"
        },
        "item": {
          "id": "1abafa46-d6f4-42c9-b87b-7627c930a269",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5fb100f5-3c01-4a05-95e9-4ad414feb216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aef9ffd-e8d9-4d87-8a8b-f74f9e2b4d55",
        "cursor": {
          "ref": "ec7087e0-981f-4436-a5a1-a18b12b98e06",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cc6e6bcd-e552-4df5-83b9-e8567cb6c0e1"
        },
        "item": {
          "id": "0aef9ffd-e8d9-4d87-8a8b-f74f9e2b4d55",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "82f4b663-f2a1-44a7-86a0-cdf180cd7d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d690dbe-e7fb-4e02-914e-d1b1da015d9f",
        "cursor": {
          "ref": "890a2349-a73d-45a7-a287-fd0bdcafa26f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c161df75-45d7-4de8-8027-511fa32fa756"
        },
        "item": {
          "id": "4d690dbe-e7fb-4e02-914e-d1b1da015d9f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e569455e-a582-4455-a91c-670d2510617c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89035d2-54a0-4684-ac97-f6584dea5cc0",
        "cursor": {
          "ref": "ff86f989-4d70-41a7-862e-b788db8caa82",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8821b593-5a87-4d72-99d8-6c4c299435ce"
        },
        "item": {
          "id": "a89035d2-54a0-4684-ac97-f6584dea5cc0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2a297cba-384b-47c6-a011-43c7357fd363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a38d27b-db93-427b-a3c1-36dc33a05a20",
        "cursor": {
          "ref": "443a7339-5762-42c8-b7c6-dd0ead3b0d7b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "74a1a68e-9059-44f1-8ddd-c9d4624acdff"
        },
        "item": {
          "id": "8a38d27b-db93-427b-a3c1-36dc33a05a20",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "78935491-c560-4026-8508-c6d33ac7e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc56e3c-d857-45d8-971a-e853ff6a5827",
        "cursor": {
          "ref": "6f4c4d85-c266-434b-aaa4-45c56e216b83",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98eff919-4337-42d8-abf4-ea30ff48eec2"
        },
        "item": {
          "id": "3fc56e3c-d857-45d8-971a-e853ff6a5827",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "55e64b5c-2472-4b78-a450-9424c0efb66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112b4550-c501-4b7a-b51f-04b55c259316",
        "cursor": {
          "ref": "34a543a3-f7a6-48c7-8272-e0db42849650",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4ba239d7-653c-418d-9734-f17c9e3e678c"
        },
        "item": {
          "id": "112b4550-c501-4b7a-b51f-04b55c259316",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "773f2d17-aa0f-4b1e-9c3e-c1f973be30c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dacee24-c42e-4d0e-9506-ac0791aa44bb",
        "cursor": {
          "ref": "81bcd49b-7e6c-473b-b319-9a77269f5232",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ccfc93e0-d850-4b7e-80c1-7b0baa59401c"
        },
        "item": {
          "id": "9dacee24-c42e-4d0e-9506-ac0791aa44bb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71a5fbfe-29df-462a-8fe1-2e20de0c8a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e902197-d347-4bd8-886c-6cc818af8fb5",
        "cursor": {
          "ref": "16209077-6a85-4c8c-8e84-cad00fa91e79",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f1294dba-34b3-47e5-b9bf-f55a2e674203"
        },
        "item": {
          "id": "4e902197-d347-4bd8-886c-6cc818af8fb5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9dfb65c9-36aa-4448-9ac9-1015211d0a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46cc09b-d37d-4c7e-865e-ce69638d0e7b",
        "cursor": {
          "ref": "7f9f1711-d92f-4337-8b6c-96df973a336b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8a89847c-f226-48e5-933c-11a4065a355e"
        },
        "item": {
          "id": "d46cc09b-d37d-4c7e-865e-ce69638d0e7b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "106c1bf8-e531-4b54-a990-1d4fa8e54ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379bf38e-987e-4fde-a9aa-ea9d9fa17467",
        "cursor": {
          "ref": "e6cab120-7d71-454e-97f8-cac4f7fc4cac",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2920cf5-7de6-44a4-bfc6-1ca5ebe2d362"
        },
        "item": {
          "id": "379bf38e-987e-4fde-a9aa-ea9d9fa17467",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f5707d2-56a0-4fe5-825f-e9e65c3849f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c6422a-1352-4469-a5fb-dc423ad7f71b",
        "cursor": {
          "ref": "7afdf80f-3db8-4185-aeba-c2f7cd985f71",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d6215a50-6f01-4bf0-a823-5f0cf9f88fa1"
        },
        "item": {
          "id": "76c6422a-1352-4469-a5fb-dc423ad7f71b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6f6f61c6-c99f-4666-9f82-6e0061ec81ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9d63c-1076-4eea-8099-6ba2b8b0c154",
        "cursor": {
          "ref": "0b8c3276-77b1-4b74-b86e-c4537fdcca91",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5b50d2d6-b4a2-4858-a038-1121454b1ce6"
        },
        "item": {
          "id": "44a9d63c-1076-4eea-8099-6ba2b8b0c154",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f9fb56d-7c67-48dd-817e-141111e1d6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f647b91-325b-4c3a-a75b-05613ae26835",
        "cursor": {
          "ref": "7c025f1a-71d2-4a9f-8f24-7056c272184b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9c6754cf-99e4-4389-b0d6-a40833a234db"
        },
        "item": {
          "id": "8f647b91-325b-4c3a-a75b-05613ae26835",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1c6454d9-80b2-47d9-956f-4a74f25a9a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc156d-ea98-4da7-8b38-af6baf5c7d76",
        "cursor": {
          "ref": "adc5b7b2-d912-48fb-a317-4e18d5e0f0e7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "109ba9b0-ece6-427d-bb59-abaafb3d090a"
        },
        "item": {
          "id": "8fbc156d-ea98-4da7-8b38-af6baf5c7d76",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0190c293-6f60-4ae2-88b6-84d38d6b1b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d4a78b-0ee3-4afd-bebc-03c2ccee6198",
        "cursor": {
          "ref": "518b1411-5415-4ed9-b334-9bd596147366",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "65cc5d8f-64c0-43ea-b806-93dcbe24dbe8"
        },
        "item": {
          "id": "c3d4a78b-0ee3-4afd-bebc-03c2ccee6198",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "be9f53e2-782e-4b18-aac6-97332c90f91d",
          "status": "Created",
          "code": 201,
          "responseTime": 2538,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "13059ddf-5bb6-4ebf-ab98-ddaffe145426",
        "cursor": {
          "ref": "90a25f09-4f14-4e4b-9206-90736195c76a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e847e9d2-03ad-4bed-86ec-f01d1d1d5646"
        },
        "item": {
          "id": "13059ddf-5bb6-4ebf-ab98-ddaffe145426",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "85baa1a7-9708-4cdc-b7fc-1ddc003ca1f9",
          "status": "Created",
          "code": 201,
          "responseTime": 2790,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "fb782bcb-7510-4fa8-a115-d2f47cb076f0",
        "cursor": {
          "ref": "91af16ad-db20-4afc-8a68-70780e1a64f2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3af66466-1905-4449-a798-3ee503ddb703"
        },
        "item": {
          "id": "fb782bcb-7510-4fa8-a115-d2f47cb076f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e95a2f9f-042e-4a77-a692-2f527891eb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa8930e-67f0-4b7c-8ba5-75a2459f7678",
        "cursor": {
          "ref": "c73e7aef-d70b-4f9e-8a4c-6a09ddb1ed21",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b654da60-cf77-413a-a047-4c187167a28f"
        },
        "item": {
          "id": "aaa8930e-67f0-4b7c-8ba5-75a2459f7678",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "210c63e5-98ae-4b71-8216-6768559f4f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74461c13-9639-4853-acbe-608578f0e5cd",
        "cursor": {
          "ref": "459b86b9-f10c-4638-af7e-3fae093abaf1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "806eddfc-73c3-4cc1-834b-82dcd47a9fdc"
        },
        "item": {
          "id": "74461c13-9639-4853-acbe-608578f0e5cd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "456da9ef-a367-4b05-b384-0dcbbb0e3dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c366d818-d690-488e-be2d-5e2ecc70e169",
        "cursor": {
          "ref": "f564d7c6-2c74-4f19-8090-1303a0e8c756",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d8aa733e-c863-4825-b546-92a41a1d5768"
        },
        "item": {
          "id": "c366d818-d690-488e-be2d-5e2ecc70e169",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "169c98cf-b7bd-4415-a9ad-f08d4dd22807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b254f0-eeed-45bc-be80-192ab298a647",
        "cursor": {
          "ref": "1efde278-eb65-45a2-b510-8cf1009225f1",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "316d92a9-2ffd-45e4-8e93-5a94bfb45f67"
        },
        "item": {
          "id": "17b254f0-eeed-45bc-be80-192ab298a647",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5d5e3ee8-44ba-4bce-9057-6ea591dff648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5749bf2-c2bd-48e9-b6d4-cdc2c12f631c",
        "cursor": {
          "ref": "e6ed22c1-d77c-4d3c-99ce-2a9f3a7d3ebd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9d08e3c4-234b-4a21-8b03-c89786035361"
        },
        "item": {
          "id": "d5749bf2-c2bd-48e9-b6d4-cdc2c12f631c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7bb1cc10-a65c-4b05-af17-2f3cc751d2b2",
          "status": "Created",
          "code": 201,
          "responseTime": 3212,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "59adc16e-da25-4713-8d2a-1dbb4fa19619",
        "cursor": {
          "ref": "f5a13f27-4155-4ad2-a1d6-afe32ac4276f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f66eeb14-f987-4c21-b7a7-82ef3d231c93"
        },
        "item": {
          "id": "59adc16e-da25-4713-8d2a-1dbb4fa19619",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "61cc75c4-939f-447d-9977-d851b822787a",
          "status": "Created",
          "code": 201,
          "responseTime": 2321,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "67e54f15-3061-4a1e-b951-41c7520b0c7e",
        "cursor": {
          "ref": "39efb88f-0689-42d9-8155-d7753a896e08",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "497771f4-2d65-4bb6-b86a-60f8df483cc7"
        },
        "item": {
          "id": "67e54f15-3061-4a1e-b951-41c7520b0c7e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "be4b4940-18a4-4dbb-8a23-c4f99a5056b6",
          "status": "Created",
          "code": 201,
          "responseTime": 2664,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "7cb6d20f-e3f7-48a0-93bb-6b9a54142533",
        "cursor": {
          "ref": "c63b6c02-265e-4a4e-8e2c-04a3120cef03",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "48240eb6-c6be-4ad3-98d2-0fda31713eb6"
        },
        "item": {
          "id": "7cb6d20f-e3f7-48a0-93bb-6b9a54142533",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22ae9151-814d-4ea9-bdeb-51e44703d10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf1b6a1-6e7d-4b79-ac1f-308b38233869",
        "cursor": {
          "ref": "b299957e-85dc-4db6-8675-72f4f1bf337a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3403cd14-e9ee-4562-9236-8a49869f954d"
        },
        "item": {
          "id": "6cf1b6a1-6e7d-4b79-ac1f-308b38233869",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee0dd108-38d8-4cf7-9230-2178abc1dc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be933f52-8c44-4c01-9719-5f72e98fdca2",
        "cursor": {
          "ref": "c5a9f2dd-bd5e-4ee1-a8b4-e94ab9daa439",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e6d3fdd7-9fa5-4dfd-a3f2-86901305062c"
        },
        "item": {
          "id": "be933f52-8c44-4c01-9719-5f72e98fdca2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f8fd4dca-735a-4f62-834e-1d608f16bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eb5586-5a01-4c7c-8992-ffc8d67bdd6f",
        "cursor": {
          "ref": "1ce9a61c-3cee-44d8-9179-b81f5d0bdfa1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "91256462-473f-4691-90c3-cafb288b59fa"
        },
        "item": {
          "id": "73eb5586-5a01-4c7c-8992-ffc8d67bdd6f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dd7b5231-7c00-484f-913d-0c8eef0b3c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e60313-7aa8-4bec-836c-8b5d717c4e73",
        "cursor": {
          "ref": "e6b79d1b-2d0c-4a24-b0a1-37c62326fd0d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9fecf73c-2994-422c-b47a-a84ee9ee7fae"
        },
        "item": {
          "id": "26e60313-7aa8-4bec-836c-8b5d717c4e73",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f7249a38-2911-4508-baa0-2a4356b177eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2fd63e-f051-405f-8699-2250209f71fd",
        "cursor": {
          "ref": "d27402a5-5674-421f-89a9-34500d270936",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "95b77a96-f331-43cd-8d75-cac147135868"
        },
        "item": {
          "id": "4d2fd63e-f051-405f-8699-2250209f71fd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6765209c-4773-41c0-a8d0-7a771cfdaf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9453bf6-0d03-483b-8ffc-e81a7616ae14",
        "cursor": {
          "ref": "003a2544-f4c3-450a-bddc-c56b182d576b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73bc2311-28d4-4ced-993d-3a69369f436a"
        },
        "item": {
          "id": "b9453bf6-0d03-483b-8ffc-e81a7616ae14",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd9e39b5-ab8f-4d1a-be5f-c59ad22b29ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49252642-f8be-4d59-a8ae-26431fda70b1",
        "cursor": {
          "ref": "9cd85f16-852e-4866-b52e-cda977b1f3ab",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f6dd9895-910d-4246-babc-e6216b66995d"
        },
        "item": {
          "id": "49252642-f8be-4d59-a8ae-26431fda70b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "47d4b4bd-3fc7-4a56-8c97-561091d5efa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e3cc7-0453-4324-a322-022e8c773e72",
        "cursor": {
          "ref": "7cd1b765-457c-4b44-8b3a-488f0a30b2cf",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd65e290-8411-4812-ac35-66238531ffd9"
        },
        "item": {
          "id": "cb3e3cc7-0453-4324-a322-022e8c773e72",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9003ad9b-1030-424d-b7ba-530bb6ec8fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f3796d-ad34-46bc-b80d-442540d74dd0",
        "cursor": {
          "ref": "de922798-b8fa-4ba9-8269-27033abfd016",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0524b4e1-721e-41cd-b93c-59ab94fc763c"
        },
        "item": {
          "id": "87f3796d-ad34-46bc-b80d-442540d74dd0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b1b70db3-e012-4ea1-9389-8aef3706b1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a4a2cd-644a-4e97-af2a-04fcfb3eda95",
        "cursor": {
          "ref": "cea2b9ed-4379-4685-ba44-67141b3004db",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dbdbffb1-7f5c-4dc0-859a-d5ca8f1cca34"
        },
        "item": {
          "id": "29a4a2cd-644a-4e97-af2a-04fcfb3eda95",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dbd0acec-afde-4f38-9545-eadedba771b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da81039-22b3-4ac7-9be8-6d49850f750d",
        "cursor": {
          "ref": "345d8eb4-a05f-46af-a943-e4a4ba65dc8e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9c0f99fc-2835-44ad-a407-fe347d34dfe7"
        },
        "item": {
          "id": "9da81039-22b3-4ac7-9be8-6d49850f750d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dafa5438-4a5e-450c-9e87-1aed406fcd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49c34a9-15d0-43bb-9e72-07b6421689fd",
        "cursor": {
          "ref": "a38010c1-4378-4407-be13-1cf593fcc83e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fc7fdb59-9543-48e4-a595-c3e47957afa8"
        },
        "item": {
          "id": "c49c34a9-15d0-43bb-9e72-07b6421689fd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e82210be-81bd-43bd-8020-85815b0162fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25db7146-2ddc-4951-bfce-fbff0cfb71d9",
        "cursor": {
          "ref": "f0a882a2-8356-42a5-a667-f35cb7f34849",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7cab522e-6e24-48cd-95bd-b0ca14f3efc8"
        },
        "item": {
          "id": "25db7146-2ddc-4951-bfce-fbff0cfb71d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5e702a9-f22a-4849-b05d-63a6651bd3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfde3386-8d6b-4b0b-9f9d-edb7c1e154d0",
        "cursor": {
          "ref": "524be113-69d1-4e03-b7b6-cb1a2b3679a3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ea6bd907-d0a4-4c1d-8a86-2f7211a9774a"
        },
        "item": {
          "id": "bfde3386-8d6b-4b0b-9f9d-edb7c1e154d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "adf4bc41-4d61-4a9b-836b-83bdfd19ad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d83a69-1451-4cf5-bfa0-8601b42744ca",
        "cursor": {
          "ref": "c3b899b7-bbca-401e-8ac9-83f8a28459f7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "15adf9fb-d626-43cd-9866-c93598f6c512"
        },
        "item": {
          "id": "99d83a69-1451-4cf5-bfa0-8601b42744ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2a5a24d9-6c16-452b-bef4-fd11cadb28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e54ae-6ab6-4723-a429-f793cf481fe7",
        "cursor": {
          "ref": "2e8a9c9a-33e2-4b92-9698-5ad8db677828",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa500199-aed5-46f3-af2a-e99a57990fae"
        },
        "item": {
          "id": "892e54ae-6ab6-4723-a429-f793cf481fe7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "69c1c6cb-8c51-4dfb-a217-a3ea72eb2df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9368f-451a-43a0-9ea2-1f06c4d43211",
        "cursor": {
          "ref": "efa45b20-151c-4bc2-80da-9b27cba38767",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0db75a1a-4526-4b6c-97d1-7379bb2807ea"
        },
        "item": {
          "id": "2fd9368f-451a-43a0-9ea2-1f06c4d43211",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e1b105df-a0c4-497a-8e3b-c1bf2b856ac2",
          "status": "Created",
          "code": 201,
          "responseTime": 2515,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "e7af3c90-1c65-4797-8732-81d54086d320",
        "cursor": {
          "ref": "dad2e74b-75b8-45f0-9e9f-b2d9c0290128",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "79b37ddc-744b-4a98-b076-a25fbc588d4b"
        },
        "item": {
          "id": "e7af3c90-1c65-4797-8732-81d54086d320",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6cb7bfa-eeb0-437d-88b9-925507c56d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da9462-5d04-403a-aa45-07816754502e",
        "cursor": {
          "ref": "d6650a12-30af-4a78-a29c-9fe483ef9c29",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b62eab53-90b3-499b-9419-a080a0617ae9"
        },
        "item": {
          "id": "76da9462-5d04-403a-aa45-07816754502e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2295134d-0976-4386-b99d-2c880355a0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85363c2b-e3ce-4b2d-807c-16b10a6de9fb",
        "cursor": {
          "ref": "f71d0172-99f1-4304-9b46-18865350daf9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb358314-bf82-4947-8d1b-f4c4a0c74378"
        },
        "item": {
          "id": "85363c2b-e3ce-4b2d-807c-16b10a6de9fb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9a5ef4f-17b1-44fb-bb7f-2c91be507f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c40eb2-6e88-400f-ba2f-191cd80c76f6",
        "cursor": {
          "ref": "a833e9ff-18bb-485c-a4a2-d9c77cd295dc",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d510e974-e2e1-4321-a663-091b8e53ceb3"
        },
        "item": {
          "id": "71c40eb2-6e88-400f-ba2f-191cd80c76f6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b564e043-8950-410d-9875-4ac5f5e43474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd4b48-7140-4ea6-8fac-dde962ce2204",
        "cursor": {
          "ref": "0f384d72-bfc3-471a-b6e5-7015b69d0ae8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "52b0691f-9075-493b-86a6-0d5da2d5830e"
        },
        "item": {
          "id": "c8fd4b48-7140-4ea6-8fac-dde962ce2204",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "24108859-8fd4-4876-9eee-50d4f88b10dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7bd216-1751-4cd3-b520-df3d77a477ba",
        "cursor": {
          "ref": "8ba972cb-e1fb-42b7-ab0c-0e7989662538",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bff426b9-73f1-417f-95dc-2d7fdc96f3ed"
        },
        "item": {
          "id": "6e7bd216-1751-4cd3-b520-df3d77a477ba",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2ce438f6-0bfb-4f19-a6db-988cad2d4df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91407f62-5b0d-4fcc-ac08-a608251cd97f",
        "cursor": {
          "ref": "841e520c-2e7d-44aa-a690-0ce30b64bdb5",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "add67851-6d70-4e73-89ee-c1072e4d196d"
        },
        "item": {
          "id": "91407f62-5b0d-4fcc-ac08-a608251cd97f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8439c7bc-b17a-4a46-b680-947d7c9d5338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9453c0cc-ddd3-4e2c-89b7-b653e091e026",
        "cursor": {
          "ref": "a5b67bde-8fb6-4dad-a419-386715675430",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "09380d96-6405-4bf5-a7d4-12d052162140"
        },
        "item": {
          "id": "9453c0cc-ddd3-4e2c-89b7-b653e091e026",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "90207235-fb28-4f06-8dca-1f0a368da20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e002b-7c80-4e0b-baeb-ba5d904ab6fc",
        "cursor": {
          "ref": "7812cb94-f27a-43e0-bb02-07652ca315cf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9d1ea14f-1a3a-429c-9e18-50e213b84981"
        },
        "item": {
          "id": "f84e002b-7c80-4e0b-baeb-ba5d904ab6fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9eb2bc26-13c2-4536-9aac-d0db010ac42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e20b5-05cf-4c60-8a9b-cf582e1bdebd",
        "cursor": {
          "ref": "2f91d380-8d33-47d8-9bc5-f6c9baced4d9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5fa4d5e5-a77e-4b2b-9984-777853e5bac6"
        },
        "item": {
          "id": "f70e20b5-05cf-4c60-8a9b-cf582e1bdebd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3562bf91-cad7-4c47-b705-f95a9a8ff49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174311ec-a228-449e-8e6b-3654affc3558",
        "cursor": {
          "ref": "5eab89dd-66fe-406c-b778-1338bfcb4bd0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71c1c74a-bd58-4330-b79b-88673dd9620f"
        },
        "item": {
          "id": "174311ec-a228-449e-8e6b-3654affc3558",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0f600a36-fee1-4111-9d97-55ccdf6e3ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b300310-bac5-4547-9c15-c31ccda80ed0",
        "cursor": {
          "ref": "fe151043-e668-4352-acaa-7bc0d072fe0f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b4c3dedc-67b3-4db5-8888-462a6c17241b"
        },
        "item": {
          "id": "5b300310-bac5-4547-9c15-c31ccda80ed0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "932b7212-c44b-4c45-a603-4ac6fce5b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf33d1c-703e-4634-a51f-b807ffaa1f79",
        "cursor": {
          "ref": "cd28e2f7-0cd5-4377-9f03-9186e1dac7bc",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c88b2eab-b098-4c91-9f61-a730bace744f"
        },
        "item": {
          "id": "dbf33d1c-703e-4634-a51f-b807ffaa1f79",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c99778d-7f78-47f2-914c-246fee4ac638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83576061-a3d5-40a1-872e-b7f612a6b157",
        "cursor": {
          "ref": "9271acc7-4d31-4eaa-bea2-72d29bf0d93a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a8d34051-f826-404c-867e-078744f096af"
        },
        "item": {
          "id": "83576061-a3d5-40a1-872e-b7f612a6b157",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "56d04897-862d-4b90-aa4a-90f9788ea54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf702735-29e6-4764-bd37-0d31f320d4dc",
        "cursor": {
          "ref": "05298bc9-f7a5-4ec6-8f95-7cb8ba4dc9dd",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "44627f8c-0c63-47bd-a25a-25a1b8df4bb3"
        },
        "item": {
          "id": "bf702735-29e6-4764-bd37-0d31f320d4dc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dfe74480-7df8-46e4-815a-7c50fffebc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5359f9c6-8482-4f19-878b-88f134a0144f",
        "cursor": {
          "ref": "dcd9892a-9530-4a42-9e01-3e713c65d7f0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "31badf22-37e9-4843-9b63-75525f0ccd0f"
        },
        "item": {
          "id": "5359f9c6-8482-4f19-878b-88f134a0144f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c38764cc-8917-498d-8456-50b81341793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248a4cae-7922-4c77-8a35-f50c8c0fd680",
        "cursor": {
          "ref": "6ed4c740-63c3-408f-af27-5f377de4b7a6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2483e7e4-20a7-439d-b13b-823f69bf8598"
        },
        "item": {
          "id": "248a4cae-7922-4c77-8a35-f50c8c0fd680",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ae8cc696-48c1-41c1-8a7b-3c06acb7d390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5b1b77-47ab-4807-b095-7fd4002ac84f",
        "cursor": {
          "ref": "d3663203-9f8b-4d64-9f26-53026d4f6c20",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "164643d1-6482-4560-b4da-09036b68073b"
        },
        "item": {
          "id": "6f5b1b77-47ab-4807-b095-7fd4002ac84f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eac7bc1a-e6ee-419f-b05c-0efa68585ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f7bf7a-c1ae-4716-ad3e-8597d64fb523",
        "cursor": {
          "ref": "9b67aef5-378b-4e20-9b60-818c9c374bd4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e0941c5f-5b1f-40ea-8296-dc7d65749149"
        },
        "item": {
          "id": "c3f7bf7a-c1ae-4716-ad3e-8597d64fb523",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3de0cb0f-5646-4608-8766-3996072a3be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bda1c5-2860-42cd-bf7e-e435f709fbbb",
        "cursor": {
          "ref": "b775cfe9-0991-49a7-9789-872b6da7b805",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0f013ef3-764e-40f6-9743-c8a709dc5dab"
        },
        "item": {
          "id": "05bda1c5-2860-42cd-bf7e-e435f709fbbb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f52b1508-751b-4102-9563-eb9d4e2bfc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e6cec0-1b44-4e8b-804b-c7aed4ae3242",
        "cursor": {
          "ref": "fb082be0-e737-46c5-b098-1a7b30d2e91f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4cb7d203-7400-478f-b0c0-adf4db082795"
        },
        "item": {
          "id": "12e6cec0-1b44-4e8b-804b-c7aed4ae3242",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "058585e7-8c6c-467c-8a2e-6b3e1532d0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce2f002-9d4a-4e85-9342-41ca64a18faa",
        "cursor": {
          "ref": "9a9d7421-db9d-4ad2-9590-7c80ec1eac32",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d51752f1-b327-4730-a917-2ec1cf5a1fc3"
        },
        "item": {
          "id": "3ce2f002-9d4a-4e85-9342-41ca64a18faa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "afa6bfe8-e3aa-4ecd-a647-975f60681ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caa99b8-7e3e-4171-98e3-abc07e11fdcf",
        "cursor": {
          "ref": "11c173a7-b91b-41bb-b8f8-6f8a09cef842",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1dfb275a-655e-4f3a-9038-67801bbcf686"
        },
        "item": {
          "id": "6caa99b8-7e3e-4171-98e3-abc07e11fdcf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "69f62276-b165-4348-a34d-4a440eebc536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aab32b-5c0d-4c51-8b07-47fb9119df6f",
        "cursor": {
          "ref": "a460072e-70ae-47c0-8a1f-509ca666e208",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e234a643-f74f-45de-bc8d-884d266e81c9"
        },
        "item": {
          "id": "62aab32b-5c0d-4c51-8b07-47fb9119df6f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "911b0820-80f0-4683-9b39-bb52171d5c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746b32d0-f531-42fa-901b-5c0d576e5d40",
        "cursor": {
          "ref": "3eb69bb6-61a1-445c-b71c-1076070127a1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d1dc169e-3fe4-4e08-b0f9-6c432d4a134f"
        },
        "item": {
          "id": "746b32d0-f531-42fa-901b-5c0d576e5d40",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "98447361-3035-43e6-b5d6-7416866d0e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfde063-6d13-473e-a7d2-c6b15cb91e79",
        "cursor": {
          "ref": "8759daec-a735-42d7-85b0-0fb56ccdd724",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa0ba988-fc56-4a58-a5fc-838d99b2d4c6"
        },
        "item": {
          "id": "fbfde063-6d13-473e-a7d2-c6b15cb91e79",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "087ae52b-14c0-4a7e-8c86-36352d5e334e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69decd-14d5-49c5-a422-6b0577885bc8",
        "cursor": {
          "ref": "da838a7e-c41a-4486-8587-9b6125e4f3d3",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0f4c68af-4f49-4184-9ad2-ae922e39bbea"
        },
        "item": {
          "id": "3a69decd-14d5-49c5-a422-6b0577885bc8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c995598c-e9bd-4389-a3be-12bfd5bb2d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21d80ec-5b88-4fc3-ab52-f133a8fe4ece",
        "cursor": {
          "ref": "60d1484f-86a5-4bc5-917a-108155707955",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "63a1611a-fd76-44f0-bc32-e8902ae4a0d0"
        },
        "item": {
          "id": "b21d80ec-5b88-4fc3-ab52-f133a8fe4ece",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3a18d3e3-71fd-4cfe-9931-badc629be266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe0aff8-0e37-4600-b897-a90f4ee22d38",
        "cursor": {
          "ref": "a7f37bd4-1ef3-499a-bfa3-be08abb22ec9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "982214df-0fe4-4d9b-98ce-3cc428187b42"
        },
        "item": {
          "id": "fbe0aff8-0e37-4600-b897-a90f4ee22d38",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f4c20bf-7fe9-458f-9e81-4a415c25716b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e36178-3966-4179-8e43-0457e39d8aa7",
        "cursor": {
          "ref": "cd702df4-074b-405c-9309-1e621c27863d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7208803d-6794-4f8f-8bfc-c6788ba6b5fa"
        },
        "item": {
          "id": "03e36178-3966-4179-8e43-0457e39d8aa7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f88988f7-2e7e-4c0b-88e8-4ae0741844df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487df789-dc63-4fd4-a103-58d6f59b79bd",
        "cursor": {
          "ref": "1af7712c-bb71-4ac7-9267-fe131718b910",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5d235745-161a-47b4-bbb7-25d20793ae4f"
        },
        "item": {
          "id": "487df789-dc63-4fd4-a103-58d6f59b79bd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b8430fb3-8a9d-4583-9c45-c38e8f613d94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d29431-d7fc-425b-b4f2-ab3d98e48659",
        "cursor": {
          "ref": "a955d922-e6bc-43a2-b1f4-3d8ae5e4a535",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "60cac8ed-ec94-42c8-9e50-8793883c413f"
        },
        "item": {
          "id": "e3d29431-d7fc-425b-b4f2-ab3d98e48659",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1d4519fd-0b2c-44ce-a668-482928b63382",
          "status": "Created",
          "code": 201,
          "responseTime": 2121,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc66552-9cd2-40ee-90d3-e38d9f9bcc20",
        "cursor": {
          "ref": "13df8143-63cd-4aa6-aff1-88e31e06a782",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c295aa0f-c756-4bd0-98b6-07a4bf3a8403"
        },
        "item": {
          "id": "4cc66552-9cd2-40ee-90d3-e38d9f9bcc20",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5eef867a-6082-4da7-afe7-a6e30c6863a0",
          "status": "Created",
          "code": 201,
          "responseTime": 2491,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7abc685-d6d6-4260-b4d1-073a06ac602a",
        "cursor": {
          "ref": "684a0da0-5b4a-4f60-8415-04ee6a664db7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "21fe3141-b40d-4c4e-a073-47900168f005"
        },
        "item": {
          "id": "c7abc685-d6d6-4260-b4d1-073a06ac602a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e28818c0-e191-4980-b219-e4e2adb615f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2497,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c0a26f-03c5-4723-98dd-6034d018e5a8",
        "cursor": {
          "ref": "7bf60c35-8d3d-4a17-bf87-9edf19f30896",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b748f5cc-9f8c-4f87-8fb5-b84088a83645"
        },
        "item": {
          "id": "72c0a26f-03c5-4723-98dd-6034d018e5a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0697c5fe-6429-427b-8147-81776e205c2e",
          "status": "Created",
          "code": 201,
          "responseTime": 2556,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e3e1f2-5fa1-4213-bb26-6f5bde6d34ad",
        "cursor": {
          "ref": "a0d6fb58-a861-4c4a-8678-5bd204dadd15",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "56257215-3494-4239-ae08-11f1e69499a3"
        },
        "item": {
          "id": "19e3e1f2-5fa1-4213-bb26-6f5bde6d34ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b1cb4fd9-1cb1-4157-a104-c8d27e12dc7a",
          "status": "Created",
          "code": 201,
          "responseTime": 2527,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-23T00:44:39Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-23T00:44:39Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "19e6ef2d-fff1-4b25-b2d8-5f73f260acdb",
        "cursor": {
          "ref": "f2b495b0-f1b4-40d1-9b41-1134c118ce82",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a4c8b587-89f2-4b8d-8812-cc0ed0b7c795"
        },
        "item": {
          "id": "19e6ef2d-fff1-4b25-b2d8-5f73f260acdb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "92edb71c-7797-43be-956f-9fa7fe1a6c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3ed1ac42-323c-4210-a3d5-fb7f8559475a",
        "cursor": {
          "ref": "6620937b-ea43-444c-94f8-d5287cd305a2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a2ee35d2-c164-4021-9860-0d36a1e5dd6f"
        },
        "item": {
          "id": "3ed1ac42-323c-4210-a3d5-fb7f8559475a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57954354-c1d7-47e1-9c19-fa2898b6c132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b13f7ab-af97-4a3c-b127-716b2239de35",
        "cursor": {
          "ref": "1ca46700-f190-416b-882a-8dea890b9442",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f72aa25c-c403-44d6-b9fa-c8f83db4df92"
        },
        "item": {
          "id": "2b13f7ab-af97-4a3c-b127-716b2239de35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4f5f66f2-2d87-4f42-87dd-e6719ec32cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94e0f25-e2a6-40aa-a52b-ed136d89ed9b",
        "cursor": {
          "ref": "0e4081f6-a223-4df3-ab45-8498b48d8b96",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dea46126-e46c-409f-9608-52ba45ef5eac"
        },
        "item": {
          "id": "f94e0f25-e2a6-40aa-a52b-ed136d89ed9b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "873f6461-ea0c-4042-ba3a-c34f9181b246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f2525a-a0f3-44ef-992e-0ca444be7ec7",
        "cursor": {
          "ref": "e0ffe3d7-f1da-41b7-9b56-d44b48371674",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f78462bd-88e9-4420-a6e2-db9377330a4d"
        },
        "item": {
          "id": "96f2525a-a0f3-44ef-992e-0ca444be7ec7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10efc436-4bdb-4ad4-bd45-c0995f229bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabe6398-e579-463c-acfd-af8529ca8c98",
        "cursor": {
          "ref": "c0a2a682-86e8-4374-bb6c-2c0cede2cbac",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1606dada-7608-42b7-b3f6-49a542a6b5a2"
        },
        "item": {
          "id": "dabe6398-e579-463c-acfd-af8529ca8c98",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57f84403-5896-4fc2-a11c-ee309b87f16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d64d4ba-78fa-47d4-a151-b45791909a38",
        "cursor": {
          "ref": "586ec9f5-734a-4a3a-8bf4-eeacd068489e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cf946407-de6c-4f12-b6d1-07e471649c03"
        },
        "item": {
          "id": "0d64d4ba-78fa-47d4-a151-b45791909a38",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86c125c9-d80f-4804-a726-c3824f0907c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b3750b-e4d5-4c5b-9e06-4ad38b8072f4",
        "cursor": {
          "ref": "1cc92335-9710-4ed3-a27f-4011154a27fe",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c9a0b8b9-e3b8-47ba-aa4b-d5fd61d5649d"
        },
        "item": {
          "id": "d8b3750b-e4d5-4c5b-9e06-4ad38b8072f4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "32e9469c-0367-4b8c-91cb-fe62a32516f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a20560f-e096-43d9-960b-4e8e6064ca38",
        "cursor": {
          "ref": "f93b8751-8702-4675-bf2a-1cb841b0dc42",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc60cabd-0671-4a53-a8b0-fbe0b558b083"
        },
        "item": {
          "id": "1a20560f-e096-43d9-960b-4e8e6064ca38",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d85bda0-4076-4385-8018-f9775f558e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a119e0a-8e28-45bf-abb9-087ce46e7a05",
        "cursor": {
          "ref": "d911e17b-c6db-43bf-a327-683d034f8fae",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "27aa4f48-88cb-4784-86b5-2063074bdec3"
        },
        "item": {
          "id": "9a119e0a-8e28-45bf-abb9-087ce46e7a05",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f115fa5-6f99-4fa0-9b6a-163613088bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0163afa6-4858-4d15-afc4-bc19000b8e36",
        "cursor": {
          "ref": "c5ca0667-9762-486d-96dc-fe4533963722",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b44b31ab-5fb9-48a7-8bc6-040a8100334a"
        },
        "item": {
          "id": "0163afa6-4858-4d15-afc4-bc19000b8e36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "025c42c1-922f-467c-a4b3-dc6b0bfaed5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c723fae-a7d5-4920-aa16-c5d2f806ff52",
        "cursor": {
          "ref": "750d3399-264d-4e49-8bc0-67b3db43ae84",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6d22dbd3-6c3e-4ff6-81f7-8240c7709cc8"
        },
        "item": {
          "id": "8c723fae-a7d5-4920-aa16-c5d2f806ff52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0667aa20-705c-4f11-a009-11f6bb9e3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0a57e-5d5d-4111-baf1-6bfabc45877e",
        "cursor": {
          "ref": "4fec0299-2d43-4a1c-bb3f-af76b97d05a5",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ddc6f21-285f-4706-b855-c396d24c668e"
        },
        "item": {
          "id": "0cd0a57e-5d5d-4111-baf1-6bfabc45877e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a18496ab-64c2-42fa-b0ee-9345078be66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b059c7-661b-45dc-89ab-dad9f14fded9",
        "cursor": {
          "ref": "3457c81c-c918-4f80-8f24-667567a5ebba",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b2cd49ca-9601-41d1-829d-1e1ba33f523a"
        },
        "item": {
          "id": "90b059c7-661b-45dc-89ab-dad9f14fded9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ae4b4a95-c343-44c9-965c-9bf8b9c85b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cbe598-8434-42c7-a09c-a6bc9174202f",
        "cursor": {
          "ref": "56e6400a-715a-457b-b926-eed6ab97292b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5caaa43d-6d32-426e-8369-d32229751472"
        },
        "item": {
          "id": "25cbe598-8434-42c7-a09c-a6bc9174202f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5958ad69-a397-4ef0-bdf9-a5836048f1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419bd83e-9774-4b05-8b3e-33ecf85c5fbe",
        "cursor": {
          "ref": "a0d1a610-46ce-4fc2-9551-f595fecf9d49",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "104f14a7-5594-4dfa-8188-b309eea3e098"
        },
        "item": {
          "id": "419bd83e-9774-4b05-8b3e-33ecf85c5fbe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed37ca23-f487-4c09-9765-f20bf657e0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c132f1-e392-4e30-a1ce-757d04b1ccec",
        "cursor": {
          "ref": "5f0c3866-4c00-43d5-b09a-bea97015ad24",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0479ffc0-662e-43ec-9ce4-468ae70ae2c1"
        },
        "item": {
          "id": "88c132f1-e392-4e30-a1ce-757d04b1ccec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b90a8ac9-d1a0-40ff-990b-f3b174db8c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102cdfa5-424e-4641-8b58-cc8505ada746",
        "cursor": {
          "ref": "c0f3feee-8878-41f8-8cba-2eabf58b5b8d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd90dab8-2d8a-41e7-88ed-9a1b03869c7e"
        },
        "item": {
          "id": "102cdfa5-424e-4641-8b58-cc8505ada746",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "271e5909-0aef-4186-b815-ad4a446555b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f68758-c3e1-42c1-98ef-24a47c44c30e",
        "cursor": {
          "ref": "97672be5-87c9-46b6-89dc-ecba06d24bb9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dfe87764-0281-476b-ae53-00296d289ef8"
        },
        "item": {
          "id": "80f68758-c3e1-42c1-98ef-24a47c44c30e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f8020e7-e842-4dae-ac8a-2a5f5378bcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3770629e-f6ea-4b35-84a9-47b954267f6d",
        "cursor": {
          "ref": "dbc4eb22-e698-4319-8e08-eb5f475f118f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1414ca3f-4235-4562-afc0-b76687b5ceaf"
        },
        "item": {
          "id": "3770629e-f6ea-4b35-84a9-47b954267f6d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c565999-f59c-4c05-adf3-ac1f167d2089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1078e95-0464-4676-8e91-7102ae0fe117",
        "cursor": {
          "ref": "ef9106c0-0919-4b59-9fcf-f6af6a282ad3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "67455974-3316-4574-8378-6e5de8cb24f2"
        },
        "item": {
          "id": "e1078e95-0464-4676-8e91-7102ae0fe117",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be0a2f08-a7c0-4162-89ef-941a5c8f6665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74e7ff-b501-41d0-badb-2d1971a3c9d0",
        "cursor": {
          "ref": "287bb6ed-6877-4a1b-a6eb-f682628e219a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3b1793ad-b207-462c-b2e5-f0068a6ecbc6"
        },
        "item": {
          "id": "6e74e7ff-b501-41d0-badb-2d1971a3c9d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a12ca245-4a88-42c3-bc74-8ff6ed0e5175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4d3fb7-daf3-4f38-88e1-2b04ecad5c7f",
        "cursor": {
          "ref": "e66b9760-d395-43aa-ab18-43c325174a9e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "179c1381-e3ce-4d4f-9906-828fd16d24d7"
        },
        "item": {
          "id": "8a4d3fb7-daf3-4f38-88e1-2b04ecad5c7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "944f8687-2bb3-4dcd-881c-137655babb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eddcb6-4ee7-49f8-99b4-7b61e67fccab",
        "cursor": {
          "ref": "85507d92-6526-40cd-94f9-2f4fb17bdf40",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c9370288-4ca2-4510-80f5-9907cb2afffe"
        },
        "item": {
          "id": "f2eddcb6-4ee7-49f8-99b4-7b61e67fccab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dd14625d-6e88-4a2c-b518-291aa7f263d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab2228-24be-4b31-ad48-af67450959c6",
        "cursor": {
          "ref": "4e9d878c-da71-4219-ab88-748f916daaf8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "63e43367-5e34-445a-87d8-95ac7cedd373"
        },
        "item": {
          "id": "63ab2228-24be-4b31-ad48-af67450959c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6aa561f7-5794-40ff-98b0-d177046424fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42675fab-7820-4e30-bdd3-ae2f350b1fc9",
        "cursor": {
          "ref": "59dc7826-7f3b-4d89-a1c3-5949f43937eb",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "be13cf22-1705-46e5-a900-dbae4f40e376"
        },
        "item": {
          "id": "42675fab-7820-4e30-bdd3-ae2f350b1fc9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac7921ed-f55f-4f3d-b642-80f17f8be06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08bb72-ee95-41e1-bc99-be927bd854fe",
        "cursor": {
          "ref": "46d0df59-89cf-46ab-b5ab-91e8e0a5b3b3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d015b886-ffd6-4e1d-8fed-57dad6f4dd29"
        },
        "item": {
          "id": "ae08bb72-ee95-41e1-bc99-be927bd854fe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a0be70fd-f0bc-4580-9a13-fd6086e57e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a6511-0f57-45c5-a469-ac115d96e300",
        "cursor": {
          "ref": "2cdbb800-ff0d-4a81-9491-64d26c755132",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9d5c16be-44cd-4c95-be67-b630c89540f5"
        },
        "item": {
          "id": "404a6511-0f57-45c5-a469-ac115d96e300",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1259a207-48c4-4db8-9b8c-cd1d3e53245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e440a4-bb01-4f34-bec8-4d0a096dee4b",
        "cursor": {
          "ref": "4d0c1a07-bdfe-4fef-9fb8-114adf12e46e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "15ebd03b-4985-4780-9ae0-045870e7ec89"
        },
        "item": {
          "id": "85e440a4-bb01-4f34-bec8-4d0a096dee4b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3a484662-cadf-45bd-8325-95c3f73a93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a38fc7-fc30-4fae-a43a-8eeaa075cfd2",
        "cursor": {
          "ref": "7b625fd4-c31c-4b21-bff7-3fb89f7d7386",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e470a103-9b68-4307-a65a-9dd69f4ab5a6"
        },
        "item": {
          "id": "49a38fc7-fc30-4fae-a43a-8eeaa075cfd2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "adc165ba-35ab-4f5b-ac15-dacba4bb3305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc216e1a-e509-4d70-be0d-9fcbb568d7f9",
        "cursor": {
          "ref": "2136737d-255e-43b6-b5af-06fd1d2ba0a7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1be1186f-0e3d-4424-ae91-1c2085e5d16a"
        },
        "item": {
          "id": "bc216e1a-e509-4d70-be0d-9fcbb568d7f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5f261bcc-a814-44f3-ab6d-f79a68030184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a704d79d-8b96-4ba9-9c7f-eaa16e92b0c2",
        "cursor": {
          "ref": "01d81b58-2e80-4f40-b416-41c5d968dfee",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8c38ec0d-8b15-430d-9ab7-5abb933e7d5d"
        },
        "item": {
          "id": "a704d79d-8b96-4ba9-9c7f-eaa16e92b0c2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d89a20d2-e299-4ebf-ba72-fa0501be7b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c33868-9cb9-4714-9a81-231109a0c6a3",
        "cursor": {
          "ref": "e1710af1-7ea4-43a9-b284-ad079fbe2c82",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "610206bf-dab5-4be5-9bf9-1df099ef4976"
        },
        "item": {
          "id": "d5c33868-9cb9-4714-9a81-231109a0c6a3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3d5c917e-4795-4569-9165-aedbb5470199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea34d535-178b-4130-95a2-d6ae80d0b71d",
        "cursor": {
          "ref": "a8989fbc-e2f8-4a83-9b11-74d9d01f9b63",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c327e15d-9def-471d-a51a-e5941872d1a9"
        },
        "item": {
          "id": "ea34d535-178b-4130-95a2-d6ae80d0b71d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34212dcc-039a-4800-99e0-1f8c3302d50e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6be76-25ec-4fe1-9817-c80db93fca20",
        "cursor": {
          "ref": "158aabf1-cfad-48aa-ba1c-e5ddc326c0c4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9ab07d1f-dc8c-405b-98ba-af1c314a05d6"
        },
        "item": {
          "id": "09c6be76-25ec-4fe1-9817-c80db93fca20",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d454da71-ee95-4e78-9022-0a86d30b4cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4302a992-2815-4c32-86a4-9810032810de",
        "cursor": {
          "ref": "8b91573c-4ec3-403e-aa8c-a76b8e026b82",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ffd4578d-2f18-4903-8b7f-1b543b23d77a"
        },
        "item": {
          "id": "4302a992-2815-4c32-86a4-9810032810de",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1bf21c2-3b09-4b0e-a360-8f18a952562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7fbc36-b1d0-4ed8-8251-822f887ee588",
        "cursor": {
          "ref": "8a03ac66-8413-4d75-b162-58cf66bd7544",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4bb0eb58-daec-4e46-8382-a1006ba9590e"
        },
        "item": {
          "id": "cd7fbc36-b1d0-4ed8-8251-822f887ee588",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c0be0b0c-c514-409b-956e-6788f657254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f4c857-82d8-4c34-93b0-a9d07e9f5a33",
        "cursor": {
          "ref": "fea8acc4-2b17-43dd-b7da-4c0f945e4f5d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b4a15449-bdbf-4224-bd80-a249000e0d6b"
        },
        "item": {
          "id": "a6f4c857-82d8-4c34-93b0-a9d07e9f5a33",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2446cd37-6025-4f02-8c05-3659818e96a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ddc48a-f17c-47c9-910d-9ee09d7687fc",
        "cursor": {
          "ref": "bf3e3cbf-d136-45a4-a2ff-7423d288ac0e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c645cfb0-8f6d-46de-8228-d542ad6c1bcb"
        },
        "item": {
          "id": "89ddc48a-f17c-47c9-910d-9ee09d7687fc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "32742f84-db45-4ac9-aae9-15b2f4986ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e05672a-827d-4578-8696-216454ec2596",
        "cursor": {
          "ref": "e25a07f8-5c3f-4483-a89e-8ca547b92751",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4ef79e94-a43e-47d4-9ee5-a573a0dadf27"
        },
        "item": {
          "id": "9e05672a-827d-4578-8696-216454ec2596",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d315849-0003-4b57-8012-85cb1e5a1438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ad98e8-5a6b-4af5-95c8-3a8af02edfc2",
        "cursor": {
          "ref": "a7831388-56f1-46c7-bbcd-0fcb02260e05",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0770791a-83bb-4759-83a1-6c73451addff"
        },
        "item": {
          "id": "97ad98e8-5a6b-4af5-95c8-3a8af02edfc2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aa2e0a56-368e-4595-9571-9cf78ce4a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58948703-1065-4d99-a0d5-b5105bb55439",
        "cursor": {
          "ref": "b9b80ea0-6232-411b-8d95-3e9f1303a908",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bcd1a1ac-b624-48cf-bd90-22f563be0f07"
        },
        "item": {
          "id": "58948703-1065-4d99-a0d5-b5105bb55439",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aa335a26-b81b-48b8-adff-90e9cbfcdbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2be76c-537c-45c4-832c-1274612f1d5a",
        "cursor": {
          "ref": "305d5ad9-3759-4a3a-8cf7-f37083f4b676",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fddcac28-7f67-47cf-ba0b-ccc4ec0964a0"
        },
        "item": {
          "id": "1a2be76c-537c-45c4-832c-1274612f1d5a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08732298-2ed6-4ffa-9889-3d1ceba311b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6786eebc-4c3f-4dcc-8840-e11f72ec8beb",
        "cursor": {
          "ref": "84e523db-358c-4625-9530-90efb4fdd199",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "88c89d6e-e5a7-4cbc-93c0-f58b0d8cfcbc"
        },
        "item": {
          "id": "6786eebc-4c3f-4dcc-8840-e11f72ec8beb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14c3e261-691a-420d-a6e1-5fa376acf603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c2b98-82d8-450d-a829-8761920e2d15",
        "cursor": {
          "ref": "1af047a4-06de-44b0-aa0b-552537597187",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "aeb0bb1e-bdfd-40b4-94ff-5b13dcf79025"
        },
        "item": {
          "id": "627c2b98-82d8-450d-a829-8761920e2d15",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0cd6c18-79f0-4be8-b944-f28b8202b42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39b8e98-e060-4628-802b-a5f7b4bdc573",
        "cursor": {
          "ref": "bd400811-5ce2-4c42-8dfa-3b2fcea18dfd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fcb65cbf-d83a-4a8d-a966-d416f6b86bd9"
        },
        "item": {
          "id": "b39b8e98-e060-4628-802b-a5f7b4bdc573",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b7f40cad-9668-4f22-9701-7267ee011005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9541334b-f6c2-43f8-893f-24f983481ffc",
        "cursor": {
          "ref": "75e2c170-3b9a-440b-9f5a-3faba4bf8480",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "47dc9e74-07dd-418b-bb6d-055705519613"
        },
        "item": {
          "id": "9541334b-f6c2-43f8-893f-24f983481ffc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8e2750a-8959-4e35-82d0-58cf76db0a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82350004-35d4-47ae-95a5-0048e059b92f",
        "cursor": {
          "ref": "094db898-2f3e-4763-a41d-cffaa2db4d63",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f45287f0-2a1c-4202-97fc-6c6c2e2436a8"
        },
        "item": {
          "id": "82350004-35d4-47ae-95a5-0048e059b92f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a4d7990-1879-426b-860e-36cae68b2150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5beff78-c2a4-4a69-95f9-949a046fef0d",
        "cursor": {
          "ref": "a57d9a8a-8c75-420f-a9ba-95549cce05cb",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a4a9d3d-a541-4cf6-aa0f-3a2069776ce7"
        },
        "item": {
          "id": "e5beff78-c2a4-4a69-95f9-949a046fef0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "579951da-909f-441a-85b9-561935e9778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd66f1b-e611-48bb-b85c-2973000c25b3",
        "cursor": {
          "ref": "11d94d0d-107f-4375-8ac1-4a5787cb28d7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94cba1d4-bb5b-4bb3-9260-4e97205c6450"
        },
        "item": {
          "id": "fdd66f1b-e611-48bb-b85c-2973000c25b3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5b6294bf-3eb1-4c56-bda4-10842a0760ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc40a5b8-4050-408d-b984-4d3bc9dfc1f5",
        "cursor": {
          "ref": "411cd1ec-9a60-49b5-8b12-01ac2c4f6630",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "85e89941-4c2d-42a0-b41f-68f14ce59a6c"
        },
        "item": {
          "id": "fc40a5b8-4050-408d-b984-4d3bc9dfc1f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c4d68a75-85be-4f35-b251-62b785bf36ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a541738e-6bce-4611-b030-46e0c1f77462",
        "cursor": {
          "ref": "989fc48f-0076-4669-97fb-86a4c775b776",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb46658d-21bd-4478-aa07-972d4b919498"
        },
        "item": {
          "id": "a541738e-6bce-4611-b030-46e0c1f77462",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a28349fa-819b-4293-b61d-2224be6c362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd9f9cb-394c-4192-a841-e667ca5f9580",
        "cursor": {
          "ref": "82d3e8e5-fefd-4dd5-8579-e486e2499509",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "742055a7-b361-46bd-89c9-ee8206f5aa84"
        },
        "item": {
          "id": "9dd9f9cb-394c-4192-a841-e667ca5f9580",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c5e2b119-bb61-46cf-a123-d03c48d4b5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2e80c6-62c7-4809-a5b7-5cf4b77dac45",
        "cursor": {
          "ref": "bad2c7c4-f559-48f6-9ee6-07b0615f2832",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "51f8ff12-52d9-48ef-9930-0e072078e0e7"
        },
        "item": {
          "id": "9d2e80c6-62c7-4809-a5b7-5cf4b77dac45",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7e899b4a-5e9e-40b2-ab12-f5ac0bcecec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8138b8e2-537c-487d-96de-9061180ccde2",
        "cursor": {
          "ref": "ccead22a-0db8-4df4-be8a-5aafd34780fb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aea84f6a-3dbf-4fa8-b6de-3b37467051bf"
        },
        "item": {
          "id": "8138b8e2-537c-487d-96de-9061180ccde2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "738dcde6-0349-44a7-a8ba-36d55d56439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d0cf2f-9a9a-4cc8-9ee4-c86d5261f43b",
        "cursor": {
          "ref": "7e8d0864-ecf1-4c84-8b2c-e99ec9a6c4fe",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8457a2b8-097a-4ccd-8f6c-b09ffc3aa4e0"
        },
        "item": {
          "id": "a4d0cf2f-9a9a-4cc8-9ee4-c86d5261f43b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a047fa07-67b4-4277-b899-b200c7d500a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0600eab5-9ae8-45fb-839b-d0bf9ed102b4",
        "cursor": {
          "ref": "c6e9dab6-3417-4e5e-81c2-5b922360e8af",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1709b0cd-0cf1-4433-9e6a-7b33d642c603"
        },
        "item": {
          "id": "0600eab5-9ae8-45fb-839b-d0bf9ed102b4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f980111d-8f94-4718-9f00-ac2cc862586e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734f2b9-f00d-4580-94c6-691d188377f0",
        "cursor": {
          "ref": "dd986eaa-9318-4dd4-b93d-99aa44c23120",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "28c02338-9c36-4210-a00a-d1e11f923590"
        },
        "item": {
          "id": "9734f2b9-f00d-4580-94c6-691d188377f0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e2d95d1-5765-47f4-965f-67137a2a7c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac52d820-2fff-4979-bd89-f2515e482d05",
        "cursor": {
          "ref": "45f699b1-8b32-4966-a129-beb4728e5cff",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6a45521f-cafd-4505-be55-e6903b2d6fad"
        },
        "item": {
          "id": "ac52d820-2fff-4979-bd89-f2515e482d05",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2fc9b50e-61da-4cd8-b24b-5911f869c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12013e25-22df-49fb-8fb9-502780460dea",
        "cursor": {
          "ref": "df72037e-2c7b-4d28-a86e-6f27d99a294e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6c6bc21f-d6b3-49e0-9095-d6f9b2c0545c"
        },
        "item": {
          "id": "12013e25-22df-49fb-8fb9-502780460dea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f4b06ca-039a-403e-8b62-63c02e717366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49253e9f-bc5a-419e-b9b6-f9325785cb81",
        "cursor": {
          "ref": "3802ac36-d5d5-4e91-bde1-87d53e1a90a8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "efcd60c7-99c2-415b-95f5-4f7296728337"
        },
        "item": {
          "id": "49253e9f-bc5a-419e-b9b6-f9325785cb81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f3d53f4a-9bb2-4cd8-b915-c9c1274cdc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fabbb9e-e159-4d1c-bec5-34d76ae09c7e",
        "cursor": {
          "ref": "213b7427-e7e0-4218-910b-46015993d0b7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2dbd3ab4-16a5-4a47-a453-cabf7d6f6183"
        },
        "item": {
          "id": "8fabbb9e-e159-4d1c-bec5-34d76ae09c7e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7d2bfc3-8075-4502-8d76-3a4d543cffc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9355d7fa-ccc4-43d0-920d-6107144286df",
        "cursor": {
          "ref": "20adfbb4-389b-4096-bc66-08f5ca3806d5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cb8e9109-4ad4-4c9a-86dc-66b1c8bee4cb"
        },
        "item": {
          "id": "9355d7fa-ccc4-43d0-920d-6107144286df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f69215b-36b8-4c5d-9759-c5746ea2c3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa13646b-6bdf-45e0-864b-fdfe91f3f670",
        "cursor": {
          "ref": "db059e84-ca9a-4b57-a202-254134be7d8a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "55c9508e-52d7-49f0-961e-f563cc810e97"
        },
        "item": {
          "id": "fa13646b-6bdf-45e0-864b-fdfe91f3f670",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a3a74da-6d0a-47be-b20f-c5a591fc326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628724b8-ef99-40ab-930d-8e1012ea1a9c",
        "cursor": {
          "ref": "1b503c39-b26c-464b-98a4-4cf1916d7b6e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c135e6d-638e-4345-9d2c-f3ce40f5ee8f"
        },
        "item": {
          "id": "628724b8-ef99-40ab-930d-8e1012ea1a9c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "177a5634-e396-4aa1-8f3a-16887bcccee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03981e84-7033-4502-8f74-8af20718f94c",
        "cursor": {
          "ref": "77933f38-c1cf-4aaa-ab04-806cfe9e81de",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cf658f01-9b31-4bd9-ab43-0c2be8582ac8"
        },
        "item": {
          "id": "03981e84-7033-4502-8f74-8af20718f94c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "17dd041b-0a61-491e-9414-8d1e6629f75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038362a9-6b20-48f2-a60d-20b5361afbe8",
        "cursor": {
          "ref": "3ac1dae5-ed25-48a7-aa00-cf3a38d7b7ec",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a7f869ea-c352-4c01-9640-11c61c6a2c32"
        },
        "item": {
          "id": "038362a9-6b20-48f2-a60d-20b5361afbe8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cbc6a03d-4fd7-4c29-a3be-3341219f812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1af58-906a-4c40-bf58-e13dd2b59bb0",
        "cursor": {
          "ref": "cb1ed4e7-84f6-4ba0-9210-cd2e6a1e82fd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "69d83c88-cc61-422f-9fc9-a4ee9d7ff2c3"
        },
        "item": {
          "id": "d3f1af58-906a-4c40-bf58-e13dd2b59bb0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2262cf0d-ce6f-40d2-851b-4abfbcd76fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c7beb3-d143-4f30-a040-e592bfbced57",
        "cursor": {
          "ref": "85b104a7-c4bc-49ea-8304-e469c251c5e4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7050bcfd-5882-466a-9306-492613f9e670"
        },
        "item": {
          "id": "c5c7beb3-d143-4f30-a040-e592bfbced57",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "46440bd9-fe46-4f73-8cb4-18253220f352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07db758-97b9-4853-ba5d-162332842787",
        "cursor": {
          "ref": "7555afbd-d03b-4341-b92d-e57393016568",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "10ffdabc-5568-47df-8477-05687b295121"
        },
        "item": {
          "id": "b07db758-97b9-4853-ba5d-162332842787",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dc1fdbab-dcf4-4621-9aa0-a9b83dbffd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e42054-7f9c-40f9-8bc4-be41b9973348",
        "cursor": {
          "ref": "46bc21d7-8373-4f05-b1d9-cb8656cb453f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "55c4e491-9886-400e-802c-515e99bb83a6"
        },
        "item": {
          "id": "a4e42054-7f9c-40f9-8bc4-be41b9973348",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "af265f84-3f18-4bea-924e-1f97f5335681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa61b03-f7da-40e0-bba4-6069cd956400",
        "cursor": {
          "ref": "8cefba86-4aa3-4f29-92a5-4761ac8b7959",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fb179bd4-885f-4842-ab5a-e3987255e87d"
        },
        "item": {
          "id": "bfa61b03-f7da-40e0-bba4-6069cd956400",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41209ac7-6d2b-47a5-a48d-5a5ad64eca6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0ba793-6aae-4638-9984-74fd0a3d3ea2",
        "cursor": {
          "ref": "7728d668-42ff-4a47-b5f2-4b2af37f5c67",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "68fa9c9d-ffcc-4c28-814a-5c784b146f57"
        },
        "item": {
          "id": "1f0ba793-6aae-4638-9984-74fd0a3d3ea2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "671a18db-d2d3-42f2-be23-fc2bdf06227b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b2e04-17b3-4b6b-ae40-5368d3c6e6c2",
        "cursor": {
          "ref": "2460ea67-3614-49ff-8f57-ee3b93090d1a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92cbaee9-5669-4b5f-841a-587bc21fb438"
        },
        "item": {
          "id": "513b2e04-17b3-4b6b-ae40-5368d3c6e6c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "52248ada-adab-4559-967c-4063f5445bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1305a-e6cb-46a2-987b-271a04cd76eb",
        "cursor": {
          "ref": "67341ab6-cd14-4b2b-a87e-95252b24d52b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5667ed03-c465-4a41-9d21-9d6b5c2aaca9"
        },
        "item": {
          "id": "d9e1305a-e6cb-46a2-987b-271a04cd76eb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f6872cf7-993a-4284-b2a5-b2af3066e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b35e8-f038-47a6-8afb-817ad10d37d5",
        "cursor": {
          "ref": "e7ac0894-0ee4-4b2e-af5a-7763c0b20a6c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a01bc4d8-8518-47cc-88e9-20d341e48014"
        },
        "item": {
          "id": "217b35e8-f038-47a6-8afb-817ad10d37d5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "867fc2fe-3d2e-4654-af9d-c7f33798f7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3025ce0d-7140-4d59-994e-9f9cd044d1e5",
        "cursor": {
          "ref": "5741a40a-8cc4-4764-84e4-7affd86e77f3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2c7bb058-e8e2-4aa7-9d0e-d60db1217a5e"
        },
        "item": {
          "id": "3025ce0d-7140-4d59-994e-9f9cd044d1e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f6cbb01b-dc73-40f9-985c-c078dff6a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97ac0f-e3ca-419e-9c7a-31515be20ccc",
        "cursor": {
          "ref": "8f94118a-6940-492c-bc32-59a99bb543ab",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c30e3ce8-ae7b-43fd-be21-50e9f1c2616d"
        },
        "item": {
          "id": "6e97ac0f-e3ca-419e-9c7a-31515be20ccc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "936f4553-227d-4d62-a362-fc0930e4e39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d069d819-8a59-4c0a-92a6-674c607bd694",
        "cursor": {
          "ref": "16ff7960-0212-475d-bbc1-b196625f132d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e6e29bad-6b9d-4e94-82c3-9d6728e8e75c"
        },
        "item": {
          "id": "d069d819-8a59-4c0a-92a6-674c607bd694",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "af8acaaa-21e3-48d1-b6e3-107736c39b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd5e17-67d2-47f8-a9ea-3a5656e1e747",
        "cursor": {
          "ref": "91bb4a73-9a95-431a-b74a-9cc5712e54f6",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e8934e46-4452-41ca-a851-6f2215b589af"
        },
        "item": {
          "id": "18dd5e17-67d2-47f8-a9ea-3a5656e1e747",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a9d3cad-65ad-45ff-a115-30610f58676e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fbdf6c-6cd7-4843-81b1-ce58ef6a6fda",
        "cursor": {
          "ref": "daa55267-0aec-4fcc-a80e-cbb58e0fb117",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cb079273-c2ae-4a36-a5f1-67aad85ea691"
        },
        "item": {
          "id": "f9fbdf6c-6cd7-4843-81b1-ce58ef6a6fda",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dc295759-ff1a-44c8-9ec9-b5b195aac4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd588ad-5e6a-428d-9d6e-4af54bbe2511",
        "cursor": {
          "ref": "88a853b3-5cd3-4c99-b997-3a01ea711c0c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9b27475b-9300-4cf5-95d3-ab54779c8735"
        },
        "item": {
          "id": "abd588ad-5e6a-428d-9d6e-4af54bbe2511",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "82ec8707-8e24-4fd8-9481-9ee699249cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1486e2b7-a9a7-4b5d-b10b-19a91440e262",
        "cursor": {
          "ref": "002e5b5a-7a26-423f-a39d-98af050a1f4e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "53e027d7-f4cd-4b04-a491-67d74413a06c"
        },
        "item": {
          "id": "1486e2b7-a9a7-4b5d-b10b-19a91440e262",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f892a014-6c77-4276-b1cb-4c15175302d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe92da3-3d2b-4e92-ba40-0715d22f25e3",
        "cursor": {
          "ref": "53406d4c-de9c-4a53-8058-3a7325ea77b0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e7a4a8b8-3926-4c98-8ee1-a95db77846d6"
        },
        "item": {
          "id": "4fe92da3-3d2b-4e92-ba40-0715d22f25e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e5a1ed15-323d-49af-8f02-1c47156b109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696dee5f-e32c-4791-b23a-a7677552a229",
        "cursor": {
          "ref": "285a2ac0-dfea-4d49-a7b6-b41574848f71",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a702ebab-6b58-45fc-b42d-e543878a40c7"
        },
        "item": {
          "id": "696dee5f-e32c-4791-b23a-a7677552a229",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ea1df440-0660-4777-89b1-cc3ca98bb722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c541e56-bdb4-4f5e-a34f-4a0389d186f4",
        "cursor": {
          "ref": "9fa7283b-fe2e-4dd5-a3b6-211b4becdb44",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7c9ed7ac-e57e-467d-9894-f4061a29dc4b"
        },
        "item": {
          "id": "4c541e56-bdb4-4f5e-a34f-4a0389d186f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2c2c35c9-b9b6-4a51-977a-c1de571d56ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb76f2-ad15-4a21-9d5c-e105075d016c",
        "cursor": {
          "ref": "7817b10e-9858-436e-a8d3-ba7e6caaa6b6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32ea7bce-91b5-4051-aa8a-6f0e3d8145fb"
        },
        "item": {
          "id": "78eb76f2-ad15-4a21-9d5c-e105075d016c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fa7172c4-13ee-41bf-94d8-5268df1fc3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abffb516-a540-48d3-918b-22b4e6031465",
        "cursor": {
          "ref": "c45d5ea8-b9b5-4140-a67d-aabc2f58c5ba",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bf46ca5b-7a60-4b88-aee0-2a80dcb4564a"
        },
        "item": {
          "id": "abffb516-a540-48d3-918b-22b4e6031465",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a132b509-2511-498e-acd7-e4f94bd71390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f497302-8e3c-47e9-89db-f5a65530dbae",
        "cursor": {
          "ref": "8467d760-46ca-42c1-90a3-19b9e631d073",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2cb2d78-bcbb-48e8-abfb-cbdf4677b558"
        },
        "item": {
          "id": "8f497302-8e3c-47e9-89db-f5a65530dbae",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a420da36-d168-4046-a970-996324345705",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "e95638a6-5853-4c1b-b4e9-3f42cd736b7b",
        "cursor": {
          "ref": "e11150f2-2ac4-4e0a-b0ae-b4f386df20b3",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "80be6b60-748f-4311-ae22-85d19e7a189a"
        },
        "item": {
          "id": "e95638a6-5853-4c1b-b4e9-3f42cd736b7b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "36cda0af-f16a-4129-bef8-f09ac4854f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be68b49-b56e-4f32-b3fc-a367c5019fd0",
        "cursor": {
          "ref": "27ce32fc-c121-4628-85c1-351db936d31a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bb2ffb5c-059c-4740-ad1f-d612529e0d70"
        },
        "item": {
          "id": "7be68b49-b56e-4f32-b3fc-a367c5019fd0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db565733-d412-472c-ad8c-45cce2d70a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64958b38-9715-4fd3-a2f0-62f3213a3d8c",
        "cursor": {
          "ref": "5d931fbc-2aa1-47c1-a7cb-e51c69411293",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "98fecd43-7a7a-402e-ab76-51446799e476"
        },
        "item": {
          "id": "64958b38-9715-4fd3-a2f0-62f3213a3d8c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3dba795b-df3a-4b16-8f5c-686b2d51e2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dd56ce-9ed1-46a4-91ff-5542eff14f1a",
        "cursor": {
          "ref": "95b22245-841c-4015-9d1d-0e49ffadaabf",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "27f52087-2d73-4bfb-865d-2f38b73fe447"
        },
        "item": {
          "id": "20dd56ce-9ed1-46a4-91ff-5542eff14f1a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a42c3707-b115-4010-8507-5efe3b745cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbab1f1-f2e0-417a-bd0a-e8574e07ff78",
        "cursor": {
          "ref": "dd223279-7c3c-4a73-af8d-cb52a93e7994",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ffa869a8-6e18-4765-b63a-289127e8423d"
        },
        "item": {
          "id": "edbab1f1-f2e0-417a-bd0a-e8574e07ff78",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "add459d6-9708-43f3-8b60-7623d0851101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2e67f0-e6af-4b1b-8abd-cd489ed0c740",
        "cursor": {
          "ref": "a2f0a011-fd87-468e-bf84-a33a21158a3b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f0e0f5c9-9c7c-4f0e-8edd-20a7c4309efe"
        },
        "item": {
          "id": "fa2e67f0-e6af-4b1b-8abd-cd489ed0c740",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0652f4e7-db32-40af-b9e9-79776f6855b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054b785b-a39a-480d-af84-2f8812397a09",
        "cursor": {
          "ref": "2cb5190b-0ac1-47b2-bf94-b38200f1888f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32a23431-d2d4-41d5-8183-a681e9675dd7"
        },
        "item": {
          "id": "054b785b-a39a-480d-af84-2f8812397a09",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b10bafb6-e8fe-4aa4-8725-54737f66fc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254c18a-7d26-42e8-a58e-ca8e8b156d3b",
        "cursor": {
          "ref": "977d7588-1883-403f-96c7-969be4612838",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ef71ef0e-a12a-4687-b49e-8cfbc18834d7"
        },
        "item": {
          "id": "b254c18a-7d26-42e8-a58e-ca8e8b156d3b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "47f0cf33-721f-4ea3-b79b-655ba1800ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a93e4c7-72e2-48c5-9c06-15a420fc04b2",
        "cursor": {
          "ref": "7c684668-b945-4d51-9011-197cb5eb76b6",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "41515ffe-af0f-463d-815b-340bd45ef382"
        },
        "item": {
          "id": "2a93e4c7-72e2-48c5-9c06-15a420fc04b2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "81db6e79-6231-471b-9954-6137b9d8beab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28469ecc-7755-475a-aca1-340e54fad878",
        "cursor": {
          "ref": "adff26d4-30cd-4efc-bba3-3fbadbb8b3f3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "56b431c1-847a-4e8a-8534-89d1ef75c1a0"
        },
        "item": {
          "id": "28469ecc-7755-475a-aca1-340e54fad878",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9caf3456-1fe9-4a11-9b25-10aa24e90cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34986c49-db59-4bb5-86f1-a64799429375",
        "cursor": {
          "ref": "0e6809f3-14c2-45f8-8ef4-d9d42278934c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c59c500-dc2d-4786-b787-f08c03ef8763"
        },
        "item": {
          "id": "34986c49-db59-4bb5-86f1-a64799429375",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8dec87ea-c3be-478a-ab05-b7d8428d7268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477cc018-57fd-48b1-a210-6d402d715663",
        "cursor": {
          "ref": "6b3023b0-5388-4db2-b17b-1a3ac94b35a7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c20698e6-d2df-4e87-8ea0-2450d887210e"
        },
        "item": {
          "id": "477cc018-57fd-48b1-a210-6d402d715663",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b7ba0ff1-7501-453e-8486-6742d50f618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b7c44-0cab-4e9b-8774-c96a7330a5eb",
        "cursor": {
          "ref": "5e0d010b-3f0f-494f-a486-32f00fbacf1f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "35c5f3c9-6425-47e5-85dc-b3bb5a907026"
        },
        "item": {
          "id": "208b7c44-0cab-4e9b-8774-c96a7330a5eb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b86c031d-cb5a-4364-8714-13b0c7096f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7b67eb-2caf-457b-9b1f-e85fb209d393",
        "cursor": {
          "ref": "111b3d14-3dfd-4845-a586-2749d5209d6e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ed7a665-1ef6-40c0-b356-2fa7f4fd7c36"
        },
        "item": {
          "id": "ce7b67eb-2caf-457b-9b1f-e85fb209d393",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "573668f0-c196-449e-892e-4b4f20d29a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30555cba-a38f-4d85-b28f-649dc5069a3d",
        "cursor": {
          "ref": "9ff04b43-6840-45e1-876d-65249eec5748",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ecf33111-c7b2-49bd-a022-684c769d53fc"
        },
        "item": {
          "id": "30555cba-a38f-4d85-b28f-649dc5069a3d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d10e6198-b0fb-4e46-816f-431f10980a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b65cc4-c004-4d74-b5ae-a2b3e3fc9d58",
        "cursor": {
          "ref": "ca8c400c-c583-4eca-a1be-95820cdaa450",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c5428be8-7f65-4c22-9076-dfde1cebfd3e"
        },
        "item": {
          "id": "69b65cc4-c004-4d74-b5ae-a2b3e3fc9d58",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a9b6ceea-a3fb-4197-8ac5-4eb622b82fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c69677-7d48-4516-813d-4acc5ec2f068",
        "cursor": {
          "ref": "5b17c112-3df5-45da-b75d-496868e2ebb0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "47576b07-c0e7-4b96-af24-bef46c7ab439"
        },
        "item": {
          "id": "52c69677-7d48-4516-813d-4acc5ec2f068",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aa227cd4-3438-4b45-858c-5b684e0f6ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d09ef3-53c4-48a5-9575-5bae9c107bbd",
        "cursor": {
          "ref": "35c7dc97-f068-4c24-b980-036a0e46d287",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c9e2ea7d-1c41-429d-a9dd-9486956ab09e"
        },
        "item": {
          "id": "24d09ef3-53c4-48a5-9575-5bae9c107bbd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9ee2c66b-16c1-4bd9-a874-b1a65ae0534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849a45bf-1950-41d9-aa6e-70b2ccef31c3",
        "cursor": {
          "ref": "4621015c-fb76-4622-8c8f-569ba343328a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "feeab30d-db62-443e-ba77-f0bf3d87e51a"
        },
        "item": {
          "id": "849a45bf-1950-41d9-aa6e-70b2ccef31c3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1c7fa4c9-8904-4b34-a506-08bae03166bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d6e8e3-f478-45a4-ad0e-d9ac53f7b687",
        "cursor": {
          "ref": "20b21b2a-07a3-4bff-a691-29ed6ec421f3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f548075c-e91a-4c55-92a3-be9c6fe02be3"
        },
        "item": {
          "id": "30d6e8e3-f478-45a4-ad0e-d9ac53f7b687",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "63ce80cf-e8c4-4091-8a02-2ad30e8670f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e79a32-6796-4b85-8bfa-f0075d35d43b",
        "cursor": {
          "ref": "396c5deb-c769-46ba-b398-86959e47ae42",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c61907a-b346-4e92-bf83-19c3ced4bd30"
        },
        "item": {
          "id": "e1e79a32-6796-4b85-8bfa-f0075d35d43b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b40c3970-14fe-47c5-987b-dd99dbd82083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126cfa6c-ab8d-4f74-a32a-06c29ee995aa",
        "cursor": {
          "ref": "3cc9ca2c-89c1-40a9-85fb-73a5759c1f97",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "38c6440d-a76d-409e-afb7-34b79e68fda6"
        },
        "item": {
          "id": "126cfa6c-ab8d-4f74-a32a-06c29ee995aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d5720292-33bc-43ef-a5ab-1cfa29770037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7a9a4-220f-4214-8383-c14fd8389248",
        "cursor": {
          "ref": "d6424d0d-f0bb-44a2-905f-9f218c82ae64",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17d67aef-74a8-4856-bb36-69fe104d9313"
        },
        "item": {
          "id": "f5d7a9a4-220f-4214-8383-c14fd8389248",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b5516032-d300-4b9b-af4f-29848b3b4c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f43300-8655-41fd-9a13-c613383ee9e7",
        "cursor": {
          "ref": "21f0279a-2a1d-4d5f-82e1-9fc2b99318b5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a983b616-fe6e-4792-83fe-cd796ca9b7a1"
        },
        "item": {
          "id": "43f43300-8655-41fd-9a13-c613383ee9e7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e6800506-aab0-4bec-bf08-cc4739a19c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f8470-1709-4270-8f3e-9336d31f318e",
        "cursor": {
          "ref": "9c9b841c-becf-4716-99ba-bca10b36ae05",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d0ec638-c584-4d5a-9f22-f7801a7df2c5"
        },
        "item": {
          "id": "6f2f8470-1709-4270-8f3e-9336d31f318e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e250207a-62ce-45dc-8ea2-45c7333e91d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66342b-3758-4b18-963b-b869296c71e7",
        "cursor": {
          "ref": "d3aa1eba-e7f1-4094-bad6-277606233739",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d27e8a62-d0e4-4fb1-9119-7158101f95dc"
        },
        "item": {
          "id": "4f66342b-3758-4b18-963b-b869296c71e7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "454bed1a-d83e-4baa-badb-076a4dbde688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52966e2a-efb8-4388-b071-a5dc4adde90d",
        "cursor": {
          "ref": "ba1ec402-d6bf-45ec-a772-375f3e173646",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d397a962-9d26-4b33-b1c1-56102e01ffd8"
        },
        "item": {
          "id": "52966e2a-efb8-4388-b071-a5dc4adde90d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "903de37a-6f44-4db4-ae61-186b7e1d707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2b59c3-612d-469c-8700-19e012587272",
        "cursor": {
          "ref": "5f776243-40c3-44ad-bdd8-c9a251b7d374",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d106b91f-36ab-42db-890a-31e9c43fa543"
        },
        "item": {
          "id": "dc2b59c3-612d-469c-8700-19e012587272",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fbdcd105-8f30-447e-a04e-1eeb20a4ada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c565ca0-3c79-4a68-99ca-052761ccb5fd",
        "cursor": {
          "ref": "74f6a36f-bec8-42dc-88ed-f9d33e8efd81",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7abafc1-934a-443f-88b5-f5f9a03a1c8f"
        },
        "item": {
          "id": "9c565ca0-3c79-4a68-99ca-052761ccb5fd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5d8eef0a-f209-4219-997d-a5f1cd1cc2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c88a4f5-caa8-4725-8c08-9bb3e33afcb2",
        "cursor": {
          "ref": "94b4a3ae-f8e2-46c4-80c9-a2244ccf8b64",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e353cd00-994e-4607-9498-66a0e2c81e07"
        },
        "item": {
          "id": "5c88a4f5-caa8-4725-8c08-9bb3e33afcb2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d3e68a17-9586-4286-966d-9d43527c10df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecea70fd-19f1-4851-b774-9fe0b2b99fc9",
        "cursor": {
          "ref": "854a4575-9010-44ad-bbf6-bd8aaa46b3ec",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "72f9d926-ed69-42b8-8674-6e0bdaa341a5"
        },
        "item": {
          "id": "ecea70fd-19f1-4851-b774-9fe0b2b99fc9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9eb58508-57fb-4bea-85d8-61be5c0488ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305586f1-c784-49b0-8cbf-b4e6dcf494b2",
        "cursor": {
          "ref": "f0d6cb54-ad68-4371-857b-599971c00192",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "10ee4d93-b8ec-4ac4-ab77-3f0567f1ae37"
        },
        "item": {
          "id": "305586f1-c784-49b0-8cbf-b4e6dcf494b2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2e4cfb5a-8c6f-4ebf-a811-ece789cf37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff3d9f-ed77-4cc6-b277-c2e9662bca5a",
        "cursor": {
          "ref": "7d4b1753-76ba-4427-8457-a09489cda142",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "33f0e68f-77bd-47ba-a9c2-119e51530ff6"
        },
        "item": {
          "id": "5eff3d9f-ed77-4cc6-b277-c2e9662bca5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3e4b5065-0e5e-46c6-97eb-5711fc79aba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a273e0-7083-49af-9045-85e5aac7da3f",
        "cursor": {
          "ref": "6f9cfb34-0817-4fa9-b508-d17c338e6f60",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7483a20f-5a6d-45b4-adc4-288af0e1549e"
        },
        "item": {
          "id": "34a273e0-7083-49af-9045-85e5aac7da3f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1af3ce08-fa8b-4034-9339-bd191329a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3c0efa-f963-4cdb-8674-d73aecf88069",
        "cursor": {
          "ref": "b0e852bd-eadb-4628-acc6-173006ea1520",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eda747f9-a3da-415f-acc9-89dfbae79c2a"
        },
        "item": {
          "id": "8d3c0efa-f963-4cdb-8674-d73aecf88069",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae537f70-3af6-43ff-a6f8-f1b137383c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287dc2d3-7a3a-45d7-85eb-e8be1396263a",
        "cursor": {
          "ref": "2edfdc3b-80ef-4bb3-91f4-f3b8074dbbe2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ec9b0d27-6fe5-493c-aa33-4cb2997e1e5a"
        },
        "item": {
          "id": "287dc2d3-7a3a-45d7-85eb-e8be1396263a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d140b4b7-61eb-4480-baab-58da1fdcced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd29ffd8-2978-41ec-bca6-84b1d5a68cfa",
        "cursor": {
          "ref": "0b39c9e1-f495-4524-b544-1566bff73d77",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ebb4fc89-6624-4775-94fb-a560ad7c1fc7"
        },
        "item": {
          "id": "fd29ffd8-2978-41ec-bca6-84b1d5a68cfa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1cdc8128-bc23-4e59-9e0b-28260724d1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d5853a-8d8c-4ce5-be7a-e529a1a8d473",
        "cursor": {
          "ref": "dc84efcb-b8c2-42a2-b081-996b6e926661",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8fe76350-a5a5-4478-83dd-420c7ac474e6"
        },
        "item": {
          "id": "71d5853a-8d8c-4ce5-be7a-e529a1a8d473",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "89f72e99-8297-4248-a744-40920719bd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e966688d-e3ee-489a-ac10-094a6104daa0",
        "cursor": {
          "ref": "af2315f5-f8ce-48a8-9eff-b721c7e4db23",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cd21feba-6a1c-494e-868d-8dfb45079741"
        },
        "item": {
          "id": "e966688d-e3ee-489a-ac10-094a6104daa0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9be49577-ed21-444a-ad85-1445f61fc1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ed7c61-099b-4c23-97be-0c8acdb71111",
        "cursor": {
          "ref": "f6e99481-b65e-4f77-b449-08305a0395a5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f11a3162-ddf5-4e82-9b32-1258fa2cc8f3"
        },
        "item": {
          "id": "c4ed7c61-099b-4c23-97be-0c8acdb71111",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8244cd64-482d-4fc7-bd92-4ad2cb5a0050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c38e43-ba1c-468f-9e1b-90ec8b3b8951",
        "cursor": {
          "ref": "cfcb5c3e-5eed-4f03-a503-f28bf6818f3e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "73c12665-71b2-4e2f-a1f8-a928bd02a67e"
        },
        "item": {
          "id": "81c38e43-ba1c-468f-9e1b-90ec8b3b8951",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "11161765-66cb-4383-839b-54e11079da2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb2e5b2-0f1a-43ba-b27b-f723a713631c",
        "cursor": {
          "ref": "ef07c614-2ce5-45aa-92de-12c18bb49827",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e4818836-338f-4a5f-88af-1680b51ce010"
        },
        "item": {
          "id": "6bb2e5b2-0f1a-43ba-b27b-f723a713631c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37fdec2b-893d-4985-8afa-c28a64c0f070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793d1c2c-0d9b-469b-ae50-dc59dffbdc52",
        "cursor": {
          "ref": "34a2a2d2-5f06-4334-a085-062c78eb1ee5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9376362d-0889-4665-bd0e-28b855cf9add"
        },
        "item": {
          "id": "793d1c2c-0d9b-469b-ae50-dc59dffbdc52",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8550e40b-0c73-4305-9066-b1b0417d35ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fe7da3-c6ee-4e33-82e7-15e93c7694f5",
        "cursor": {
          "ref": "ec25a515-a940-4ef9-8281-24fdff47ef5e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7c1b603a-e81a-4257-a358-797e7f799a7e"
        },
        "item": {
          "id": "65fe7da3-c6ee-4e33-82e7-15e93c7694f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9a4cbc02-f1ae-4231-b726-a39e55424132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42c3076-6df5-4381-9a26-7a03461b8aa9",
        "cursor": {
          "ref": "08489769-4583-42a6-9888-bcc081b3d8e1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6143ac82-bc75-4013-af0b-06808f29b80b"
        },
        "item": {
          "id": "b42c3076-6df5-4381-9a26-7a03461b8aa9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1f3c12b-c15e-43cc-b25d-ff2eff29588e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44310ab9-fa4e-4894-827e-bf09f299d34a",
        "cursor": {
          "ref": "9f706898-a8ab-4392-8599-175ad476f3e3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2ae7d964-ddba-4d67-aa44-f6cf3378d730"
        },
        "item": {
          "id": "44310ab9-fa4e-4894-827e-bf09f299d34a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "561b305c-6fa3-4a42-b216-fb714be4b33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaf6611-26d6-4fb4-b2b9-917f5897300e",
        "cursor": {
          "ref": "5d4e59d5-d42e-49b4-8243-6a2a44d6e071",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d1d057fa-a3d7-4a8b-a05a-638845f15078"
        },
        "item": {
          "id": "7aaf6611-26d6-4fb4-b2b9-917f5897300e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b84c9f00-59bc-48af-a364-6b0f05efff63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ed491-466f-4f6d-9a0d-0219394a0d0c",
        "cursor": {
          "ref": "815ea717-edc3-404a-86d5-ace059e1a730",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "69d7c799-3a05-4591-8c14-19b250a8a81d"
        },
        "item": {
          "id": "b57ed491-466f-4f6d-9a0d-0219394a0d0c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "68a178c8-c68e-4f58-a269-d87b5f2e1886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d1f36-9c1b-42dd-8932-5cbddc3db39f",
        "cursor": {
          "ref": "ba6e7e3c-e5cd-4afa-ba3e-2f50c3e43b11",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57c4f86e-e8cf-469f-b505-4682b707e953"
        },
        "item": {
          "id": "a27d1f36-9c1b-42dd-8932-5cbddc3db39f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a341c8b0-143f-45ef-9321-2ca44cd9836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c185807-0526-4db9-8d9f-e7e33f77ea90",
        "cursor": {
          "ref": "3293d9fb-f07c-472d-83c9-dd355e463090",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "44f879ea-45e7-44d1-8955-bbb92c1963fa"
        },
        "item": {
          "id": "7c185807-0526-4db9-8d9f-e7e33f77ea90",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b4a55381-bdc4-4b7b-938d-fddeccf5654b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f4b22a-94b4-4bca-aa99-7e7c8ac72c10",
        "cursor": {
          "ref": "c1b5cab8-655f-46a0-94f5-942559506e13",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2e659a63-262a-42aa-82a6-f3f5ecb219c2"
        },
        "item": {
          "id": "99f4b22a-94b4-4bca-aa99-7e7c8ac72c10",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d9cbb11-1ed9-457a-aa5f-c33e5efd34e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae702e-ea09-4d5b-9f32-bec5632938a2",
        "cursor": {
          "ref": "f9fe6a2d-8a3d-4d44-9e93-304494c6831e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2ef21194-6ecd-490f-b1f0-2985e62ae6cf"
        },
        "item": {
          "id": "07ae702e-ea09-4d5b-9f32-bec5632938a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8de4f598-cbf5-4d73-936b-fc2f6ef017bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680e4b9c-20a1-4704-961d-c42467434e1e",
        "cursor": {
          "ref": "e3d4718c-1ca6-4c9b-bad3-683ed79b1d0c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9dec8c5-6ade-497b-a39e-a2fb994002a7"
        },
        "item": {
          "id": "680e4b9c-20a1-4704-961d-c42467434e1e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b894e7e5-b458-49c8-b058-92326691750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7876b8-4e23-44b7-916b-b0c571afe0ae",
        "cursor": {
          "ref": "bcd6d745-9f2f-43c9-9092-f8c0a70ded27",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b55fd820-941d-4876-bbc1-d454e8f220fc"
        },
        "item": {
          "id": "fe7876b8-4e23-44b7-916b-b0c571afe0ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "65fbe7cd-5f95-408b-b5b2-11bf91cd1be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5786ee-5116-419f-93b4-62535404201f",
        "cursor": {
          "ref": "d1174af4-041e-46ee-90ab-6f2fdc235844",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "242ae68c-bcbb-435f-afac-d2586bd22da3"
        },
        "item": {
          "id": "cc5786ee-5116-419f-93b4-62535404201f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "693eaff6-6f20-48ee-8751-70e00b47227b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d959ff6-2890-449b-99c1-47f242111068",
        "cursor": {
          "ref": "97afaf84-e99f-48ef-92f0-118c8bb04427",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b6a49967-017c-4773-9d96-6ca7869268cd"
        },
        "item": {
          "id": "1d959ff6-2890-449b-99c1-47f242111068",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bc1dd025-9a9a-455c-a211-29e8f7b612ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a91c03-7af5-4665-a27c-863c220cb7eb",
        "cursor": {
          "ref": "ef245f9c-2b80-4f1e-93f4-847df36bdef6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "046be5d1-5784-4a5f-929d-f67eef739ba2"
        },
        "item": {
          "id": "01a91c03-7af5-4665-a27c-863c220cb7eb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f8493610-5e69-46b6-b378-761058fda53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1997eb-0332-4896-847b-5d2a3e0f7ca6",
        "cursor": {
          "ref": "64e6a413-bdc9-4d99-b2bc-e0fe2f3e2271",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dbb85d5f-366c-4ee9-a110-7f6d215b671e"
        },
        "item": {
          "id": "bd1997eb-0332-4896-847b-5d2a3e0f7ca6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ad1e475c-e97d-4b57-b59a-6122cfa458cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea70e8ea-a12b-40ee-8ebc-689ac07d95a3",
        "cursor": {
          "ref": "bdd70ae4-3931-4c45-bc6a-4d2679d35d00",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2b03e0f0-bd37-41c8-8793-7167ffce1c84"
        },
        "item": {
          "id": "ea70e8ea-a12b-40ee-8ebc-689ac07d95a3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ad9173d7-857b-451d-90c0-e1621d5d196d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd0671-b4ef-4e33-b38e-902ff1adc902",
        "cursor": {
          "ref": "4318115a-e188-42f3-86a5-562e483b0174",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3b1ee8f2-e134-424f-80e5-73c0d58453d0"
        },
        "item": {
          "id": "cccd0671-b4ef-4e33-b38e-902ff1adc902",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ad20bf05-49cc-49bd-89ca-5b231e6a6dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d96d62-158b-4210-9851-41051c2325a6",
        "cursor": {
          "ref": "eddb4bfb-6bb5-4e00-ac69-16c567788829",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "da1a7841-7be0-4bde-bd70-75f245117dc5"
        },
        "item": {
          "id": "49d96d62-158b-4210-9851-41051c2325a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "724f051e-0d16-496f-9176-1ffe7853c3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d219257d-a113-44f1-bd1d-05efc26954d0",
        "cursor": {
          "ref": "bb78c154-26bc-411b-8a77-3808f7395d0c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a67b5ee8-3599-4d94-b7fc-16665478f2f7"
        },
        "item": {
          "id": "d219257d-a113-44f1-bd1d-05efc26954d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a68253e6-4bf5-4fae-937c-7f85998a62fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07687156-6150-4e8c-8e59-0dc3b404fbb8",
        "cursor": {
          "ref": "ab9938d4-05de-4c46-acd3-b0972787effb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fbf621e7-eb73-45b8-86a9-cc119be96304"
        },
        "item": {
          "id": "07687156-6150-4e8c-8e59-0dc3b404fbb8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f5840359-468e-4844-b652-592ec1f7b8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cf4e58-53f0-41ba-be59-9671e680dd57",
        "cursor": {
          "ref": "028486a7-cf1b-4a65-b340-b77aa7d96b55",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "87cf91bd-f241-4901-b0dc-a3f80d416aa4"
        },
        "item": {
          "id": "39cf4e58-53f0-41ba-be59-9671e680dd57",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b0bc90b5-536e-4816-9546-06d520ca7dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9370d3ae-8212-45f5-9cea-525687496a3e",
        "cursor": {
          "ref": "e62fcc8d-84a8-48fa-9ef5-f910781c08c0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b724be25-26f2-4108-96db-ab1e217f5e44"
        },
        "item": {
          "id": "9370d3ae-8212-45f5-9cea-525687496a3e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93783d2d-04d2-453f-8440-3aabe4bb0b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd999ef-6cbd-4e93-8d87-bf6135369f5f",
        "cursor": {
          "ref": "105e0e51-8f23-4f11-93aa-55198e67c487",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f17e2f20-0605-4fb3-9477-d212efd8525b"
        },
        "item": {
          "id": "bfd999ef-6cbd-4e93-8d87-bf6135369f5f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "33f81afb-d396-465d-a7bf-355e0a3900e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1338d853-53d9-457e-8013-ca8f6ba0283e",
        "cursor": {
          "ref": "7c9c7c38-2601-463d-8243-a3699900f146",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34f9b6f8-06e9-41f5-9514-842b2287950e"
        },
        "item": {
          "id": "1338d853-53d9-457e-8013-ca8f6ba0283e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d5543118-d607-4794-be20-e18530903eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee136f5-81b1-4f8d-ae75-eeaac0399e53",
        "cursor": {
          "ref": "a2b5e5ca-b9ef-4271-affc-9f9504a84896",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "48aafabf-68f5-4d1b-9079-4f3c7db4c66c"
        },
        "item": {
          "id": "eee136f5-81b1-4f8d-ae75-eeaac0399e53",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "adb70b2b-47be-4375-85e1-386fe69189e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6892db2-d60d-49ba-a35a-23e74381d836",
        "cursor": {
          "ref": "72ea4202-18bc-47e5-9949-19bb91f458d1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "18f9aa78-4aab-474a-84af-0460a30f0f46"
        },
        "item": {
          "id": "d6892db2-d60d-49ba-a35a-23e74381d836",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "50d79ff3-9d82-4e3f-95ad-826536780219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d4869-d204-462a-99f7-4bcd13f5ffd1",
        "cursor": {
          "ref": "7fe1e523-798b-49b0-bdb5-a67b6025c74a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "45b72cca-4eb1-4d80-baed-91be876bf59a"
        },
        "item": {
          "id": "b67d4869-d204-462a-99f7-4bcd13f5ffd1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b8bf1093-993e-4ca8-8af0-30fc595fe034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6f6f96-f9b3-4b4c-8773-8d350f21b0f2",
        "cursor": {
          "ref": "094c621a-c421-4707-9a47-ceb8d93085cc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2f76080f-dbe5-413d-ae3d-65c3fb82a49a"
        },
        "item": {
          "id": "8d6f6f96-f9b3-4b4c-8773-8d350f21b0f2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28bdf4b2-b640-43a0-98bb-959ab565a746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b2c8cb-b86f-4479-a459-77bc31256e9b",
        "cursor": {
          "ref": "ad8e6a2a-de38-4ec5-aa6f-2abda2131ea8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4f1059ac-894e-4a84-84d2-f058243eed13"
        },
        "item": {
          "id": "f7b2c8cb-b86f-4479-a459-77bc31256e9b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b4998f51-d63b-4c73-9122-2b9da1e81d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d1a64-2a0d-48f8-9e9d-bbbfe4582d77",
        "cursor": {
          "ref": "5c76e1ec-bd85-4c16-9af6-92b62cb187fd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9347c5fe-fd63-455e-9a19-365f994d08af"
        },
        "item": {
          "id": "9a5d1a64-2a0d-48f8-9e9d-bbbfe4582d77",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4b6e0317-fa30-42c4-834f-9e27b7293171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9812ad94-0bcd-43a8-a895-36c4b1b8b5d2",
        "cursor": {
          "ref": "354da76b-05b1-44cd-b2cd-5e9c1a48b383",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7133528e-2113-4f20-af9b-b824e5830c3f"
        },
        "item": {
          "id": "9812ad94-0bcd-43a8-a895-36c4b1b8b5d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "374988e5-a9be-4266-8a88-e9b356093c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63301937-ae18-474d-8383-50daea95eff8",
        "cursor": {
          "ref": "1a6ff1e6-f332-4790-9915-f07abba67ea4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bd8a93d5-9698-4dcc-8629-c43f288aec4b"
        },
        "item": {
          "id": "63301937-ae18-474d-8383-50daea95eff8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7f6690b1-03bd-451c-96a3-85854827d394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aca5a0-c69e-4186-ae8a-0360c19f427f",
        "cursor": {
          "ref": "bfb547b0-6694-40d4-9fde-9ebb7b6642ed",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4ff19d35-9eaa-4adb-b04b-1586f08ac4a3"
        },
        "item": {
          "id": "c0aca5a0-c69e-4186-ae8a-0360c19f427f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5c8a2341-2768-4c5f-ae15-92310742a4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b73c8-ddea-4cad-8484-d7b5d52196f9",
        "cursor": {
          "ref": "34c8483f-75c2-4be9-8616-3a54eb380c8a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "72c35fdc-dbee-4a9b-84db-2935913c1d70"
        },
        "item": {
          "id": "080b73c8-ddea-4cad-8484-d7b5d52196f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "67b0f3a0-ebef-4ae8-86fc-d7058fb590d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf3edf3-8380-4528-9535-a63a882ddda2",
        "cursor": {
          "ref": "e1b5e1c3-4c7f-4dca-be94-2e5443f5b54d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7a23af3d-7a58-414e-b771-55f1160b0f6c"
        },
        "item": {
          "id": "caf3edf3-8380-4528-9535-a63a882ddda2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "98de0eaa-36d2-48a9-a25d-bcadfab35a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d914e8e-4ce9-461a-b2bf-87b5cd8864d8",
        "cursor": {
          "ref": "571a3afa-1752-4a98-8642-3b68a22c35dc",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7318ab45-43f5-4584-8e01-a8e9afab0ae5"
        },
        "item": {
          "id": "9d914e8e-4ce9-461a-b2bf-87b5cd8864d8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "615d30da-36a9-4140-8d6d-97477cdf9be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23deacc2-ca21-4d00-8393-ccbbd9e34684",
        "cursor": {
          "ref": "6e44739d-69a5-46e4-9424-9ff375043b84",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cf84d0c8-521c-495b-bf95-7e8b7534ec21"
        },
        "item": {
          "id": "23deacc2-ca21-4d00-8393-ccbbd9e34684",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b6a896b6-92c2-45dd-969d-13387d602f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a5764-b259-4289-a418-b2a688d7cfe7",
        "cursor": {
          "ref": "33ad2e46-b2af-4c61-ac04-60d326bab24c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "92b9c351-740f-4920-b46f-03d834a3ae1c"
        },
        "item": {
          "id": "b74a5764-b259-4289-a418-b2a688d7cfe7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dbc7cdaf-8e5e-4598-b32f-cb4a2456665c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f2b64d-b5fe-47f9-9ebd-0fd60bc7b6e4",
        "cursor": {
          "ref": "b4fa450e-4335-4f21-bd0c-fa042c333122",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "21019a45-05dc-4277-b772-19626411a0af"
        },
        "item": {
          "id": "86f2b64d-b5fe-47f9-9ebd-0fd60bc7b6e4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1f77390e-6cca-49cd-b2dc-b1312a0e71ab",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "048c7ccf-fefd-4702-abe1-6e09522edc4f",
        "cursor": {
          "ref": "09b92a2d-07df-4b67-8edd-9f380f721af8",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "50527a1b-d3a2-43c4-a297-eeb75938fe30"
        },
        "item": {
          "id": "048c7ccf-fefd-4702-abe1-6e09522edc4f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9758324c-6c19-4b1b-95fd-af3c4f0fd101",
          "status": "OK",
          "code": 200,
          "responseTime": 2017,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce5baac-48c3-4466-b426-96805c74cd42",
        "cursor": {
          "ref": "64641bd8-ddfe-42a5-a9ba-9708dc3381ef",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e73f643d-e6f2-4287-b999-2d40c52d452f"
        },
        "item": {
          "id": "0ce5baac-48c3-4466-b426-96805c74cd42",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "240e12bb-42fa-4ed0-adae-80ad7205b8ed",
          "status": "OK",
          "code": 200,
          "responseTime": 2424,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b23e7a2-5e96-440c-aa78-adc9d4af804a",
        "cursor": {
          "ref": "b388958b-f52f-4e25-b4a6-ce395e5415e9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "04dd84c5-1df3-4a65-bd96-1da9576b2f50"
        },
        "item": {
          "id": "0b23e7a2-5e96-440c-aa78-adc9d4af804a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93d10cb3-e842-4604-802b-8c8d89f58ade",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b23e7a2-5e96-440c-aa78-adc9d4af804a",
        "cursor": {
          "ref": "b388958b-f52f-4e25-b4a6-ce395e5415e9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "04dd84c5-1df3-4a65-bd96-1da9576b2f50"
        },
        "item": {
          "id": "0b23e7a2-5e96-440c-aa78-adc9d4af804a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93d10cb3-e842-4604-802b-8c8d89f58ade",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47efb523-c086-42e6-9937-e4cc2eef7f38",
        "cursor": {
          "ref": "848519d0-dba4-4630-8fe4-9cc36d31bba8",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c4e7b4d2-67fd-4e3b-9ffd-b2ae720242d5"
        },
        "item": {
          "id": "47efb523-c086-42e6-9937-e4cc2eef7f38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f9989c0f-5935-4931-8c13-825c508fc522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae01304-db60-4adf-ba4f-14dfb91a9c46",
        "cursor": {
          "ref": "a71b289b-5ff0-4cbf-9912-7cd32afd4ace",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "32a57cce-a92d-4f85-964f-8b11a5c7debc"
        },
        "item": {
          "id": "0ae01304-db60-4adf-ba4f-14dfb91a9c46",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dcd2876f-038d-426b-b4f5-65bf88b49706",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}