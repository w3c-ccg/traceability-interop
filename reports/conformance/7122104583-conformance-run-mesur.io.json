{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34d6a25c-4a08-49d6-a011-64ac959134d3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01209f15-6af0-4f7b-8af2-b5209a585ee3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efd196b4-8360-4b27-9439-019b8f7301d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b58d90b-399c-4250-94d7-fcce4b36c023"
                }
              }
            ]
          },
          {
            "id": "f8a1d969-04fa-4bfc-abae-40bf5ed3d9f3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd2dab2b-5697-4d69-8648-eb2362792e65",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bdc532ba-5c6e-48a3-8422-f7eec9749db5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fc097699-54ce-4dac-8383-b9d6675929f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a0d3d66a-51d7-4f34-aa6e-d2337bf5a1ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b3483e4-ec31-4499-bc90-b93084e41525",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bce46f5-c4ca-40be-9602-e68602998343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dcc6259-c09e-41dd-b3d4-afc9f7e7459a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dfcf565-e2dc-46ee-b705-22bd13092b42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd223bbb-9ef6-45fc-ba08-51f18aa1d545"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ce7d258-8caf-47de-9d62-b7b5bfd283c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33917f08-cbe9-4fdf-b98c-2f5d578ea929"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b785dc5-92ea-4a1a-a142-0a34e81086ea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "259f6c77-6dbd-45d6-9e9c-051f9705e956"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "495a6665-649f-45ba-8bb7-d1ea2f219cba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d24912c-0593-462f-a3ce-16110fb4450e"
            }
          }
        ]
      },
      {
        "id": "e0e756d7-6ae3-493a-9c50-231a3c973e0b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e78a298f-1587-4e74-ba7c-2f56acc50231",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38841e24-06b7-4ae6-a539-b120af5b5ef8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bfd5b66-ac93-4bff-823c-8e037ca3be9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17312cc8-a589-46af-854e-b52fc4b890b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "689c504d-cc00-4d29-bb14-b80fb76b1f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d477a3-d24f-43f0-97a1-4d40f2a929a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd7598b-3d2a-442c-9020-dae49df85387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b396d01a-a6be-4fe4-a852-5f28809d5094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c12f14-b767-4751-afae-7b9b27740042",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1177f22f-f7ac-4fd5-a868-197bf26c3cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6d0d494-60bc-4ccb-8eac-1ceeef4907d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af56970a-b5e3-427e-871c-b19d609483ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d3dbd00-1991-49b2-a076-af78741b5322",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2d72fc-8606-45e3-a6c4-b1fa93165429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a8ba8da-3ff4-46d3-9a32-6bae2bc2918e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45fc919-b64b-40f0-a3a1-24b0a50ff899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2258255d-00a7-45c4-a882-3a27aebae81a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c59d6f00-5932-4199-a9db-542afb576182",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0bc59f3c-b0b7-4f6b-a73f-1745dc0e53c7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9bfca3b-2907-42d1-bb32-1df2a71935a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "970eecde-df44-433d-8fd4-c7da0d9a6992"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64cc3b3e-3c23-4389-81e0-236b7c19abca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd2f1840-dd81-4629-9867-b2aa25104e91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97b2cb9f-a52c-4b6a-b17b-d08ec9608241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edaa6e58-1c6a-4ce5-9267-b9a372fcdf5e"
            }
          }
        ]
      },
      {
        "id": "090c24d6-7028-4e2a-b05f-1b667c0d8641",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "775eb430-e5e7-494b-8cb9-3cdeed32940d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f1e4c8f-a87e-4e3e-bd74-e28056c302ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "98c51977-3e8a-448f-ade6-cfae5cd0f085",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4348825-f22b-43a6-ab75-ae5d37a01f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eb83d3-2c27-4d7c-a2da-6407b9ab915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c49ed6-35e8-4195-9eee-4027d73d4430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08320585-0431-4455-8e66-af907d82c6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b2fc2e-8162-481d-b13e-46d8d1986b90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aacb267-46e4-46fe-af8c-0f8ee5f17592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8096c4-0494-46fb-a673-16dec0756369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6ddeba-69e4-4862-8365-1396cd111ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "573c1381-0944-4fe2-a5ab-ca65df1c2d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2681fa0-7cd2-41c2-9bd4-a5d64fdadde4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b00f6cc-d11b-47df-b218-16c04364fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf2f4cb-7ca9-4b66-a5e7-545267493359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9500a03d-7bfc-42b7-8a44-5f84e6194cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6fdd88d-8b1c-4408-8792-5abd19c22134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d11b8a-9f2b-4168-b21d-a50db9a20540",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c946ff6-78f6-4c4f-a908-7fc196dbd264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7a6e7b-d364-47d3-9995-5b9c58a1216b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5952ea78-5215-4ebe-966e-fd670624497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05fcdf5-bd58-4c5e-b503-986db5ea532d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0497bb-6dac-4799-8d18-a9b0c8d188af",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cb23c-1761-4e91-a6ae-c1bdd9048843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b259a9f-fe7e-4dc5-be85-9c7819e3fd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15e5284-0196-4c58-9965-8bc2aec04b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4bb7ba9-8b33-4aaf-b8b8-fbddb822e45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7a641c-c737-4469-b70d-cea64be45a8d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8d64d-5981-4d03-b1ac-f177d2d01e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59221076-c8c9-4748-986d-622c5e882b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e723c-670e-481a-85d1-ce9013d38bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c51ccc-cbb5-471b-a1a3-555523faf4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863bc594-0868-4dc5-95d7-8f207478a34a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506553b-fd58-4283-825a-59787ed986ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90da2f35-fcc3-4aa3-8cb9-45ea46977597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a89cf9-14a7-4075-8145-29c6b8a82dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a1ea14d-507a-4231-ae98-dc7fa5188f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d57e8-f629-45e0-8e05-021414ef362c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71108926-4721-4839-9ef1-8d08c0538ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd93d08-8311-4e1a-8c21-0a54c58a9464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a704a8-39d3-4e61-84a4-9e3cdf1d7528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b908608-14a6-4dc3-975e-a43f33d757fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4f5260-b93f-416a-aa20-b1ccdaee300e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca48235-2d77-4ee3-b30a-9282cc9c9c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7466915a-0e2e-4c55-aec9-0e5fab732bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b277be1-0bee-4179-aec6-8750747fe098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d8ceeb-e9ee-421b-94fb-0d13b64e9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb00544-0d72-463c-a0d9-576585bf3af7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c588319-ec23-4b4c-a5db-8d77433ff691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b9b7ed-abff-410a-9b16-d7d1b57ea5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6055e330-7410-4f86-9d07-9e1c1d405a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57f8c3f-f220-4c44-894d-f244bb797f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d4b453-8a8d-412d-8317-a9f4253812d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6caa6a-c232-4efe-bf9d-fed83a0217bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8c415f-8965-438f-9072-1310e904bfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395c167-b765-42c1-b442-975265810e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e3e54d9-5af3-4355-831a-0cb9782401bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151448a7-ad83-4f6c-9346-a883d843f75a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e9696-8651-441b-ae4d-bfd8264a1fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b648f565-5469-4656-9210-0635d986abd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0d11e6-da6a-4ba6-91c0-aa03b9745271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba4b019c-7113-425a-9041-4d2e8c8a136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf6575-bae3-4145-96ee-c619223a8fa1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37d6b32-28aa-4337-99f8-cd2ddd0616eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31b27cf-37af-4358-8e5f-e0cc22de28a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e5b18-566e-481f-816a-da92a5d2fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c835864-e63b-44a1-81c8-0170cdfb3a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b5480-f794-447c-b2aa-824d580ee42b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded3e1a-dd9a-4da7-a220-e260dceace2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270baa41-b950-44bb-8a65-5c9f3400766d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3018a6-ec79-4af5-925c-62ef03b98b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12a4c63e-b5ab-4deb-9e1e-8960a02edcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e868e5-3941-494b-b1ce-48f306a1f522",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7e7c93-fa27-44c5-a059-9292240b3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d93aea3-4e93-4a84-b193-564cdde4c2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f105da07-aa42-4c6e-9112-2d541c031813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "076c5321-7aba-4c74-916c-d1b97ea1cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8075d97a-2b6c-47dc-8afe-46ef452c46fa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863b6da-8a6d-4c11-adeb-6e50de65a913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf2333-959f-4269-a749-9c5c4347b4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3495d592-c161-4c33-8342-5c47139100b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77d1315a-993c-4a78-bcf8-562cafca59f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7a37e0-fda3-4f91-a283-e5bb989c6c30",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511e23b4-a235-474d-b992-9af827004c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258ef8f1-d323-41f6-bd1f-ae9c0bcdd157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae79a7e-e4bb-4659-bffb-724843e31100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "153547c7-b7c0-4cf0-8a84-be234c80b977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16325d4e-8bd9-4b96-9878-40b8cbf5cddb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be27623f-b836-4d1a-9d6e-60c337a18a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2eb931-f43b-4932-9def-7da6adac5a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317cc598-984a-47d9-8890-3b45afb74576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "57acc989-4b6b-4b82-9b48-e35939b204a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb56c7cd-3d35-4931-94a2-033293399b3a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe719619-e97b-41f8-91ef-c126bc429533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dd21d1-d930-4525-9286-87d0a8ab71c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfa634b-0687-498b-aadc-d9478a3d3c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9584a50b-c42c-4e26-9e42-d32b1ecc76d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd089c0-1b3d-40d5-b21d-029e3e910ee8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dc6e04-3bb8-4a73-9f5d-413d45c9e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033735bd-7ec2-411d-b28b-12ba7a5a7993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a538ec0f-3920-4ba6-a89b-8a2b4d04f4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79b0dae-5a93-4b37-be09-ef7b3751a978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437c1c02-0327-4e83-865d-79f6699f9c13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e369fa-a8f6-49dd-88e1-9b303e2f5759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f1ab25-b3b6-44fb-a3c5-c86c32f17080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398652b1-7b96-493c-8934-5643b61a617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd8caa4-3cae-4e77-b0e4-efdde7a8e297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7bf2f0-6057-40b0-aef4-0a31d4873998",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dfee6d-9a9d-4769-bd3a-e9b5c3ec25f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a5a6ca-9451-4568-8fea-30ccb7fc8b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636b44ad-02ce-4810-b53f-6dfbc3e50d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18c3499-4b15-477d-aabb-5111477e0d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f92d1-ed98-446f-a9c0-d404c1eae584",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb04a79-77a0-4d54-b58d-bf92b079cf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600f4850-756f-4496-a607-2d31b37255c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe7f030-793c-43d7-ab63-5594a7d08e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17cf8a34-be6c-4847-8499-30dc7e145cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf6bf6-5324-48ec-9a49-6857b6129485",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f54149-2d08-4937-abcc-f4533bf00aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a33cc31-d87c-4ca9-9e91-a66af1ced9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a580effd-2f1d-469d-a8f6-66d556c556c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdf1c11-9ccb-4064-9332-02ce5d6e2e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b6d818-6b45-4339-a38d-789daa093715",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ede475-07c7-44cc-bfa9-a2f846d15ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530ba64c-50fa-4ec3-bb8b-5c7258dbb7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0663a0-2f74-4669-8fbb-2ef775796e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef31d7df-8503-40a8-98c7-1f234fe8ca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb69774a-954b-44f8-8505-84493590396d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6de301-a2a9-491a-899d-e72a71368564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5a8fd7-9369-4157-8733-58c0857a2c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0c298e-da74-4113-b646-0bca6c5c99e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c92834-5b69-40f8-b1ad-9da3cba082b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9252e79-2aa0-49ac-848d-a3ab89127946",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80f6bd9-08fa-4579-b49b-c648b8b44dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871966be-43b8-4fa3-8c45-202536c1e15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcbe8d9-e05e-4f3d-8e9b-c08ec553ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd06962-1a62-4f0a-9992-835d853c7f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e095aca-7018-4647-80e7-5a851c37e1b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ac8c62-d5f9-4ebb-ba38-1a4a6364b7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7b2480-961c-461e-b7fe-7cc0246a594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bec9ff9-1f21-4b10-80f1-253e971d7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a52acd1-bfa4-48da-bc47-988ef64cbf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247aee98-d0e8-46e3-99ad-1663ae834ff7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf0fd67-81cc-4595-9d68-c58d3f6b688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d6f427-3146-4c03-ade5-9252c44cea4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c3f25-0934-43f4-9d32-c8b9198960f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae85ba7d-ce04-4d83-939d-a448e975994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529e3ca2-a961-4b95-aaa8-5388b5d6d5b9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893895cd-e6ec-4bca-985a-f6e679e6f92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c2fd1d-8782-4624-899e-32223208a6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf7681-ab11-4992-9d39-6ce4e0d3af8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b799f52-d4db-4b4a-b245-ca7443771c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d52f764-4379-400e-b2ba-58feaeeefaf4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd0696-f8b6-47f4-8bc6-0eb4f5392948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a47f129-8cc4-4d5e-b444-caeb5a1b9011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c6a2e1-84d4-4ee5-b90c-404e2f88a932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0748c1-44ad-4ab3-a59b-65c4770fd6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2daad7-335c-48cd-b532-be72c2a0cf4f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e0c0f9-6d60-4f8d-9b68-05cf74fd5c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2d4438-5276-4cf6-90eb-d9ec89169c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad1e77-cb6a-4cbc-a7f3-5a4b2334b118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "306987c6-1244-4785-b53f-0c8659c86a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92768246-3f64-41ca-b99a-08180b52d1da",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d782e28d-d98f-4803-a05c-19f3aa678b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b68a215-f5e4-425c-9990-46255bbb911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a61fdf-ddca-42a9-aed1-e4c8f90d043c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "241b1f37-87bf-4780-980d-a01840cca5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e648244-e3ad-4c81-941e-ef10ab32631d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227a72e4-4083-4b08-9072-64458d03f11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbce141-0555-49c0-a758-c1c5635d3904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c3097e-c0a0-41f4-acf3-69ef20c5feae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00121763-cdef-44a6-ae5d-bb59ac8a95d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad08a37-42c5-4c8c-906e-eb88c246d857",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de906d-b18c-4b4d-a1a9-99469b19e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5961ad9a-f522-4bd4-bc37-9068e37a2c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642fec89-d6cb-4447-a504-38ae1fa144cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e17b21e8-1991-4fd8-b662-6cb5f8f10d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ab4a25-51f7-439f-9007-b3436f1a0bc2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a40a647-8fbc-43a5-a946-77f3e22e9130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d62d020-bbbd-45fe-8ad9-168344ac2080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26194a82-a460-4cb7-b397-49a64bad88f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0a1a31-2fba-40dc-a36a-9577dca2a83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c0a385-08de-4388-80f1-55a92a865493",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aeca9c-02f4-40fb-bd5d-8fc5325e2a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553f6089-35a0-468f-8efb-c92f5396cad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef000b-a79e-4b25-b309-70d802b92081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60f90771-e019-4dad-9996-c907d2a139df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76331c36-1a84-4684-88b4-0c4543a102f9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528cf949-9530-4aeb-a728-ae75332751c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefdeb12-c9ef-4961-81f4-2cf773d2b719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a8535-d53c-4b7f-ad94-a2ec35f8fb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23fbac88-ce25-4341-b2cc-828dc606ae9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f8b1b-fd47-42f0-aea2-365d72251c4c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2035f1c-d202-44e5-bded-a3b1c841dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bca3c76-6bf3-4746-a351-fcbd9d78e4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1170487-42dc-46ce-b777-edc56b322ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "117bbb5d-76df-4bbb-85f1-feca3fcbf576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5061d852-2e97-4415-94bb-e7746c86bfa9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c7c6a3-cedb-4714-b9b4-058a6b2a08f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9092158-b188-402c-af05-490b7ac862e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ea50f5-d63a-45bb-af1d-8e4eacdd0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8112ca-b975-4604-877b-b551c987ed15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1379a6fb-59c7-48e8-a98f-a21ebbd82e16",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0120ba61-20ff-4511-a898-7d3fb75d39c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bd702e-4e8d-4a08-bc24-6f02f8e2e4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f582fabc-b905-4063-9e52-17dda28515eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abad701b-869c-49be-8124-ff525d2f8e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aabc01-5646-4aa8-9fd7-793e4c5c5769",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53b7507-ffb2-481a-9ca8-f3217628ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bddc0d4-56aa-4ee3-8da5-dbfdbf89b43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57d2b24-3458-4f20-bf62-4b32bea62829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "597e3d18-2d63-48a9-96f7-3f178e708ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00136634-e19d-40de-8a6e-072612c84f15",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410777ec-cb92-4eda-a7f6-3e7f7d914682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a55f9b4-c675-4d04-bd9c-e22a2596b3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed39d6-e8d2-4219-8069-90682ef2461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd25630-22b2-42f3-a07c-6cdfa6e71779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852ec560-bce8-4f16-bb19-485157d98a8a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fdbbc1-78ed-4987-bbb6-5cd881e546ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f271e53-697c-43c7-95f5-dc83bb01eda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01e5537-aef8-4338-b791-b72a568c8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a776b419-516f-4d2c-8505-29f0461f255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d75e73-142c-417f-a5f1-8fb09fdc2c1d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab564ee-3ada-4eb7-8081-d669e468ed15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed3c941-97b2-4d4e-906f-8dedf2dc138a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7660282-f265-4ecb-81bf-a9101c452564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f09058c-83f8-46a1-a35e-5e145a87ac33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc7773a-783e-4328-b7c4-5eb4381b3ee9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c4edc1-6f20-4ee8-8c7e-9ebc9b9a114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015dd7fe-6d15-4dd8-aa88-33ecf930c600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7d9fb4-c8c6-4d72-8ff2-99d7a00dc445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2208c36-53a5-4eb6-ba0d-6bbf39c93442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62839ed2-acb4-47d2-8bef-ce3739267d83",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9548275-cf53-4b06-93da-b7050597eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2757ca9b-0077-475a-8d6a-9512ee8d2155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d56d5f-4835-4740-92e0-a4ca77eb6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e714c45-28b0-403f-9ae9-4af021420efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa555d8d-5260-4e43-99b8-d1b2c2738ec6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b37372-fc93-49cf-bd93-87eaaad8094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8726531e-399e-48aa-9a3c-4c4a645dae9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02184d88-af50-409d-bddb-b986968cfa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8750afd3-d5db-4f69-a3de-1c871ebeba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6181e5-3e85-46ab-9e3d-b09475605f81",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3eceb9-247d-42d8-ba1d-36c0e37a1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc887d3-b1ef-4945-9bfd-f828c2220889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169db3fd-4f48-4242-aa54-3fd62b0089b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03038052-2b60-4476-9b80-2b18e6c1d714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5401d92a-8c00-4dce-a727-24391e9b9446",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42ff385-40e1-4e97-9636-7f394ae9616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be507aa-3230-4340-aec6-1c40d097f174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c96cb5-2fed-4303-ad10-08bc92438082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d56dd57-926c-4026-9957-ab91abb63613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0734ceb-00fe-4f8f-b927-25d2fe21d916",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d818df-cbac-498a-ab30-29d639aabada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df125cc8-da70-4d9e-a94c-cc0ad2538391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb1eb03-0a61-434e-b04d-129eab105a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a50db2-b205-4e5a-8b10-61b8c3057e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb41d7-f5e1-488e-9a5b-51752870d515",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1219ca-5090-4818-bcbc-b627abc351b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc1c3f4-c7e9-4c63-9709-d84632649104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775f1cb-cbe0-4d15-bcea-4e517998d982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb07c53a-f88c-4e4a-9dec-6426581c1f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df649d09-ad98-4f36-9d57-16c3425c7695",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40725231-aace-4321-9824-48bca0e1f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aa9b43-462e-402d-96ed-72a2d93b2933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3e9086-a3d6-41d7-9b69-403389db888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c4233d-b581-48b5-b89c-55885accb6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024d734-4534-47c1-8094-fd80c683df93",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6e614e-d20d-4f4a-bf81-80a2aafc8390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beff7509-53ef-4c11-b5f8-d5560c7de1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f5cae9-4c9f-4bf2-9e25-bdb7eeda13d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30426f0-8234-4e22-8144-6e28e5b5247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f19a3e-06bf-4020-b977-9ef122a12028",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe0d65d-db03-4a80-8721-1721585fb08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c229f9-51ef-4463-80f5-2486bcf7f955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ae0d83-8d4c-4767-9cf7-1a6de8dbd0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc1289f-08ef-4072-b890-d6beaa55895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13517a87-3a55-431a-bb7a-2252311705dc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26463fe-6f31-4f8e-8053-ef19381bf3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55cc21f-a823-4b1b-a9a2-9bf79d5ca9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b42093-5f38-4460-bd14-ee4a7cb53d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4986a91b-ec32-45b3-ae0f-8dde1e4593e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ba745a-4ca1-4fe7-91af-213c08902e3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb158a1-39bd-45a4-9f0f-64c06b4bc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c694c1-f166-4ca2-bf21-79c8fba02702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9eec47-b30a-4249-94c9-a3d7507bf2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8857bfc3-0dae-4001-94cd-b16e4c64b298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432af106-da60-4ced-9f32-a18d83609daf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95afcff2-71b3-4a25-badd-a150c679a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1629b35-f5d4-4f9e-a872-b1800e1d74c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2a0905-a0da-4ed1-99b2-a69889b380c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02dbeefb-e18b-4c25-a3a8-ae7ee34302d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9392ef-36c5-466b-91c2-6ff2e1c1b9f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf3dec1-0af5-4bd8-b07e-b4fa4ff5b46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cd2252-098e-4b0c-804e-799b4fdeb390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2f9aa7-a7c9-4795-9def-b5f481ff9db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46051f26-c9e6-4389-949b-0b4f7b4bee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b717b453-0fe7-40c8-8bf7-a03caeb0c0ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50c601e-fc24-4857-9c22-b63b6f945ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7f0273-cfc9-49a0-9b53-00871b0c664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542c207a-b7ed-474a-9809-dead559ba55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8455565-9868-410c-a351-ebb0e27f75ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d6157c-20a2-4c46-a8e8-07ba8a3cc234",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db846d27-68f2-4e83-8c5c-4f196d4aa41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d848df5-e997-4c38-8307-1e46dba213e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3288a6-2270-40ed-9eb4-58232cff0659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef47b9e4-e076-4834-855d-55d818049252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a69b8e5-f30f-4931-b6b9-43c1204d0829",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fdc035-8c59-412d-ace5-7100412dd686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0185bd-2258-4220-aa93-298b850b044c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669b4c76-6979-4c6e-9bda-b00625e0a173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "225a855d-5e99-49ef-8f78-d774a02ee95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0087f23-4d59-47df-a8ec-7786fd7dbf5e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4e8e53-583b-4cdf-a213-42dd585ecb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ef58d0-9c19-46d5-ad68-e4e2c77664fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f435ea6c-ea75-442e-a7fe-f4218921b012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62cdbe7b-597d-4942-b1b7-67ea1e63cb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76533a9-3a60-4c8f-9eed-6635a265b5ed",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfead33-411d-4dfb-adba-c517fbdb4a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad06fca-8dc5-470f-acb8-e2789b920ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b67287-6bd6-4320-9b08-bdc4f0c848a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7a4355-699f-44a1-a7d4-21c03b3c99e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623ee0e5-2f2b-406c-8251-13306a6f5263",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbb3629-badb-41bb-ade7-4b2eab3a17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d536d9-4f90-49a7-be84-0ce6f24e0885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de24be-6f8d-437f-af7b-58652fa9d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd18dd2-5587-4b75-8dc5-681c935e0b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70dda81-6eb6-46c4-ac87-8873810ed995",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a7689d-d89a-4877-a766-74809e65e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8d7aea-93f0-41ca-a6ff-625c2e7d9c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27af4c99-f5a9-41ad-89b1-ce9670dc111a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8281eda-0cb2-444e-baa6-06fa04e98e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927f4e2f-0cb6-4e87-8893-024bc43c94e8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca749b-f13c-43c6-a9e4-db3c6114dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c85f94-2ad4-4762-aeda-8928973b3f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e84ff-4d71-4936-b7b7-2c9dd6e2f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88dd9f66-9ff4-4c2f-bf2b-3e6ce46f54ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d757f2e-90c7-4612-9fe2-eca7fd68129b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f98937-fcfc-4234-a7f6-a31f2adfbf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7757810-c98d-4a78-ac29-36cdc4e0893d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb7247a-74e0-4c31-9194-0cb29016780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f4f300-15df-4727-bcb3-0bd89c16291b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90937bba-6377-4146-9cbe-afe7a51829d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccf30f3-e34c-4462-bfd1-91c34ec0936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049d3b3e-9817-457f-9fdc-7c9fec9262f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59809df7-bdbc-4feb-8fd5-c34d5015977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce70a4ca-1318-4bae-b604-b896b5be7e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2172ed54-0ebc-4cb5-b717-63d697c092bd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f9000-8f59-4e77-8ad3-4afef24e81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ca47d6-cafb-4929-9f42-2cb2aa2784d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec701f3a-c2a5-4ab0-871d-81e720eba984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a0e5bc-d157-4c00-b78d-f8aa8da026eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f295224a-ac50-4d85-b58f-0a601537b152",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ccb295-2d41-4b14-a7cf-a59f81b365f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189943a8-0f5e-45ca-aaa7-3d36d4f64e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef11f01-ac8a-46dd-8942-0acce9858f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a80439ec-8439-4d2f-9a1c-ef06a8e8bfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4107c99c-0bd2-466b-93b5-fbbe4fd4c961",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28af309a-ed4a-425a-8bba-14ee5d7491fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b34958-127c-4e7b-a9a9-0578dae7d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ca739d-5f5a-423f-96e5-4d1c256f049d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "509f50f8-4f1d-4bd7-ac84-15add64fdeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f899ef-fbeb-4242-a439-38d2e74f9e43",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a62462-a913-4632-85ba-1cdc3f53b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc86564d-52b9-4fb0-8db2-3d01ccf0ac64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc30be-fb19-4362-a8d4-ffa870de5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c75d180b-507c-43b2-95d9-490ca8833898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cee45e-107c-4644-adf9-be35fc7262e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1ce08-456c-45ee-b625-f3ca55bef551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eae8db8-02df-49d9-abf4-7ea4c2870fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6eec2-5982-4416-87ee-1afaa5d33893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6091510c-af19-4372-991b-3c0d3e803d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4547d0-667f-475f-aeee-8fc6cf2b84cc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f8533b-f877-4082-a1cb-b63e9215a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fde53ef-4cea-445e-a1de-d71561264f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021ee3bc-4c91-432e-9ad9-39707a49c3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a13b52-9737-4cd1-837a-1a5b35b656ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5e0e2-5eed-4275-9451-862a2e72b54a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2543f-b514-401d-a240-8c6c44cf05b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f87108-f447-43da-9a8c-f1d3d2d08596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d10c0a7-f53a-4aa8-a86e-1be3af8f8e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "150335bf-8dcb-4789-b5e8-1bf333958433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf44fad-59fe-472c-8d46-397a0b3c3178",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97321038-2caa-4f55-8dc8-e446721dbf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8284fa2-dbd6-4fb3-a0a7-6340c4d549ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728af5f6-df81-4a5f-8fc1-f34c13c114f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a344bfc6-1bce-4b92-8b28-5760d941a5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab36bffb-80ac-4275-ab68-f657756684fd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc99715-7b06-4520-ac03-7f4cbd401d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff198eea-4393-47cc-8ef5-01a97650dca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7e2f73-de84-44b9-8ad6-d02198f2f86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b92ac3-88b8-41a9-b0fc-a42af2a0d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c7531-5a00-4a17-ae29-15b1a59249c3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35604c6d-9eef-4a40-a177-04e6bbbe8a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15f9ca0-721f-4abc-9e00-3bd4954881ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65dc85a-c8fc-4ee2-a6ab-d310f8dc0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5800295c-32af-496b-83c8-3ea37c7ee5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82193006-e7e4-49dd-b6d3-2fa4e33a734f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d1930-9281-44c6-9415-0cb7d0ac0e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5d4328-42fd-4961-8eb0-66936ac4a92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162eb704-673f-4c84-9c92-92b7a0230e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "467396d7-4eb0-4703-822c-72967cd05ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f81fbe-dabc-4333-b244-7640b1f4528b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660d8aee-209d-4518-b4fd-05d26c82e461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfc106c-a7c5-4c0a-969b-ba10f5b0bab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e53a3-f3db-42e0-8a76-5de8273ca5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eeeb00-617a-43e7-912f-3af39dea9356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6873caa-d50e-40db-b65f-1ff0699a65e2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2a737-7b0d-46a0-a022-d81ff578398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70cf6a0-5810-4fd0-aaff-2bc10c63d782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3201df-ec96-4527-b497-778d1a33637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99250ee6-a6a1-4b6d-9fc4-1a281388f109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2275f3fe-aae5-4b3d-84a4-5d05d49a2baa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a55707-a25c-4d50-98b5-f8a08aea05a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04328ee8-f91e-477f-ae24-ef13b0e8e3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70de507f-040e-429c-8272-4685a1e4574e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71dbcec6-52fd-46c3-9a1a-b06831665b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10c9f6a-1949-4458-8f44-681bece63cf1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063621f9-ac81-4543-8e1f-78ddfca9be0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc00c9f-973c-4c8d-99f6-15ee86cbcaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5f2e30-55c0-4a0f-9564-c0d04e4d2dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e844df0c-b08f-47f8-90c1-a5f85fe1a89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d4dd3e-8663-4ce2-91ae-53a8be24544a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef7660c-1d58-49d4-ae4e-ed82f730caf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99700f3d-31ba-4cef-b550-8e9b7a3d93c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2dc1c3-0ee7-401a-a310-a2308b1502ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc6d390-d616-4fed-9601-41a9069b98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f39415-c9fe-49f8-973b-aae287424bdb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10660ed7-d1de-4ff0-8e9f-315fdfcd3a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94226ef9-a8f4-4af3-b5b5-adff4581e60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243ef365-ec75-4bcb-9a8f-cf602c9014cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13da0f22-5366-4496-b816-02bb08af82df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89aec0a-2283-4fe4-b860-30a716d68e90",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c99a83b-5e74-4ad1-8b1e-900dab13ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce9b593-0e58-44fa-8d20-a392656b103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16656d40-d129-482d-ab3c-d7e5ef7460fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50b3bcb3-5653-4175-91eb-61df9a6abd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae072c8-1d9a-453f-a9ac-d78c45f220ac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2112d9d3-3668-484a-b1b7-bad72c99d106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c02784-43fd-49b4-b17a-a9422e0cea2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d5e58f-d92e-4c75-870b-0f08bf172a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95e89228-4015-4171-b5dd-6ea8ce7d3b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131217ed-906f-402f-ab63-b42fbd88ee9c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbbe26f-0e96-4568-9523-9407e5b0e747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b508897-8421-4f2d-a91a-cc85741356b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaa83dd-77ef-4b29-a831-f210e21d08c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f563b3c3-d1c6-4746-a8bb-1788add76ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7133eb34-198b-47ee-9b39-d79060a54e64",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a1091-1951-4d2e-b75b-86261f77fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db42ec9-70b9-4cab-8037-259f83814622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc16ba4-c42c-4db9-9dcc-ed70a7e517a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ddf310-2aeb-45eb-83b6-da9595438be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed44d9f-756b-4748-b4d2-3dd4e7157545",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5579bb-ef00-4842-a26e-ab1df1dfb25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd2a61d-ff8b-4eb0-8791-49192e527659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca94ced-be69-4efd-932e-04f0f0e1bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8654e06f-032b-40c7-8405-baf5bc3d7b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9707c-5884-4cd0-90b6-de4fd36f3101",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f817c-7c77-4a93-8f05-f1ca5d4395cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "46e161cd-47a9-488c-8789-10931eae681a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565646d-14c8-40e0-846b-055d4bb33994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d1045a-7517-471c-ae1c-9aced6beca4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0181fc-b467-43b8-99eb-396e123c2262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db40ff0a-088c-4838-88a1-36148dd0010d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29180ed-0580-4f5c-804a-0ae912349fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7da7e39f-93ef-48c7-a0c4-570dcc53d534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ed5442-691f-4822-93ff-18958709726a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b937980-1d71-4ab6-a392-8cdb57be717b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0b71a1-5d79-4d61-b023-c35b773d9ecd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d02c1f1-597a-4ce5-8340-6354fc6b98ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b74872cb-8c15-40b1-ad40-8dcbf50eb32f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ecdf5f-72e5-4c39-9c53-68ac5fc418ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56ccec6c-94d9-4239-a014-9f847159892c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56a11871-eb63-44d0-8de8-359a3e89daef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78182e41-1e02-495f-b0e3-e2e1321311ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b05c9a85-ded6-43b7-9042-5add7d8512a6"
                }
              }
            ]
          },
          {
            "id": "7a03192a-a959-4f41-8c1f-93bdc394b7b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be071b35-4a29-4fd3-84b4-e4080b7ee319",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ed27a749-940e-46d7-9566-354ba6cd2dc0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a149fc8-ea99-405a-9de8-10b7f7094427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "713bea4c-562f-4887-bd06-455017fda173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad36d575-455f-4ec1-871e-a7006f814c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f7de84-08b3-4b55-9c78-903787390f93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80e45870-ac93-4bcc-becf-675e67d14a00",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d6194b-808d-44ba-9462-df6bf60cf833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c72a426-49c4-488b-8a84-bd1e7d6a792e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9fbe84a-ccc0-4b83-af02-2f9cf89a337a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abdef9e0-0303-4181-80d0-01cb07a7b382"
                    }
                  }
                ]
              },
              {
                "id": "e48ae591-449e-4d65-84f6-d093a9773830",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "978fe48f-f7d8-48f7-9138-dfdde66026f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "050ef561-4e22-4df0-88f3-dd8013deecab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ef67107-a2aa-4e94-9ffc-32a0fa0a058f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b647bb9-3269-4321-9ec4-6dfce5765ac9"
                    }
                  }
                ]
              },
              {
                "id": "ad1518f3-b75f-4625-a5aa-c4a163b3be56",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d6c279d-4fd0-42b0-a4f2-c1182dd8b45b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "123f1472-a00d-4b9a-831e-c10f3e4cb805"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3973d4a4-41a6-4048-9bab-460a297c3ec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7452d3df-18a2-467b-91ad-d585e3019b6e"
                    }
                  }
                ]
              },
              {
                "id": "f4a3d2c4-4c26-4e94-80f5-f62efd01de96",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69125148-9bbb-45d4-975b-b69be1b4da49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa9b68b2-1bd7-41fa-95e8-bd44b1c01261"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62eca4be-58db-46ab-91e9-0dba1c642d64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f676c53a-df5c-4294-9d6f-a3da7fc272fa"
                    }
                  }
                ]
              },
              {
                "id": "2fd56b01-25c7-4bc9-be68-313b83d50fea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36884a98-4d28-470c-b0df-63c444956f33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "882d0b1d-8cbb-4bb0-8113-9ae63a665295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e1cb864-e77b-4d07-9f16-d68a7bd6fea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "609bdf32-02cf-49af-b36f-7fba7f2c3e1b"
                    }
                  }
                ]
              },
              {
                "id": "fb201694-c356-4fad-b9e2-e2e6b5f5ba11",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bbe900d-719a-4f70-af67-3e4121ddf46e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "129bce6b-44ce-4638-8bc6-67995ac3dd82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01097874-3b1e-4aa6-a74f-5d92e8967055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91e5addc-50b3-4197-9f74-e097c8a033aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b141560-be7d-4f2d-b5a6-d54c45312e6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b83d8c9-2c7c-49d8-9fe7-ae27d20b438e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "768568e0-54da-4eda-a3f0-e5711541efc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a4e8cc6-8395-4a5c-98cf-55f7bd733fbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c7748ff-61ad-41d6-97c9-20048280b0af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0c64ee6e-d827-43ae-94cc-b6b43fb9b853"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16443b5b-3096-4f32-b283-dd12b27d7787",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6087b3a4-7e5a-4a27-bd0f-1619acf6b31f"
            }
          }
        ]
      },
      {
        "id": "d094d706-a475-4f3f-9b5a-7749fb6cbb0f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "695cee63-3c73-4ef4-bcbc-9a021e2ab25a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5cd7c90-36c5-47ab-884b-e8f76c81b309",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ecde938-c0f2-41c1-b7cf-6207694127af",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0e4f79-95cb-40c6-95a7-da4aae8e6f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a916e2e5-8bbc-4bf5-824c-fc9633ec385d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a1f5c2-7aa0-4f62-91d5-7eb15daaedf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab90ca79-5d41-4bdf-b539-3bb7d8fbaa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c693e2e4-1757-4c68-aaa3-cb93bd180386",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8546a43a-06a3-4e39-bb52-941679f3e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4783b0f-c43b-4d2f-92df-b048d1eb57a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f04c814-652b-4177-88c1-78a8148e87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1db511-e4d9-4a3b-877f-00dca1ad89d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da708cc4-b97e-4586-a8e6-42e2720f09b5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce59c7af-c660-4c83-b63c-7e54827619f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1bc897-f569-451e-b65b-1fa8c50ba1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dcbbf7-698b-4dcf-9852-ed2aa895d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b771065-7f3c-4371-b9ae-2f63e1fc342d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4306d3-5c99-4f36-942b-9acac8b45d55",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d31167-ac57-45a9-9d83-041602e39385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3243dc32-477c-4f33-9117-44e09d2620a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ef3ae9-483b-4841-8abd-64022fec5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7372c33-916c-4932-b9bb-4d8e31298846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbaf295-30ca-4d24-b1d2-8f16df9558f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8036a497-42b3-40bd-a045-7b3f24e16244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e425ee7-e489-4200-a566-6a42a8184c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f6fd3d-f910-44da-bbb8-0d26ec0c753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aac77d-773d-4bcd-b00d-53bb07bb49ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b124b40-cc1d-4580-992c-072afd6a8705",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8ec7f3-7ab3-49d9-8bb0-610f446fe82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07e33f9-0773-42e4-934b-b6235c34c64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf2b58d-cc0b-4eab-b563-de2bb6092156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c14077c2-3608-4421-803e-4c61ffb4238b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9b2d3-8a06-4382-902e-ed553788402a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2921e19-d934-47be-97cf-f24f2e679cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f318bab0-188b-4e38-babf-57363de3854d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f80fa70-1f87-46c6-bee7-8aec324d89c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed358b3f-1935-4b76-bd43-887310f2d3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f889fa-fca9-4109-9bd1-835166f85537",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a8f21-fcb6-4ef2-a977-553c82b697ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e960c3-38ed-4036-a8e4-697f60867ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b3fe5e-da36-4f18-8adb-f56db798c4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca59ff5-e0c4-4fc6-9765-96026aceb695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0947bf-82bf-4c33-b859-e208d70ae8f7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d23cda-859d-4ac3-ad23-e9da9a7f38cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab17bf4c-f835-4ba5-96db-ea60657ecda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db97522-2fc6-4fd4-9020-1fcc33ddd287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "984c03a5-7b80-4ed0-b0e8-cc0a35dd0d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3167ba1-dfd1-4632-90db-5e0490f3e490",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a2971-e78e-49ec-aba8-7bcdf1a29678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71568611-b5e6-4163-8fd0-99c683349d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16246707-a9de-4c80-a387-e819d792c7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2a72f2-415f-48ea-9b4f-7ff50ae5869c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4383b3-f7d9-42b7-a3b7-aef0064c6ba5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a39c7b2-e5c7-48e0-ac4f-1b1a1742f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd246a98-7953-4895-b653-e0c589adf691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd269e-e44b-45f0-9ef2-7e324057ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bb395d7a-51be-4f96-812c-4fef759318b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1560c2-5afe-4150-bccc-dc2862fbf660",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95e504a-12c4-43d7-867d-ae4e65533ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc573dd4-5636-4af2-8572-632618bf71ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edea894c-4470-4125-b980-edf82e83499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaa9e69-b186-4caa-9c1f-5d676baac182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ae9a02-1ddc-4f5d-97dd-cb5c75d132c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c26bc3-e50c-480c-ac4c-75428c456aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac46500-896f-47a8-8748-c7ba96446dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f67035-13d6-48e5-9e19-a741062dc2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7e9e1-680e-4b1c-94d2-d0705fe62c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62c40ca-c1eb-4ac0-b56b-60d4b27fe609",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f30dc-1a16-429a-90c4-c542c156214e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d35766b-ee58-4205-9981-fe93eb0cb27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1acbe8-ec1d-4e00-b96d-ff81b690d748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0318f7be-27e3-4d5e-839d-66a9238a45b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2d039e-0819-46e8-949c-0ebde10aa83f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97d276-897e-4d84-97d5-070009f36928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71c0046-9a74-4772-adfc-2d4523d938c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ce82e-a6ee-4ac3-89f1-9369516643d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a505fc-1ff5-4d93-889e-d54f87392964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a85fc71-009a-4ef6-9b54-fb56d42a64c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799ea60c-05df-47aa-b6b9-17f1495f6c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34032d82-8313-4dce-a6d0-409df236b3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0fa959-9313-41f7-b781-bc2081c5d153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b097d8-701d-4ff4-bf71-a7f4210700da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e9ee01-dbca-4421-ac66-0c7e5ceae657",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340a7e6-cd1a-4dd1-a4ca-f5bd81edfb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978db993-bbef-4e80-9dc6-1a2c8b4a2598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75783539-f985-4c2f-b04a-36fedf910f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f006eb0b-4aaa-4f8d-b56e-e274bb0283ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c2e326-4f6c-4153-9e00-c89199f153a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa18c22f-35b8-4b6c-a33f-e210c896f5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aac9c9-2d6c-4237-9cba-41ecfb172b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c670a8e0-be15-457b-bf03-34cb1f51751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7226b95c-5a7e-42dc-88a1-2691da12298c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b48d16b-1012-4704-b0fd-a034569759ba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f5cee0-5885-4814-9230-dd8c6f9b632d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70741870-f39b-4cb6-846d-50aab0322a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b8c7a3-ce0e-4882-96a0-f5bbb86340b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa738f8-4466-445b-bc86-5a46b030f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80439599-014a-4332-9a64-f0c8d90b638f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7e07ff-81cd-4606-a887-ae4e5dc14137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc48d93-adc5-4fac-afb9-e5d21369d4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5009e42-e723-4a81-bf23-520d61d8e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce3c296-1119-4aa4-9181-892fad9a8ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade19ec-545c-459d-bfe7-a1e8c900aace",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08a4600-e595-4f5e-a770-d69d58f138d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41589b33-65c8-4b9e-aa08-bc412bb253c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc629332-8cc9-4ff6-892f-19b871c14161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "210f0e88-2a7e-4e2e-9fe4-47a706d9c460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3201b2f-45de-4ab3-a281-6f502364bcb3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0ad147-77a1-439b-8d92-593d5a2c314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e08a2f-5d9e-42f1-add0-e5a872db65b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397c2942-2a40-4565-8498-c7dd6f47713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5097867a-23d9-45c9-a851-1179511777d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f789ea54-dfb4-4545-aae2-5da66a2b711a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7a4d3-f51f-4096-bc2d-343665d0dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de499c7-c974-43be-8dac-aa62c9ef2bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df5457e-c514-42a7-8371-4c4940444e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41ea978-883a-4ef6-9d2e-bc29dfef288b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21289e33-654c-4420-b726-8b2897f2bfd5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfa3bdd-ff28-42d5-8381-fb59ed8d03c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4b9df3-63f0-4191-9483-b370c9872cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480aab39-deea-40df-8e51-0a8e7a03813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d8b667-b3f2-4d79-a444-8aba673c4dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a087b125-d5ca-477d-b7ab-7fc80053eb87",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad9828f-219e-46be-8e65-eeeb13cec82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bf7670-b5e1-48c3-834b-45937557c1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4036b1b1-77f8-4028-889e-19ae42b3941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5bdc9b-9cfb-41e9-842e-ef6bdc9a185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08bfb5a-de48-48ae-8083-835211001546",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b24e5-0b98-46e4-aaa2-b3ff9004d474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f942aa6-8061-49bc-9922-7a37179b84b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b72f34-b2d5-484c-a76c-42447c8ffbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c982cb0e-cf15-4311-a1e9-2f3a70de1ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7d7aec-3225-4e2d-85a6-9693a95f8b8f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bf6bdf-da71-4377-867e-863f7eff8769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4db96b5-6803-4da7-93ee-ad8b77b15b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac8170e-0c61-4479-bb03-d10601428cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96efbaa9-bf68-4d78-9df4-5c8f7b49264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f80dfa1-d9e3-48af-9be9-fb1f8ac8ff58",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00237679-d5ec-4cbf-9213-6573d94e9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861015fa-2e72-4bae-803c-bc98de12b5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b9cba-6428-4bb3-8b0c-c63fca19e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62dc2069-d590-44f6-bd37-ac7adf4ddcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fdd4d2-9ea6-42ab-96bc-dc129600543b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a87dec4-ab61-4a51-88f8-7d1166b132ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eae473-c3d3-4d25-87b6-71aa1e7cacca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3f58c3-f73a-4e78-abd4-d50efe17c97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b4116e-f203-4927-b266-5a2ee0b09ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2787b9-bf06-4b92-aafc-4e00388e1f11",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a91f139-d9ee-4ba4-81c9-aa870169fd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734a551d-6436-4576-98cb-368dc3b3fa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744f7bde-cac7-4845-8719-3e8d673ba98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8882d0b-261a-428f-94d2-18b34b766716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d16f9b1-e803-4fdb-97b8-e08d69a689a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bc5541-10bd-4b38-8d38-be63f26c9ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259ecb6-154c-4ec1-87c7-cbcdfea745d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff6711-ceca-4f23-94ec-2eae3cf0cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7134a2-348f-4590-aed9-fe4803a7ac55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd8eda-e28d-4334-b249-b8bf047adf44",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb33c77-7d4d-410e-bcf6-e45a40e8ba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b2a6bf-51ca-44f7-a235-22f61935f397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a810ef-2e7e-44f4-995e-9b32e7532894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e86686-ecc9-479d-97db-f727a2264c5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a16aa26f-620c-4d55-a36b-d8c2f5510be6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "635e1472-1c16-42d5-8133-a10e0c83f33e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c59374e-82d3-4315-abf9-4570519066d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a41c6fdb-ca4a-4545-a950-7e784f654e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfb0dad-3717-4779-8b47-5de56112714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8294a2c-3869-4cf7-a525-a3ee37b8627a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b72d909-3fe8-4c00-8700-5239143aaf3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb8b01fd-0ac9-4f0f-8670-14631c0626fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f2d589b-ea67-492f-9c6d-2061af1ada4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7fbc1f0-58a9-44e7-b883-5761f3544da4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "568daba4-fbf8-4a87-93e0-f81809ca899a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88459eff-d0ee-45c8-ad75-ee7de25461b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9cdec06-8ed1-4bf3-8299-bfc473ecde6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f33b4703-5131-474c-b502-9dccc65f9ed1"
            }
          }
        ]
      },
      {
        "id": "30c4f2ab-97f2-493f-b57e-85f7c0f735f9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "981ef94f-548b-4dd1-acc8-4adcaa4eb12a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b01f394-09bf-40f0-acaa-85d44e8e7e43",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb21a2fc-ab24-4505-b8b3-a001f80f7cb2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc838d6-2e94-46fa-b15f-ea81667fc354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49173cc-280a-4028-b4a1-da6476b8d8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d30e432-a00e-4311-97d2-e162cfbb2007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f385280-e4d3-4da5-9b5d-7e6c727a63d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243c37a3-5bd5-4c3c-994b-f7b3c8885db2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f263411-76b1-419c-a8d7-8802c1bc2c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edd0c39-3e24-4804-a868-696b65809d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec9d1ba-4b11-4504-9da6-40a7b331a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4055d2bf-b4f5-4f44-9742-747b787c9dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed15d6-3b84-4f47-aed0-3cad0ae13a21",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed51755-b63f-4578-8586-d578a9307bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c689f288-2ecc-4359-a76b-56ad97ed5a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ead2001-8d1e-4e85-8699-7c8800ebb1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84198ec-5e9c-481b-9cbd-9bb4bf3b726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142f62f-5b13-472c-b87c-2badba51d422",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8718cd-e185-4f07-950b-be0b0662d58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91ef5a6-f596-4dd1-ae28-5f62063b5279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef670f-2c96-4771-9bd1-e0a08aa8e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b5e1dd-15f1-40b5-a484-e01636dbe6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e618aef-f36c-4196-8048-93000b3a36eb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c64666-b904-4c19-96ce-558a80aa0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eebb9a-2284-4d22-9ea8-fbcdae9a4cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ae4d77-1cc1-48cd-905c-110fbb782d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf77f84-abc5-4115-a388-749ac3c7bb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e003460a-a907-48b7-9989-d9d4b502d2ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4a59ed-2d05-44ce-9b1e-9423f1e67387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb0c9d0-7bc2-4dab-b046-02ff0333b599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456ececc-b527-4110-b9df-bfe1803040b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32cb8613-40ee-43fd-b553-b34a2022a6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3964e70-b808-4cde-b78f-18f8cb790855",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6270eed7-8f84-4fde-bd46-503d34ad42c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed087e8-287d-4b90-bc89-b20cf9576138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546d461e-2560-4d97-a86f-759a70f678fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83914d51-dfca-4bbe-a4fe-8cc95fa31b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7462e3-d87f-44c8-9ccb-fea4ba96466f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d239daac-f25a-43bb-a8ac-41abfe80c157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92516e0-2ae2-4292-b619-184117fb5e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891144d8-fc87-4b75-bf15-b20ec15ee77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74fcff6-728f-4064-9d4a-28d6b91061fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9215f2-b9c9-48e9-887e-85611d8c5633",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c794d6d4-f84d-43f9-83ca-32cc0380dd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7673888d-b63e-4f36-be0f-fc261eb87b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d232aa89-3c72-4984-9d19-67757ad84dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dde82c-4076-4de7-a201-975dbac702f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe45673-999a-4915-ba6c-db7e68c6c0ba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53d48d-bbe4-499a-9f39-bdd01bdd185d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9402e-1791-4729-9b6a-89ef62cd1a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331553f2-4e65-40c7-b641-e1de8ed5ba91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0c3f88-86b6-412a-89a4-b53ddb1a6543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93720716-6a0d-4c96-bd42-17ef6ea607a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70f8f4d-72e7-4cdf-a145-b205ceb56020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df40663f-8536-4507-9973-0c9b13828e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33348f7-270c-4a83-99d6-ec3034506f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29ac7bbf-0d71-40fc-8fde-0a3f697c6ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3b8ddd-1651-403a-84d4-9e9fce259b2e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcc58d2-9ba5-4a3c-9354-d6a57a358e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e033cd7c-465c-4f56-889a-465007f4fe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae281cc-8fd1-4d50-bd2e-d3edacb33a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a80e5f7-e848-44e7-aa34-f8df11930090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e040f68-826d-4686-8a8c-b3b2077cdf25",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baa3575-25ed-4448-9474-317988565f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7af9fb-514b-43be-8beb-4d914dded1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94446845-aec1-4a94-95b2-b8b6c8cc34f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e254fc7-3662-475a-bf27-cd12e81568b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee1e433-35b0-4b05-be28-91dd45694f13",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec24b1b-3f52-4f41-9a49-3b6b87c57739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a138d384-fe32-4038-aee9-d389d7d6e718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49909239-45d8-4703-889e-f70c2c1d6b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7a5efe-3d53-4bea-b2be-a075cbcef0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe9da2-9cab-4ab5-834f-2c1c1bc47c51",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3aa5b3-b25b-4d2d-951e-4a54f1397607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe2ee02-01fc-46ae-8752-096f23f649a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcef298-d09c-4c1a-9c9e-966ec2e8a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf35d0cc-555a-4758-9ff1-5476f6d841df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12e542-9f1e-48bb-9fea-839ad4f09d6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44895b4-e721-4ab0-b1e4-383ae5b38cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def9184a-616b-4560-85d2-ea45cf5a2d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22b49c1-c5d8-432b-8556-e534f8b1dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9a62db-ed48-469d-ada6-be64d532ac16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5bfab0-ebb9-42c1-b7e2-e7538df0a6d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657158c-0d98-44cf-94df-a221f5cef56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16d518b-b089-4c7f-84c4-d7b0770deae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e2186a-8373-41f2-b899-dc2c96beb226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f48fbb-2987-43dc-b564-420f340a931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c70aee7-3306-4026-9396-9c3e634863c8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88726288-19ee-43ed-a7fc-c3f3238fba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bb02b2-d5d0-488f-ac56-3c59f568a8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b005058-139c-494d-81cc-2f556da85c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5705b9dd-4e9a-4f5d-a68b-8567cb8823d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62056dd8-a36a-4c6b-823e-53065c2448ba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ff4b90-5b6e-4bce-a465-a4347d6bff9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f47d49-95c7-4704-8906-8439e3174d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853f53e9-17bf-4b87-82ae-d20e4958a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "594b9621-c33f-4fda-86c4-f15e7365ecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ddb7cf-6dab-4b2d-ac31-e589e3cb3561",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096ddd1-64d4-4538-84f2-1448e023bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88c2c4a-716c-418e-ac3f-907dc8f736cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7e8961-8a2e-4dc9-875c-950a37e44cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0eb94e-0fb9-42fe-aa18-dd9c5181fd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8accc93-7d28-4fdc-b295-c21bb57b0131",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf19682-6b84-443d-bb7b-12cdfa7baf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29e736d-fb23-48df-9d57-62820ac8b555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73056348-3556-4005-83fe-ac0b0588d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6450c213-f699-4b63-ad40-79ec04dd9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42715ed9-3d5c-47e9-a7f9-df10fe990ed3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e6e283-1c01-4ee8-b7bb-61d20b95df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d744614a-b10e-45ef-94e4-c56657280a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87575b-81e6-420e-b1a4-3d585d1909dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c31d615-b314-4aa1-9555-ef5be2734589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb16f11-4cfa-4e10-86ed-aa1fb04b51f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bbe350-78cd-4c15-b1f1-09db08086bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5122ab1-b854-4be9-a68f-67f936f044e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0c247-9d97-48c3-98b7-409867d4561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10d57ab-98df-4ba2-bd28-04b1ef4ca137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0222e0-74ad-43cd-9bea-36b30dc079cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f42d809-86c6-4838-bd1b-77053fc81d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812f8e3b-fcac-4991-8998-702b51284ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0e4660-990a-4385-a200-88c1a8901c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a43ca4-908e-4df2-9d65-fa24af275623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4c1b4-8ffb-4ee3-8047-4bbe46f7ccae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f94b54-883d-44ff-b495-dd9366168c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122db8bb-9c73-48ac-9310-916bad742c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad5fd8-4885-489c-a736-34a8e051d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5242437d-b9a8-49d8-8616-e00e0a4720e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57dede-94ca-4e69-8dd5-269c39a12498",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2877f070-b2c7-4f22-b694-a8b1a25b447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb35b0d-12be-4249-94cf-5afd3b964f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c321d939-f32e-4fb0-b86b-6609bbd97395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b68412-8d85-45e1-99bb-05026475010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26552ce-a7ef-4aa9-81b2-e033016d665b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d877ac3-baf9-4422-85b0-fbb909219d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb632074-5629-4cf8-aad6-fe7ec164fb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2524df2-11f6-424a-96be-5d6626874108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6182b3-a548-43ce-9e42-7c9181764c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236ca1a2-7a06-4e0c-9cf2-baa48579356a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496b6e2c-2964-4cca-a0e3-c444b3a53a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0ac0ec-7123-4f26-829c-91f10e76b1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb7c046-7ee2-4b27-b89e-d53bbd7e5b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fedb885c-bdde-4f20-8b05-1bc627b5c106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc61771-792b-4d85-9d59-162a5cdefcac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55238c88-4cb8-438f-a9dd-30a7f7ffbf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3a57a2-275a-4937-b23a-da7b56f36468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8779585-c038-4d90-b1b9-bf027e0b7938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acdc7422-4266-4c2d-b5cd-f193cd83a443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a534ff-d5d4-4c07-8957-098b3a762913",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb2aa27-1a50-4eaa-86f6-987bb7ccd9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac55244-a120-4bdc-b444-963827f377e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17c9835-8656-40f8-9f5f-b43ef0d42a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bffb65c3-2ca6-4603-963b-11340808ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77300533-0142-467a-9020-642f6e60ef60",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a7d2e-480f-45d0-a771-f221b1eca1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b153d6ca-1641-4b1a-bfa8-877301ffcf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d3837b-d616-4ea4-aa50-39145094b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7a8a1b-84f8-4cdc-b6d3-6d1d2ae9df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e40040-28ef-492f-a610-18711d49700c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95b8201-8802-4468-8e3b-11f1b2d6b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c8ba75-ce89-44f6-8b1f-c980af06552d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0b337f-817f-4b94-b330-27d8dd8f8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0edc26-c530-46c7-b29b-1b66c103215b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c769153-519d-483d-bbcb-b773393300fd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c93a8ab-e63c-4466-983d-ca282d5b215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a13f9c-b126-4c6b-a357-eb5724c098d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d90cf6-f2c3-4391-83fc-e83f43fd7de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f27243-b244-4af6-8e72-b236b964f8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1217bcce-e2a0-47a4-a8db-8a400d66912b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8058c218-7373-4508-ace4-c45b05ef53c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1b1410-b268-49fb-8ad8-4b9f97f8343d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2277fc-6b22-45bd-a952-8c27612017fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6646f2-2e26-4666-b5de-f1a5208ba77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a58064b-b00f-4b8b-a624-f99aa977f1d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612c44ae-29be-4c76-8497-9b0929d970a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3c17e4-9cc7-4df5-8d89-8b717e93078b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea5f72-694b-4491-8a9a-6a8db69802f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3f7b7d-25c4-4248-b9b4-ebb2343f4760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4628cdfb-d699-4abd-a9db-04211cf04aa1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e186781-2fcc-4e5a-809e-b450983487e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f578439-3a6e-42c1-8f29-44d9597d436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7694af57-da81-4185-8759-135815d8e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c990959-7c16-49e3-9dcd-fbd6257a82e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c7270f-94fd-430c-aea3-e0c0739289e9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04931ea-7c8e-4af8-8ad4-5e024bcada5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51a1630-e5f7-4b84-80d2-4820be1c03d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4e11d4-808b-40d8-b915-bd44cda39cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b98fb66-d257-40fb-8540-141c373a9952"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c067d49-dd07-4b93-b318-72bcfc193551",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04f3df18-2488-4833-b24f-43af0f8e9bc9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ac6fe-a117-44c7-a0cf-5ad8dac83c59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b10a3f-f590-4425-a262-d6bc55ff1421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59622331-83bd-414e-b769-bb08d8f6b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef9a7e22-5945-4812-9ccd-f942bd4e7ff9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc171e89-f46e-4f54-a86b-691e8df93863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be776eb9-ae19-40e4-84e3-59cd8d41909b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfb16d5a-2e60-4fa3-9943-903514a23f64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "152ff598-ad68-4837-8e62-39c168de2d88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9993e57-616b-441c-a0e6-abb719a71f3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83244598-1d2c-4bef-9690-201a8c443d75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6682bf0-e72a-4c78-9bad-dd2263225b50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c09dffea-287c-47d7-9fc0-12a6eff85c40"
            }
          }
        ]
      },
      {
        "id": "b3e4e393-b4d0-4e53-9e6d-59b132609aed",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9deb91a-ac13-4b60-9f00-f7c748561978",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0eba793-b1a1-4a69-8e10-984a0eb2de50",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "211dd5df-8d6d-4edd-91c3-cfe8e121f916",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cf4aff-ac80-4eae-acdb-67a6a550541c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3861542e-61f1-40cd-bec5-88a5cf6b525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0642c7f-5543-4e12-a0fd-f1d99f5b5318",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04191228-0229-4a29-ac75-59ed6d89e6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196085c8-0002-46e2-ba3d-d6515f69bf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db439b-ade2-4c9f-aae3-29d70f541910",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59521d60-6608-43ac-bdf7-4a1a2433c863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ff6c5e-3524-41c5-b7fc-7d18425f21de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6777a997-ae10-4ffa-a683-c232f34221bc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5e6091-1331-46d3-b8af-dfac24396866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f908bad-b3f0-4297-9795-516a19c08522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b9b061-20f6-4cce-9f62-50deb0021b9e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adebaf6-7d39-4fb0-a69f-24b47c139c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d4d2c3-50ab-49a6-a37c-980d03e8653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fa64f5-1961-4e06-ab24-817ae348d47a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7250cdf-f3f6-4b72-a93b-11fd11ab6516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7962442f-0912-4b88-865e-1d9c37af7a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec64afc-ba07-4069-a299-e30bdd327979",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0358c5a-d9b5-4fec-ad58-0d1a0448f74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e509a4e-9aa3-4db1-a4ed-eb3a9300d5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6fad98-dfcb-42e6-b173-eccd9cebdad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e348b2-d8e9-47b1-90a9-765b71be138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a196249-3234-4383-85ac-dc97ea6af37e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7946666a-913a-4bfc-801c-edd87523683a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff668cf-dbfd-454c-a269-e089f82c5663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa77d1f-09e7-4d86-b8c5-e747720a412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a597c8-1ccd-4f3d-8075-fe89569b1d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1d3a88-e5e8-46bb-ac8c-1bc9eb131baf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6febbf05-369e-4f27-91fc-4ca573959ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "645d17a3-1b5f-4bfb-92fb-81389c51c034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ad8a9-053d-456c-9a85-f544b5be1b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82166aed-3613-47d5-9ae1-d1233dc4b683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5215f428-9c53-4149-ab2d-a15f429c0611",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb5402-81a5-448d-b3fb-846debb43086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28105b5-67e4-4632-b296-2d5cb51f0700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7115e6-2567-447b-ab8f-1f82a5ccbf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be74749d-162e-4cff-bed8-984a21cbff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5531f88c-bd73-4fa2-b50f-10f6d577a5a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83a7898-e713-44fe-84d9-9d3dd6ac8ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22256cd4-f520-4ffd-b98a-2adce815f12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a074cb-145f-4dd4-bbe2-317bb68f2ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fcb820-2c02-4cc6-9d9a-e30128765fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e7a8c-a44b-4439-a9ed-f6f083b3e28c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ab6211-e596-4698-b0cd-196b533307e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569af639-5286-4f92-a8ae-bbbc366bc30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e60d88f-e037-46dc-812b-e50f667b6488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b2a967-5299-4033-b2a9-e17c4a572a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23180ad-4852-4daa-a2ad-bc9901556400",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dc31c0-fab7-4b0a-88a5-1c88e30061c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44ae470-e1b2-4198-b25f-94c76a07239b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f69b93-9f5a-43b3-8500-ffe2175f402a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198faa2c-c851-4262-8c51-b243aa3ced44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f561ce3b-4217-43ad-bcfe-4f3375ab0547",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e3b1cb-c795-4626-9956-e5b2a2fba84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd427b44-56f9-4db4-999d-affbf3b31993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb5b7b-2af0-4e4d-966e-5bf2b3643bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa76003-d5cd-4863-9f49-b21b8e3a1f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4677315-e26b-49ee-8fd1-17e794667cd2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b210ec89-6afc-4fed-9ae8-4327d123ab94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e0a803-5582-4ba3-8f53-128fdf111ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b1fa9-2edb-4442-89f6-e51139ad55dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26983e56-ebb6-46c8-9fa1-c7ce12071d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c6ddfe-1e66-45c0-bec6-6d5a8341e28e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3993637-2755-4e25-abfa-b647b5843e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1af955a-8ec7-45f4-86c1-ec20f5c974b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f96b23-b8b4-494c-ac8b-e3bbb98007c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197bfdae-8d2b-4361-9463-b32487be89f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae6ecf1-8eff-443f-8838-a36744ebe93c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af037b95-0630-4803-b007-8ba6d19ba7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd7e783-1b17-4611-be6c-c815754f6f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d20f9f-11aa-4a1f-8523-9a21259947a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7707da-49de-4e3c-b98a-9445d64f0b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0e5c8c-f60a-4677-b545-8ab5b58bceca",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a99deb0-5cbd-4706-8998-943f7374c823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce78654-e86d-408b-bfaa-996036277ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef28824-8963-47aa-a0f0-07dd5378e365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d7adce-0937-4aee-aaf1-3d6336ad49d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830af318-8bf8-4bea-9d79-a8f455148a56",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d10941-ddc4-440b-9917-558cb21ce52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940e92d6-2ac0-4539-ad9a-26e6203ac086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e190c4-2400-4be0-b58d-e711a1821c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025158ef-ffd3-4276-ab8b-3efc2085b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2e19a8-d7b2-47c0-927c-d3fcc8aa80c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a95807d-effb-491c-aa2a-93ca235a51bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7849a5bc-038a-4aac-b73b-ecc532c95ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96708ff-9466-4764-b60c-f5784affcaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e3a834-a0f7-4647-b4fb-69a844c7148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f66379-cd6e-46c9-8a79-c43e465d6801",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90dae69-707a-483c-b8bc-5b5802198bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6208842d-8dc6-4b27-ad93-7b066cb8ddbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd15f6d-90bc-49ff-ad93-09f926701432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d6c7d8-e3c2-42a2-aa29-2e64cd9fe51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090aeba8-1ece-4b5e-be9e-284236440fd7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd593e1e-1661-4bea-b524-8063b073e01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e59082-f098-4bda-bf4a-72e0a7759357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d02229d-272c-44cf-854f-0491a095e242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266c1059-b2a2-46f4-9717-bebd597adcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa7d8a0-3a52-41ed-b5f6-b17aa95f13a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212a167d-5658-4995-a055-aea91cf95728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cae9df-30d1-4f48-b7da-73c6192df5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d71b18-841d-4931-b23b-93645935647c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96858e76-3cf8-444e-aa49-037d99f07989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cde473-b17d-4aaa-bf28-e0b15d738649",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc5798-fd08-4508-939e-5676f4b27bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5f5461-b165-4c1b-a7b2-5707fd514afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f502c7-ea4e-4c82-a166-1d23ef1a4689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728fc823-2acf-4014-bec4-b2615fd6b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42cbf05-a2d5-4468-a104-95729d03a22b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2a1fd1-5c59-40ac-ad39-615f8427b628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a30343d-7206-4188-9673-994666890a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b9cd29-fe88-43cc-b4ec-b7254ddef6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ef85ce-b1fa-4bfa-9436-d4f525355ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9d19ca-03a8-44d4-9ae6-8cec120cc30b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492e8282-5488-41b9-9918-441d599a1710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4656edb5-034a-48de-a3c6-4ddf6191a25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2197f90b-618d-47e3-ad9f-e05918288a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ea9447-fbc1-4709-80b3-708491134315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847f0b4c-7b40-4777-bc61-85ff0538ea91",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d90388-663d-489e-a14f-ac59944e5bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d9ea39-d0ad-40ed-a692-983cd5d416ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b345ee93-c8c9-493d-9def-b2c3d68e6484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d20fda-9a69-420a-8144-62a827bcde04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da343f71-8a9c-4590-bc3d-efa76790a44d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee112f14-1855-4a4d-a0d3-472d106863c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7307b28d-7734-47d9-b6d9-131c866a0ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee3b6be-540f-4e3b-bce7-23ca9bbafb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024aa223-1bc7-420e-8bb7-22847348213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0233480-b8db-4a8d-b889-0e82d69236d2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d219861-7849-45ee-a3df-f054db7271ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f64b66e-925b-4637-a30b-214cd937c070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f28590a-9acc-4dd1-8127-694ae2b66608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7def6d05-4ae9-4aea-84af-3def343cb6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b728dc4-dbc3-49a9-a879-352b1a3efdf7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff90e328-d6d6-489d-9c43-546669cef2b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55893b90-6e14-4472-84c3-fde50578e8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f11477-3891-4d25-8a6c-1b5b28bcecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbb3692-044f-4916-850b-06e04a453bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb78227-4e9d-4264-a876-ce9bf9f20cb2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82cf781-e985-4908-ae2f-8b19e3169720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82e013f-7760-4d39-8d50-be397ffe4d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cedba4-ac57-4226-9fd5-80d633cc475e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b84888-a707-4a7f-ad72-0b153d2c4c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d5a504-471c-4f5e-a329-077c88680144",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e3ca7b-0ccb-412a-a54b-830304c089a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232e43b9-2ed2-4eca-abe6-7f13ce5d84b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f211cd-1616-4d5e-9b97-2a3225cee87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3159937-c265-43e5-ba96-4f6c7fb2222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc7e9ce-35d2-4e9f-86e6-78c42dbd6b84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d0c79-3d3a-42ed-8965-83bb2e57fb54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca47a6a5-9694-4501-8370-1de2a74eee01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0ec5a1-8a1a-4dce-acd9-57bb33bbb952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac92e9c1-564a-442d-be4f-3c20a437cc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d8baf1-7835-46c7-9309-8e801ba8330d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746da130-bb5d-4474-b485-4bb9f6b5ec12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f83aa7-59db-4a9b-bd62-15b7b8dc394c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f041ea32-e81a-4be2-b3b4-be3c5ec3bbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6871eb-da50-4f5c-bbf4-0708a61ae9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144a5ee8-a87e-4f9a-8986-89e139da765b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5c514-cab2-4df2-9f17-f47fefecab32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc89b7ff-97ce-4288-8279-c1ed13bf5446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36bcc4f-84af-4fd6-ae6e-99a81ad7b6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63abb3cf-e29f-4713-9fbd-fe8910e5c9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45155cfc-58f9-4dce-a913-caddb0366e1e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b301e19-e2b2-42bc-aa52-6e7d3112a3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb4481e-4e17-4219-aa57-1b019a8204b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1949bc7b-99aa-4484-9adb-7304324581d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1d37b6-9ab9-4263-90af-1376ef29826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d054f337-5460-44ed-b2c8-bb7804c9c88d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3def5-2c76-42d5-803e-adb3e7d06ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4d7a74-e791-4fce-b830-8b2440f0546d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acceb498-02ce-4fdf-aaca-a0c56f347586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd9bebe-7207-47bd-98fc-b2a4884fa059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8eb29c-417c-4fda-a311-ff186286a1ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f028a50-6959-4d5e-bddd-a2c76529861b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27607b55-b8d4-42f4-8889-882eace0e933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65166da7-0f54-4c10-9032-010436d70f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d181b87-71b6-4f8a-a719-453197d032ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d2b5d9-4f19-48b7-8959-41276ffb934d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ead61c-e6f9-4aa2-9331-0ed3dd6d8fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47062b5a-e3d2-47dd-acea-95d808112a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0cad3c-f12e-4270-9872-9c8416544fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916d8ffb-473c-46a1-aef7-be1e43a3f25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb98bb5b-ff10-44e6-8a33-3a79c81548ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0155a-cfdc-42eb-8318-fc3e217132e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f95c0f6-c95f-47b7-a832-dd01e2ab49a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91762894-2aad-4f5c-868c-f660a53d3ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee643f6-015a-4b73-9683-8308c8a84394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159b7149-d623-4f47-8c92-313127411cd7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c04f22a-aec1-44b7-a36a-db529efd7ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68592b7f-744a-4e0b-9eb9-41f4cee80de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639c39c1-d6dc-4c52-ae5a-360f66c653bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7071bf7-07a2-485b-a0c7-e843441be12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6802a27-d1bc-475d-85bf-d3a03d24cd64",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26ba07a-38a8-4bd5-a0ac-116e88711767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19307be7-8a74-43bb-9715-a35b859d5f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c27025-2846-4c88-9acf-e88e5039eb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad8020e-0d15-4d97-beb2-522ac51d2f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c626d43-4017-4975-8b3a-47f2fdaaa33c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c121775-5fd8-4cf2-ae16-7903220923ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6461dd83-edb5-4225-8549-28f1c0654306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d82e43-6ea6-475e-96d7-78260cc6a67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c804b13-f269-4bac-8016-9b621fd06a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53dd74a-a256-4cd4-ac84-40b9bcf53b80",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef299b7a-abe8-46fd-90a5-70b0395f169e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052b8266-ca4f-49cd-bfaf-07f9a081e57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aa4383-1791-486b-89cd-06004d07a35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898298c3-daee-43be-b74c-ea8ccdcd0bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e577e39-cfeb-4732-8566-c8426f66e6ee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b585a4de-ad24-4030-b040-80c5c304913a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c8fcc2-918d-4089-95e3-d2e19dcc9d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d407dcb0-5e31-47b3-9bce-ca7e7f9c72c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ae0822-b9c7-4130-a196-28f29a24d0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0155168-0bc6-422c-bc97-1742c76978fc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe7ee2-40c7-4577-84bd-333a0c4c8653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76882eb2-0db5-4a7b-9231-3238f8df68a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6efd2b0-c2f7-490e-871d-fe008c786061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373f47e3-06ae-433c-954e-e4bd4dd628f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb284808-f87c-443d-a1dc-c9a89917c8a1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f482ec-7d7b-4008-8e47-8e222ac2b9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113abb96-3fe4-4fbb-9655-dca52dce5f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7c43f-0d0d-4610-9e33-15a6be1b4cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f627b11-bc56-4ffc-b650-762549edfe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8105ee-d275-4620-94fb-9f1574e7c7ef",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ce3096-3b03-49ce-b5b1-47f426eb0f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1c1805-ffe3-4a5b-a053-c56a411c227a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded7a4f5-a981-498d-a45c-7f7af29b71f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fa6d2d-b2e0-4128-919b-1bab397f2fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561ff049-6ac1-43a9-ace2-138f614c0183",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a247bcb-33df-4478-a341-32f9f8d0fdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fd8068-eb00-4e4b-b0c9-e6f13f4b50a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f616dbf3-2f52-4798-af86-61ac9b0a64ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41744cd-48f0-4048-8d60-fb0fafae0129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecfc385-5969-4cdb-94d2-d45f98a1dd5c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22118a84-c946-4cd7-85bf-b58e9187360c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d088f97d-0bda-440e-a211-52693fd82be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722dad95-542e-4ddb-921e-ef8064f7df49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2350c7-188b-48b5-b846-99f55ae32b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193ae10a-1935-4d51-91ac-b62727a2c5cd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f377f473-c485-49a3-bd37-4b425d204849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65a448b-f5ee-4182-b9e3-3d29d7373dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73a9822-7d7e-450e-a85f-42a58ed24704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5de854b-daa8-4efd-b839-f8eb30363fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0b7b3d-b0e1-4f35-8462-4db6b875f03f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc45454-a07d-4ffc-9abd-bedd853570fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a49e1ce-2851-4c8a-98b6-21841e7f55d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63081363-bca2-4790-983f-543982e30fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca321d1-2083-4e90-8705-92b23620b8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a11880-4112-4b9c-8450-010a8bf584e8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89ea12-b08c-4fdd-a049-af09106f8d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0fb732-22a6-4065-9b98-d5a436838267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3761dc1-c6bd-4e37-99ad-e58abdbcbc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d182e21f-b134-4221-8d1d-8347d46a837e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea631c8-35c2-4228-939f-bb4410c1fbc2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2f2345-e406-4aea-93b6-4f8b84676de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bddbc50-7dec-4015-b542-0c1fa76b4e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1e028-3571-4fae-92d5-ca47ffe62cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517d31b4-f898-498e-8896-b287e8f81c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc357d8-3a3a-497a-ae34-7b90c9e7edd8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a52898c-4803-4994-8b4e-868c83d89856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d153c7d3-c2c4-4777-84b0-6276c852a08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f92fa0e-cc45-4d9a-bbe1-08e6b49c33b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6667d4e9-ff46-4d46-bba2-13530283b26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c956ca5e-a35f-44bd-a738-9b6e2f7f499c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde249fc-3577-4c68-87cc-a2cdb20def9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef154ac-db2b-4021-bfd1-ef2cc18f78c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6479ba-2ecc-4586-84e4-e4d0f5968bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ede01a-9d97-4558-b4e5-8d17edfab678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6875c785-940b-42fd-9bee-4e7afbfce94e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c7fa57-4dcb-4bc1-9fce-e64771754b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aba83e5-5c8d-495a-914a-5739ee2acfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b757c99a-7172-40c4-84b6-636819202ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5018886-073c-4411-a600-a375b396d5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2f544e-0f3b-4e8e-b4d5-68dbdfc9f6c1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2662817-20c2-44ee-bceb-e44e76239195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbce0ff-70cc-45b4-9198-d2e079de8528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606be271-bcfa-4090-9197-569dbd3666e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31871c4-a7f1-4cbd-874b-159e34beda4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533032b4-6b1d-41b8-a001-ca40cf51bae7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d20a6-dc2a-4d4a-9726-18b389f46fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f97c0df-5f81-47c4-8256-4fa8dd555efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e83b0bb-4080-4308-ae30-cf0044b1f8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0145f5cf-908e-4e29-83ff-d1ae64b9f576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1c6f8-f8dd-44af-bdc6-e490a04c980d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbd7544-7716-41a4-a24b-832139143d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43048e54-4256-4105-b0cc-41d5dea2e5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de73613f-fd61-4d86-bb9b-f767b656d9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed913c-b9f8-4796-898d-75af1251456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3f080-84ec-4468-85ca-141bf53282bc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873cdbe-dde2-45dc-923f-7803ad828659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4425edf-02d7-4aeb-b106-05fdb4e84374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a2715e-bb2c-483e-b4a3-aa79477e26ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e5c14a-72d3-4018-bdd0-f85c4421506b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7d3904-2b03-4fcf-8e10-04058d3b2dd9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df8a1a-f948-48d9-b3aa-7a9ac49f5725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65a50a4-a989-4a57-833d-23cdc2fc4af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2bdd3-02d3-4108-ba9c-3d9c6acd9210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bc91f2-f64d-4e82-8d39-17b232360764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb78dc63-9c0e-4d13-a001-d4b9bb6f5264",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca810092-318d-4db9-a25b-6ba5e4f16eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a775c5f-5bf0-499a-95c3-c53287b47d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef829ea-5e97-4dcf-a3e2-ac18919977cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac6bde1-b40c-43a0-a36b-047a94595599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f10e21-f69d-46c4-a34a-2c3ced9cc052",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a26ad8-f0b9-414f-9954-5e04eb2b976b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73b9789-25e5-43d3-abe2-fff35d8bafed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d22a66-9102-4bef-9f4b-c85163715d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bab6ed7-ae45-41ba-b3d4-be6f84cffe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b63d085-1891-4c56-b553-7f8004a37af2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ea8293-6c2b-4f62-83af-e91fd7d4305b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa703d1d-92b3-48bd-8ceb-b47829932f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb99e5-e549-4922-8308-f4453f995028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69758333-5b4f-482e-8c1c-c67783957eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b49e92-a7b0-4c77-a4cb-736ba9244379",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ef0d4f-3e1a-4f1a-9cce-75c7c00b8349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b488fb-20f2-441e-a20c-aeaad57c7371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4b8ce8-04fa-49f9-a517-b74cd3de2ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8992d339-f44a-4baf-af07-ac4587d7a7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4875afff-19d2-45d7-a9f0-9c97117922aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f29f27-696a-4ca1-a39b-715a7b9da764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f823ee68-5ea0-461f-adfc-b6e1d6aae752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628eaff9-73d9-4f21-99b0-d2ccb7800bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bf1898-004d-4fd9-8be5-4351639dadae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd65f11-55b7-429d-8fe9-8b273091e65f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab9e434-dab4-4ccd-b31e-5cb3413bc96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bd2aa5-b13b-4051-b13e-dfa7b3a0224e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8357657-8e4e-4a0e-9feb-80ecda2fae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52a2d04-b1ff-4f1c-b084-4a8f8a2d10ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1392de-b1f9-4c39-b96b-d5119d7ef091",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73290e19-7bf9-48a9-86d1-cd004b443718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34149f3-106b-4c0e-965b-bfb49abcf555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848abd9e-e2e8-42b6-bce2-0b49bd8a6642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca47d98c-7334-4f7b-afc1-bd2a5eb365b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c914934-4284-42e7-b7ed-a91bd35dc6a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57e5133-e43d-40c6-b7bc-b360b4b17916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c6d2d5-6d79-424e-ac04-22cda09dd95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e09e82d-50e3-474a-b3bc-926a64dc8697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642b9494-eadf-4b6e-b883-319968a75a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840a680f-3abe-438d-858c-fbaf617fe11e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b08675-ebf3-4f5d-8cc5-3b387c8f852d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd302766-2611-4d57-b8ef-41d53070f8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8155e4a2-3c93-41f2-89d8-35d70ea83a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d08518-842a-4f54-a03d-a1d9978a0589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaba9121-c835-4fea-86fe-061206a0db53",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27a912-5fae-43de-b90a-45815e142920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57476b6d-a759-41d2-818f-efc5145c025e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34adb786-a5a1-4420-88d3-0d9d3f4403dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634c035f-6957-40bf-a1e9-732744030e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308cd5bf-d760-4c7b-bf7d-3fd360773462",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c600c15a-d2f4-4be5-b803-fde56ee50028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d574e7-46f2-440e-831d-295e1ffb8d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad7d535-0d0a-48db-b3d5-9a2fcfb75690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187f3175-0ffe-4d51-9b58-c6ae6ccdfd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9fca64-13da-46d8-9d3b-44686c8fe4ab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03e3f76-cd22-4f63-a073-917e38375509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92049295-ab02-4a21-a677-82a644d5dce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03310aa0-608c-4ffe-9058-0ab4bc2de8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f00091-c440-4867-b0be-67b9398fe7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc06185-89fc-4d7c-9cbc-b2bf1bd08479",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615949f4-f456-48ad-b941-3b13c4550cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98f849c-86e1-472a-b110-f20c06911776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39d4fa3-257e-4bb6-82d5-45c931f5df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12bbbe3-cc90-4c7d-bb81-2cb9630e3c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee01ad3-68d7-4fde-a61e-fcace3b2b548",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc277e84-9b60-41bf-b8a8-d89cd4d34fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d81213-6c55-4851-9009-c6d08f4b90eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a1f55-abf8-4416-8b44-231b0806035a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64f8607-539a-4c4a-a34d-25bc45f5864a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650d6139-75d2-4a3b-8683-d24ffdcf18fd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e960f-533f-447d-b11e-49028d164f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b127803-bedb-4f61-8f9c-dd81a4270f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f22188-ed88-47d2-a3aa-b58a067e718a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33ec0a4-aab5-4807-819f-1c887a37f0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8825ca06-4d34-48b0-9939-5cc62516c79a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69a8bde-a7df-450e-9cae-d84ecdf62545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f460a55-d6e1-4fec-80dd-269970aa5b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0360fa6-9e17-4f0a-a8c6-e884d1a6215c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fa27a4-40e8-4686-a725-369460af90f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ea552e-833e-4914-ac85-0c4b0301b6ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c59a3a-6941-4811-b990-f22d975d4fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2928cf3a-a63e-44e7-a3fd-470fb9d589c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a2ab7-3008-4377-9e82-78e74ddceb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ebb184-f136-4e5e-bbdf-2b6445a81b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6501766b-903b-43a8-ac13-9452b487c1d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8276cb2e-71a5-4bb9-b5b8-47c7e2eb8098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694bdd6e-5d33-4884-9bf6-135283215d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6568740-20ee-46ee-9ac7-c43b4e4b93d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8196b1bd-aedf-41a9-9d95-6c091fe47666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fdd438-3977-48a8-a59c-57ca36330e64",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a6eb3c-1fd9-4b87-b60d-973a11c167de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7893e8fa-c747-4633-b5f6-4c7e7d60cef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb854171-22d4-4077-8586-349fb7effaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669d7edf-262f-4cf0-a0a4-0d5ad860d6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b2844a-a092-4721-a62f-3600b9e31d2c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae944eb-3024-467a-9ef1-bca638a4751b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974974ab-eec6-4bf8-a6a6-f49b331a4165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae8e129-3d57-4d02-bdc2-6a1733e0a454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e21fa9-67c5-42b6-acf5-431985126c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0449e79b-5c0c-4b3d-a23d-f6a3ca3b32df",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eea74e5-e617-4696-a65d-8c241f31a687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074189fb-4dba-4a22-b8bd-5ac76e169e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af01ba-2612-467c-b793-d52439e73295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd5622e-d59e-4eaa-9d97-08487f046556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871eea9b-5066-48a2-a7cd-8c1c4cca7012",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1149ba-646c-4ce4-89f8-1f0071599752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222c7743-11b0-425b-b149-abb83c2bb5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062b0d0d-03ff-40e2-b0dd-5366b568e2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5599be4e-e293-40e3-bcd6-04f2b4551d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875f1e47-4601-4f22-b5e9-c37f85949a4f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf08c1-1e4a-412a-9a8e-d8fc593ec708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a479f714-a310-423f-98bd-c78ae3bf2895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f84250-cba5-4b56-a400-bac273128128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352c742a-41b6-4e18-adc5-94232b115e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3640ad6-0662-4d20-9fbe-2bffb8454b4f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49b1340-c2c9-4bcc-b92a-ac2781c28b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa196937-80b7-4014-80ce-f280a47d7a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca8a613-1524-490a-be97-1d13a9649470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd5c961-0a63-4402-908d-0ed0521db4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dcef05-aeeb-469f-b85d-9869705d41d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275dd3e-4224-4b5c-8a67-ce86b8ca3eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d17a59a-154e-4357-b90b-2f34fb668e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef887bb6-4161-46fa-8021-ead26c221a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74c0627-c66d-468a-87e7-684b62b7d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03d96e9-1330-4e0d-90f1-8e64293e7500",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976a3155-f4af-4182-bef8-89b39e57cba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bcdd490-3d7c-424c-a186-2b1c256d5d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1167d779-71c5-4ecb-bdc9-e04b58a8f5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d4e114-f793-4a8e-b53e-e5c545b3b625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e55e9d6-a3ac-4e9a-a98f-1b92312ff01e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fcfc58-0b41-44ce-b2d9-01304931d80d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78b3428-03e0-42b6-94a2-b36f3ef93bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d04f29-8804-4025-b2d3-cf29b4e9af25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac84f04-6985-463a-88a4-cb6bd3692352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107e8680-4ab9-42fb-b894-2d06a10c8371",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca3bc7a-ee97-42e3-92b8-ddfe5cb4afb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ec7f1d-5b31-41f8-a516-ba817ead1413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2e2f5-a295-40c0-a81a-c41750fbcecd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee60c32a-55ab-4a0d-ac79-569b59198145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243048cf-5cb8-4fa5-b246-dfc28688fbf1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c4abbd-da92-4b26-9122-4eef35cbf493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd8a673-062a-4554-8264-43ff3e32a053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b06c23-761f-46b7-800f-ed307186e236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bb6b60-3aa0-48da-9681-f646120c3f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbd828f-fc1c-4b4d-9fd7-5ef4a11ad53a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707444e0-00e1-4617-ab5a-a43adbc95c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ba2f5f-b3d0-43b5-a80c-67e65df9dd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fea54bd-84e4-4099-8263-e34e5a652393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735e08e6-fdd1-4697-b179-9d043b42d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb3e2fd-0474-4862-82d7-1ec1ba4758b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e522772-e074-4d08-9be2-a6ec51138710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64598ed2-393e-43ca-9799-78047ac0791e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766c242c-05a1-409a-95a2-30508558805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25affdcf-adeb-4719-adb8-ca48a699237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ce0851-7bc7-468d-b95b-d4e77aed79d3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94272c41-a6de-4419-a0b8-7d98156ecc41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf60d59-31ab-4a5f-8a66-795c6c5822db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55590c31-ed7a-4668-aabe-4de910720415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88542799-9a1d-491e-bfe4-fa608a7d7974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec97f5d7-bb44-449a-9c75-54661e3f7f6f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce23daf-6578-4f66-a8d4-a538fa69d1e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61dd27c9-6f81-4c46-85b3-b18f8ec89d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6350aeb-5849-4240-b2a4-8ddcf0afa8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5356689-cfec-4443-a32e-1e6ba2cd7f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe19b05a-f0d5-42e8-8489-6e02ed25091b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b738fe-3c6b-43d0-9823-6d9209eaa4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a45a72-8120-4c13-bd1d-26c8f29bf4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8497252-1796-4a22-bc4e-deca12f4a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8516acd9-6756-495d-b1d4-9576989d6920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0123c225-f4c8-47a2-bbfe-dfd1c56c6135",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01020e-8d15-4a41-974e-528f2add7513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd031154-aab1-475d-8df8-70c41e95b3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be12b4d4-2ed5-4f0a-ae30-26bbf7088a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14967655-2fd9-42e2-ad9b-25bd33885bc1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea5e00ed-7722-466c-95a9-bfd3daef0681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a85b04b-b5a6-4fc3-b9b1-d4418d27bca3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da2396d0-8be6-40e4-bbe4-76aaf9260058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03cc413d-a455-424e-9923-c08918adde38"
                    }
                  }
                ]
              },
              {
                "id": "7b2a2222-d2ac-4dd6-9f88-8547452f03e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0067d2e-e194-4ec3-a5f6-688e31dd5528",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29827b1-463c-4401-bbb9-07b3c5687f30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cc904922-a38b-4675-87a5-0967a16bd76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81524d09-9a6a-432c-9a36-ae9dfe7711d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09e80afb-2832-4343-97b8-21944ca56657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8670dc-b013-4464-aa1e-16d85f3cd492",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0700109-61c6-4ef0-9f90-22dba2390e99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3b6216c-11ad-47e0-9479-cbd7f6b95e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc8facfe-0c04-4a96-b62a-37927b840588"
                    }
                  }
                ]
              },
              {
                "id": "3fa39d12-88ff-4bee-894f-971629e7108c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "111e7a1a-b228-482f-bc32-d5402fd34332",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5cc7a2-6e8d-4f6c-a130-88e06d6f574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "358e9f82-3507-458f-82c7-b6c7960da2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e6b88e-9e03-4fb3-9d87-a434107fbdc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18149a27-2dce-401d-bc06-ca74df3a2df7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a50f522-bfde-4936-a625-43ac246b06cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e051cf03-38d4-46c1-a697-42f861b2c852",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14cc17c8-3b68-47b4-b5da-6dc49da62f3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb1c12c5-92e6-4304-b8ad-5d848b19640a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "472e639a-37ff-4f3c-b0b0-c1ff439cd7cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df69e80e-d388-4aa8-82c4-13e169160336"
                    }
                  }
                ]
              },
              {
                "id": "07a72d7a-d89c-4c7b-97ed-8250126e9f3e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "190aeda4-1f8c-42fe-ad48-88322e5dd256",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "785d4462-3419-4713-96f7-81ae76a39139"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7397af4-48ae-447d-b289-9d33f84be7e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "167a1f9d-9fce-4601-bc74-6b569c4e28dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45fc1651-1467-4b5d-b9e2-36f6272ce59e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d24ac044-c93d-466a-baa7-228ec890d2cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b822bca4-a00b-4f4a-8606-4e58e9b7f68e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "526945c3-e4a6-4fd8-b6a0-9f82535bc86a"
            }
          }
        ]
      },
      {
        "id": "9aca36f0-319b-467e-bf44-9d028674e034",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a80f6043-6e0e-48ad-86b6-0465e9a10f82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42ea1c52-b965-4655-8b6b-e34c9ae33c1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deab58e4-9ccc-49b0-9414-fac50953c9a2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335faf8-41da-4aff-92d7-6142403c6420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d81c186-3eea-44f6-9f62-908d84ec97f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8453e4a-c879-4a27-836b-0771fc9c95dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad0f9db9-6d59-443b-9b6d-c0f2b802c938"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eddb2d7b-9f52-4f8d-bbcd-f06b72a4bf0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "826ec87c-9a94-40be-b4eb-b57d87d209c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88fd6e20-23b5-4675-8947-14ae33223c84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "275d1af2-46d5-4cc1-9bc7-b2e65eb1fde0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2ef7c97-4b86-4961-b879-dfaf80b17e84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e4fe10e-dc8c-45bb-8b06-f40cb8c62e28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22e5b0c2-1013-4463-83f3-56828df581ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "780708ab-f1b9-409c-9ace-81301752d845"
            }
          }
        ]
      },
      {
        "id": "9910d5f5-f054-47eb-bf72-712be4cac3ab",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "82934711-9403-4499-8ea1-c124a24db07e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35f6779a-bb8d-4b90-a1cf-408d4e230046",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1df454b-a71d-4c68-9e3d-4b4d85c8b99c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16804f91-3b25-4f73-b2de-d41daf51c717",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aae72acf-86ba-4bd4-8303-6ea34421ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361b8e89-1f43-4e0f-8df3-ca2323fdf290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83b99082-4d2d-4a4a-adca-82d126125a75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c845f003-841b-46ab-ab88-917f76efefb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e7725c-3d41-4499-8b83-d6ff94ce5cb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f75cf8-ba82-44e6-b9be-499571e5f8fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9c48358-63dc-4dcc-b227-2fea8736cb91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f5094c2-a469-4d2f-bb79-dee1d6075d62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "672a109a-2793-4c41-9be2-9972c7c32bcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b9a2bf3-fa7c-44dd-b1bb-bf3a6fd0e1e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2b04597-779f-4798-863d-fcbd34b2439e"
            }
          }
        ]
      },
      {
        "id": "c930ca90-40d9-4f4b-b94a-1748914be8f9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6dae89de-5db9-4657-9c05-4ceb80967d51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bb231a5-06b2-40bf-8ac0-bdc27ed57e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc12d8ef-fd5b-4dfb-96e2-0a63fd8cb558",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e9f713-ec1e-4c96-a0ae-46ab9d3586cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af513336-a56b-4993-a9b9-2da68aa32260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af02131-9494-4c87-9019-506cef87309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4723a88-12bd-4783-a721-d7fcfb04fa19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "101975f6-794c-4f97-9c86-41e1f355568f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6302c49a-992f-4b92-b0ea-44ebd4380425"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0e09fd-9826-454c-bd6d-9138db1c1b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52072456-8a63-4627-a060-e54a6abb8497"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f65e9b60-f3f6-40a4-ad20-3a566c45051a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6c62327-3577-47ec-9c57-e5a04440904e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f14362e5-50a6-4c87-b67a-c30f7c5c1111",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f44fb746-1ecb-4efe-9a81-7711b95bae25"
            }
          }
        ]
      },
      {
        "id": "adba51e9-e973-4d1e-adee-7df0bc60c684",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84c6c2c8-d3c3-426e-b549-d5f161627579",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1be66be3-147e-4a17-9613-ef5da77ec992",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f89d1f1d-613f-4e1d-b4cb-779194950cd3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "379a8219-8d4e-402d-b4fd-8980d599864e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88a32ba1-1528-457a-8cc6-53819bd64d8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.312280701754384,
      "responseMin": 2,
      "responseMax": 261,
      "responseSd": 24.92326518395972,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701909339552,
      "completed": 1701909350880
    },
    "executions": [
      {
        "id": "01209f15-6af0-4f7b-8af2-b5209a585ee3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af8a271b-cb4f-4d79-bc7a-f8eb5634bfc9",
          "httpRequestId": "26c05c15-d05b-4210-8fc4-204132dc3383"
        },
        "item": {
          "id": "01209f15-6af0-4f7b-8af2-b5209a585ee3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "37b3cace-0190-4df6-986f-224a8578de5d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "f8a1d969-04fa-4bfc-abae-40bf5ed3d9f3",
        "cursor": {
          "ref": "d5c6c1e7-691e-4fe7-a840-bbe38e9f7a84",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dd0692ff-e314-420d-8247-57004a6fa570"
        },
        "item": {
          "id": "f8a1d969-04fa-4bfc-abae-40bf5ed3d9f3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9a5cc477-aac2-439b-ac1e-25ed93024d18",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "0b3483e4-ec31-4499-bc90-b93084e41525",
        "cursor": {
          "ref": "e238650f-1f58-4867-86a0-683e9150bb7f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4a9b88ef-dad4-4f24-8392-05dcb4fed665"
        },
        "item": {
          "id": "0b3483e4-ec31-4499-bc90-b93084e41525",
          "name": "did_json"
        },
        "response": {
          "id": "9d31086b-f7b8-46c9-9890-63ae2228fc28",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd5b66-ac93-4bff-823c-8e037ca3be9b",
        "cursor": {
          "ref": "68cbc916-84f6-40fb-9b9a-aaf9661497b6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3f2b751-6bbd-4f38-aee3-4ef38d2ed4ec"
        },
        "item": {
          "id": "3bfd5b66-ac93-4bff-823c-8e037ca3be9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "bd7faf6e-1120-4835-9874-bcaf1ca8d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd5b66-ac93-4bff-823c-8e037ca3be9b",
        "cursor": {
          "ref": "68cbc916-84f6-40fb-9b9a-aaf9661497b6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c3f2b751-6bbd-4f38-aee3-4ef38d2ed4ec"
        },
        "item": {
          "id": "3bfd5b66-ac93-4bff-823c-8e037ca3be9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "bd7faf6e-1120-4835-9874-bcaf1ca8d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d477a3-d24f-43f0-97a1-4d40f2a929a5",
        "cursor": {
          "ref": "50f59516-56b5-4f92-8160-a2405c40f4b8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4f66ce83-3b47-45c1-87dc-b0bff5389902"
        },
        "item": {
          "id": "85d477a3-d24f-43f0-97a1-4d40f2a929a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f85ee536-f9bc-4f8a-aef1-f0caead77130",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c12f14-b767-4751-afae-7b9b27740042",
        "cursor": {
          "ref": "161b7625-3f81-4840-9f44-4ff1ec444cab",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "64551fb4-77f1-4671-8535-b2a7cd65cc06"
        },
        "item": {
          "id": "27c12f14-b767-4751-afae-7b9b27740042",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2187f0dc-b691-4389-a33e-a9d478a66dd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3dbd00-1991-49b2-a076-af78741b5322",
        "cursor": {
          "ref": "3e2f42cd-b12d-45e8-8680-7e59ec61cd73",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a538647-469f-420e-98cc-44fe751ab94c"
        },
        "item": {
          "id": "9d3dbd00-1991-49b2-a076-af78741b5322",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "40c430fa-1679-4238-b0ef-40c06df9b9fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc59f3c-b0b7-4f6b-a73f-1745dc0e53c7",
        "cursor": {
          "ref": "e4b24a24-4de7-4731-aef7-ea00b5533472",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b83ad78-6bdb-4f99-948e-e188c0414103"
        },
        "item": {
          "id": "0bc59f3c-b0b7-4f6b-a73f-1745dc0e53c7",
          "name": "identifiers"
        },
        "response": {
          "id": "f4298e54-16de-408b-bce4-0d6023a54a04",
          "status": "OK",
          "code": 200,
          "responseTime": 199,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c51977-3e8a-448f-ade6-cfae5cd0f085",
        "cursor": {
          "ref": "1ff7feaa-0fa4-4e83-a9c5-2de9fbc529db",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c950a7f3-408a-423c-b820-e30f8db82fe7"
        },
        "item": {
          "id": "98c51977-3e8a-448f-ade6-cfae5cd0f085",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a78f9af2-981f-4c82-9fdc-8dca8647b4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b2fc2e-8162-481d-b13e-46d8d1986b90",
        "cursor": {
          "ref": "9f99162e-b309-4cc2-8f77-be8de5cda566",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa4be269-4ef3-45ce-9c65-865f295012d6"
        },
        "item": {
          "id": "b7b2fc2e-8162-481d-b13e-46d8d1986b90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "65788e03-8386-4510-be40-d43eeba4e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2681fa0-7cd2-41c2-9bd4-a5d64fdadde4",
        "cursor": {
          "ref": "6b7d64ea-ee0c-4a29-82f0-74b3715742ff",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e7f596c1-6512-4fd6-b187-cc757eea441c"
        },
        "item": {
          "id": "c2681fa0-7cd2-41c2-9bd4-a5d64fdadde4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "92d49d19-9fef-425f-ade3-1ded8620c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d11b8a-9f2b-4168-b21d-a50db9a20540",
        "cursor": {
          "ref": "fc1cac92-a20a-422c-b006-26577d1d06b7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fef4cb43-ba34-42b4-9058-58535d407047"
        },
        "item": {
          "id": "d6d11b8a-9f2b-4168-b21d-a50db9a20540",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e61f0573-18ad-40c2-8180-9c578dde2cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0497bb-6dac-4799-8d18-a9b0c8d188af",
        "cursor": {
          "ref": "6cb0789d-e898-44e3-afca-cab3b6324971",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8205b42f-6375-4ae4-9291-84ef012c9574"
        },
        "item": {
          "id": "5b0497bb-6dac-4799-8d18-a9b0c8d188af",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5e98b430-8ae5-41b1-80b4-7f25656ce539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7a641c-c737-4469-b70d-cea64be45a8d",
        "cursor": {
          "ref": "6c87670f-7614-4b68-9ddd-d0a620a910d4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fda59984-9475-4b0a-947a-3107979c00ef"
        },
        "item": {
          "id": "1f7a641c-c737-4469-b70d-cea64be45a8d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a57dbe33-3bab-4129-8054-5b3270c2dbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863bc594-0868-4dc5-95d7-8f207478a34a",
        "cursor": {
          "ref": "e77ac4d9-1789-47ad-85b9-21452c893856",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8f5efc1f-5679-481f-aea7-2001922b6d58"
        },
        "item": {
          "id": "863bc594-0868-4dc5-95d7-8f207478a34a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8f3a2f12-09a2-41a0-8238-0d745c5960cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d57e8-f629-45e0-8e05-021414ef362c",
        "cursor": {
          "ref": "8695429a-34e9-48bc-b6cc-0c9c3d8524b9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f4ba268a-d80a-4a61-85ba-5c6209a9e89e"
        },
        "item": {
          "id": "949d57e8-f629-45e0-8e05-021414ef362c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c7dbc583-2b13-4470-9d51-7c2bc02fb1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4f5260-b93f-416a-aa20-b1ccdaee300e",
        "cursor": {
          "ref": "53c52ffb-6d82-49ad-a074-1670015b75ad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "64d116a2-0a7d-484d-820f-3578d615fca0"
        },
        "item": {
          "id": "bc4f5260-b93f-416a-aa20-b1ccdaee300e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "12683c7b-f912-4877-8490-b4e3a9390c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb00544-0d72-463c-a0d9-576585bf3af7",
        "cursor": {
          "ref": "f4a0e3c9-8aee-4b8d-96e2-61754560e31b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "de308813-ceb9-4db4-aede-530bb7235f02"
        },
        "item": {
          "id": "2bb00544-0d72-463c-a0d9-576585bf3af7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e44739a6-66a3-401d-bce1-da03eac21a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d4b453-8a8d-412d-8317-a9f4253812d4",
        "cursor": {
          "ref": "16c42393-bad3-4bf0-b63c-4f34f5a91017",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b64eab64-44ef-4ed4-bef8-5aac935ce63f"
        },
        "item": {
          "id": "55d4b453-8a8d-412d-8317-a9f4253812d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e89b10f9-e970-45d8-977f-861233d5fc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151448a7-ad83-4f6c-9346-a883d843f75a",
        "cursor": {
          "ref": "a354473f-fdc6-4074-81d7-a636c0323bba",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "679fcf74-967c-4044-a9f2-31de0345fe07"
        },
        "item": {
          "id": "151448a7-ad83-4f6c-9346-a883d843f75a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33144fe8-79f5-4e7b-89db-3fefae1318d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf6575-bae3-4145-96ee-c619223a8fa1",
        "cursor": {
          "ref": "e4f1edd1-b604-4bc3-a415-4cfb3ceffa64",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5d452b10-aec1-460d-8444-1b55c7d76db6"
        },
        "item": {
          "id": "cacf6575-bae3-4145-96ee-c619223a8fa1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a0930328-3776-4622-a58a-02964fa3c5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b5480-f794-447c-b2aa-824d580ee42b",
        "cursor": {
          "ref": "db586e6c-e85b-4857-900d-06a442db4898",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b0705e47-196b-41b8-8dd7-09746104e447"
        },
        "item": {
          "id": "fc5b5480-f794-447c-b2aa-824d580ee42b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b1bdde9a-be05-4031-bd9f-9a6782c8a838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e868e5-3941-494b-b1ce-48f306a1f522",
        "cursor": {
          "ref": "c16a92f4-6a4e-4f36-9f34-ca10102d0be1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "16009444-96ba-457b-b751-eb455cf03e50"
        },
        "item": {
          "id": "17e868e5-3941-494b-b1ce-48f306a1f522",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d0cd66ec-2346-46b8-8bb1-e9eb9521f250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8075d97a-2b6c-47dc-8afe-46ef452c46fa",
        "cursor": {
          "ref": "26e55607-e645-4efe-8829-cf43334d1e3c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c3b535c4-5f8a-4d6d-bdfa-e24df8d199a9"
        },
        "item": {
          "id": "8075d97a-2b6c-47dc-8afe-46ef452c46fa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "05b48fd8-bf3c-40fd-bb1d-66a97ee68be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7a37e0-fda3-4f91-a283-e5bb989c6c30",
        "cursor": {
          "ref": "d495bb5b-8ade-456b-b64b-786ddc885f2a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fcf36e5a-cf24-444a-a670-fc0b4b54238a"
        },
        "item": {
          "id": "6c7a37e0-fda3-4f91-a283-e5bb989c6c30",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "59f2cac3-b4e1-4939-9f10-fcdda8c37107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16325d4e-8bd9-4b96-9878-40b8cbf5cddb",
        "cursor": {
          "ref": "537f6253-e4fe-444d-86ba-ffcfa01d53fb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8ba90564-2199-4569-8ef7-e3288058561f"
        },
        "item": {
          "id": "16325d4e-8bd9-4b96-9878-40b8cbf5cddb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f2ca751c-67bf-476d-b1aa-f509a27be0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb56c7cd-3d35-4931-94a2-033293399b3a",
        "cursor": {
          "ref": "a647f0b4-79cb-4565-9682-f392e76f9393",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ef737ac-a5e1-4847-9d42-055128ba2d25"
        },
        "item": {
          "id": "eb56c7cd-3d35-4931-94a2-033293399b3a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ec8868de-c5f0-45b1-b8ac-d1b9f95c185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd089c0-1b3d-40d5-b21d-029e3e910ee8",
        "cursor": {
          "ref": "76d8052a-be25-4be3-9c22-3206af36aa9b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0585e266-c508-418e-8775-1a2473f5194f"
        },
        "item": {
          "id": "dcd089c0-1b3d-40d5-b21d-029e3e910ee8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5d08f8e8-85f1-4694-954e-7fc9a920381b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437c1c02-0327-4e83-865d-79f6699f9c13",
        "cursor": {
          "ref": "e4896548-aefb-4c7e-8ea3-5cec11889189",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "de2fc0b8-54b2-4b1c-83cb-3c9e17d1eefa"
        },
        "item": {
          "id": "437c1c02-0327-4e83-865d-79f6699f9c13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "768f8e84-0e21-48f6-b176-014cc01b1215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7bf2f0-6057-40b0-aef4-0a31d4873998",
        "cursor": {
          "ref": "7f8cd4b5-3e64-4c39-b28d-b109091449a9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ecf4f14-fb67-44c1-802c-3f12c7306435"
        },
        "item": {
          "id": "6a7bf2f0-6057-40b0-aef4-0a31d4873998",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "551d077e-86ce-4877-95a3-66647b01eb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f92d1-ed98-446f-a9c0-d404c1eae584",
        "cursor": {
          "ref": "6253bf9f-822b-46a1-8d64-b6b3d01ff99c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0aaed53-4c27-4062-af8c-030046850175"
        },
        "item": {
          "id": "d36f92d1-ed98-446f-a9c0-d404c1eae584",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b66d8a94-1efb-4810-aded-5a1bc3eef17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf6bf6-5324-48ec-9a49-6857b6129485",
        "cursor": {
          "ref": "217124e4-c5de-4464-9337-48c98c3831a2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "23b1e637-e3ef-4d78-8d10-ab2d58fbd13a"
        },
        "item": {
          "id": "d2cf6bf6-5324-48ec-9a49-6857b6129485",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e49b9a40-1992-4e97-948b-d26cc07b2cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b6d818-6b45-4339-a38d-789daa093715",
        "cursor": {
          "ref": "38a75ada-f9a9-47a5-8d99-e246068eda88",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dc3b0daa-fbd0-4068-a113-e99cfc901cc5"
        },
        "item": {
          "id": "68b6d818-6b45-4339-a38d-789daa093715",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa99863f-de26-416f-a988-561a4d00b109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb69774a-954b-44f8-8505-84493590396d",
        "cursor": {
          "ref": "43fc8022-0d97-45fa-98d3-7f23a2244bd9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0fb7fb00-dfd5-4647-b80e-323bc90444db"
        },
        "item": {
          "id": "eb69774a-954b-44f8-8505-84493590396d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e21dec55-50d9-451b-9b65-25ca8b09b065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9252e79-2aa0-49ac-848d-a3ab89127946",
        "cursor": {
          "ref": "a37ec423-8c71-4a04-b981-f891e3843d9a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "920e961c-b340-4dfc-9062-b3d3da4adad5"
        },
        "item": {
          "id": "a9252e79-2aa0-49ac-848d-a3ab89127946",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "53ee5ea4-8df6-44b9-b44d-db1f242c75c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e095aca-7018-4647-80e7-5a851c37e1b3",
        "cursor": {
          "ref": "4b5da2b8-c8da-46c4-a46c-5ed915194394",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "920f91c6-1079-4dc0-ad32-a40c86ea9894"
        },
        "item": {
          "id": "3e095aca-7018-4647-80e7-5a851c37e1b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af572c38-a70d-4000-bb3c-cf80c79e5b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247aee98-d0e8-46e3-99ad-1663ae834ff7",
        "cursor": {
          "ref": "ccb83802-e12d-49fa-bf25-6172f3069464",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bc112d3e-3056-45c4-bd7d-201cb9dcd72a"
        },
        "item": {
          "id": "247aee98-d0e8-46e3-99ad-1663ae834ff7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca312d53-1b7c-4913-b0a9-e1d3f15a35a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529e3ca2-a961-4b95-aaa8-5388b5d6d5b9",
        "cursor": {
          "ref": "6fc31271-da4d-4460-907a-7c3f5fbccb88",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9aaf8641-1dc4-462c-8c7c-aede0bd8b2e8"
        },
        "item": {
          "id": "529e3ca2-a961-4b95-aaa8-5388b5d6d5b9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2c42cbf2-0a8b-4306-987d-b8af6f3a9a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d52f764-4379-400e-b2ba-58feaeeefaf4",
        "cursor": {
          "ref": "ab093957-07f0-4008-a085-4ebd77899a3c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a1342c68-699a-46d4-ae12-c83092559c6f"
        },
        "item": {
          "id": "7d52f764-4379-400e-b2ba-58feaeeefaf4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fabcd976-c3a2-4f7b-9653-60887fef37c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2daad7-335c-48cd-b532-be72c2a0cf4f",
        "cursor": {
          "ref": "7cfcc362-c0b5-4dc4-b6c4-f446e6496bbb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fb7dbd37-444e-406c-9f84-992b62ba7466"
        },
        "item": {
          "id": "aa2daad7-335c-48cd-b532-be72c2a0cf4f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "11898d89-5c7b-4f9a-a43b-62530fd665a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92768246-3f64-41ca-b99a-08180b52d1da",
        "cursor": {
          "ref": "21a2c812-cedb-4c91-9d20-a0e585310689",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "86a651dc-14dd-4873-91e5-be482ba9d524"
        },
        "item": {
          "id": "92768246-3f64-41ca-b99a-08180b52d1da",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a9c6e37-6ae0-4c0d-83a0-a5093f954b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e648244-e3ad-4c81-941e-ef10ab32631d",
        "cursor": {
          "ref": "1cf10f67-cb11-4618-84c7-c6bb02568dc0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "25b1cd0a-f542-41fa-b831-a251e21cfeed"
        },
        "item": {
          "id": "3e648244-e3ad-4c81-941e-ef10ab32631d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f8770ca-f101-485e-9fa4-5f62bb21640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad08a37-42c5-4c8c-906e-eb88c246d857",
        "cursor": {
          "ref": "6a98fa52-cd49-40e8-8305-2651c17f92e3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cfde3c5e-dbfa-4955-b65b-6ba15c70c6ec"
        },
        "item": {
          "id": "9ad08a37-42c5-4c8c-906e-eb88c246d857",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96d20784-8119-4a7b-9449-470319eca80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ab4a25-51f7-439f-9007-b3436f1a0bc2",
        "cursor": {
          "ref": "cb1d9143-4438-416a-a62d-9b81532db4da",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1a4d1c85-6d6d-4a19-a058-261986643c0a"
        },
        "item": {
          "id": "a1ab4a25-51f7-439f-9007-b3436f1a0bc2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "575a72d8-2e1f-4079-9322-5f50735ecff2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c0a385-08de-4388-80f1-55a92a865493",
        "cursor": {
          "ref": "a7f85038-f5af-4c01-9aba-93395e823953",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9ac31568-b415-4245-92c1-142c23e2cacd"
        },
        "item": {
          "id": "f5c0a385-08de-4388-80f1-55a92a865493",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "05b29835-9799-4e36-9837-f6a0744ff02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76331c36-1a84-4684-88b4-0c4543a102f9",
        "cursor": {
          "ref": "ea439611-63bf-488b-97dc-7fb01260ded1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7fb3a2f5-d141-4f78-afb1-ce0c4a4cfb70"
        },
        "item": {
          "id": "76331c36-1a84-4684-88b4-0c4543a102f9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "02db7b83-582f-4c2f-aebd-2973ef11cc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f8b1b-fd47-42f0-aea2-365d72251c4c",
        "cursor": {
          "ref": "b4a218bf-0df5-48f0-9f55-aa64cdd4a524",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "284d2589-70b2-4ba4-b7c2-53de2a34d281"
        },
        "item": {
          "id": "397f8b1b-fd47-42f0-aea2-365d72251c4c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d5ddcbfe-fa8f-44f3-91d1-411b5c403ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5061d852-2e97-4415-94bb-e7746c86bfa9",
        "cursor": {
          "ref": "dbc7eb39-f1ee-4732-88ec-24b9c1552a65",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d899c354-8438-4e3d-862f-3f8edbb11f3b"
        },
        "item": {
          "id": "5061d852-2e97-4415-94bb-e7746c86bfa9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "569f9348-1402-4fa4-9025-b2030d616162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1379a6fb-59c7-48e8-a98f-a21ebbd82e16",
        "cursor": {
          "ref": "13cbd65c-7d75-4bfc-a1ad-411dcd614dd3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0068a919-dbad-4c88-94ad-357a4922d32b"
        },
        "item": {
          "id": "1379a6fb-59c7-48e8-a98f-a21ebbd82e16",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c18fbbbc-a962-4681-8cf2-fa77b8581423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aabc01-5646-4aa8-9fd7-793e4c5c5769",
        "cursor": {
          "ref": "1480b369-a519-42d1-b1fe-6df81ccf2cb5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "da084313-5fbb-427b-89ea-0eec3bade0a9"
        },
        "item": {
          "id": "a3aabc01-5646-4aa8-9fd7-793e4c5c5769",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d065f7e-6e1f-4f57-9da3-621b17895c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00136634-e19d-40de-8a6e-072612c84f15",
        "cursor": {
          "ref": "3c48005f-6b72-41f3-b89c-2042c6bb55e3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "06791140-e1df-4dd5-b598-179073df10d5"
        },
        "item": {
          "id": "00136634-e19d-40de-8a6e-072612c84f15",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b0d8f627-b8ba-4fd4-bcd1-581cedbc4c71",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852ec560-bce8-4f16-bb19-485157d98a8a",
        "cursor": {
          "ref": "b8868042-163f-4861-8c0c-155295979457",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc878419-f479-4bad-8321-41ea12d7da3a"
        },
        "item": {
          "id": "852ec560-bce8-4f16-bb19-485157d98a8a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9094778a-a86c-4cea-80ba-146da9f17329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d75e73-142c-417f-a5f1-8fb09fdc2c1d",
        "cursor": {
          "ref": "273c51a4-8696-4c03-864d-2ba62d5b7c55",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "de3416d0-165e-4326-858f-03653b44e429"
        },
        "item": {
          "id": "71d75e73-142c-417f-a5f1-8fb09fdc2c1d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d7fb402e-03dd-4176-93be-b829115b290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc7773a-783e-4328-b7c4-5eb4381b3ee9",
        "cursor": {
          "ref": "43368cfc-ee98-4259-962c-66f3f364ed07",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "07532312-78ab-4adf-af86-c1318c258fd6"
        },
        "item": {
          "id": "2fc7773a-783e-4328-b7c4-5eb4381b3ee9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9d204a65-cf93-488a-814d-b1c74056e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62839ed2-acb4-47d2-8bef-ce3739267d83",
        "cursor": {
          "ref": "0a04e43a-2adb-4975-af37-cf303ee71d8a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca30ac94-46fa-44d1-87d9-5f334507d782"
        },
        "item": {
          "id": "62839ed2-acb4-47d2-8bef-ce3739267d83",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d784501b-6840-43da-9f70-e51086474f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa555d8d-5260-4e43-99b8-d1b2c2738ec6",
        "cursor": {
          "ref": "a9656c78-d305-480f-8827-6a58d190b89c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b2a3fd3d-7281-4822-b5fe-3b5e2bac53fa"
        },
        "item": {
          "id": "fa555d8d-5260-4e43-99b8-d1b2c2738ec6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0f899c6-7dba-4a4d-b908-1b19a43bf505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6181e5-3e85-46ab-9e3d-b09475605f81",
        "cursor": {
          "ref": "7d547e3f-eb3f-4ba0-bb12-d5c437bdbb18",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5444ac14-ac49-4abe-b057-c2c323b7f286"
        },
        "item": {
          "id": "7a6181e5-3e85-46ab-9e3d-b09475605f81",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "daa70a78-73ca-4af5-824a-fcfa27bd7aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5401d92a-8c00-4dce-a727-24391e9b9446",
        "cursor": {
          "ref": "03be55bd-0e8f-4c0e-98a7-d54cc5c49a18",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "df24f9f8-655f-498b-b511-48533d67215a"
        },
        "item": {
          "id": "5401d92a-8c00-4dce-a727-24391e9b9446",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1ab184da-f045-4a2b-b52c-79aa0a05ef88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0734ceb-00fe-4f8f-b927-25d2fe21d916",
        "cursor": {
          "ref": "07378356-cb91-40ed-8cb3-f5561414b715",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "706de5d1-575a-4766-9603-6e9d8fbcc3d6"
        },
        "item": {
          "id": "a0734ceb-00fe-4f8f-b927-25d2fe21d916",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e25f7d9b-2cff-4407-8b2a-f6c7f2e8eb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb41d7-f5e1-488e-9a5b-51752870d515",
        "cursor": {
          "ref": "ec54881e-2b8e-4a45-9ab4-3c9af99db09a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3764e5ae-4e41-478e-9465-de2ec4cec502"
        },
        "item": {
          "id": "15cb41d7-f5e1-488e-9a5b-51752870d515",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ebd6489f-1a5a-47ba-bfce-ecaa76e9f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df649d09-ad98-4f36-9d57-16c3425c7695",
        "cursor": {
          "ref": "bc514f41-de44-4a0e-a7f3-1a4abf7ab6fa",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5104e8a0-7851-4601-8730-7988065344a8"
        },
        "item": {
          "id": "df649d09-ad98-4f36-9d57-16c3425c7695",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3ae269b2-eb2c-4cd7-80aa-43c1638a0817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024d734-4534-47c1-8094-fd80c683df93",
        "cursor": {
          "ref": "3a2d9588-12bb-4362-b738-db49edb7647d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8ed71e15-e62c-4f66-9a36-e53ff12bd474"
        },
        "item": {
          "id": "f024d734-4534-47c1-8094-fd80c683df93",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a54180e3-1cbb-42b0-a1c3-3542c3e30387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f19a3e-06bf-4020-b977-9ef122a12028",
        "cursor": {
          "ref": "37a0baf0-afb2-42ee-b784-ea65e39c47ec",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "eb1e1d8c-6b2f-4650-be66-b2bf78d20a63"
        },
        "item": {
          "id": "14f19a3e-06bf-4020-b977-9ef122a12028",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dd924ba2-ee38-41d9-8707-11f040561070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13517a87-3a55-431a-bb7a-2252311705dc",
        "cursor": {
          "ref": "eb20a1ba-d6c2-4785-b85f-52eac5428c28",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b5784a3-c200-450b-bac9-c4e202ef2e14"
        },
        "item": {
          "id": "13517a87-3a55-431a-bb7a-2252311705dc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72cfb020-2a5b-4cae-a4ef-505702c0ccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ba745a-4ca1-4fe7-91af-213c08902e3f",
        "cursor": {
          "ref": "16815cf5-ce97-41c7-9510-b2e3a1f5c630",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5760942-4f41-4581-9d50-3c5eec2c4dbe"
        },
        "item": {
          "id": "69ba745a-4ca1-4fe7-91af-213c08902e3f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b7736f39-0dce-44d4-a00c-7c424ba363b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432af106-da60-4ced-9f32-a18d83609daf",
        "cursor": {
          "ref": "efe5d382-fe02-49c8-8ef9-edeab0591e6f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d5fa806b-48e1-4632-a1ea-9c994d9398e6"
        },
        "item": {
          "id": "432af106-da60-4ced-9f32-a18d83609daf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "758c1795-4ef9-4b60-afd2-dfe22655524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9392ef-36c5-466b-91c2-6ff2e1c1b9f6",
        "cursor": {
          "ref": "972be7ea-c054-47da-98ea-89004e682011",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8b6983c4-7345-455c-b201-8326516f9e9d"
        },
        "item": {
          "id": "dc9392ef-36c5-466b-91c2-6ff2e1c1b9f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a80abdd4-04f3-45c0-af18-cc95b5f208c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b717b453-0fe7-40c8-8bf7-a03caeb0c0ca",
        "cursor": {
          "ref": "4273b248-aca2-4e4b-9185-19a77fb58835",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10e95ebf-e8ef-4b4e-8f22-c46fedff56cd"
        },
        "item": {
          "id": "b717b453-0fe7-40c8-8bf7-a03caeb0c0ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a98b9546-f4be-4880-af03-d15f10277ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d6157c-20a2-4c46-a8e8-07ba8a3cc234",
        "cursor": {
          "ref": "b770d2e8-7ca9-4e24-9846-72faec0b67dd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "29eaa6b8-279a-4084-8fa2-0daf408e5f19"
        },
        "item": {
          "id": "c0d6157c-20a2-4c46-a8e8-07ba8a3cc234",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4aa6594b-e3c0-4471-84d6-ce8f7cee65ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a69b8e5-f30f-4931-b6b9-43c1204d0829",
        "cursor": {
          "ref": "688925fa-fdab-45d6-a850-14151e9085c0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7f977e1b-bd58-4384-8163-559755c95028"
        },
        "item": {
          "id": "8a69b8e5-f30f-4931-b6b9-43c1204d0829",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "224512f6-d3ad-4918-9f75-ccc41076781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0087f23-4d59-47df-a8ec-7786fd7dbf5e",
        "cursor": {
          "ref": "70489cca-b2a9-4008-83c6-c7ec7c185c8c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "494f7086-e6be-426b-b6bf-59fd9c1fffa3"
        },
        "item": {
          "id": "b0087f23-4d59-47df-a8ec-7786fd7dbf5e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c91a4fa9-1f5b-4e7f-97b3-cd96c75120da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76533a9-3a60-4c8f-9eed-6635a265b5ed",
        "cursor": {
          "ref": "868e6e84-1f19-4227-b6ff-e4d9c12551e8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3802fab1-d247-4103-a7c5-1d1bca173a40"
        },
        "item": {
          "id": "c76533a9-3a60-4c8f-9eed-6635a265b5ed",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "190b8c24-c739-4967-b8de-0af6d83060bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ee0e5-2f2b-406c-8251-13306a6f5263",
        "cursor": {
          "ref": "13725160-21c1-40f8-bfef-fb84b7640a48",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "96218c69-fa77-45ea-aff3-7643047837af"
        },
        "item": {
          "id": "623ee0e5-2f2b-406c-8251-13306a6f5263",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8d3c187e-1266-486d-9d56-ecba21a82b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70dda81-6eb6-46c4-ac87-8873810ed995",
        "cursor": {
          "ref": "4f635650-96ca-4cfa-9c46-bebf5dce42c3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6da2687d-3dd9-4a11-8f7a-c40abd5ba41e"
        },
        "item": {
          "id": "e70dda81-6eb6-46c4-ac87-8873810ed995",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e38845d-d76d-48bf-83b7-9a9cc0414f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927f4e2f-0cb6-4e87-8893-024bc43c94e8",
        "cursor": {
          "ref": "204a8e9c-81dd-47d4-b2a8-ed5457ebbbef",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "efaf7848-153e-4303-b803-79f12c61c9a5"
        },
        "item": {
          "id": "927f4e2f-0cb6-4e87-8893-024bc43c94e8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2e1744f-39e4-4e2f-a4ca-f4028d6a8fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d757f2e-90c7-4612-9fe2-eca7fd68129b",
        "cursor": {
          "ref": "93c9e2ad-8230-44bb-b47d-c9d4a789b813",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c463b1dd-bdff-4846-bc1f-d70073e11ca1"
        },
        "item": {
          "id": "5d757f2e-90c7-4612-9fe2-eca7fd68129b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "94d8ed37-bde2-4796-91c7-c067baa23640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90937bba-6377-4146-9cbe-afe7a51829d4",
        "cursor": {
          "ref": "087e5b5c-42cb-417d-aa59-344057d83ac1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d89b3abd-e6e6-4db8-a37a-64c2cde6638d"
        },
        "item": {
          "id": "90937bba-6377-4146-9cbe-afe7a51829d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9f8ec75-15bc-4ce8-9ea6-82dcd2686f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2172ed54-0ebc-4cb5-b717-63d697c092bd",
        "cursor": {
          "ref": "c68123f4-18c9-4e5d-9607-9260b49205f9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81154400-57f0-4fb5-81ce-83f829939d7c"
        },
        "item": {
          "id": "2172ed54-0ebc-4cb5-b717-63d697c092bd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e83710a9-aaf5-4f6d-9965-fa9fa9076ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f295224a-ac50-4d85-b58f-0a601537b152",
        "cursor": {
          "ref": "20af6c4f-c3c3-45e2-b0b4-b8eb5e2cfaf7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "58ea6ded-f6f3-414a-9631-05742578980f"
        },
        "item": {
          "id": "f295224a-ac50-4d85-b58f-0a601537b152",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cea75617-e4a0-4270-83e3-5808ede06704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4107c99c-0bd2-466b-93b5-fbbe4fd4c961",
        "cursor": {
          "ref": "8a4fe508-59da-41de-bcb7-8f75051d8f21",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7a5ecf39-33cd-43d4-b60d-3800bc661411"
        },
        "item": {
          "id": "4107c99c-0bd2-466b-93b5-fbbe4fd4c961",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b846f262-f139-475f-a1c8-a56f5f54c624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f899ef-fbeb-4242-a439-38d2e74f9e43",
        "cursor": {
          "ref": "b649dd2e-77ad-4804-a44e-7f9644db9cd4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ead00f1f-8d69-45ae-a00c-c609c28f01e4"
        },
        "item": {
          "id": "15f899ef-fbeb-4242-a439-38d2e74f9e43",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "955c0247-0005-4cef-b133-004aea3fdf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cee45e-107c-4644-adf9-be35fc7262e2",
        "cursor": {
          "ref": "ec2f9d09-bd9d-4082-8a2c-5a6cdea93af4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cb665b91-8d35-47e3-be19-1c048cff0ea0"
        },
        "item": {
          "id": "36cee45e-107c-4644-adf9-be35fc7262e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "da03b022-4376-4c84-bf8b-5444601ed6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4547d0-667f-475f-aeee-8fc6cf2b84cc",
        "cursor": {
          "ref": "ae3f5065-ff66-4a89-bf31-d8714ee84aea",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9486b9ee-66f3-4857-b598-7cd67e6540da"
        },
        "item": {
          "id": "9b4547d0-667f-475f-aeee-8fc6cf2b84cc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f85db5ba-e367-4aad-8bc6-e02362389c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5e0e2-5eed-4275-9451-862a2e72b54a",
        "cursor": {
          "ref": "6e3aa6a3-4782-412b-9d0a-b36171395233",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2ba71ca4-1ff9-4410-b164-916a41238681"
        },
        "item": {
          "id": "5af5e0e2-5eed-4275-9451-862a2e72b54a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "33f34bcd-e219-45ed-a8cb-d7216fd19278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf44fad-59fe-472c-8d46-397a0b3c3178",
        "cursor": {
          "ref": "290445ae-a565-4a5d-94aa-71218525927b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2931d803-668a-4978-ab9c-c25f7044f6e1"
        },
        "item": {
          "id": "edf44fad-59fe-472c-8d46-397a0b3c3178",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b0cb81ee-528a-412e-9229-9db23c27e57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab36bffb-80ac-4275-ab68-f657756684fd",
        "cursor": {
          "ref": "0c1657a3-85c8-4be1-ae50-b2b8277910d6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "30fa8f68-3d72-49ee-aa91-d476a00c58d5"
        },
        "item": {
          "id": "ab36bffb-80ac-4275-ab68-f657756684fd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "32d64186-a643-48e6-a875-2ca18cd611cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c7531-5a00-4a17-ae29-15b1a59249c3",
        "cursor": {
          "ref": "992728ed-d042-43be-86ee-5edfb8d61e8c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7f55d680-86de-493c-8928-065551e567f5"
        },
        "item": {
          "id": "4a1c7531-5a00-4a17-ae29-15b1a59249c3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8042e552-fc07-4d4e-8b12-0a72f365a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82193006-e7e4-49dd-b6d3-2fa4e33a734f",
        "cursor": {
          "ref": "907aa336-db61-4a94-9dd2-6d4e24554f31",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e60d794a-156f-4d17-8abe-b31b4189f3b1"
        },
        "item": {
          "id": "82193006-e7e4-49dd-b6d3-2fa4e33a734f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c03f66b2-834c-4721-b511-fea98f1cdddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f81fbe-dabc-4333-b244-7640b1f4528b",
        "cursor": {
          "ref": "78a19039-a585-4aa0-aa69-99fc1af77455",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b89a2585-f8c6-43c1-ae97-907ae9ef8459"
        },
        "item": {
          "id": "d3f81fbe-dabc-4333-b244-7640b1f4528b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ff5be704-e530-4834-b0f1-5faaa2c7c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6873caa-d50e-40db-b65f-1ff0699a65e2",
        "cursor": {
          "ref": "a2c90e23-d285-4120-b858-9c3704418b5f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fe11df33-99ba-450f-9570-0860c5aceef1"
        },
        "item": {
          "id": "e6873caa-d50e-40db-b65f-1ff0699a65e2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0866e206-a5ec-4d29-afd0-e4c55df092e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2275f3fe-aae5-4b3d-84a4-5d05d49a2baa",
        "cursor": {
          "ref": "688f502c-760a-4292-80a9-cc41a636f243",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "070b7b5f-8392-4049-8def-e9882ab9b471"
        },
        "item": {
          "id": "2275f3fe-aae5-4b3d-84a4-5d05d49a2baa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "279cebce-c71a-4087-9366-cf22429c8107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10c9f6a-1949-4458-8f44-681bece63cf1",
        "cursor": {
          "ref": "716b8123-c1ce-474a-be31-2ccf1e9044b9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "60dec5bb-c346-4294-8e81-1f88411e266b"
        },
        "item": {
          "id": "a10c9f6a-1949-4458-8f44-681bece63cf1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "acbf6eac-12c0-4036-9979-af93e2a03795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d4dd3e-8663-4ce2-91ae-53a8be24544a",
        "cursor": {
          "ref": "8fb2300a-82ea-44c0-bc35-e9b813000ac1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8951b2f1-d621-4b42-94b1-a84916f307d0"
        },
        "item": {
          "id": "b4d4dd3e-8663-4ce2-91ae-53a8be24544a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fd5cc14b-0308-413c-9de1-c9f28afd62d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f39415-c9fe-49f8-973b-aae287424bdb",
        "cursor": {
          "ref": "461cc1a8-3002-4c29-a30e-9a764c5519ef",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1650c594-8d7a-44ca-b306-bb0a4fe86f8c"
        },
        "item": {
          "id": "54f39415-c9fe-49f8-973b-aae287424bdb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a10cb6f-1ba7-4048-955b-dece50a9a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89aec0a-2283-4fe4-b860-30a716d68e90",
        "cursor": {
          "ref": "8fd65293-a1d6-45b5-8a81-5a15e67fb867",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a222c64f-4d03-43e4-816d-56a1e7b34c75"
        },
        "item": {
          "id": "a89aec0a-2283-4fe4-b860-30a716d68e90",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0bf688a2-093a-413b-86d7-3396a07b7c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae072c8-1d9a-453f-a9ac-d78c45f220ac",
        "cursor": {
          "ref": "0707a4ee-8582-4614-a4ab-8f3bb9fc3626",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "232db0a3-f32c-4158-a971-6102491f3994"
        },
        "item": {
          "id": "aae072c8-1d9a-453f-a9ac-d78c45f220ac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4f1ee59-741d-4b73-b096-60b0f8a72038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131217ed-906f-402f-ab63-b42fbd88ee9c",
        "cursor": {
          "ref": "0491bff5-a422-4245-bebe-23ac7e5f6523",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e73bb494-dc19-4cef-bbba-349d899c6389"
        },
        "item": {
          "id": "131217ed-906f-402f-ab63-b42fbd88ee9c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "25f0b20d-680b-4fc7-979f-7a83eca6ddb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7133eb34-198b-47ee-9b39-d79060a54e64",
        "cursor": {
          "ref": "2d2a5789-a9a3-478f-98e4-47644da0fa37",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "14a1d141-5701-4998-bfc9-f687f47e27a3"
        },
        "item": {
          "id": "7133eb34-198b-47ee-9b39-d79060a54e64",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "69e048c0-4f09-4b49-ab1e-dc9dcc90a634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed44d9f-756b-4748-b4d2-3dd4e7157545",
        "cursor": {
          "ref": "d5b257ac-af70-4911-85c6-894a3c698d3b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6322ac01-0c26-408b-b744-bb79020151fa"
        },
        "item": {
          "id": "eed44d9f-756b-4748-b4d2-3dd4e7157545",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b7f4470a-f3f9-4419-9d1d-0d3d08dfab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9707c-5884-4cd0-90b6-de4fd36f3101",
        "cursor": {
          "ref": "012f4624-6f71-40c7-aa9c-2a39f696b812",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5c234da-3e9b-4138-86fd-719cc069e17b"
        },
        "item": {
          "id": "e3e9707c-5884-4cd0-90b6-de4fd36f3101",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9984a5a1-0ee9-447e-b323-73142a163b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db40ff0a-088c-4838-88a1-36148dd0010d",
        "cursor": {
          "ref": "14f6c4f1-d281-400c-989f-11b3f95b2c28",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "27d33e17-bc3f-4202-b412-bc0fce05114f"
        },
        "item": {
          "id": "db40ff0a-088c-4838-88a1-36148dd0010d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4df91f71-45c2-4caf-a9ac-17df1ece58a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed27a749-940e-46d7-9566-354ba6cd2dc0",
        "cursor": {
          "ref": "e7f79d52-cf4f-4dbf-bc8a-881403a34c07",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d1114f5a-b21b-4fe3-a002-4058ed6e22f1"
        },
        "item": {
          "id": "ed27a749-940e-46d7-9566-354ba6cd2dc0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "36e478dc-53ff-4518-b926-dac9f086fbdc",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e45870-ac93-4bcc-becf-675e67d14a00",
        "cursor": {
          "ref": "c552cb2a-19dd-4d99-b5a1-018402f3a3e1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "52fb9898-522a-4ca7-8932-a8e0c8fbc8ca"
        },
        "item": {
          "id": "80e45870-ac93-4bcc-becf-675e67d14a00",
          "name": "credentials_issue"
        },
        "response": {
          "id": "98f81fd8-c640-4eb9-8cbd-75933ce1ce21",
          "status": "Created",
          "code": 201,
          "responseTime": 222,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ae591-449e-4d65-84f6-d093a9773830",
        "cursor": {
          "ref": "72a88b61-4113-41d7-8d2c-a0606ea7fd95",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4633ab9f-c2f7-4624-836f-f84d7ec391d3"
        },
        "item": {
          "id": "e48ae591-449e-4d65-84f6-d093a9773830",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c0ab843b-b33e-497a-8dbc-c74440a1b8f8",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1518f3-b75f-4625-a5aa-c4a163b3be56",
        "cursor": {
          "ref": "387d99eb-fc52-42c9-8da4-4548eb131d60",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "18423f41-d3d4-42b7-bd4b-505e56656edf"
        },
        "item": {
          "id": "ad1518f3-b75f-4625-a5aa-c4a163b3be56",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1d07b2c2-053c-4403-a56f-46b347a6227c",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a3d2c4-4c26-4e94-80f5-f62efd01de96",
        "cursor": {
          "ref": "7c2e514b-b0d5-4e75-91c4-30b8622efeaf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6ca6b44e-268f-4c3e-8171-cc77fb6f2336"
        },
        "item": {
          "id": "f4a3d2c4-4c26-4e94-80f5-f62efd01de96",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cb14fd8b-2633-4234-96d1-b7f988f7352a",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd56b01-25c7-4bc9-be68-313b83d50fea",
        "cursor": {
          "ref": "c0417762-7ae3-4be3-bb30-ba6940e7d106",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ea4a579d-c312-4812-9a40-ef42659f2390"
        },
        "item": {
          "id": "2fd56b01-25c7-4bc9-be68-313b83d50fea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97d38e45-6472-4fd8-a1e1-aa8026319fd5",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb201694-c356-4fad-b9e2-e2e6b5f5ba11",
        "cursor": {
          "ref": "628818c0-3e23-4b7c-a657-7f298a155467",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "70c47e25-d8ed-4d7e-ad58-cc83f894c2ea"
        },
        "item": {
          "id": "fb201694-c356-4fad-b9e2-e2e6b5f5ba11",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53b5fc08-4f70-4750-a073-bed88a037c48",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecde938-c0f2-41c1-b7cf-6207694127af",
        "cursor": {
          "ref": "cf660113-8f96-4f37-a713-476ab2176003",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "90addef4-3043-4c77-89cf-74fa0c9c745a"
        },
        "item": {
          "id": "8ecde938-c0f2-41c1-b7cf-6207694127af",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e9f2ca2-7b70-449e-b881-63737d80ab63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c693e2e4-1757-4c68-aaa3-cb93bd180386",
        "cursor": {
          "ref": "0354d2b8-84ac-41cb-907b-32fdfaf779b9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c0cc9100-5ebc-4a15-9386-84b7c30229d1"
        },
        "item": {
          "id": "c693e2e4-1757-4c68-aaa3-cb93bd180386",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40d10d69-1397-4932-b1ee-ed96910849df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da708cc4-b97e-4586-a8e6-42e2720f09b5",
        "cursor": {
          "ref": "b119ac15-8ced-49be-a0b3-8931a18341a9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "167af710-45e5-451c-8761-b4d1ecb50e65"
        },
        "item": {
          "id": "da708cc4-b97e-4586-a8e6-42e2720f09b5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a72a883d-d62f-4891-a2e7-92c15137cd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4306d3-5c99-4f36-942b-9acac8b45d55",
        "cursor": {
          "ref": "c8f13a52-1671-4713-9436-4fd6190af8aa",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76d3c84c-03a4-4bc5-9942-48e93278c42f"
        },
        "item": {
          "id": "5e4306d3-5c99-4f36-942b-9acac8b45d55",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b561307-b3eb-41dd-9b53-798b59b38523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbaf295-30ca-4d24-b1d2-8f16df9558f8",
        "cursor": {
          "ref": "edd097c8-8542-4868-9dc3-aff129b28cd2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "80371f8e-f8d7-4e73-80c6-8cc4c443d53c"
        },
        "item": {
          "id": "4cbaf295-30ca-4d24-b1d2-8f16df9558f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57441956-d036-4eef-b761-2e9788a2e63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b124b40-cc1d-4580-992c-072afd6a8705",
        "cursor": {
          "ref": "e76e60f6-9a92-49ad-b5f2-68231ff6ec67",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d18d10c3-e1d3-4190-92f4-82ff3bac9622"
        },
        "item": {
          "id": "9b124b40-cc1d-4580-992c-072afd6a8705",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75b424c4-7ce0-432b-940f-56541088082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9b2d3-8a06-4382-902e-ed553788402a",
        "cursor": {
          "ref": "3246b598-8306-494e-885d-ed35b02b4542",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9415cb30-f320-456f-99d8-0da1256599c5"
        },
        "item": {
          "id": "86b9b2d3-8a06-4382-902e-ed553788402a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c772e686-50df-408e-9a53-0bf750cd1ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f889fa-fca9-4109-9bd1-835166f85537",
        "cursor": {
          "ref": "f8994170-0e1d-4330-9d2e-e4f114e61c23",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b2055a41-613a-402b-92bf-bd6c37a93b28"
        },
        "item": {
          "id": "06f889fa-fca9-4109-9bd1-835166f85537",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6601dbaf-5e8e-4bd4-86e4-968bc9cd0a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0947bf-82bf-4c33-b859-e208d70ae8f7",
        "cursor": {
          "ref": "a16b9f93-7661-4cf0-aef1-ee140d761a4d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "deb6035d-1ec5-415a-9556-8abcb79287ee"
        },
        "item": {
          "id": "8e0947bf-82bf-4c33-b859-e208d70ae8f7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e514d2fd-182f-4431-b5d7-607b89c7301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3167ba1-dfd1-4632-90db-5e0490f3e490",
        "cursor": {
          "ref": "6e64e0c5-1b68-40e8-bbe1-5b1d1e5aac61",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "86cba2ce-a2e4-4c00-b3ba-5d5254879595"
        },
        "item": {
          "id": "a3167ba1-dfd1-4632-90db-5e0490f3e490",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "609b2e5b-8f47-49f1-8282-ca9f75593cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4383b3-f7d9-42b7-a3b7-aef0064c6ba5",
        "cursor": {
          "ref": "4a3158bf-9dfc-4972-b463-88fd6d370977",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7102c7b4-563d-49fd-809b-b702f279648b"
        },
        "item": {
          "id": "1c4383b3-f7d9-42b7-a3b7-aef0064c6ba5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "39ad84eb-717e-4eaf-b2c9-9e7f8a347973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1560c2-5afe-4150-bccc-dc2862fbf660",
        "cursor": {
          "ref": "48dec837-f7bc-400f-a889-c7fed5963798",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7ed21153-b4b6-4754-9cbc-aa4e0788a7d9"
        },
        "item": {
          "id": "7f1560c2-5afe-4150-bccc-dc2862fbf660",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "07ac5055-cc56-4c26-8566-d55490420548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ae9a02-1ddc-4f5d-97dd-cb5c75d132c5",
        "cursor": {
          "ref": "252f02bb-9dce-4cba-8659-d2b178f80a94",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a55053a8-34ff-40e8-a96d-eff87628c5c8"
        },
        "item": {
          "id": "84ae9a02-1ddc-4f5d-97dd-cb5c75d132c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39647388-b976-4246-ac09-6eadb9d3a4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62c40ca-c1eb-4ac0-b56b-60d4b27fe609",
        "cursor": {
          "ref": "12c7a605-4955-40a3-ae44-6a43f8fc4f5a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7f704d3b-bbce-42e6-a032-f35a34b5492e"
        },
        "item": {
          "id": "c62c40ca-c1eb-4ac0-b56b-60d4b27fe609",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "372bd7dd-659b-48aa-9db5-e44bc133744f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2d039e-0819-46e8-949c-0ebde10aa83f",
        "cursor": {
          "ref": "7f675354-95a2-4004-bfcf-9f9e1c7014e6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b9c88b1b-8e83-4e75-b43a-db9bfb4abffc"
        },
        "item": {
          "id": "1a2d039e-0819-46e8-949c-0ebde10aa83f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45b7735f-5680-44fd-ba83-e5059917dbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a85fc71-009a-4ef6-9b54-fb56d42a64c5",
        "cursor": {
          "ref": "e979e062-7206-49aa-b932-e78a20d13cab",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6f24943a-58ed-4114-961d-0149c9e2c6ac"
        },
        "item": {
          "id": "9a85fc71-009a-4ef6-9b54-fb56d42a64c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a304b0f-8065-4c92-94b7-0ede8eee88a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e9ee01-dbca-4421-ac66-0c7e5ceae657",
        "cursor": {
          "ref": "20f6c5c5-43d9-44a6-9e39-bef27e1a0daf",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7daf943c-dd76-414e-9cd7-73554c857109"
        },
        "item": {
          "id": "a9e9ee01-dbca-4421-ac66-0c7e5ceae657",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5791d6d1-fe92-47cf-bf33-eef45f12755c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c2e326-4f6c-4153-9e00-c89199f153a0",
        "cursor": {
          "ref": "819bb9c6-465d-4dfe-ac4b-672675bf4d28",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4abf4370-e3e2-41b1-9170-2660ccf974c9"
        },
        "item": {
          "id": "45c2e326-4f6c-4153-9e00-c89199f153a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "016e1183-4a25-4eac-bbc5-f6bcc57a3222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b48d16b-1012-4704-b0fd-a034569759ba",
        "cursor": {
          "ref": "38409d2d-3cfc-49db-bef8-1886cb9423f2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c0036e10-19b1-4954-8e5d-73b3a8788854"
        },
        "item": {
          "id": "8b48d16b-1012-4704-b0fd-a034569759ba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "52bd79d3-5c12-4dc9-b6d1-ae53f3a41fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80439599-014a-4332-9a64-f0c8d90b638f",
        "cursor": {
          "ref": "211639b3-36f9-4e5b-8311-679dbd12e977",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8b9ff7af-c39f-4906-8b04-8d8f34125d30"
        },
        "item": {
          "id": "80439599-014a-4332-9a64-f0c8d90b638f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68718f98-2e26-43af-a452-8fc7083b665c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade19ec-545c-459d-bfe7-a1e8c900aace",
        "cursor": {
          "ref": "3307dc7b-4acf-4acf-9643-3ba37f9bf8bc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44ec4c61-3c8f-45bc-855d-ebbe6719277f"
        },
        "item": {
          "id": "7ade19ec-545c-459d-bfe7-a1e8c900aace",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9972a90-58da-4ebd-9967-28ba306d842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3201b2f-45de-4ab3-a281-6f502364bcb3",
        "cursor": {
          "ref": "3903ecb9-43e1-4f82-9c10-ed083d5fc346",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf44b16f-12c4-494a-8cda-5108a13f0dfc"
        },
        "item": {
          "id": "f3201b2f-45de-4ab3-a281-6f502364bcb3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a372ec6-d3bd-4efa-b213-95d8d12fb57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f789ea54-dfb4-4545-aae2-5da66a2b711a",
        "cursor": {
          "ref": "cab9abc9-b5df-4088-9436-edeb54a5b81f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2a05786-e7f9-41a6-b9ac-0be9e5947b79"
        },
        "item": {
          "id": "f789ea54-dfb4-4545-aae2-5da66a2b711a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb24fac2-5b71-4ef2-9539-fa5b0dfca7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21289e33-654c-4420-b726-8b2897f2bfd5",
        "cursor": {
          "ref": "a3a9a0e9-c069-4f19-bd47-b51cbbb5c09a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ff0b99c4-d239-4050-80f6-8ef4ec31a776"
        },
        "item": {
          "id": "21289e33-654c-4420-b726-8b2897f2bfd5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "451d042d-9c62-4aaa-9280-a756273ced2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a087b125-d5ca-477d-b7ab-7fc80053eb87",
        "cursor": {
          "ref": "0a2b1058-57ac-4ad4-90ce-84a4659c78db",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c676264a-d517-4768-9ddf-0efa22ef7ef6"
        },
        "item": {
          "id": "a087b125-d5ca-477d-b7ab-7fc80053eb87",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f4b48b2-2868-4e8b-a368-93a22e014b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08bfb5a-de48-48ae-8083-835211001546",
        "cursor": {
          "ref": "252b28ab-04f7-45ac-86ed-97e836f1f933",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "976b8cc1-99c5-4ead-9df2-1a7a4c7f2442"
        },
        "item": {
          "id": "d08bfb5a-de48-48ae-8083-835211001546",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f6ea12c4-583a-458e-a33b-91c7d9044b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7d7aec-3225-4e2d-85a6-9693a95f8b8f",
        "cursor": {
          "ref": "a17bbbf4-6840-49f7-944d-96c908ba59ea",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b8935b7a-a2d2-4715-98a0-8232060653a5"
        },
        "item": {
          "id": "cb7d7aec-3225-4e2d-85a6-9693a95f8b8f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0adec529-570b-424f-a97a-7b862c9f7ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f80dfa1-d9e3-48af-9be9-fb1f8ac8ff58",
        "cursor": {
          "ref": "0225916b-7858-404a-9491-895a324d9932",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d383a6b7-5505-48b6-9752-739f430e0666"
        },
        "item": {
          "id": "3f80dfa1-d9e3-48af-9be9-fb1f8ac8ff58",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9e90009e-ac5e-4528-975f-571b1bb6be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fdd4d2-9ea6-42ab-96bc-dc129600543b",
        "cursor": {
          "ref": "2a7f37c2-1799-427f-8c0d-b07a34643fbc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aeeafb89-2d51-4767-9b7a-1af6e3cb3e40"
        },
        "item": {
          "id": "f0fdd4d2-9ea6-42ab-96bc-dc129600543b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "237560d9-1c95-4a87-bca4-b4ceba434e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2787b9-bf06-4b92-aafc-4e00388e1f11",
        "cursor": {
          "ref": "b0521a30-5b27-4306-b025-7b79c6c0835f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81b7ad52-8453-4e17-8356-94a37cfc395d"
        },
        "item": {
          "id": "ae2787b9-bf06-4b92-aafc-4e00388e1f11",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f34a8b4b-893f-4323-8861-04f30bd5c836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d16f9b1-e803-4fdb-97b8-e08d69a689a1",
        "cursor": {
          "ref": "4e2de5af-a66e-40fa-847f-e13364bb0455",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "20c1d97b-e184-4afd-a520-56fa59bc3abc"
        },
        "item": {
          "id": "1d16f9b1-e803-4fdb-97b8-e08d69a689a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e23d9e14-cade-4387-88eb-53f70b1a5444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd8eda-e28d-4334-b249-b8bf047adf44",
        "cursor": {
          "ref": "e2d533ce-bcd4-4f83-a26c-cc955ddd0a02",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "73b9bc97-9719-4420-903a-8cc6235941b0"
        },
        "item": {
          "id": "53dd8eda-e28d-4334-b249-b8bf047adf44",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "79df0e6a-ae90-42c1-aba1-bb7524f6e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635e1472-1c16-42d5-8133-a10e0c83f33e",
        "cursor": {
          "ref": "5c8f2738-2329-46a2-ba09-63e6b1917405",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "97dfffea-44d0-4054-a303-7f61a86c4f87"
        },
        "item": {
          "id": "635e1472-1c16-42d5-8133-a10e0c83f33e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08da64c5-fcb5-4ae8-b069-0a31cadb62ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb21a2fc-ab24-4505-b8b3-a001f80f7cb2",
        "cursor": {
          "ref": "6a94dd6c-564d-40b8-b745-4ed4f6defe41",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "41e4ffab-45c7-4c71-a6c6-26f11334e082"
        },
        "item": {
          "id": "eb21a2fc-ab24-4505-b8b3-a001f80f7cb2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4bf0f472-3ed4-44a5-ab29-c4ddf9cb99c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243c37a3-5bd5-4c3c-994b-f7b3c8885db2",
        "cursor": {
          "ref": "3d88ee61-4f23-43cc-a787-29345e8028ba",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9403330a-818c-4287-98b3-0ac2edaabca5"
        },
        "item": {
          "id": "243c37a3-5bd5-4c3c-994b-f7b3c8885db2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62e9a796-8a48-4606-81c3-1118d51fe249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed15d6-3b84-4f47-aed0-3cad0ae13a21",
        "cursor": {
          "ref": "f0062fa6-c68e-437f-a918-2f6d5d0463fb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8935c7bb-4a28-42e4-ab38-607811824f08"
        },
        "item": {
          "id": "45ed15d6-3b84-4f47-aed0-3cad0ae13a21",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a2de8431-bc91-4222-98e3-a2c0078f6516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142f62f-5b13-472c-b87c-2badba51d422",
        "cursor": {
          "ref": "f80065dd-8d0e-43e7-b28a-74d148dcbcdd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "51d2dbd0-e50b-4d00-9869-6e1aa3963762"
        },
        "item": {
          "id": "f142f62f-5b13-472c-b87c-2badba51d422",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c9303ba9-a7c7-4465-9977-62a1898bccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e618aef-f36c-4196-8048-93000b3a36eb",
        "cursor": {
          "ref": "7ea6dbff-5dc2-4e12-9a91-0fbbefd40e04",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b0eeb871-e083-4646-938a-df5709b386bc"
        },
        "item": {
          "id": "2e618aef-f36c-4196-8048-93000b3a36eb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78e6ab5c-6615-470b-ad64-d083c89f86c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e003460a-a907-48b7-9989-d9d4b502d2ca",
        "cursor": {
          "ref": "9137c04f-e794-46ec-831f-3a204b8a0553",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "074189a4-dc61-40ac-a124-14b440bc1795"
        },
        "item": {
          "id": "e003460a-a907-48b7-9989-d9d4b502d2ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c84fe4e5-77b4-400c-a8a7-84c8c84395d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3964e70-b808-4cde-b78f-18f8cb790855",
        "cursor": {
          "ref": "a0862bff-13b3-4cf2-b358-980d216eb0b6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c520047a-c0c0-4fe4-864c-7ea26307dfd5"
        },
        "item": {
          "id": "d3964e70-b808-4cde-b78f-18f8cb790855",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eab48ff0-c6f2-4fb5-9e2a-df911eba551a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7462e3-d87f-44c8-9ccb-fea4ba96466f",
        "cursor": {
          "ref": "7576d5cb-3ff6-4db7-b2c8-08c22012f3eb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0375b9cf-0347-4133-b55b-6d51b96cfb3c"
        },
        "item": {
          "id": "6b7462e3-d87f-44c8-9ccb-fea4ba96466f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4081908-ddf2-493b-a967-8ea13a5d1e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9215f2-b9c9-48e9-887e-85611d8c5633",
        "cursor": {
          "ref": "0107caa3-2a57-4293-95ca-9d3c7d18553b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a396a6e3-8aed-4d73-9cd2-ab0e6d9d045a"
        },
        "item": {
          "id": "da9215f2-b9c9-48e9-887e-85611d8c5633",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e0e3144-b775-4d09-bad4-570956c1d2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe45673-999a-4915-ba6c-db7e68c6c0ba",
        "cursor": {
          "ref": "7e769271-4898-4d88-96dd-47f1d4a128f2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "04854f05-64c8-4e04-b700-3b2f0ee73cb1"
        },
        "item": {
          "id": "1fe45673-999a-4915-ba6c-db7e68c6c0ba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41521f1d-9d94-4b14-85fb-4dbba3bf5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93720716-6a0d-4c96-bd42-17ef6ea607a9",
        "cursor": {
          "ref": "f7a260d4-11aa-4c52-9e2f-2dbf780600a4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6e4cdc9c-e006-4434-8942-55d89359ac2a"
        },
        "item": {
          "id": "93720716-6a0d-4c96-bd42-17ef6ea607a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "562ecbfd-9a64-4d84-8a71-dd16627ddd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3b8ddd-1651-403a-84d4-9e9fce259b2e",
        "cursor": {
          "ref": "7b2aaa21-f1b8-4b24-91d2-3637473a1155",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a9d6d54-9581-430a-9c16-05f2e8478dc8"
        },
        "item": {
          "id": "4c3b8ddd-1651-403a-84d4-9e9fce259b2e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "691578c5-2833-4bdf-8a84-3bbf6992e07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e040f68-826d-4686-8a8c-b3b2077cdf25",
        "cursor": {
          "ref": "923a987d-70ff-42ff-921a-51507d2c6b7f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75f46a48-1d50-417c-88b9-82a07d72d94e"
        },
        "item": {
          "id": "7e040f68-826d-4686-8a8c-b3b2077cdf25",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8ca508fc-12b6-43c6-8290-4f40b27aff43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee1e433-35b0-4b05-be28-91dd45694f13",
        "cursor": {
          "ref": "7876bc07-5e5b-45a5-b1e4-786740bf8a87",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "718e82dd-2cf4-482e-8f67-2520d5d3299f"
        },
        "item": {
          "id": "8ee1e433-35b0-4b05-be28-91dd45694f13",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "807278cd-a8d2-4a7c-b90d-5dc93fb79837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe9da2-9cab-4ab5-834f-2c1c1bc47c51",
        "cursor": {
          "ref": "4db0eb03-ca65-4ea8-8acf-912ff77f3da9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b16ece3-cc6d-402e-b6cf-df9a5ed55c0c"
        },
        "item": {
          "id": "aafe9da2-9cab-4ab5-834f-2c1c1bc47c51",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "31676c50-01ae-4b21-9fab-67ed8ebbe68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12e542-9f1e-48bb-9fea-839ad4f09d6f",
        "cursor": {
          "ref": "1e6582e0-9cb9-4143-bd74-aad2fe7a4056",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d277e5e-f19d-444f-aba3-d4eeceb0f78c"
        },
        "item": {
          "id": "5c12e542-9f1e-48bb-9fea-839ad4f09d6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "197c7640-605e-44f1-924d-d716689fb638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5bfab0-ebb9-42c1-b7e2-e7538df0a6d7",
        "cursor": {
          "ref": "e1ef01cb-5ea3-4409-87f5-846d6be1c2e3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "03feb9ac-3398-4b31-8234-4cca41b18a8e"
        },
        "item": {
          "id": "9a5bfab0-ebb9-42c1-b7e2-e7538df0a6d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d5bb329-615e-49b3-9d41-7a4117dfa1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70aee7-3306-4026-9396-9c3e634863c8",
        "cursor": {
          "ref": "c184f908-17b6-4f1f-bc3b-9a64c216d0f9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "855abd02-6a6e-4ff2-9920-8b6e89e4dba1"
        },
        "item": {
          "id": "9c70aee7-3306-4026-9396-9c3e634863c8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a57ca350-d904-473f-9d6b-21013552da6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62056dd8-a36a-4c6b-823e-53065c2448ba",
        "cursor": {
          "ref": "bd5013bb-98ae-4bf0-87eb-35c762dcbaf7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "717168bc-7586-4b18-a07c-412608a64af9"
        },
        "item": {
          "id": "62056dd8-a36a-4c6b-823e-53065c2448ba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b9c030c7-609a-44c4-aea8-333c1e8b963d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ddb7cf-6dab-4b2d-ac31-e589e3cb3561",
        "cursor": {
          "ref": "84ac3add-d587-4485-9b00-193cd7331f52",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "933ffc93-9da9-420e-a3ad-b44919035764"
        },
        "item": {
          "id": "33ddb7cf-6dab-4b2d-ac31-e589e3cb3561",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "37631858-dba1-461d-8075-f6cab710b2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8accc93-7d28-4fdc-b295-c21bb57b0131",
        "cursor": {
          "ref": "8537d9cc-6987-44bb-a933-7f2926ee2c95",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c85f57c2-e042-4f46-9310-516df75b19a5"
        },
        "item": {
          "id": "d8accc93-7d28-4fdc-b295-c21bb57b0131",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf437b8a-e0db-4ff8-9e44-9a1228f11073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42715ed9-3d5c-47e9-a7f9-df10fe990ed3",
        "cursor": {
          "ref": "37e00a75-4fac-4184-a527-8a2cc3687c9d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "979b253b-c07d-413f-aa01-03dc8762f9c6"
        },
        "item": {
          "id": "42715ed9-3d5c-47e9-a7f9-df10fe990ed3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cdac39ac-a24f-4ce6-90bc-7c1c6e40aa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb16f11-4cfa-4e10-86ed-aa1fb04b51f1",
        "cursor": {
          "ref": "a288e25f-b735-4202-9f19-92c7f922e8d6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a1ae826a-2a00-4769-bc10-35cd7a516248"
        },
        "item": {
          "id": "adb16f11-4cfa-4e10-86ed-aa1fb04b51f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "771d3136-2c0d-45c0-8c7b-e3f2599a9e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0222e0-74ad-43cd-9bea-36b30dc079cc",
        "cursor": {
          "ref": "88faabb1-b935-43c8-afd9-f53c0a713652",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a6cc8b8c-5691-4113-8ee3-61433b5d74ef"
        },
        "item": {
          "id": "ea0222e0-74ad-43cd-9bea-36b30dc079cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b4fde6a5-4b73-48b0-a07c-5c27a8ec6236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4c1b4-8ffb-4ee3-8047-4bbe46f7ccae",
        "cursor": {
          "ref": "876379f2-f8c0-49a8-b042-76f977ffbd63",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4548ffe4-001e-46f4-9418-d02abe44f461"
        },
        "item": {
          "id": "0ca4c1b4-8ffb-4ee3-8047-4bbe46f7ccae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1150d2c2-ea12-45b0-8cb1-d485aa156d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57dede-94ca-4e69-8dd5-269c39a12498",
        "cursor": {
          "ref": "0fcd4b88-f07a-46ef-b151-cacecdf99ba5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "38ce4818-f629-4339-93bb-79388ef2922b"
        },
        "item": {
          "id": "7d57dede-94ca-4e69-8dd5-269c39a12498",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bcaa6c4b-f384-4f3e-8dff-4a355502bd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26552ce-a7ef-4aa9-81b2-e033016d665b",
        "cursor": {
          "ref": "6991c2fa-c812-4aba-bb17-c3373c07edab",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "841dab01-e91a-4268-b9e4-18542e9b1f61"
        },
        "item": {
          "id": "d26552ce-a7ef-4aa9-81b2-e033016d665b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3a568a8e-c39a-4841-b7cf-9d0df12539b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236ca1a2-7a06-4e0c-9cf2-baa48579356a",
        "cursor": {
          "ref": "fa3c2267-085a-46cf-94b5-109bd51887eb",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "89c1faf9-1c09-40f7-bd6b-cd7ef379b699"
        },
        "item": {
          "id": "236ca1a2-7a06-4e0c-9cf2-baa48579356a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b48f0a62-3d23-4246-b6da-4b104514ab64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc61771-792b-4d85-9d59-162a5cdefcac",
        "cursor": {
          "ref": "8e9f6f5f-afa1-4b65-b3a6-e66f81e82f57",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "db5b6e22-f79a-4781-8f23-8d802e9e97d8"
        },
        "item": {
          "id": "ebc61771-792b-4d85-9d59-162a5cdefcac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1cce00b9-c6be-41ad-be33-6a2c84dc0172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a534ff-d5d4-4c07-8957-098b3a762913",
        "cursor": {
          "ref": "5548884a-9e92-455d-9a02-1cd4d12189b6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3e17c492-ce4e-47b4-9829-1b81261ca5b8"
        },
        "item": {
          "id": "34a534ff-d5d4-4c07-8957-098b3a762913",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa925f76-3770-4c4c-9c5c-bad036e4f186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77300533-0142-467a-9020-642f6e60ef60",
        "cursor": {
          "ref": "21029e3a-7a3b-4b95-97c3-d3604c4d45d1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b095de7-3f15-49cc-a4aa-25a3382fc63d"
        },
        "item": {
          "id": "77300533-0142-467a-9020-642f6e60ef60",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "40276467-8aaa-4dbf-aecb-9e04f3e8773e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e40040-28ef-492f-a610-18711d49700c",
        "cursor": {
          "ref": "389c4c35-4176-45e7-8f74-72620f5de417",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cfd36873-9338-4df5-9a3e-831b09b1d95e"
        },
        "item": {
          "id": "d0e40040-28ef-492f-a610-18711d49700c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "362931bb-7f61-4797-946b-3eb2a6061bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c769153-519d-483d-bbcb-b773393300fd",
        "cursor": {
          "ref": "efdd9328-f387-413b-92b9-7f47c9a8beb8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "19afb6d8-667c-4667-baf5-49d507597e7b"
        },
        "item": {
          "id": "6c769153-519d-483d-bbcb-b773393300fd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "be886a82-ca05-4ec5-9319-66fd2181b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1217bcce-e2a0-47a4-a8db-8a400d66912b",
        "cursor": {
          "ref": "39ddd86a-2fae-4dea-9bff-ece31c7c9e3f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "072d48b9-5b29-4f58-89a2-3749603d9b53"
        },
        "item": {
          "id": "1217bcce-e2a0-47a4-a8db-8a400d66912b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "da275143-629d-45db-8dc9-74fa56862d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a58064b-b00f-4b8b-a624-f99aa977f1d1",
        "cursor": {
          "ref": "fd249673-3227-487d-83b5-ad8cc05b9921",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "baf71ff2-9e9b-44dd-9ae3-79ced97c503b"
        },
        "item": {
          "id": "6a58064b-b00f-4b8b-a624-f99aa977f1d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dace4244-5f40-43c8-980a-08f56f455734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4628cdfb-d699-4abd-a9db-04211cf04aa1",
        "cursor": {
          "ref": "b78f4ee8-6b81-4033-a5cc-30ca7f7d27a9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cdf5cb63-7e2c-4f99-b12d-10255450669d"
        },
        "item": {
          "id": "4628cdfb-d699-4abd-a9db-04211cf04aa1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2cbd9980-edf4-45e7-a56b-8692d1cf3a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c7270f-94fd-430c-aea3-e0c0739289e9",
        "cursor": {
          "ref": "a42c41ce-e06f-49f9-827b-4f38ab3ee364",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7b27d442-1235-4120-89aa-48cab9099e3e"
        },
        "item": {
          "id": "03c7270f-94fd-430c-aea3-e0c0739289e9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "464ca75e-6811-4b4b-828a-c62af1c925ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f3df18-2488-4833-b24f-43af0f8e9bc9",
        "cursor": {
          "ref": "f62f63b4-59df-4a13-95b9-f1593966affb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fd52965e-2868-49e0-837c-b104c9998467"
        },
        "item": {
          "id": "04f3df18-2488-4833-b24f-43af0f8e9bc9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c409571-4ac8-4d61-965a-ccc4d3b3fddc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211dd5df-8d6d-4edd-91c3-cfe8e121f916",
        "cursor": {
          "ref": "5d2ce158-e0ff-489f-bfc0-fa89d3a388bd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d99f4fe-752c-4f7b-a4d4-f7d1c22f732b"
        },
        "item": {
          "id": "211dd5df-8d6d-4edd-91c3-cfe8e121f916",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "accb9162-5a44-46ed-8cdf-cd94fe7a4d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0642c7f-5543-4e12-a0fd-f1d99f5b5318",
        "cursor": {
          "ref": "d59b0d4f-b583-4f88-997a-710360a8e566",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0aa7dbfb-ba12-4432-b2df-f63fc5b32147"
        },
        "item": {
          "id": "f0642c7f-5543-4e12-a0fd-f1d99f5b5318",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "710c5f03-82b4-4341-a1d2-4d8c6493e53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db439b-ade2-4c9f-aae3-29d70f541910",
        "cursor": {
          "ref": "4fe752ba-b255-4eb2-8239-6300c04ac80e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1d3551a9-a8e8-48a7-9fa5-d3cfb48002fc"
        },
        "item": {
          "id": "d4db439b-ade2-4c9f-aae3-29d70f541910",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86c3df79-403c-48ea-b2cf-74dcc1874c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6777a997-ae10-4ffa-a683-c232f34221bc",
        "cursor": {
          "ref": "fc254ba9-16dc-4894-ae75-5031e6c289f0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "39fef4d6-e5c1-4173-92f6-2f3dffad3f07"
        },
        "item": {
          "id": "6777a997-ae10-4ffa-a683-c232f34221bc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "04fed9ec-fbbf-4e73-9693-58aa2fad0c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b9b061-20f6-4cce-9f62-50deb0021b9e",
        "cursor": {
          "ref": "74636bed-48d0-44a1-9aa4-6ee5478c03ab",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "39e685ce-9bd6-4c1b-af69-acf60f285abb"
        },
        "item": {
          "id": "c6b9b061-20f6-4cce-9f62-50deb0021b9e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14c8a29c-bca3-4734-89ad-1d88db537179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fa64f5-1961-4e06-ab24-817ae348d47a",
        "cursor": {
          "ref": "351d4ff6-d721-434a-b76b-6122b0e02410",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "be1754b2-caa6-4812-8858-854918e7ce21"
        },
        "item": {
          "id": "89fa64f5-1961-4e06-ab24-817ae348d47a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b51f947-f5d4-447b-a6db-d69d3fa401ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec64afc-ba07-4069-a299-e30bdd327979",
        "cursor": {
          "ref": "07d4c057-36e3-4ee9-a92a-6c934ad20c35",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9639e3d2-bdc6-48d8-890d-08cd9ed34b4a"
        },
        "item": {
          "id": "3ec64afc-ba07-4069-a299-e30bdd327979",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4edd7106-7e71-41ba-87e3-a8fee974bff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a196249-3234-4383-85ac-dc97ea6af37e",
        "cursor": {
          "ref": "771f1965-7fd5-48d8-93c3-6e6c64f97850",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cbdf111c-d39f-494d-8bde-f8bb1e638545"
        },
        "item": {
          "id": "6a196249-3234-4383-85ac-dc97ea6af37e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a3b18f40-2e6e-4afa-b184-966a2209e7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d3a88-e5e8-46bb-ac8c-1bc9eb131baf",
        "cursor": {
          "ref": "74d9bdf6-e893-40f5-aa12-5cb4294aeec8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7918f431-bb2b-4598-b45b-fd1b17ff4628"
        },
        "item": {
          "id": "4b1d3a88-e5e8-46bb-ac8c-1bc9eb131baf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f97a6f28-4936-459b-99b1-37b04359e6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5215f428-9c53-4149-ab2d-a15f429c0611",
        "cursor": {
          "ref": "d44936ab-9df2-4308-88bf-1d78904b4924",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9eb075f6-3f05-4654-b78a-4f11ec6e782d"
        },
        "item": {
          "id": "5215f428-9c53-4149-ab2d-a15f429c0611",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8339f408-c59e-42b6-b78d-43e176a13f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5531f88c-bd73-4fa2-b50f-10f6d577a5a5",
        "cursor": {
          "ref": "b31a001d-bf45-4bba-a70b-d10c10b8a29f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "edcc0600-2b9c-493f-830c-92f1776c4ba3"
        },
        "item": {
          "id": "5531f88c-bd73-4fa2-b50f-10f6d577a5a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6dbff26b-2033-4248-9134-451ab515443d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e7a8c-a44b-4439-a9ed-f6f083b3e28c",
        "cursor": {
          "ref": "f1f23a24-33c5-49d5-a749-3e34fe95cb0e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8bfff943-d86b-4102-b3bb-172d4660a7c4"
        },
        "item": {
          "id": "a54e7a8c-a44b-4439-a9ed-f6f083b3e28c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3dce49cc-54bd-4159-9a7e-c9cf1c89f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23180ad-4852-4daa-a2ad-bc9901556400",
        "cursor": {
          "ref": "85975104-dfe5-4500-9807-99fd1bb10272",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7309118a-4de2-4d54-84c3-d050a7ff3baf"
        },
        "item": {
          "id": "d23180ad-4852-4daa-a2ad-bc9901556400",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "57d7f685-d9a4-4a63-932b-697a3e87c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f561ce3b-4217-43ad-bcfe-4f3375ab0547",
        "cursor": {
          "ref": "7930a5f5-34ff-44e3-bbbf-6d37f09364fb",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "403be77d-fad4-4ad0-83b9-bf1791e94f0f"
        },
        "item": {
          "id": "f561ce3b-4217-43ad-bcfe-4f3375ab0547",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "75d316c6-69e0-418c-8ea4-312d37af4838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4677315-e26b-49ee-8fd1-17e794667cd2",
        "cursor": {
          "ref": "465c2bbf-72a4-4840-97dc-1181c93e3699",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "27094447-529e-44e2-882f-213f82990700"
        },
        "item": {
          "id": "b4677315-e26b-49ee-8fd1-17e794667cd2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "110ea9fc-c4f8-4a26-b95f-03a232f18aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c6ddfe-1e66-45c0-bec6-6d5a8341e28e",
        "cursor": {
          "ref": "6be8f264-68f3-4f17-80fa-637fcc749972",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "895f5d36-36a9-455e-b2f3-d2157afda034"
        },
        "item": {
          "id": "f7c6ddfe-1e66-45c0-bec6-6d5a8341e28e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2d4ffa21-a08c-4790-b1aa-c2d83e6d0bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae6ecf1-8eff-443f-8838-a36744ebe93c",
        "cursor": {
          "ref": "c4c178df-ee6c-46f6-adc1-95cb25ab5b31",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "69237150-b331-40a1-866b-d1c5f33f4b5e"
        },
        "item": {
          "id": "4ae6ecf1-8eff-443f-8838-a36744ebe93c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9974448e-8b68-4e6b-83ff-1761a024bb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0e5c8c-f60a-4677-b545-8ab5b58bceca",
        "cursor": {
          "ref": "e104fd5f-7012-4ba3-b032-f2a80fd8e33e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c358968a-c9cc-40a0-98a5-d6caf4fd213b"
        },
        "item": {
          "id": "7e0e5c8c-f60a-4677-b545-8ab5b58bceca",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f111063c-a308-46cf-b78e-7b7dd330a364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830af318-8bf8-4bea-9d79-a8f455148a56",
        "cursor": {
          "ref": "2dfe46c3-5556-4ee3-a150-cedf431c1f10",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4b0fdcb0-f62c-4cf6-ab96-334e44f4bff8"
        },
        "item": {
          "id": "830af318-8bf8-4bea-9d79-a8f455148a56",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1abc9282-f597-4c02-a092-3414b72d6e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2e19a8-d7b2-47c0-927c-d3fcc8aa80c4",
        "cursor": {
          "ref": "8b07df87-9821-40d6-9c4b-1aa79cc7f90e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a0f842ab-1122-4abb-8a86-c51cb3ed5c6a"
        },
        "item": {
          "id": "dc2e19a8-d7b2-47c0-927c-d3fcc8aa80c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc06d94f-d5f2-4d10-b504-52d41f17f0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f66379-cd6e-46c9-8a79-c43e465d6801",
        "cursor": {
          "ref": "97e792c7-1c16-430e-888e-b49433932eec",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c03f7b20-aa39-4a38-b7f1-dba038067542"
        },
        "item": {
          "id": "55f66379-cd6e-46c9-8a79-c43e465d6801",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "43bbb0c7-5193-4be7-bcd8-eac6f5f9980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090aeba8-1ece-4b5e-be9e-284236440fd7",
        "cursor": {
          "ref": "66814a6b-4902-44a2-b5d5-ee8e74429160",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7390434a-d837-447a-a4c9-69fdbd5a013b"
        },
        "item": {
          "id": "090aeba8-1ece-4b5e-be9e-284236440fd7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "15093e40-6886-418e-a4dd-4475379cd2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa7d8a0-3a52-41ed-b5f6-b17aa95f13a4",
        "cursor": {
          "ref": "6c40cb2a-48ff-4acd-b6c9-be4ed95fe5f3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fcd61e0c-912e-406d-b457-2f7a8f46cc9d"
        },
        "item": {
          "id": "5aa7d8a0-3a52-41ed-b5f6-b17aa95f13a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d148ed7-c9ba-4612-b733-3ab255c23892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cde473-b17d-4aaa-bf28-e0b15d738649",
        "cursor": {
          "ref": "e287a488-38be-4f01-a3a0-8894b4a8e532",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c8b9f26d-b051-4da3-bc54-8087642f651f"
        },
        "item": {
          "id": "90cde473-b17d-4aaa-bf28-e0b15d738649",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "318d86b0-58c9-44e8-b913-035b3a5522b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42cbf05-a2d5-4468-a104-95729d03a22b",
        "cursor": {
          "ref": "148afca7-609d-4619-a7ea-7d73f1c93bf4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a99af9f8-76f1-4b72-8259-ca8e701355ac"
        },
        "item": {
          "id": "c42cbf05-a2d5-4468-a104-95729d03a22b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "15e5c915-f812-45cb-bc7e-64ea375c942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9d19ca-03a8-44d4-9ae6-8cec120cc30b",
        "cursor": {
          "ref": "72444a5e-1942-457a-b3d6-10040ede20da",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "11132e27-a8be-4c08-a7e0-93ea0b1208a0"
        },
        "item": {
          "id": "fa9d19ca-03a8-44d4-9ae6-8cec120cc30b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6fb208a3-6d70-4673-8d8b-6f074a7d49c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847f0b4c-7b40-4777-bc61-85ff0538ea91",
        "cursor": {
          "ref": "4a7dc7a7-662a-4c1e-b44e-4147029af06e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "306f9bce-74ba-47b6-98ff-bd86ce2c0e49"
        },
        "item": {
          "id": "847f0b4c-7b40-4777-bc61-85ff0538ea91",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6067fecc-4807-4b40-925a-34c9b5f9b5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da343f71-8a9c-4590-bc3d-efa76790a44d",
        "cursor": {
          "ref": "ff48c6a7-b6ea-4677-9c9b-423e6c40ccb7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1d3908f9-cf6d-46c3-9617-1faa3aea38b0"
        },
        "item": {
          "id": "da343f71-8a9c-4590-bc3d-efa76790a44d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "335c1e44-c9e5-47ac-9d5b-2490404d9b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0233480-b8db-4a8d-b889-0e82d69236d2",
        "cursor": {
          "ref": "330ff62b-99c4-461b-a301-ecd564335c37",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6b806ff0-9169-4944-b8c3-78808b60e591"
        },
        "item": {
          "id": "b0233480-b8db-4a8d-b889-0e82d69236d2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f439a0ec-430f-45ea-b1fb-de88a4a8e62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b728dc4-dbc3-49a9-a879-352b1a3efdf7",
        "cursor": {
          "ref": "d790c169-26eb-42e4-b72b-19e93b6a9127",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "742169ba-1f85-4d66-855a-cf2ea7be038f"
        },
        "item": {
          "id": "9b728dc4-dbc3-49a9-a879-352b1a3efdf7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "36d321d3-0b5c-48e7-a5d1-2e6e6d6bb7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb78227-4e9d-4264-a876-ce9bf9f20cb2",
        "cursor": {
          "ref": "7d191db4-c53e-492a-84ce-fbe0bf4cc0f4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ba6d447f-b0dc-4a2a-838a-08f4cf8027fa"
        },
        "item": {
          "id": "adb78227-4e9d-4264-a876-ce9bf9f20cb2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fe068af7-4a49-437a-aa90-c4181e0b24b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d5a504-471c-4f5e-a329-077c88680144",
        "cursor": {
          "ref": "d1d272a2-d8f9-4f89-a5fd-08b89a88238e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8860e5c5-f873-48d6-94eb-6d690148f2f4"
        },
        "item": {
          "id": "11d5a504-471c-4f5e-a329-077c88680144",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d61b40f3-7010-49f3-8968-5b6537b95865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc7e9ce-35d2-4e9f-86e6-78c42dbd6b84",
        "cursor": {
          "ref": "0503b19c-8cc7-4420-b3d6-605a8394c9f5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a2986663-ea2e-4256-81d9-93f85dd95d77"
        },
        "item": {
          "id": "8fc7e9ce-35d2-4e9f-86e6-78c42dbd6b84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c3ec22ea-7664-414a-9e39-f467d093fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d8baf1-7835-46c7-9309-8e801ba8330d",
        "cursor": {
          "ref": "200fd4b3-7dea-4365-a739-cccf5fb0b09b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f1a93c6b-124f-49ce-8677-4c605772a4f9"
        },
        "item": {
          "id": "46d8baf1-7835-46c7-9309-8e801ba8330d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b1696989-20d1-403f-bc10-079f37578f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144a5ee8-a87e-4f9a-8986-89e139da765b",
        "cursor": {
          "ref": "71dae19f-30e3-4f36-95b3-8ccc67061eef",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f7009bf6-a697-4c48-a18a-2ee1aa54b1b0"
        },
        "item": {
          "id": "144a5ee8-a87e-4f9a-8986-89e139da765b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d29e7f2d-e06c-4a6a-82a9-867285cd50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45155cfc-58f9-4dce-a913-caddb0366e1e",
        "cursor": {
          "ref": "656dc425-121d-4f14-b0ea-cb0839cbf913",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "464cae4a-666c-48b9-9e1d-0787b86b6efa"
        },
        "item": {
          "id": "45155cfc-58f9-4dce-a913-caddb0366e1e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe958cc2-afa8-4524-8226-82ebf109ee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d054f337-5460-44ed-b2c8-bb7804c9c88d",
        "cursor": {
          "ref": "867a80fb-a183-4635-b48f-2d2836f730b9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15d393b2-b3bc-47e3-b1ba-ca2a4aac4968"
        },
        "item": {
          "id": "d054f337-5460-44ed-b2c8-bb7804c9c88d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "58089274-4157-4e6d-9967-18dfb1b799c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8eb29c-417c-4fda-a311-ff186286a1ab",
        "cursor": {
          "ref": "7deb359d-c0d3-4801-a6f8-747d4b920e38",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d2f487d-561f-4588-8351-3d5d2d31204c"
        },
        "item": {
          "id": "bd8eb29c-417c-4fda-a311-ff186286a1ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a732e8e0-d1c0-49ba-8491-22aa6730dd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d2b5d9-4f19-48b7-8959-41276ffb934d",
        "cursor": {
          "ref": "68c7eb7f-76c2-41e2-8914-60558fddb594",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "35f11ac1-6736-4d4b-b649-c4c774e38733"
        },
        "item": {
          "id": "f8d2b5d9-4f19-48b7-8959-41276ffb934d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4d274683-41a5-46f9-8a63-251aa5df305a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb98bb5b-ff10-44e6-8a33-3a79c81548ed",
        "cursor": {
          "ref": "e3ebe030-9598-415c-92c5-542776e1d52f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ca29d48-44bf-4c22-a712-06cf055e3b87"
        },
        "item": {
          "id": "eb98bb5b-ff10-44e6-8a33-3a79c81548ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "75064eb8-6a09-4646-a3e7-9291ce338b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159b7149-d623-4f47-8c92-313127411cd7",
        "cursor": {
          "ref": "60c61fb2-345f-4c83-81a4-67d38ad1c8fa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5601aa31-9c1f-46ff-bba8-2da9ac99301d"
        },
        "item": {
          "id": "159b7149-d623-4f47-8c92-313127411cd7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a3dc4cee-8649-4fc3-98b3-dfee1514ba92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6802a27-d1bc-475d-85bf-d3a03d24cd64",
        "cursor": {
          "ref": "734e6838-e8cc-4a5e-aa41-1352903cce9e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7d36e87b-397f-4fee-bdfb-036aeaf02548"
        },
        "item": {
          "id": "e6802a27-d1bc-475d-85bf-d3a03d24cd64",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91436e36-a05b-407e-a454-c185afa975b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c626d43-4017-4975-8b3a-47f2fdaaa33c",
        "cursor": {
          "ref": "087ef0bf-5253-47f5-9d91-7f955502c7bd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a4eba2ce-79be-4bd3-846b-9701eef3d055"
        },
        "item": {
          "id": "7c626d43-4017-4975-8b3a-47f2fdaaa33c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "44a11f8f-fe55-4d31-89ff-7dc47e81f28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53dd74a-a256-4cd4-ac84-40b9bcf53b80",
        "cursor": {
          "ref": "41f71f8e-1592-48bd-bad2-dea32a11439e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7fc29c57-bf8f-441d-afba-cea59f3c6adb"
        },
        "item": {
          "id": "e53dd74a-a256-4cd4-ac84-40b9bcf53b80",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88b8a277-5d1b-44f3-bf46-4229c92ee4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e577e39-cfeb-4732-8566-c8426f66e6ee",
        "cursor": {
          "ref": "658403f8-826e-47e2-aa51-5813955de5a3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a298435f-d440-49a2-b8cc-a2de058db511"
        },
        "item": {
          "id": "5e577e39-cfeb-4732-8566-c8426f66e6ee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2b00722f-d370-4086-95b5-56a53d814bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0155168-0bc6-422c-bc97-1742c76978fc",
        "cursor": {
          "ref": "c3bec212-222b-48ba-9f94-8b9d4074d596",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3b077a47-8209-4936-afab-e5d5a28f2b00"
        },
        "item": {
          "id": "a0155168-0bc6-422c-bc97-1742c76978fc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2fc0a8d7-c1f5-4769-8f6d-78548d508ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb284808-f87c-443d-a1dc-c9a89917c8a1",
        "cursor": {
          "ref": "c9488d83-c440-4d76-8ec7-e3e05509047a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "430de929-5d8f-418a-a485-c4de4bc53f70"
        },
        "item": {
          "id": "bb284808-f87c-443d-a1dc-c9a89917c8a1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "182dd2ce-de85-4bb0-ba88-565cbce9b3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8105ee-d275-4620-94fb-9f1574e7c7ef",
        "cursor": {
          "ref": "bb22d883-fe57-4435-afb2-dc0dbc2a4a98",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f59074b3-6b37-47ba-a54d-44ac7a884fd3"
        },
        "item": {
          "id": "7c8105ee-d275-4620-94fb-9f1574e7c7ef",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1c3d9b2d-98d4-462b-9194-c4dc1a11720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561ff049-6ac1-43a9-ace2-138f614c0183",
        "cursor": {
          "ref": "f0414cad-97be-4f2e-bcf9-3d8205b113ad",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f6fc9174-930d-4970-a03e-7b692fdfc5ee"
        },
        "item": {
          "id": "561ff049-6ac1-43a9-ace2-138f614c0183",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bb4b6e9a-890d-4e73-bb95-dd88678b96ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecfc385-5969-4cdb-94d2-d45f98a1dd5c",
        "cursor": {
          "ref": "5fbb5c61-9716-4e14-b161-c8c6df70fdf1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "986c2d83-d28b-4a8e-8e15-bab7d553c325"
        },
        "item": {
          "id": "3ecfc385-5969-4cdb-94d2-d45f98a1dd5c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4727e931-36be-46f8-9eb0-186d52135634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193ae10a-1935-4d51-91ac-b62727a2c5cd",
        "cursor": {
          "ref": "be86a036-4ba9-434b-aaf6-fd6aaa15d61f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4aec08cd-ecc3-4aaa-88de-31d247c310b8"
        },
        "item": {
          "id": "193ae10a-1935-4d51-91ac-b62727a2c5cd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7336dfa1-1ceb-45f9-9d2e-18b510cc1229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b7b3d-b0e1-4f35-8462-4db6b875f03f",
        "cursor": {
          "ref": "91631635-e6bf-4268-bd97-cd8fd63d2624",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "92388d7f-2ac5-43d4-8ce6-8a981d935c45"
        },
        "item": {
          "id": "ea0b7b3d-b0e1-4f35-8462-4db6b875f03f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fb75b462-544b-4e78-8e77-141346ae97af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a11880-4112-4b9c-8450-010a8bf584e8",
        "cursor": {
          "ref": "2385359c-6fbb-4bfc-b2b0-4a2c81b06be1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7c60f8af-63cc-4f5f-b005-bc3793291896"
        },
        "item": {
          "id": "20a11880-4112-4b9c-8450-010a8bf584e8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f96d0357-bc3c-4153-9c16-b9b33f90bee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea631c8-35c2-4228-939f-bb4410c1fbc2",
        "cursor": {
          "ref": "f0ba356e-dec8-4e09-86f7-884ae2167846",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1bab698b-6dfd-4dec-824a-e169b6304cbe"
        },
        "item": {
          "id": "cea631c8-35c2-4228-939f-bb4410c1fbc2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9724d26b-7709-4d5b-8c91-448a1a00596c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc357d8-3a3a-497a-ae34-7b90c9e7edd8",
        "cursor": {
          "ref": "a91fd7c8-04a0-451e-b15b-9df35b5f6e07",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "de2b7825-d877-4f7b-9553-d44a49844401"
        },
        "item": {
          "id": "ddc357d8-3a3a-497a-ae34-7b90c9e7edd8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "760210f1-310c-4bb0-83f9-4a8b2fe115e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c956ca5e-a35f-44bd-a738-9b6e2f7f499c",
        "cursor": {
          "ref": "ee749669-1676-40d7-b73c-3f43579254f9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b2e836c8-1e4a-403e-8337-a72ad632f70d"
        },
        "item": {
          "id": "c956ca5e-a35f-44bd-a738-9b6e2f7f499c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cdd8240b-7e39-46e4-9945-45a9fb8dbb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6875c785-940b-42fd-9bee-4e7afbfce94e",
        "cursor": {
          "ref": "eec4f7f6-02ed-47fd-8236-98d0ac413f03",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ab40220b-3d1c-4350-aced-cd11ca5d79f9"
        },
        "item": {
          "id": "6875c785-940b-42fd-9bee-4e7afbfce94e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "44ac983b-2036-4d1e-822f-f13ed3428840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2f544e-0f3b-4e8e-b4d5-68dbdfc9f6c1",
        "cursor": {
          "ref": "7b225e95-93ed-4768-be83-69b9a6ab6f98",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "efdd36e9-c757-4fcb-b94f-33d165846aff"
        },
        "item": {
          "id": "0b2f544e-0f3b-4e8e-b4d5-68dbdfc9f6c1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29f54040-2958-4ad8-a6f8-c6df1e764620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533032b4-6b1d-41b8-a001-ca40cf51bae7",
        "cursor": {
          "ref": "c223ac84-79d8-4cbd-81bb-acdad54db728",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "17fc799a-9977-4d57-ab24-f34869fe1686"
        },
        "item": {
          "id": "533032b4-6b1d-41b8-a001-ca40cf51bae7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b22e9e36-3c74-47e7-8fba-d273936a8d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1c6f8-f8dd-44af-bdc6-e490a04c980d",
        "cursor": {
          "ref": "8efaf383-a477-4562-a29d-3f3078d6fe40",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "62c2abac-a3ce-41f0-a335-caccfdedb79b"
        },
        "item": {
          "id": "5ca1c6f8-f8dd-44af-bdc6-e490a04c980d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "48a84100-65eb-49e2-ae3a-36767fdd48c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3f080-84ec-4468-85ca-141bf53282bc",
        "cursor": {
          "ref": "4b6ecdde-e295-41e2-a6fc-043a6930cbea",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c43c345-a135-4d07-9616-acb584d95ba5"
        },
        "item": {
          "id": "7ef3f080-84ec-4468-85ca-141bf53282bc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1a4d87f2-56a5-4942-ad64-b89c04e729b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7d3904-2b03-4fcf-8e10-04058d3b2dd9",
        "cursor": {
          "ref": "7d90b6a7-b3d1-4a79-ae5a-f24922bdf374",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ccd95646-3521-404a-9f2d-d484eef2ff02"
        },
        "item": {
          "id": "1d7d3904-2b03-4fcf-8e10-04058d3b2dd9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cd9ca866-459e-4eea-8f8d-3c1de320b45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb78dc63-9c0e-4d13-a001-d4b9bb6f5264",
        "cursor": {
          "ref": "9b1d6958-fe86-4310-a5f5-eb7109037000",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a6899375-484e-4c3f-88e1-9ae0b73c8651"
        },
        "item": {
          "id": "fb78dc63-9c0e-4d13-a001-d4b9bb6f5264",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "afa536ca-3d3b-4da3-b591-7f59337eac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f10e21-f69d-46c4-a34a-2c3ced9cc052",
        "cursor": {
          "ref": "87ab425c-e753-4c72-bb9e-b56214d1e162",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8b5a8316-62fd-4eea-893d-6383e4fe29b5"
        },
        "item": {
          "id": "64f10e21-f69d-46c4-a34a-2c3ced9cc052",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b6796b0c-193d-46cf-81ab-3df3a577d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b63d085-1891-4c56-b553-7f8004a37af2",
        "cursor": {
          "ref": "9a780bb7-1a12-4b70-b845-26b296c77ed2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f2d370ab-6b3a-40ed-a510-077acdd9e6d9"
        },
        "item": {
          "id": "7b63d085-1891-4c56-b553-7f8004a37af2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8a18ccda-52ca-498e-9899-69fa5dfe4b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b49e92-a7b0-4c77-a4cb-736ba9244379",
        "cursor": {
          "ref": "138b0adb-5e67-4228-a153-a8a54fb076af",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1a944b0a-79a8-402d-8053-0d3cf827c2d2"
        },
        "item": {
          "id": "f7b49e92-a7b0-4c77-a4cb-736ba9244379",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47ba7d3a-6391-4552-b984-27f67963045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4875afff-19d2-45d7-a9f0-9c97117922aa",
        "cursor": {
          "ref": "b3a013d7-2212-4276-bcc6-ab2427f0decf",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ee400cc7-464a-4d0b-b375-37f2da17cde8"
        },
        "item": {
          "id": "4875afff-19d2-45d7-a9f0-9c97117922aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a90a8b5a-7e08-464b-8ecf-1e0e6cc2d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd65f11-55b7-429d-8fe9-8b273091e65f",
        "cursor": {
          "ref": "c49c0f7f-a706-4ef7-b05a-b43233119318",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "84ea27a5-72b4-4d5f-a47a-c9e2a43ac74a"
        },
        "item": {
          "id": "8bd65f11-55b7-429d-8fe9-8b273091e65f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c332365a-a7b8-4148-81e2-e2c62fe1acdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1392de-b1f9-4c39-b96b-d5119d7ef091",
        "cursor": {
          "ref": "69c85a66-e6d6-4e44-b157-fa63193de2c4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24cd9322-08f5-4723-9a7e-a7db5f2f6707"
        },
        "item": {
          "id": "fa1392de-b1f9-4c39-b96b-d5119d7ef091",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4cf2a88a-de9a-477e-a720-7fb64ed8d423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c914934-4284-42e7-b7ed-a91bd35dc6a4",
        "cursor": {
          "ref": "460f9a07-8a31-4f55-984b-b8fa99f2430c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "79ac3da3-ad32-4682-8829-4959775d866b"
        },
        "item": {
          "id": "7c914934-4284-42e7-b7ed-a91bd35dc6a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba68d9ca-a7d0-496f-9973-4467c1d67afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840a680f-3abe-438d-858c-fbaf617fe11e",
        "cursor": {
          "ref": "426f1351-b48c-432e-aec3-2d0fb6840982",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "917877de-a38b-4094-bfde-357046abbcdb"
        },
        "item": {
          "id": "840a680f-3abe-438d-858c-fbaf617fe11e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2200dbe7-e20b-4a12-972a-72f33719ca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaba9121-c835-4fea-86fe-061206a0db53",
        "cursor": {
          "ref": "3cf09ca3-632e-45c1-88e9-50ecdf4acbc9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7ce7f440-ad19-43f1-a1d3-bc1f24a2999e"
        },
        "item": {
          "id": "aaba9121-c835-4fea-86fe-061206a0db53",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "29df3dae-bf1f-4cdb-962c-2b2a8d61a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308cd5bf-d760-4c7b-bf7d-3fd360773462",
        "cursor": {
          "ref": "fc8f33f2-13cd-4bbb-9d75-39c6bce8b5d8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6f53656b-3c13-4a62-866b-1398c138e8d7"
        },
        "item": {
          "id": "308cd5bf-d760-4c7b-bf7d-3fd360773462",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "96c0eddd-edb7-4341-b6c6-6eda76dc71ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9fca64-13da-46d8-9d3b-44686c8fe4ab",
        "cursor": {
          "ref": "05c47f16-924a-445d-bd86-be3cab408f24",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8c9142ab-2b1a-4553-a5a9-3c8a6eb5c613"
        },
        "item": {
          "id": "9a9fca64-13da-46d8-9d3b-44686c8fe4ab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "75efb8c6-0bc8-4929-9327-8fe2ecfb6351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc06185-89fc-4d7c-9cbc-b2bf1bd08479",
        "cursor": {
          "ref": "54e0a4c4-1639-4ed6-9497-23f6b58483e3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "dcc4d9a3-b4f5-4675-91c9-0df48306a1e0"
        },
        "item": {
          "id": "1dc06185-89fc-4d7c-9cbc-b2bf1bd08479",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea8805e4-4e18-42c1-91d5-b9f32f9ea004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee01ad3-68d7-4fde-a61e-fcace3b2b548",
        "cursor": {
          "ref": "c2990916-ee53-4ab6-8ea0-17968bd11004",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1e701487-e9af-45e5-bb88-206fdff03c30"
        },
        "item": {
          "id": "fee01ad3-68d7-4fde-a61e-fcace3b2b548",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06e5e49e-487c-4bba-9c30-5f542f9a1f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650d6139-75d2-4a3b-8683-d24ffdcf18fd",
        "cursor": {
          "ref": "c8e02580-6d7d-46c7-ac12-d94d682ee685",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "372f94e8-b7aa-407d-b9e0-41d565bbdb93"
        },
        "item": {
          "id": "650d6139-75d2-4a3b-8683-d24ffdcf18fd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5eb626a8-8bdf-41c9-81ea-40bdd4e85277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8825ca06-4d34-48b0-9939-5cc62516c79a",
        "cursor": {
          "ref": "95fa454e-c466-48db-ac63-6c18e6dbf159",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "71eaf839-b343-42be-9a30-e6cec0890a5e"
        },
        "item": {
          "id": "8825ca06-4d34-48b0-9939-5cc62516c79a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56145a41-65de-43fe-9902-dd3b45e3c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ea552e-833e-4914-ac85-0c4b0301b6ff",
        "cursor": {
          "ref": "cf42ae3e-70e9-4d6b-87d9-24f3bb3d7a41",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a225fdee-21b6-44c6-ad04-40802d8fd469"
        },
        "item": {
          "id": "98ea552e-833e-4914-ac85-0c4b0301b6ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17bee11d-2b25-4f08-876d-581154ebc0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6501766b-903b-43a8-ac13-9452b487c1d4",
        "cursor": {
          "ref": "8482a142-122e-43e3-b110-c3890dbe0222",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "42a126d2-79c6-4526-afca-384f271408b7"
        },
        "item": {
          "id": "6501766b-903b-43a8-ac13-9452b487c1d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "85d31aa2-4238-458f-968d-4982dbb59f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fdd438-3977-48a8-a59c-57ca36330e64",
        "cursor": {
          "ref": "4184768d-9cd2-4099-90d2-f5071c1d8409",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "20232b64-6270-4980-b248-8e17ca5c07ae"
        },
        "item": {
          "id": "97fdd438-3977-48a8-a59c-57ca36330e64",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c4800db5-bef1-48a9-a96e-e138b76dc79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b2844a-a092-4721-a62f-3600b9e31d2c",
        "cursor": {
          "ref": "10e7491b-955e-4dc3-a5d0-eb68765ab223",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6137ee5b-f23a-4d8e-b3bf-3b288da43d01"
        },
        "item": {
          "id": "65b2844a-a092-4721-a62f-3600b9e31d2c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e68c2ad-cfe7-4159-8d62-569354128288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0449e79b-5c0c-4b3d-a23d-f6a3ca3b32df",
        "cursor": {
          "ref": "178ba5e0-e5df-4f25-b754-ce97e95a8403",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a15fe0b5-0fde-4dad-aa4a-ec4a85dea547"
        },
        "item": {
          "id": "0449e79b-5c0c-4b3d-a23d-f6a3ca3b32df",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0eda306b-2b37-42a8-9932-907893253078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871eea9b-5066-48a2-a7cd-8c1c4cca7012",
        "cursor": {
          "ref": "7124227d-7415-4038-9567-5fc7764db9b2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3b22b6d1-bed5-4702-b3f3-b6b1d5b33b95"
        },
        "item": {
          "id": "871eea9b-5066-48a2-a7cd-8c1c4cca7012",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8cc0b7f2-1d18-4cac-87e5-a43c88f4afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f1e47-4601-4f22-b5e9-c37f85949a4f",
        "cursor": {
          "ref": "7d1416ff-8ef8-4cff-8ad8-43b791c86d1d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "88347704-3888-475d-b453-ad5920c08a9d"
        },
        "item": {
          "id": "875f1e47-4601-4f22-b5e9-c37f85949a4f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b5c08e4-3a99-4917-9ff0-48893f5c0c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3640ad6-0662-4d20-9fbe-2bffb8454b4f",
        "cursor": {
          "ref": "43b72650-42f4-4542-8ac8-56f7450483af",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d2a54ded-c2eb-4281-b43e-032d7b6d4e71"
        },
        "item": {
          "id": "f3640ad6-0662-4d20-9fbe-2bffb8454b4f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fe8396d3-2977-4cbc-9da6-a9adb44c7163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dcef05-aeeb-469f-b85d-9869705d41d9",
        "cursor": {
          "ref": "6ea59834-5950-4b8b-8d61-1b0df912ab54",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3dd4a2d5-3d96-486e-b58f-60ee8c164044"
        },
        "item": {
          "id": "b4dcef05-aeeb-469f-b85d-9869705d41d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "589fe8f5-f5f9-4cc7-9514-df4544584276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03d96e9-1330-4e0d-90f1-8e64293e7500",
        "cursor": {
          "ref": "5b72086c-9bbd-4b8c-bc64-47b2c25c407d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2922dd60-d388-4071-8f02-1463ac6e1cab"
        },
        "item": {
          "id": "f03d96e9-1330-4e0d-90f1-8e64293e7500",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bf3c0d87-e4f4-40f5-b2d6-ac9ac60e6a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e55e9d6-a3ac-4e9a-a98f-1b92312ff01e",
        "cursor": {
          "ref": "a0e754c3-0d1a-4d1e-8da9-f7b2cb7eb305",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0b39d9a8-e3b2-45ba-aab9-c0216ff8ca61"
        },
        "item": {
          "id": "7e55e9d6-a3ac-4e9a-a98f-1b92312ff01e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bee9e7e8-e1de-4718-a2aa-547000dd7482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107e8680-4ab9-42fb-b894-2d06a10c8371",
        "cursor": {
          "ref": "da999f90-65ff-41c6-9042-4bec94553917",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3a29e6b7-5885-4e9b-983d-f6a917831e68"
        },
        "item": {
          "id": "107e8680-4ab9-42fb-b894-2d06a10c8371",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b631ab1-5647-44c5-8b97-1be6858fd37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243048cf-5cb8-4fa5-b246-dfc28688fbf1",
        "cursor": {
          "ref": "9867623f-714b-4f38-8bf5-83d71c148602",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "73fa374f-2e33-4275-88d4-9da20f688bd9"
        },
        "item": {
          "id": "243048cf-5cb8-4fa5-b246-dfc28688fbf1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f9ec0e6-555f-4d6d-8f20-d684565ce4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd828f-fc1c-4b4d-9fd7-5ef4a11ad53a",
        "cursor": {
          "ref": "0f3976d4-6c86-4151-99f7-b8ddac24b4af",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6f48ad42-1eab-4772-86e2-bd0c00eee803"
        },
        "item": {
          "id": "acbd828f-fc1c-4b4d-9fd7-5ef4a11ad53a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c7090135-8b56-45ed-ae2a-1e9f562475bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb3e2fd-0474-4862-82d7-1ec1ba4758b0",
        "cursor": {
          "ref": "ce529d05-5144-4fb9-b5e9-0a85b0432c0e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8bef6089-a223-4bd3-8aca-3e9a16c68eda"
        },
        "item": {
          "id": "ddb3e2fd-0474-4862-82d7-1ec1ba4758b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d10c19b-4108-48c5-9c6b-9c27b8bea45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ce0851-7bc7-468d-b95b-d4e77aed79d3",
        "cursor": {
          "ref": "42915d31-8f88-480a-9769-69384280ea21",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7d22ada4-0551-4e51-8568-f742318af130"
        },
        "item": {
          "id": "34ce0851-7bc7-468d-b95b-d4e77aed79d3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "822cfb07-2923-47a2-b21f-86fbb63855bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec97f5d7-bb44-449a-9c75-54661e3f7f6f",
        "cursor": {
          "ref": "ae064027-e856-4a11-99f4-a284e3326a58",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0f5455e8-b096-4b6f-8e2d-af9ab75d8958"
        },
        "item": {
          "id": "ec97f5d7-bb44-449a-9c75-54661e3f7f6f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e0d3536-2f4a-4c03-84d0-a87c88e67d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe19b05a-f0d5-42e8-8489-6e02ed25091b",
        "cursor": {
          "ref": "e3a71348-ae62-4a4d-88cc-7979e041141b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7547d01c-987d-4eba-87e1-ae8536c0bc4a"
        },
        "item": {
          "id": "fe19b05a-f0d5-42e8-8489-6e02ed25091b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "676ee396-c4ce-4d78-bf13-88f563d9aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0123c225-f4c8-47a2-bbfe-dfd1c56c6135",
        "cursor": {
          "ref": "8b79fbf6-12f1-4189-ab0b-a912ef5e4098",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "06458cf4-6a82-48d9-9e9e-fe0226ac21a4"
        },
        "item": {
          "id": "0123c225-f4c8-47a2-bbfe-dfd1c56c6135",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d29f9f6-c99f-40ed-aa11-a1c1263ccaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0067d2e-e194-4ec3-a5f6-688e31dd5528",
        "cursor": {
          "ref": "99a81db7-2037-4c32-a424-1af1031d4c94",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "acf559f8-b13d-4371-bbe3-3b476b5f6811"
        },
        "item": {
          "id": "b0067d2e-e194-4ec3-a5f6-688e31dd5528",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b9fad0dc-a51e-4549-ba66-85f1f6a7bad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e7a1a-b228-482f-bc32-d5402fd34332",
        "cursor": {
          "ref": "ac0e97ef-9104-4f48-bb3c-064e98c70fb1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9b3d866c-3358-4793-af3c-85c140df47f2"
        },
        "item": {
          "id": "111e7a1a-b228-482f-bc32-d5402fd34332",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6fb7bad0-3706-447e-a910-14b2c497fccd",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e051cf03-38d4-46c1-a697-42f861b2c852",
        "cursor": {
          "ref": "3c9f9277-c7ed-49c1-98ad-e3c90d4c2cc0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "14239ad2-493c-45e3-8034-13a0130f54bf"
        },
        "item": {
          "id": "e051cf03-38d4-46c1-a697-42f861b2c852",
          "name": "credentials_verify"
        },
        "response": {
          "id": "111d51f3-649c-4652-ab4a-1aba55274edb",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a72d7a-d89c-4c7b-97ed-8250126e9f3e",
        "cursor": {
          "ref": "8d566454-80d2-4f78-b191-6b676cdea4e4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "78ad82cf-2559-43e2-a04b-0fa61aeffd53"
        },
        "item": {
          "id": "07a72d7a-d89c-4c7b-97ed-8250126e9f3e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e5e06ae7-31fa-4157-854d-c579e4af64fd",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab58e4-9ccc-49b0-9414-fac50953c9a2",
        "cursor": {
          "ref": "3a5c2007-71b8-4d65-896e-37caec76ce6d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0fc475dd-b096-45bf-9e31-caee385d2208"
        },
        "item": {
          "id": "deab58e4-9ccc-49b0-9414-fac50953c9a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de3bb05b-4c75-4a7d-bfac-36e4a3633aee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab58e4-9ccc-49b0-9414-fac50953c9a2",
        "cursor": {
          "ref": "3a5c2007-71b8-4d65-896e-37caec76ce6d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0fc475dd-b096-45bf-9e31-caee385d2208"
        },
        "item": {
          "id": "deab58e4-9ccc-49b0-9414-fac50953c9a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de3bb05b-4c75-4a7d-bfac-36e4a3633aee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df454b-a71d-4c68-9e3d-4b4d85c8b99c",
        "cursor": {
          "ref": "315e3c65-1d46-4a6a-a6fe-ccc859a7c198",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "baad8fe6-3113-4045-84f9-2c773aedbb45"
        },
        "item": {
          "id": "c1df454b-a71d-4c68-9e3d-4b4d85c8b99c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95d27ab3-caf0-4b42-843f-38ecdc2b8ccd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12d8ef-fd5b-4dfb-96e2-0a63fd8cb558",
        "cursor": {
          "ref": "e5bd7f0f-a69b-46fd-bd50-5dfddde46e06",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8eb0ba0f-fbdb-4102-bcd5-4c414a014523"
        },
        "item": {
          "id": "bc12d8ef-fd5b-4dfb-96e2-0a63fd8cb558",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac423de6-0f29-4201-ba3a-0b2ea21c47f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}