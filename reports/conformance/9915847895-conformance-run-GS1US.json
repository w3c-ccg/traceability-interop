{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "50a3e3df-f089-4775-bafd-7e277071e2b2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbc12021-7d9e-4f13-a5ad-040f9b17f9fd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9f4270f-f44f-40e0-9b11-21d29eeb02ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4402eaa4-339f-4b10-8e60-bdad692a23fc"
                }
              }
            ]
          },
          {
            "id": "ab12fbc6-f945-477e-840c-912922169629",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "589f7f5d-38c4-45b6-a199-6561ca9c119c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e628d058-3381-4c83-bccf-b503fbcb9a0f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cf5a6380-e56b-48d6-bfe1-e7ccdb36b911",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "395d1e7d-e79e-47ac-8a64-e93d046e48cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60ef9b3b-76be-4fa5-857b-b54bac80279f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c18fdc3a-bdd8-4a65-8689-3b9a6c5328e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d44b83dc-fcb8-4354-ac4a-5aea6d8aa10e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c859bb4-deae-4f78-9f52-74f65c9a6fcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "937867fc-e1a2-4255-a33e-6569be6cded4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8d69f99-991e-4057-84db-b8f7d85fd6a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b83f629-187f-447f-a427-ebde73ff5676"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acf673a0-f45f-470f-a1ea-8c165b67ccb1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3fe4c7ca-3080-4d5d-9b1a-ad760ac7950d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c5b8816-7a43-4833-addf-ee00da572c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6080a10a-d276-40fa-9c18-2ed29a16427a"
            }
          }
        ]
      },
      {
        "id": "27ae54a7-9451-47a7-aedb-808ca119860d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "60e8fd95-e893-45b1-93c1-18bf0101fc7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3860f1d-6d60-4d74-badc-e7b546c50696",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e50b641d-7f20-4915-993d-bfcf12cdc388",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea43c4f3-b5c9-453e-9e7f-ebfdd3084f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70651d74-1d10-4369-887b-69b04b1c9620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdc1a4c-5d45-4404-8d26-5ac2b02b7fae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e09d08b-715c-4776-b0c4-ab4872b48560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dcc4d8a-d496-4e92-9387-587df0898993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09c6e1d-d523-45fb-81fb-1e9831d89483",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c57af5e-79a4-4649-bd7f-ca2ac0c118d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfd0cc9f-1b59-400f-a69e-6d851b90e545"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88da8e95-998b-4c78-b5e5-55199f873981",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f7a7d6b-a6a8-4e0d-aa8c-23bd5e767fd7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ddbeb-a8a1-49ed-9ce0-c23a158abc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f3de33-1dfa-4af2-ba1e-06e1e4d48c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe04a46-3363-474e-a1e2-db43b8a014da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7082c2bd-26f5-4332-bcc0-7a2c430e1059"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "198f8052-7f80-4c5f-a861-d65de8436595",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6694463f-0a87-4f3a-88df-1fdc3bfe1ae0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7ba61e-ae2b-4c67-833b-d95f479e7c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0f138c56-5b65-40cf-bfec-386386793381"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "106acd45-bfe9-410e-92d4-9a75e62f8815",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c02bbd91-ecac-47d5-906c-647f50465728"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74331efd-5d9d-425f-acc4-4579dd73708a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d48e0675-524b-41fe-ab96-14e2d230ebfb"
            }
          }
        ]
      },
      {
        "id": "209506b4-302b-4502-afa2-e0fd507c8e0d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2589ff79-1666-4f25-a249-601fd029aa51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35f82c0d-7ff9-4aff-9965-7ef24c607c5c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1cd0262e-7b37-479e-afe4-dd57299ac1ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe43625-c1c1-4420-8496-f09fb885473f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f16c47-2331-456d-af53-c08d9bef5b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5e229b-8ec2-4041-915a-af2544614106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "093be783-7093-4031-8a74-e401fdc34e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bca359-053f-4143-b0bc-6af3aeb04896",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec13a1b-7a39-4bf0-8686-3f58791871ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6eeb02-1aa6-4476-90e5-14996201f626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85834b02-6d36-4705-89a2-3197e5b573b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66ab0d97-19a5-4bff-8a2e-97185669eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c63f96-2142-4f10-bc24-f45945afa0c3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76e784f-dd0f-4414-9260-6ed7b5e25dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae85631-77a8-441e-88dc-f1b52291a30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a8e6db-1df3-43cc-8fcf-82b6417e697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5693bdff-5b32-48f4-ad09-fe0af290d2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41d55cd-4d47-4f43-ab96-ea8a03c2d737",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5425a311-db5a-4085-bdcc-f73311bb10fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16546843-363a-409b-bb59-9ba1ba3c40e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b36e31-490f-4e3f-b2a6-a66593320594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f8e71da-f212-47fe-88cd-ae41eadd37f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aad395-e878-4665-b0c5-25a8a00a5b69",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb91b253-daf6-4022-a224-be1a18aa5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81eed4e1-9ca8-494e-b434-9452b2bbd2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffc69fe-5f02-47ee-bb96-13399f50ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f59bd26-4095-49cd-918f-29e267261f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87302fc4-cad1-47ef-a89c-1da7875344c1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0c93c0-ddb7-4804-a134-0d53732c2fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9a0bf5-8f8f-4dee-a937-c1acf33cbec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e15e532-e656-4c2b-bd6d-95494a1199b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "558a7e1e-3758-4d0e-9f78-a952093bf291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d898be8a-bf86-4b4e-9bbd-2cf9fb35fd80",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367fb5b0-1ba2-459d-a4a7-1dd4053fc6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21c3d2d-244a-48f0-a330-d31268a49e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e8d264-890c-4bd5-b431-0f979a8c6bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752d5f07-3399-47ba-b555-8bde9d12b063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c47bec-1ac1-4b80-ad1a-4002b17c160e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b434debd-5ab0-411b-8f00-6f7ff20b0d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db557f25-04d9-4e3d-b141-757cd47d0aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56ba89f-d8cb-45ae-916c-8e5ffbfc9a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e9aef3-62e3-49da-87ad-ef83870288eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fbf2e-1508-4761-85c2-bdf77bca69fa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37bb92-0052-4a48-b580-6cfeb246b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6b90ff-f150-4378-8681-bbbaa9526743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2fbe6d-8ae8-4434-895c-6c5f53198999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a992ea0-42f1-4650-a343-37b749c5afd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd4011a-dc86-48c3-940a-29ef1be605f2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce559469-93dd-44c5-8aac-1ad098ba22b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e24ce82-c78f-452f-9986-a2aa2e59d7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7159d56a-70cc-4533-ae99-a4e8203d7cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36cefdb6-1b60-4d8a-a5c5-ec5b96018e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6536f68-d60a-44db-9078-7ca1df8c29c0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dcfc1a-ff0d-40f0-a6f7-e38c3abdbe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44373412-b6dc-444d-90a6-6cc8a112f0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5fac08-7514-4850-b6e9-fa8cf25908c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06afa634-e643-4c1f-975c-79fffe91864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f513a-7ab0-45b3-a4f2-a405bfa9bc78",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4b67c5-27ec-408b-be1e-6dbb63e42348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc22ea17-40d1-4dbb-bd3e-781310adbe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c56aa7-9c58-4b28-b841-54659090200d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f000599e-7f96-4bb4-8ffc-19751b10acfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f869ac13-0450-4fb1-951c-097eae13247f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce76070f-9224-485c-8910-e04edc519983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7e184b-4308-4582-951f-fddde781bdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1cbf6b-6de6-41af-8a6f-17e6539a003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1aa9ea-6812-45e9-8e94-0123e419f6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf82e9a5-5f51-4a71-8d65-37f22a471fa5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519fc5a3-6ce8-44df-92f7-bafb5a854aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc10a73-c008-4e53-bcc1-0d9ebd0b171f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03de847-be98-4edf-a44a-f8adc87d840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b525781-775c-44c0-8423-df8605fe5c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5dbe82-bc16-490b-a671-6b3e065d3374",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8b2829-c028-465e-8a2b-ae7e21c4c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc0ba35-0159-4d5f-9be2-255c2b6f36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905735cb-37eb-4c3e-ac22-209d76bf004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1165202b-f30c-47bc-8db1-e80c24e627fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4611600a-2384-4023-8a03-88f62b5fff17",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8db24e-d766-4450-a170-83431c715833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bcab61-b406-435d-ae7a-65232618fbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b65107f-2871-4c2a-9e3d-ac46ae505b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74ea395a-a356-4f07-8a31-70a6686bec00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9959e83a-f10f-499f-8cd9-fe072c0cfc59",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92db7f45-18c7-46c3-95f7-5bb14b632744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efeb3cd-7fa6-45ac-83f3-8465e0cc641b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375bf6ad-c372-4e6e-be83-51f763675580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c57d9e-9984-4ae3-ac3b-c62e7823d61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd8dd2b-ee71-486d-bdb4-5bd281df05c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35bd5ba-65c7-4292-b104-722f88f16fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2ab63b-2212-44dd-87d0-919383754aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546cf94b-b577-49ec-b002-cdf635b998d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51e5fc2-5801-4fdd-a24a-c16a94fe8f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e7b1a2-f010-43a8-aefe-5347c34a489f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bebfeb-cf51-4440-9e22-fe3c1541aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5805f58f-b3bb-429b-bca5-a860a80de594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c0994c-9fdd-40c7-abe4-f4ae8300af62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "855bffa3-c28a-42e1-af1e-e34ec2950b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33246291-05c4-4879-b756-2dee3e0d4101",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457f075c-784f-47c0-8cee-1f9ae7b43b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4662a40c-058e-4d3e-bc8d-fd2fca6bbb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8b9ff9-6e4b-4444-b92b-908ae9f8c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b71c564-4262-4044-9c58-9b5bec091198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49077499-afe0-4a10-8445-d63475e9a9b1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e919bc7-7945-4b0a-8c2b-48fb0e0795c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f29745-0f61-4756-9eba-4c47909fee21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7876cfa1-52ab-413b-809d-f4d2dcc7c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ba75cb-bb24-416f-9081-17a4615ae461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a82933-980e-4523-8ace-9941a5bce0c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b5aaf3-3301-4bc7-b776-5f12c75f6bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c2a859-1fc9-4354-817e-8ba9105df537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674da257-6413-4691-a06d-42a9b677fba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ec0a13-01b8-4d0e-a3f2-0e76b34a8635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facffff0-c6bf-4cae-9ed9-8d387bd2c748",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec4fbd1-1966-4842-b0b5-c1f3c19b7346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9768e3a5-55d0-437b-b07b-cce19774f9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ea6f65-3aa7-433d-8145-9724a940daff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50d0cc2b-7cca-410f-983c-641fa3c38a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6452a100-1593-4cce-ba7c-94e12e61ddba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ecc8ff-4743-49a6-80b4-5d930edf1603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2963804a-0feb-4cde-afc4-5038cc93d1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750bdc1a-9f6f-4152-adb5-8e8aac1b8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecac33d-b427-4893-b8ef-753db53d5935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697790d5-b29c-46d0-84f6-45f024e1d37d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6421232-f2bc-4b86-a406-c34447f66906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9262ac7c-97ec-46e9-bac3-f60ebc3990fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550c2b4b-f13b-4b06-b23d-3faa410d8978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb48c75c-6666-415f-9b43-9c78bc470644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872b8a2a-6905-4e0d-9c06-539477b2d6b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebf7fae-bd5f-40e2-8b7b-c69b56a70bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a53c9ac-4134-48e3-b765-261cac545261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a8295-e875-406c-8ffc-164d352c2511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e9fd39-3584-4ecb-86ac-9eef1856dbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cca32ee-0014-42e7-a36c-0a27bdd44e64",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98b88e7-6cec-42f8-be13-d9af5e3c72aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58afe4d5-4f0f-4fc6-a8f6-ed6c9277c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c56f0-eccf-4e9e-a19e-f3a940b682e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4e9aa5-4c4c-4105-8897-82445cd6bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08855103-c78f-4889-919e-17fe2c08eafb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c03a0-9548-4d32-bd28-cd1eb4107b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c490d9-e270-45ce-bd79-ee3075a2dbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722a0131-93ba-46b1-a261-c9b6d9515cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3e1126-1e6c-4302-a878-5dfb970d43de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cc7b00-01d6-4798-8844-9b3bf4701a61",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fa9779-f51d-4fe0-ae37-d81814074357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1595ab-7d1c-4152-a505-4ccf586e4d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72841a49-5818-4de6-92c9-19cc07d049e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "950ae84c-ef5a-436c-8b81-16bea33774ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d38b9f-44a4-4dec-89c9-e4dffac8f15b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32948243-7ec0-45d8-8648-eb4589b8f7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7106a4c2-9af5-4397-aa74-c4b3d2e1c2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee72dd2-442a-4abd-ae9c-e6d1fd6ffdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "816dd37b-80a3-43d0-9127-5abb8bfcdb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0496fef-502a-4276-9bfe-397bc3933c37",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cc715e-cc31-4305-8ed8-86dc0508967d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e10c95-550f-48b6-9ad6-948f18089822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd79ed-7ae4-4b84-991c-a193321db8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7a8d9e-e56d-4587-8c33-493ed2215c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fedaf8-d89c-4538-976f-f05798131857",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e58c488-f709-4785-9033-5fa83c52c6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42ad478-d1e2-47a7-ba12-9c3a686f4e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9173ea6-9b64-4aad-a590-853dd3f4bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f06222-fb75-4ae6-9073-236f593268e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db757e3-b54e-4454-8a7b-ef942ea04981",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fac969f-1c99-4722-bd6c-dd6b2bc0670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8d9c57-c535-49cb-800b-283448d8f0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d726566-8fee-47ba-aa7a-9afbc62638b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c292c4-3676-4d7b-a0c0-5dce93d1c2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8267b9-213f-4b70-8466-539db4cd64d3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af26cc-6532-4874-9afc-44f2c2eff861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d17c99-0bb4-48a9-b8c2-25e0f545e692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8c7413-edab-4343-b1cf-f7da37d757ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e4911e-d1a6-466f-a4e4-f92fd0aa841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba27526-eb61-4b19-aca6-b1193a487c9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b830bb80-3bfe-479c-8f10-16548f6cdf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6266f4a3-aedd-4d52-933d-9357719aca01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fc3e8-c4dd-47d4-984c-fd352de4c83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e089e46-4408-40d1-9c4b-c5f4a526edf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17350ab9-4385-4c5b-9957-7e793dcff87f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1e1e2f-f3e3-4ab5-917a-89f1ea711e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6fde7ba-6817-4d55-84e4-0ab5fa44b35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3191eafe-d613-427d-8e50-7728e3fab43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cca3dd75-8920-4881-9690-80953c18331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcd5575-f6eb-4f3b-afa4-fefcd7983197",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab357d4-ed0f-40ca-931f-882fe4992962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241a5bda-75c9-4fc2-b5ae-9f0caefb7adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0807373-30ec-4137-a626-a8f404897c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e3d90e-d4d6-4e5c-9289-74fdd7b0c0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732af08b-9c15-4597-b54f-5e4ad22d9f3a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c99e8a5-eb54-4f5a-9e7a-8c53aaa0147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2a97b3-65ef-44c9-92ff-804d26d93305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70fa9a-94ba-46f7-ad73-9c41f4f1595f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfe140e-8f05-4495-8c87-185d399892f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08939350-cc38-4f8c-a283-8793eb2b8ea0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff80e53-cef8-47e2-b1b7-1189e14f670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2928754-2e73-494b-bf41-bd091494c861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e745f807-b141-4255-bce1-88f6ac6a0d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "402d0a48-2516-481c-b3b4-e0748554a0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf3e0d-6391-441e-841d-f65544cb5d4c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b967f873-0f4b-4def-a485-bcd1ac3be497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b57948-5849-4a7e-992a-c0cc530cacf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0895972e-4648-40a8-8b3c-437809c582ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a46f98-42aa-419d-a313-dbfd3ea96f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e708718a-73ba-4d96-b658-7c69d0df12ac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96af1652-2760-4874-8933-9a8064be3e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e28e16c-dd64-465f-8ce7-e9ee91bb5354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3118c410-9418-48d6-b9ec-01b24ad6d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede17107-d2c6-4c77-bf4d-b1254d85f0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a9209-9953-4586-a876-4c662fc70dfc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe670596-4881-4e7d-a877-36715b04a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9dbef0-e8c7-4c69-883e-4c7254ca958a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cf308e-e02c-4552-801c-53fd6a3fad3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "22a0c224-a8f3-4200-b1aa-5e544b691fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4c4874-4198-486e-ad1e-b89b43479a9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cc160f-ed12-44a9-be09-730271cdc735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfa9186-2218-4e6b-9bfb-ebe709af9658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b514ac8c-8008-4acf-8113-37a3f243cc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7915f98-3091-4332-ab46-9bcc521fb484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e049c77f-b00d-468c-8270-564e75adddad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf7c977-bbaa-469e-bdde-5fda669f7371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b46c1d-a297-4390-9a61-3df5a54f40d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec36a1-fd6a-4a80-9150-dbe55c1cf3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e97f40-25e2-451d-92b9-440440609176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7410139-91ee-4252-bed7-cb639973e56f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015565d-a628-415d-a03a-c01104223999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a40941-c9d1-4f2e-97e6-6d65d527c8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd536c5d-2d37-4383-8255-849415e5e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64012960-794b-456a-addf-7bb157897214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206390af-4fec-4e8c-8769-c1c6297555c5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb61f15d-5700-4ffd-b791-91307db21569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aede6ed-2a84-46ca-80cb-cec15c56d34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d141cde8-9e5f-40cb-a596-13cc4bdc983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5c691c-3e4b-496f-a1d3-e5347e418935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4daa7cb-d192-452e-b804-e0401739450c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b962569-4fad-4d11-8cbb-3fcc6d2c7d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2390dbc5-b609-4dfd-b5a9-d4a948dde22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b5a266-8d75-4a75-815e-1d4b99242f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba8479c-e545-4808-a118-523e1616607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e2ef1a-b699-458b-a51c-0b7b687408ed",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a02e6b-3ce3-462b-95f8-80db172741ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f5f639-300d-4ae1-b806-c13bd7f9e839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93001aa-e47d-420b-ba4f-926a39fbda7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aabe2fb-e60b-45b9-9e8a-f02562719d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b508d-04fe-42f2-9141-e4bc9927b0cd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a19a3-bcbc-4647-a442-292d624a7a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded97657-bd6a-4c41-b046-e78a7111b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e885a32-c278-43ef-94a3-f885fdec712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f70fdf-c4c5-41f5-a085-f47f877a402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701b5608-3abf-4a79-a15c-1f86a386598a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ca1f5a-ec87-405e-b55f-0bf138d527a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeec341-286e-4270-8040-9da0f74d4958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab20008-0b95-4da6-aa4a-897d44fa7895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e839fb6-ae4d-4060-8ca7-2e5ee8c59585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50de4688-7120-4cb3-975d-8987e4dd00e4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e524a6a7-72cb-41fd-a8ba-836bdae94d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f1e996-9537-4e28-a494-29bfd62653a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6e60c1-5cb2-4be7-983e-a782281f1fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad3ce62-9d77-4d89-8918-8f74ba55beee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481bed09-8e9e-4dcb-9198-6c978cde07cf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1a650-fca2-4a6b-92f9-f524aebc4d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756817bb-8d00-4c6f-916b-61efeb4814d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb532344-b041-451f-997d-62882361cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe13c34-7317-4905-a936-d639c4bef1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd4b0ab-a157-49e4-9368-2699c73220a3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a1684c-5da3-46ae-9da0-11f3fb749327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fb78f1-b097-4c86-b3b0-269c63b60ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba39a65-4510-475f-a0ac-c9ffa7802f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f66075a-848b-42b6-9f44-00f29f48ee16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea321925-dbac-47a8-b3c3-1c16d0e23cb0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfc3ab4-a254-4d85-9ac4-ea821786e2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c5fa4b-8398-4860-ad16-ddbcc7c5d004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb8e993-47cc-443d-acb7-05ff63c02941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe274d7f-04c4-4834-9603-dc63e3c316dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108a5729-2535-4980-877b-55d5aae63e32",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036069bf-37e1-4ebc-bcef-c41bcd8184f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5048583-1f30-402d-ae16-88d94a92276f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc87f059-13d6-4303-8501-2799542c38e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d3518e-56bb-44a5-810d-8320c37dfb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd86c3-ba41-4584-ae7a-441b0b8510f3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5d318d-4971-4d4b-a193-0079da5ff98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772f1e45-0aef-40d6-85cf-6741b784086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea5428e-0f87-4b57-8b94-9e19b8c6d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f69f1741-abf7-44db-830e-2fe12df1f6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f4a74-4153-4b1d-a73a-1b4718fe5821",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea6c9b4-fdbc-47ca-8924-0b233d19eba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e0363-e72a-4111-a330-5cce74ed8acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e0d3dd-056d-485c-95e8-fcba8414de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57122cd5-dad6-44ba-b53a-270f6ec75282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57038d7d-a371-4bb4-81d5-5b7bcb2819bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed251037-6348-4604-b970-1097cad9ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16065c6-cff4-46ae-b048-80c749c0cd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b63474-25e5-4cba-a71b-4dae070c856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6c35f0-8cf7-4683-833e-541f8c2e3f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b18e91f-a70c-4fd0-ad7d-0c5c8d20d8b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ee59eb-d59b-4a65-963b-2c522eeae5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307f1b84-aade-4552-89cd-cb54c686fe7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c5e881-dbe6-47f2-99be-b8474992b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1233d3d6-c4e2-4b3d-9b49-5b0c63b65894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655cbe5f-2377-4156-8bd3-3e8c143954f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d381a74-7b23-4e8a-ac0d-dbbdc5888f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36860c7f-c303-434c-ba58-bb13ca1597d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8916997-d2eb-49c7-9c3c-f44835777a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7dae41-53ba-4e03-a5df-1be121e0e247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec4c7b-3fc4-4b65-a42e-33bcf3c32560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a857235-aff8-4fca-a709-5db0463e26d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af1dd55-7d1a-4288-ba0f-de158ca02fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aa6075-d246-4062-b004-457aecfa0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64d577b-a0aa-4026-8d30-fcce371c68ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634e63a8-5d3f-4248-a12e-973cb05cc946",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27f3b8d-505b-4795-9b3b-9316fedac61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dba5562-1243-4b47-ad94-55752f8f7073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7116289a-db6e-40b5-87a0-41ebb4263468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "98896666-3fd3-421f-ac99-6fe5982e02c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62377e7a-fc58-4c1a-b913-1e915ea76c2c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a6487-15f6-4147-afc7-ad1cbc70269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885db43f-86fe-4560-a53a-d9692c720692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4111cf47-f112-4eab-85b7-81fa74814c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "86cbe83b-814f-46da-afa4-858ca14852d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712df886-cf65-4c2f-a06c-fe1511ec6358",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58af381-574c-4063-9b17-ecc2e3cc82d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d2d987-80a5-4d61-8ae1-e082710cced8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525c3d6f-cb88-4c65-a9cb-09536ef847ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23186f8f-48fc-4a01-8ac5-48a3d82fc024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb02966-9c63-4b24-96d4-dfe946ba34db",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e968fe1-86e8-406d-b36e-e2c350e1100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2929c71-4b29-42f5-a8f1-4d0f75fe6af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f021a-d88e-4817-9726-f66ef191fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1a57ee-4d5d-4519-8c70-cbc45b966519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66719fd-404f-4c1e-a0f2-08efaaf332b5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958e1ac3-323b-4d64-9452-1b9f251740c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27e64fb-2120-476a-bf7c-182e3028decd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddcfee5-d969-4327-a394-b6984e4de9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c591313b-409f-4887-8a59-658797d4a1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c62b831-91f0-4f5a-9a84-b952b05e1218",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b39bbf7-63fb-45ea-b337-ffde86ebb6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfef2aa-e700-442f-89cd-24be313abe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e801e4-a2a6-4222-b4ca-28763a1dfdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a94ddf53-dd8c-456d-b91f-131daa385656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2729ae33-c323-4be7-bc19-adaeaabe90d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbacabc-3373-47f2-944b-e305f4c78328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892b64b1-7965-4cdd-9424-29ea10890315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35bc3fb-30b8-4d47-be30-b6f080527ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "972ff798-807b-472d-9025-046d0fa2680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b79af1-23ae-49d2-909e-87d895b7ded0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54f7cb8-94e0-4282-bfee-b330905ba9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc74c185-22f4-42a3-b59a-20ad14613e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae09f589-2452-44c0-baac-e8856bf7700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d4207e-7df8-4afb-8321-f7374a786af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4bbb46-5135-4325-a5e8-943f6a6f8cf6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed0801b-934a-4e31-a291-b87284f2873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c631287f-41e4-4738-bce8-ef91989d5e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c5cef1-42f2-4eaa-bc67-43f5c2fba2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b186fac-a253-4d28-8551-93e9de811493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247f0133-3acc-4de1-a1f2-2c92b37f283e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff61e2b-3dc9-488e-9e8b-3ba8c2f6ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f9f736-bfc9-4403-8fa5-104437ad60e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e6d06c-ae29-4ce4-8140-705491fc6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "311c9e41-cdd3-4cd6-a956-83e067ae9d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb9c88b-9607-4231-869e-bc9816773c77",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd534063-480c-44b3-9945-97a9f2ed723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef54e962-a541-4c32-8687-cd088ba57034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4022084a-1ecd-4b8b-94c7-34592c650f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e135c146-acee-48ba-a402-b6002fc318f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13393864-d130-408d-ba48-8f5f1f4a0723",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2def1c-00c9-43ab-afa3-185a75e7126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a09d65c-f7d0-4795-98af-3a0c497e94f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5a3ec-ae3c-4514-a311-4c0af4eb4157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d24ec0d5-5661-4c3a-9351-c1c74525d029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09564c3d-53f1-4ee4-bdc4-8313f871a5e9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8cc52e-d9df-4bdd-b3c5-8ed5b5434706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e94aaf1-987c-41b1-952b-556738ee7960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f18b73c-6231-4d82-9c3f-7e72faf66cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c0b69d-e4df-4a98-b0f5-206ce6c1d99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3101d31-4349-49a9-8b45-972e52300e8f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eea54a-a608-4d33-8dbc-1173c219ee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb65f50-2f74-4b97-a6b9-2f016e6b3dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f75692-f0b9-46f6-8134-9ce1e82c50f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eb556c-5632-4ac4-a3b6-476c77821d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48285dc6-e694-418a-8862-bd27c5d6bc3e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6967d-f8f5-47e5-a43a-deddb4adf52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7745f884-8c03-4350-8873-66a9d01b63a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1690af-0590-4087-b081-e1bc1f25099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b47ec2b-fc5a-4ccb-882e-50752b23042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db57fd-f2b0-4339-968d-31ec54cde029",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc71c2-ee0a-4466-bbbe-5d2c1b2389a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fe04e8-e018-466d-a6f3-f54c374592e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f7b492-3cdd-44e2-a68b-9ffc8ebfe15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26d46c3-0a4d-48fd-9706-68e05a4314e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1da848-1349-4bcf-a8f9-159d2b4601d6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513bf171-a530-49a5-a33b-66cb39ab925c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382669fc-829d-490d-afbe-7daa1a306a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9984e408-1fca-4640-b656-9df6e6a411fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19efe292-f058-4775-90cc-eceed5c37eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba97a146-8871-4297-a33a-e15bddeaf261",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f421e3-c64a-4cf5-9cbb-9dc4b05df437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d79492b-10b2-49bb-a9b7-68c0275880cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb35507-7044-45ce-981e-4d9b0e8d7c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a514b57-8e88-4386-adcf-cedbe5fae24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb150a8c-a32a-4ae2-95fd-33061ec95b77",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d3ca23-6261-44dd-b856-7774da0e36cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f56404-7f95-43f1-b592-4362e28873b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ae5e4b-30f0-43cb-8502-18473b955d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "348560b6-ad69-42e6-a93e-6c312536908e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011f9f69-0917-4518-9b21-aeb4bc6edaa6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23029e3e-256f-4961-b288-e4c6995ee387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc49860-2939-485a-95bd-0a1742c9e789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6d908c-d0fc-4e21-9bbf-8715f093c01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c662d1-6814-49e4-a941-a67eb9a88c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cdbfa9-c20d-42d3-8b37-69816a345ef6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c327db-dbe2-4224-abc3-e09e26ac790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24e3dbd-9df0-4eb4-a017-e15af9dace8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be9e3f5-b552-4f3a-a8d6-6ea187010a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2236f300-bc4b-4e01-9630-f5e605855e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9431e85-5a58-4ee8-acff-68def330678f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c142a372-764b-480a-afdc-8814cf12941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad6aa67-1f6a-48aa-bfdb-b45cd8c074ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25173a0f-19b9-4132-86df-6f79751c39ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a20b462-c2e8-4bc2-90d6-7f941f616d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc710115-7cdc-4aa5-9676-b57d5475f507",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78feacad-67a1-46ae-a420-5bf6200aa074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b8ff76-1f5f-4f26-a333-e8adf80f27a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ecf5f2-7ded-4e67-a98a-47c1d71f225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b406c406-6b5c-46cf-a382-8589edbd05c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b111b-2799-48b0-8e97-59fe75e40bdd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814661de-a7e8-4016-929a-3acaf2d8ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30be8dc4-de70-40e9-a8a9-b8b81726764e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3427e8-3354-4887-9ecc-b0b8ff13b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63c049a3-bc81-4aa1-a783-e2b8eb9b0a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aac6b91-6761-41b1-92f3-afc361b46b77",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf19107-7792-48e1-8007-faf7cbaabff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d3eacf-229b-47f6-b760-38afd1338b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df4d2c6-e906-4779-8324-6a9d5c0ea5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d77a07-f7f6-44db-b8f3-eef6afaab498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c87467-b019-4198-93a1-4f3f1e4cd932",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274b7865-05ea-43ed-9987-72d4a577d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d6e3a4-fa3d-4d14-bbea-71cb7aa7ecad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eda900b-3551-43c7-918e-f3130cdb1230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc523d33-0a3a-45e2-a7c5-ab55ddf43bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54a0826-4650-4f1b-a0e6-280229fe06dc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ad5214-d13e-49cd-a024-346c8ed5c1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ad9794-23ac-4574-b93a-948ef1fa93be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8258f518-bfc6-47af-95dc-a60a539a1d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b0cee6-2e32-43ba-8abe-6e3310497b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eed1f67-3a47-4e39-abb6-8432a56c4808",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dae094-f10c-4205-bec3-7e47417ecff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dc0b86-3ab6-4ca1-844c-8d6a9d236f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7a0f25-bb59-4915-af33-517a8f673921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d55f05c2-5005-4af5-8569-d431e2d530b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21266bb2-5871-49cf-8e0c-5496891336c7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8fce39-5d77-446d-8fd6-644f1185d055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0252fa-c810-4622-bb69-5325518c9c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58967a8-1aba-4640-ac59-6552fb1f0f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0cc054-b134-40cf-b18e-e0a52f3d589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6193c646-3cd3-4959-877c-cde8ab519fb7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234fee38-cd02-4fb5-b8d8-41d56e0c3f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d941085-b52a-4316-b00e-d8229b6b2eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f1545-7237-494d-8e67-9a6cf9e0d820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88d68caf-e7d3-4465-95cd-c89294dc9aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffa2bcc-1e78-40a3-abc5-5e880d7a28d9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8690b89e-ce33-4dcb-863b-5d140a5a9351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83306c44-f65f-4842-9286-4b59ea5bce83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd84a016-183c-42e1-98e4-24709f03d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9978961c-3e63-40fd-b253-238973699d36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bea8db4-127b-437a-95e3-b6895179d0ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f1eba91-1cef-4714-a81c-985660bd0d65",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747436bf-aea1-4e21-83a1-708979b911a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b4a6662-1f58-43af-addb-b9fdc0894f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05dbd2-f7aa-443a-aa7c-112823fa0501",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd97f297-c5d1-4b86-b8fe-fbbe8355f0d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1644942-d463-48bb-9131-7f85bf87b942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc5653f3-89ba-4802-8280-397ebe49326a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25651c0c-4a9a-42bd-a688-0691f0c32cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21b2cd9a-6777-4899-bd9a-3ce8e2e69ee5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b6ee237-bcc1-4961-9e0d-70b70dd2e6a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07e1ef8e-851d-4b3b-a20d-b08377fd6b0b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "219dde50-aa7d-41f2-aa8d-23cc37c8861a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92cdbf5e-96ff-4bf2-a6ed-242ce0e95f58"
                }
              }
            ]
          },
          {
            "id": "4b88d80a-5548-4a0d-9fe1-10b5f047be42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1525d83e-7d00-4a4b-9aa4-ef2fda4e5998",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4ade06f9-3dee-4fb6-a851-e85f342b842a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fac4cba-6522-4aa2-9282-0ed8c99c42af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "51cd453c-0043-42cf-b945-214fc575405b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7276c0-e5db-430f-805c-d27c4ddd92c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f93d8b-c546-490d-8023-f40cbc22307d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b4a82d4-900c-4951-bb1e-c15fe8a65ad8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9fbab5-292a-408c-b68c-b17c1b745bf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4f9dbcc-feeb-48aa-a574-595de50ae1f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7ad0af4-ae43-4fd3-8942-d5555533d55b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "590f9a82-6cb1-4a42-8f12-cf968e3fe772"
                    }
                  }
                ]
              },
              {
                "id": "93a1a601-bf4f-4e73-8474-809449b2d577",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc02f20-8bd2-454d-850d-1f501045f520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce82cbda-e3cc-45c8-a05b-ae3f607cac24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10357b59-4428-4770-8fef-78507f85929a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e24c3620-4bad-4638-b4c5-1475f5582b58"
                    }
                  }
                ]
              },
              {
                "id": "c332b4b2-6ee8-4f6b-b89b-9cb15ef7352d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c31c9c86-7a1b-4e94-85dc-623d52ac0b01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c5bc424-62c6-4127-959b-64b3447bbbbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c3c5ebc-18ef-4d90-a120-7c6382b9bc7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4b99e92-a272-42aa-8d4b-71609b0a30ab"
                    }
                  }
                ]
              },
              {
                "id": "2083677c-2bae-4144-a6a8-124c7af0bea2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13732280-cd48-4b8c-b9ca-a708f844ff93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36137191-4a16-4aa2-b326-8fa8a16f2a4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acfb0736-5ec3-4cf8-bbc9-039d335f1283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "23df61ac-3a96-46bb-9b4d-e1e0c48265ca"
                    }
                  }
                ]
              },
              {
                "id": "65086139-9fcb-4b71-a9aa-58cfcf4689b3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb43babe-a75d-4b80-94d4-683560f5120f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67b4ade4-f046-4a2a-bc4c-c85faac47358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66eaad7b-8e61-4d5e-95ee-964217949fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "777f6605-f1ba-41d2-a3bf-abeedec602dc"
                    }
                  }
                ]
              },
              {
                "id": "50c24727-420e-48f5-b38a-c3216347f8ad",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1dc0967-80f9-40fd-902d-733347036a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68ee603c-711a-4e08-84e4-7b840eaccd1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7194cb77-4ca5-4b09-a77d-0acbe0083d06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07a04763-0de5-41eb-ad2e-fa6cf06235d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "864ef469-1b45-43f9-b62d-b7c3710af018",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e21570e-3153-40f6-8acd-d76a6196d95f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0ae9cbd-e8c2-4ba0-bff4-eda8c85b66a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30567cee-35f6-4deb-a803-50e883493db6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb232748-f0cb-4053-bbcf-26f3e4f59e57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8c0029a2-e3cc-4466-8062-d3be87cdb1d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a457ebfa-d0c4-452a-91a0-be1be589edaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c38b651f-9062-4afc-966a-720ce6794a49"
            }
          }
        ]
      },
      {
        "id": "efbc0b5f-da67-4b7f-82eb-3c35c0763c7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad04712b-1119-4ac3-adb7-84adf1874fb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73d826f0-8244-4ee5-9934-b7c6233599ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d21fa51-615d-4f51-a034-e8f8bb16202e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a1e8a8-3b72-4f93-9677-d11744f70e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ece65d-bc0f-42a5-bd9f-c0d748bd0af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8714ccd-2895-4aea-82db-f67bda610de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7856ed1-ba79-4fa1-befb-36a0605a142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b369be83-a0af-4454-93cf-b4b8b06bd9ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a4a26a-572a-4618-8bce-0eb63b0d1fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfb0c93-8243-4207-98e1-a53de495b9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b5cde4-40a7-411d-a9e7-329915887abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "443b117e-3d9c-4b38-8767-0dd941c7c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3a695a-2ed1-465a-9f41-c31e2083e666",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa540c2-f3cb-4ec7-ad4a-43e80a19a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caccf1b5-c904-4a0d-89be-49ba4e61a363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a485df18-e187-4738-9b8c-0e7324b8fe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c15fb49-f3ef-4e0b-bcc2-2e47c56a9435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42323959-eca5-4946-aa74-557bb7df5938",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafec833-c1d7-40f8-9738-7549310dcb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f4c3b-60ee-4226-94fe-efc25660d39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace7a5c6-a437-47f8-b45e-f86383ad91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd75dda-e278-4a49-86b5-3cac872b8bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2353900-9bea-4c10-aed2-78c4b290b569",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c854f543-049a-46db-9b70-bb16ef8057bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88bcde2-9cb4-4084-8a93-2c210ffd670d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c069330-2b1b-461b-8ae7-66c08972112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e69fc095-1dd0-45d3-8ea5-1d0855327254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40be318-6b26-41dc-b469-22ba82e8a693",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81b747c-e2f3-4b40-8104-a66367f33ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974048eb-8fdd-4dd0-8e19-72cdb47b41c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060b5f0e-677a-4ff7-b7a2-75ffeb43a843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e67ac58-2c60-42b9-b56a-de2a147287bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394354dc-fca9-48bb-b94f-1780caaddf83",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d64d37-d396-4a07-a9a1-0bb995c23538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c35482-50c0-4f2f-93ff-4eb3424c07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a13453-86ca-441a-b28b-dec2b5f20ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb583ac8-a817-47c0-b13e-deb73a43274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8d7d71-26fe-4b18-a11e-f7a2de17cba8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e37232-06bc-4981-874d-8e1e0f70a68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1db2cf-cf48-4f35-9d8b-916395317b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f6b147-8cdd-47de-b79a-9468441ee571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2648b91-3b01-4051-9c34-a217239954f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee58f71-a5b3-4887-9cd3-a1e82b90be14",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c9a09-46fb-4293-9894-74b34ca1b993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6c46c5-5944-4173-a475-be74b332feaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0bd518-b7ec-457d-a89e-3d74f16eef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2665b57f-5e34-4fc6-bc68-d9a3b9d28dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a477e9-6f6e-4fec-80d7-b37de201cc18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbe6334-b55b-45c2-afa8-2e322f780134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356a49c0-ab2e-4725-ab76-f470d1a03976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104eeea1-0d1a-4ea0-a30f-6ce05bc5e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eccefdfa-c224-4549-a74f-9ba644bc8dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72bf1be-08fe-47fd-8f70-396f3676d9da",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8efc4f-83a7-4fb6-b723-bca8a2ae0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d488719d-9584-4a69-8959-0f3939c92904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471d45d8-e5c0-44f6-ba7d-e23fbf25ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8758b2-7a86-4307-bc75-f1170a450459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b5ef6-dfd6-454a-b976-1a2d7c05cf29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d43790-83b6-486b-87b6-c2b3ac5074cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d15f59-5770-4096-ac8d-78f7978ea6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7beba9-aee3-4e41-983f-66474376ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93b2d458-ae7f-4992-96ec-25120237c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae7d9d3-93ce-4238-a67a-a1d3a35973e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3662b17-5f50-4018-8f9e-5e9eb0b98978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914b6fc8-b213-4545-95d2-2230c6700e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55b6d2c-b506-45bd-8281-d88a1522606d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ed40dc-9eb8-4236-b656-768d747dbbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddc1cf5-33f1-4833-8429-2cadbcdee35a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adbb56d-4076-4b61-a30e-a6f90430da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f3db55-c15b-41ab-b5bf-b2528075c712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e66773c-f313-4248-8d24-090ba70608a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b69d4f9-126e-4c5b-842d-113d0a210867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e15f854-bf5f-4e91-a20b-51d5762e7c31",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe903f9-34bb-4e33-b322-84ae7f749b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a5d77c-e84e-4fb9-a36a-47a49e9632a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed029c-42aa-4134-80e5-f03fe8821a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56e0f91-bd7c-4d8b-8fc1-f273606aea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352b0480-d98f-427a-b408-e4134068644e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451a895b-85ed-4ad8-85e6-00a7c1cb1f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc76f45-cb7a-4472-8104-bab560f12c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3f6a90-ade3-423c-b351-ab8de786e680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "763ef5d1-df6e-4151-920d-2ff9074f8e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491cedb5-fd5b-471c-8f41-54e443094788",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566697d5-54e2-4afb-a585-060da145a343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8414e1-2983-40e8-bb66-5f318e01a81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3381359e-4bdb-40a1-8ec6-414de7937880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8adac4a-0e4d-4336-962d-afe1c54d9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb55a189-8e76-432c-9d2e-81870918d947",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcec9f51-959e-44cf-9011-221f0ed7f21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef64eac-ddd0-4020-81d2-dd4896624b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b57738-c977-494d-8fd8-f92a32f524b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bd618e-3ad2-4517-9cdb-b8fe3dae0d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26584591-6af7-404b-97a7-55e0a61d4592",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbfb5d1-a056-4fdd-8c73-12a240138b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866ede25-6ee6-428e-a9ab-3a2c6ea4cf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b553462f-0399-4b06-925b-e6a680b25996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3951f60-b859-461f-bd63-26117ea81a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8122df7b-9971-4e23-b011-e79bda69aa57",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc3cac6-dc7e-4d5a-ac7d-c6ada1810cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f31575-03f2-49a4-8621-f97fd02af4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd4b92-11b2-48c0-8764-fea4c2350a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba34af9c-55ab-434c-ac5c-d82f52adc586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1b67ec-aa70-4fc9-9cd7-3009da473cb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b666f168-8570-4fd2-accd-8bc5417054cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d845bf95-fe48-473f-a9a3-ecc13cee53c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ebd163-ad63-4a75-ad1f-dfd90d5f4db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c5578d-d906-4ca2-9eef-92ad82a56847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86779500-595c-4937-af4c-cf235cdcfade",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a63c0b-2e7a-4beb-b518-5c94a8fcd9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeabc1e-463c-49de-b429-c76ecc9de4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d2153f-fb50-4036-a337-b3947e301d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd95d89-558c-47f8-80eb-04eb44fe9c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56efd498-23a6-470e-9ad3-b975edf403ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072a40b-004a-4914-bddb-7ade102e8971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136895bf-3b73-48d6-9bcb-2240f0f78088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d99ce-5c9f-4f10-9e54-0a02d32185d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d55da5-d0f6-456c-8596-cfc5c5240c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf503be-4d7a-44a5-9993-f7fba06ed696",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee222f71-18b9-4950-814c-d2c412981da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a547ca8d-2609-4b29-9b21-58da935f7743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711eae4-a030-4da2-a9d7-69904e30bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2bf478d-bfea-41f2-a302-89baf9c80d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb26b147-0b9c-4b23-8ae4-d24153bc3e48",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f23f19-a501-4504-8e1c-41766f97cddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f2c409-1605-4bb9-8df8-b351eb484781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07225302-4859-4eca-93d7-0e7a6b9174f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ed4000-8c1c-4f49-b452-9b0a6fe74976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b08980-ee10-4566-837d-e44157c1148a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf84d4d-5fe1-4c32-be85-d9e647945e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbc0858-1aec-4fa6-b627-c693c5ce76f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1245972b-d6ef-4038-a6b7-6276f316b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482d79d3-793c-47b7-80cb-79db4680f782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58112610-074d-4cdc-bb26-c28c5f27dc88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb03610-0cc7-4d53-a048-8097987e0022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76caac8c-a0a5-496e-abff-8ea247e148b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34be9043-b447-47b2-bd61-a6cb101736ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "869e3ebc-22b8-43df-871f-3220e94ee07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18c793a-5cfe-4290-a5db-b5d858b9fa34",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4292b58e-70ea-443d-93e1-b2f71eb3320b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1234d3c0-b4eb-4ce3-ada4-6f80d8f5bae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf5fef-4ba0-4c24-88bf-d80eef9c4f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d63429e-fe98-4cfc-9c17-67931038e505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b460b0a-1587-41dd-b91e-ebb63853f071",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16afca1c-e98a-433c-9632-9fcaafb2c50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55930067-2b6b-4c07-a34f-37fe48013065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54b36a3-f316-4830-bfaa-c38ada043764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d645a1f7-088b-4ee4-ad9c-c41a9955f207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c544473-ac07-461f-b82c-3495842f1c01",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea8fd14-3f26-480a-b27d-d9abd07a9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b618cef2-c21e-4b57-9d3b-31551c1583e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8537706-db93-45e2-96aa-6fa0ca91cefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae444ff3-a009-4282-b95c-61763022609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b9898f-51e6-479c-90ba-63d5e61a52ad",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec8633-68f7-43fe-9129-69286e04b79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543dd10f-4a10-4868-b6c0-97e64204a1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dde457-51c0-4052-9385-2042e6618665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba25d1a-dd86-44f2-a48b-83f58c690e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd477704-e19e-4cec-8c35-f0b005e5f142",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee77f87b-7f56-4035-b4f1-abaed960d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df493be-8274-4924-9ae7-4ea443e98b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea78ab51-96fb-43af-81e8-5b69be791228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480eb6bb-50d3-4b26-a4cb-b948164ae587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aba2577-b07b-4d3f-a55a-1bf28b7e21a3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18779a7-3ac9-46b7-9270-4d028bb8e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9066aecc-4708-4146-908d-84c990c23e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c783c9cd-addb-48fd-95a6-1d7b70286794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda13e97-97b5-4102-bb12-37af7b3e001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e33248-1450-42b2-934c-bd74765b45d8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12918bf3-c804-4366-bee4-a79e70884ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb13cef-4059-4240-90f4-6575d560034a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7a5a27-cdef-4b32-ad81-1f015946c62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbe8dd1-218d-49ce-a9be-b4ef8a7fc704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e98fc0-91d2-48e6-bd24-9d1f97861c1c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c8079f-6a4e-439f-9dfb-4d055212f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b093e9-8a65-4297-b5c1-557f3369b9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ca08b2-b1c8-4d0a-bf66-b0caad32c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "234918f6-e8e6-4019-ba65-329a5d7535d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8ee235-9448-4b58-935e-5e903674f6b1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a6eaf-9667-4a8d-96e9-3ee9f9248a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dee98c2-0ed5-494c-9cbe-53640e34c3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd317c3-6d5f-4b7c-9d6e-3cf49f5f2b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dda8e34-1364-4906-8e09-2157905364d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea10c90-673e-481c-a8a0-6d7b26990726",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72820fb2-1ca6-4019-976b-00a4329a1a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c4f02a-70a7-4b12-ac77-ab643182bc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f84cd8-02d6-46eb-843b-290f649517e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a419904b-3115-497c-bbf7-a2d72f8cca35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f00a666-3729-4084-b46b-9c3f1695b945",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f352c3b-b4d2-4b5b-a273-1c4cf5843f0f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bb779c-ae40-4dad-be59-da8b8d47f808",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6b619d-5404-45f5-8ff0-ad87b193ef57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bf2a96-e34c-4e09-b7c6-34692140cf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00df6907-a813-4707-b5b5-c1374f74c324"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c984f06-4f73-490f-a623-40e7e53d3f49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2bc1eca-5b2c-42e0-a633-2872499bbca2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffd3f4fc-06dc-43aa-a51d-22053dba5d31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b305de74-00f1-4e60-9d6b-315804c09bcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fb42dbb-c991-4468-a88d-5440af04362a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6cc96a38-b51d-4bf1-a74d-a1626c175280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8221da7-6d76-4b2c-b78c-edeb30134e39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44832182-8067-4c1a-b855-e1e435c1f2c4"
            }
          }
        ]
      },
      {
        "id": "03dbfbfb-af48-4db4-b562-7808f3eb4d25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "acc9f3d5-8e2c-46e2-9888-b26d36c09927",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26463db3-f271-4c5f-9870-c56f59683ac8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3d2b117-8393-48d6-b9c7-7f7e8e4007ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0a5997-b98d-4e3d-abd7-6fb7691269d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee5a012-2f34-4f22-b966-5fd486a69576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9e801f-e068-45e5-b469-f3b7dcba5233",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c462e9e4-f86d-400a-8951-dd1b72354ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500568a7-c5f9-4279-b991-d5aa28b1e1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e8794-4ba7-4329-b8c3-4ae03db580b9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7740b616-2b64-497a-8da0-f1c188705c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fb0d76-3c9a-4ccd-ac16-d8fdb1e60f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9399cb-9bd2-43e3-8b0c-79f4bbffc743",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a247c020-b5e7-43a7-9a7d-41734f94a38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d31eab5-77a0-41ca-af2a-a4a89fcd04eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4488d5e-83ca-4342-b140-8286c45b361e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f6b31b-8626-4297-a63d-1cf7e68a8e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfb8cde-6674-44bb-a9fd-f587c8c9e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25c7e06-e205-46b9-ba5a-cca51e8c77ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df31242a-bdb0-44ae-b621-25efcabddcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb30c791-315a-450c-8c20-81ce33d19a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e720ce3-f36c-467c-99be-73d762c8628d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1204ca9-6787-4610-b485-4b86e0241bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e825f0f-1247-4ddb-9e8c-ad3e472f6159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca218863-e217-4a58-98b9-55646ce372b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d1117d-a690-4c27-bdfd-6c97aedd4982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35543b72-84b6-4601-b534-cd67fe1faec9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7e9a6b-73fc-454c-a5f3-871723825285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "294e34d2-f3fd-42ba-a157-fdaaeb77b777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0871b71d-1069-4401-8c3a-c67ef921aa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6264a53-9c57-4069-944a-c0aaab1e8110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540ea9e0-a1f2-452c-aa2d-79a6fcc7ffad",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165eb39d-724b-4273-8a97-e3c4c1dd9eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a734a3-cb8a-470c-872e-d8c9e849391c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4e8a52-e860-4d2a-8dff-8f14b689baa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcbecff-8970-4c94-a2c3-2ba4fe86fc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57058a9e-c6f0-4f14-b9d1-c4c9d8eea58f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc32179-09f7-49fd-a2ff-3d1b74ea897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bb9494-0435-4706-a862-e02daac32d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140edcb4-152e-4519-8809-f7f072503a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5b7b4f-6ddd-4bad-9ca2-1b2d815d1649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddc6f79-3530-4e9b-a84e-b56bc48fb7d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f6cc3e-7828-4573-b66b-e233651eb56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefecbd0-540f-40bc-8212-42980e288a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca567054-fb0c-4615-aa32-a04e7ef57c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54951ef0-71ee-4aba-9f8b-d1431b1d0080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba4ea0-df75-4949-b23a-5995b47f3110",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d041eb2b-f83a-4a0e-83dd-79f7c1f1ea2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87231946-72e4-49ce-bf70-44dd0103d0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f9e87-2a30-4af1-b936-4ac84ba6b6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53ed383-fd9d-4fa9-a95f-1faf8871d2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0160967-123e-4fcd-866a-f7ed3935f0c1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7408198-6fc3-4e94-8176-e57549c3b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bbbc523-d453-4d6e-a6f8-6902e100701f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f00647-3c74-46a4-a273-4f13b940d01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde9c6e2-8dee-4f3c-b957-5053df3141e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d40da2d-48f7-4654-a9fe-63db214df8de",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5a1ebc-2264-4c5e-a0c7-fcf92a6ebc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fea01c-305d-4749-81ab-13373ea7afdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fca03c-1db7-44e9-8ead-f7415b49bdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40366c5e-ed92-44fe-b8af-98146c073600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cbcd63-7249-4422-97cc-e34d1825fe0b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f5fea5-0456-49ee-99a8-bf9f6491ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69270fef-b574-4cc6-92f8-08694d277b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94aaf0e-97d3-4762-a98d-faaf056f5963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe863ee5-1fe7-40eb-be82-eaf51d4dbd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2b4cf3-848f-4024-8571-abc1e4557a24",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04671781-1ef6-4319-b573-8f228dade81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d340d19-55e9-4199-a2d9-bc70b9d91cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1fc21c-6552-4f3f-b855-15e2051e5960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a078d8-7d95-40ef-9e0e-b8d7261de7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e7b901-aa90-4f22-b203-b26f6215e41c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c06e3e-5db0-49b9-affc-eeac43f65606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d2c5bc-6786-48f4-8728-843d6fe7521e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bbfe8-37d7-4fd1-b151-00c6def54fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47b5f42-4441-4aa8-b798-c089f1de1761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415db804-c314-4a0e-838b-44e389ca366c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa08af-9f8e-4313-a7f6-9c81988d7482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39348d69-e16f-4c18-848c-30fcf89e877b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6d7a90-79ce-435a-b385-38c60b550d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef1fcf5-883f-4467-81ae-65bd80e858fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e63589f-275c-4a18-b613-93108e4e6dcc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe62f756-d05b-44aa-91c9-554fac767e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54a242d-2843-4b11-9abe-878e361021db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c05d33-cb31-4490-9776-e9a54c37433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dba1ff-4b3f-4c4b-b139-51013f4a1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0620ad9c-bb19-440e-a331-123e47f8b5cd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b6c2f0-f704-4a4a-b48b-674d8b11c18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553bfa5e-6b98-4231-a8d2-5360faf90e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7485b0-4695-47cd-aaa4-c59d8c87fb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aad7f3-06cd-48a2-97a6-d2ee5c2a9a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776005e4-b13c-44ec-8cb8-fcc21999f1a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8fb94-3225-4d22-9932-fe1d905876de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e8240b-404c-44b1-b845-1b28526a0727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cc4cf3-00ab-4767-9fbd-3f0556d2f98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb478e80-ffae-4321-9218-4ff053e7bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfe1898-81ef-4e25-bddd-194afe64b67f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c85c98-4dd2-45b4-acf8-5fbb3ceff5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a44a85-5917-4662-a0e3-3deeebb69c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1368d83e-bd58-4096-9332-cfe821d75fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c01912e-fade-40c6-8de3-59ef0ad98033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656abd3c-b256-4972-bd36-393f053bd365",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1b30bc-8c9a-4646-9818-b129a0d1c893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d69938e-872c-43ca-96a8-45237b629816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30cd2fe-ba0e-49bd-9903-d119234f330f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ea7198-ee90-49d9-8203-922a44dfba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eefd13-0111-4c00-8489-777189f0455a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eb3e73-2bba-4dd6-9f3b-c0dd6768e6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3cabc8-22de-436b-a8f9-03d93044ae0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d169c3a-229a-40e4-a99a-4072912fea92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a5c5bf-09bd-4faa-807d-1742d6f18179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39ed72b-5209-423a-9820-eaceb6a2606e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168e85d-fa3c-4db7-99c7-deaf8c2c024d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6687f8-cf6e-4a79-a906-27b2abcb700a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01921de3-015a-47a3-8f79-ff9b01e7503c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37270b12-c611-4e47-8d7e-25208b7c12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0112eac7-285e-40be-a328-805eecff62a4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be528e12-1933-4e3b-a1ff-61b0adb85898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29912727-86af-412c-b887-297123ade5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf3809-273b-4283-8c86-6b1b95b14f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54020122-3baf-4f07-a368-1720177b5ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22355548-7631-4d7c-bf0b-74780e186d9f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297561f7-34d9-4f98-9542-07b56ad3536e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4685d27f-7529-4440-99bf-aa15875e72e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be77b08a-33f9-473a-b5a2-2fe937ac32b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f32dfc8-c7cd-4967-8697-008ccde2a468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb52ae7-b2d1-458d-b14e-033d901ec2d2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfd4487-3bcd-40a1-bb9b-8225a8df31ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5282c7eb-e108-4867-a843-5a37be913d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34906a03-4655-46d0-a02a-4cd8a2096363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e3b094-576a-417f-bd00-902519b14154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363f54e3-0210-4129-b2fb-ec0d59ae32b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a56a238-0666-4900-a6f9-26c024faf477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4928a3fc-09b0-4636-9f29-e6991d0628c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc16c2e-71cb-4ef8-9587-a66f3abcacac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450a7921-b30d-4fd1-b246-56b3b5611579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec34be15-8294-4b58-80e7-5d74c0b4cac4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214f6c17-53b1-4c96-a33d-fe53fcc32177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fcdbf2-b880-48f5-af49-0003c9802d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44bc118-7b4b-45bc-832e-0e04cc0aa214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fd12de-660c-423e-9b6d-ed57851eb554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf9f85f-f2d2-446f-8ae0-1b91673ac85c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764bf468-2c53-48f1-8642-89d7ea1ba4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425d0efc-8bff-421a-8cac-35d93af929f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5165b923-bfd6-4269-8472-99d4655e2499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93307624-d9c5-47da-91b0-9256739d0c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9301a573-7939-405c-8341-3fc8f499dd3a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530c39af-e9ed-4555-98d7-4e3833ec87ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c24609a-783e-47e7-a2d3-4ac799d8ad86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453fbd46-d50c-4e52-b82a-8e1acb8dacf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f078d20-f356-466c-9594-91e1d2f85480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880b149a-4e2b-4dfa-b051-939fbecde187",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ee1bc3-ddda-41bc-ab9e-6942083932e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971d98c0-196c-4301-9a82-03ad21390f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfa087a-52b1-46e1-a017-69612c7f53c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be8c99e-88f1-4453-89bb-c79d70f45fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660325b1-8927-49ea-b538-92df23fb4d03",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35f6d47-dfd1-45f3-88ba-38f2cbafe596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31516f0e-3c18-47a4-af2e-d3a4baa51fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec770c5-32c2-4aba-b179-f1692a8a580c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f046856c-5556-4ce3-b4b7-e48977fc57cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3fadd-e2c8-4f7b-aef9-6893c9d39826",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b114a719-37f6-4378-b6a4-602fb3a59013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2e7ac0-9fce-4362-b887-ffbc055a50c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28c060-fafc-49ce-bdf3-60b53c5bf011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3e8b50-ca4a-466a-a921-6c0763ff1889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3855bc4-14c9-4a1d-be23-94e40d2ddc4b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e98c2ad-da89-4cef-8ff4-c52c159a3b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f4262b-153c-46a1-9c5a-e03cc1ec4ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b551be-1557-40e1-9e9f-86814bf6b366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58361751-d178-4eba-bd3d-9c85d6cf2f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38934849-a60d-434d-af44-735561693b61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b506c7-2d97-4ac4-8b7b-2a370be85723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5202ab0f-7eda-4757-b738-750af02417f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7bb885-16c5-4937-9fc5-9dc786344622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33073e35-ae14-426d-93ef-57e431d3784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2590d0d-6604-4b26-af33-3c92bb414232",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3bb802-a006-4e6b-b9e4-de346fea6899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f5ed3e-8aea-4807-b2f7-6830236fc362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9335732-3803-4f90-8868-fbf9695a7e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66702b6-2e17-4e33-b17c-c2b78668d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b40f6c-6dae-4e40-8b3f-dc38563c95cd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33175be-d45c-4d5c-a55c-d407f31de416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c70a900-fd0a-44da-b824-485ff114da15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160e72be-dc6c-4fc6-a1cd-dafcfe1b244d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f900709-25fa-45f4-96be-8c44719e79d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9f24a2-3937-4c28-9e9b-ef101946bf93",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098b045-e776-4790-bac1-51154c98f7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079a6a05-4ba0-486e-bd27-4297906d34c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcef819-7f23-4be6-ad98-60437d801a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93adaad-791d-4989-b696-88f387caaba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d49aac0-e123-4e8e-b1b9-ff4a16bdbefa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261905aa-f0c6-479e-b642-7b6494ab95c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d342b7e-e760-4a5c-bc6a-9609c7d1ebfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c1f38-b5e3-4b2b-abe9-bff71c5ad2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a2bc0f-befc-45cf-8993-0b703daef014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12434ea6-6894-4624-ade4-cf6ace6cd157",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5374e5a7-46d5-4e1c-9c45-a310f30014c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05a1a78-7782-4af4-8c31-73b9afe8c216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378f21d2-cd17-43d1-981d-444d762639fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf9b442-6147-407a-b7ed-69ea1a704271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f9b2d-dc61-4b5a-80cc-f5aaa30524e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dc9176-e756-4f02-a40d-f11de0142eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035906d2-8806-49f3-b535-4da5bbc6f8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd48517-5735-486c-82a4-a51b648b566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d69e2e-0237-4e87-bc20-0d509d3ba183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3c2f6f-0f33-4c2a-9579-97d6e1452d6f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4629b9-992e-4545-875f-6c5e2b9ee5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b63993f-2890-41de-8055-8d32370df309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6d5483-b1a0-459c-bb03-d26cbc7a5e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1b97cd-6c45-4b96-95b0-3ba61bc2c933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a96b937-dbba-4133-833a-0082ea2f99f6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cd2741-8512-4573-9a33-1feba7656e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7e15e0-3a6f-4202-86be-3f9c9a5f8316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70271be-2f7a-4356-9bfb-a898995d62ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b9faec-03cb-4717-9b8f-aa12f6c122f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a18630f-235f-4bd7-8be4-646fc595b403",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a1f70-f2b8-45cd-a4a0-a093c02ad48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75df384d-7df4-4615-bc8f-90a224bcc9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a70da8-3638-4918-af77-1bbe463cbaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1956900-05a1-4e57-8ef2-551b7f3ac72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e019b1a0-2aca-4153-9ae2-5dd806704595",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae079df8-8583-4e28-a510-6ac6ab289c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f943058b-f4e3-470a-940a-421ff75ea2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bb42b3-6e7f-4e12-8a21-351cb49b2337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd16a0a-fe17-4969-87b9-21e996e9d8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802186c8-6ee1-44e4-b69b-3c049bfdb099",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03c4ad2-ae9d-4300-bd2a-83370e0b4714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe639f1-d897-46f8-b716-4bdf8d431806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca17017-cf67-48be-8958-a773a749e341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f901dfa7-aa5c-432e-a454-cd90ab7dc219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f86007-b4f5-4c10-9ebc-1072cffd6f1e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6252e1-b2c9-40f5-a99d-97be0f71515c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cda5a2-d3f4-4f56-808e-0465a69f5bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b246dad3-3318-4b3b-bed1-493924c8570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da9e77f-d4d9-4200-bc71-fb939d66cba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e36c576-d862-408e-a712-166f8f4e2093",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c901cff-f2e5-46ff-b3b9-4f3d316ea9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8560db8b-4781-4f8d-b611-bd8b9ab053d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984c993d-4b2a-43b6-9e45-52bd04c430da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c021c39c-7b97-42e4-9496-849375243a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e5e011-47f1-4e08-aa80-945ef03bf314",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53297d64-c7ce-4d74-8800-1853a9970c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2827af7-f67f-422a-8572-9d7e1044878b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ab560-ee01-46d8-83d0-982a635b7cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d55bf05-078b-4e9e-ad85-26f99799b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597079eb-37bb-4e6f-a57f-22afe0ca2c40",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4cfffd-fbb5-4736-b580-398e674e4e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985fec77-c98b-4382-b57c-a9af3922f0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d24e7b-a04f-4848-a42d-d6931797d2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8541b2-4496-466d-9889-bbe5d5be7609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf240aa-22ae-4a15-9915-d60d7dc4c56f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdec0dc-0c58-44a5-8784-6fb2390cb4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dba7d76-70c4-4e69-8c54-e99aafdc20d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e4a84-9563-487f-8f08-00be93ebd6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc075b4a-55b9-4603-aade-a137441e3f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdced5e-26d3-4d35-b6f2-7347f487bf32",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d03bf98-188d-47c6-861e-a34c32f849c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2cd2eb-f1ec-4602-981f-6709e5ec136a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b3a10a-4b91-43de-9a52-18e2e62b26f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161a4eed-b2c1-41b8-b7a9-ebf1e4909e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cad06b-270f-4d29-bcf1-fba855807240",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca901096-4381-4801-aa6d-4f843b6fe4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343014ce-45ef-4ac5-95b0-3274c8c632a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f195af6-f153-4d7a-815b-29265a4d9e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4857e83c-9ec3-46ce-a021-936dee7d6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6d8001-a5a7-4680-8b52-fbaf091c59be",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4390c19-fa7b-4c0c-bab6-939b69c791ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24b5259-dea3-4680-82b7-727b7fff8225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3e6b72-af30-4560-9289-4075bbb93b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32020609-11a0-4fe6-8413-03d165fc16dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ebb6fd-8390-44bc-81d9-d8fc5e1d5b01",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6896082-5412-40bb-a196-5532c14cd912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae77ced-ee5c-4b4c-84e4-91cd8345a69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb9f33a-c07f-462b-81b9-4551feb5499c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c17e074-383d-4dec-b936-3b858d217e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b61484-7304-4cdd-bf4a-e8b20a1940bd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780af70e-26d3-4421-a002-98b2a8a0c869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a1c0cc-a053-44e9-a677-f8f8837e1f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5b9a59-3b2f-430f-8417-a1867b140928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1899f87c-81ad-4c4c-a875-835e444a270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933424e5-d2d9-4217-b76e-bf974c870543",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68ddbbf-4428-4b24-89f4-605567b78c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5222b1d9-479a-4aef-b310-22016ca1baa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc407ea-a181-4191-9901-b3f3c1fd67a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4057bcf6-3683-41a5-89fe-507d270245f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151912bb-d186-4c14-b2fa-071aa2e8b180",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db707124-5027-4774-82eb-3245401e163e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f0fad5-5b30-4d8b-b1b6-fee3c167b470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9473883f-c3d2-4244-9b0a-bf44ffba02b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876b4841-7442-49e5-a8cb-e2d0dfaff0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ee33d5-24a3-4cfa-87bf-018a0951410e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4503738-acb2-4df0-8130-c8f1a560cb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78510d3-9046-4a60-bc7b-ffb142fabd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b19f3b-0f2e-4c01-8231-76f5c7adfb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f134d027-4827-4360-979e-f148fa245da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eb43c1-1f8e-4fce-8ec1-f67534e7788a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9fb7d6-77ec-46d5-83ee-c161a9db73dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0def05-9559-4dfb-a1d3-118f25bfc868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0148971-3876-4820-a268-03c5d01202dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ac4790-f537-4a87-a474-7208a0825ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4826279f-5d22-42e4-8fd9-b6b5b9ea7924",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a19741d-fd75-48ab-bdb5-66500f3e902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07060c49-4860-4e95-bd17-75332b4764ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da102eb4-f989-4085-be14-fbb73f78a87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4c4e75-8f27-42d9-833b-752b7b4d9821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef5ea39-ac32-4c42-a3f2-88c2491fc204",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cab4999-7f8b-4a47-b550-000524ac947f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9957be-eb75-4ad1-aed9-6b41586ba2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c203d68-697a-468e-a436-cbc233eb3dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a758e397-2ebe-47dc-ab74-daff42349dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864f1bf4-1375-4575-8a97-ff8c6e1f764e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc47563-3129-43c6-891d-3ab90a6f1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4272b3b-64c3-4728-9d77-64032dc86ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb02eb9b-3f17-4a50-ac40-9a6b916d6b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d408c59e-cef5-45fd-8d3b-edeb21b1c838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f818441-5a2a-4c27-8286-4b4f664d3a8e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ade61f7-b13c-40cc-af0e-b55e39a934a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c908dd7-fcc2-4990-b152-4175f75212d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b95154-f4f9-4955-8caf-d597171930fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f378feee-e515-456c-90fe-3f2b8bb6c730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcd1302-317d-4a7a-8ffc-3909a7feef13",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6800c9-5f90-4f6f-b302-0505e88d8bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdeab2a-546e-4f98-83d5-d0a13618084a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b469e7a-d449-464e-a8e9-89f65a467a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c17a24-8aec-40bb-9414-aafca773148e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c053ff-dab0-4cee-8093-5cb8433aed62",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2a2e6a-2481-4f13-8d5c-e510d3d8435f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feebeabd-aae9-4d22-a613-4096ffef6f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3043df-d908-47a3-9d19-b0836c851af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ebbd6a-994a-4172-a055-c2314cc7530c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c5ba15-50e7-4a68-8803-bb71fac6262e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f08cd2-c5e9-4ea7-94d8-486f5f0a1fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840648bb-1af9-492b-aaf1-ce925d0ae828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5fd3e-e3bd-4926-b579-fb01ee324c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69527c6b-bc81-4324-8f77-9fd25b10120c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8037814-22e2-4e86-914f-ee61c2e426a0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c2da64-0b8d-49bb-a6eb-f18488799c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a663b82-9a2c-41b2-b730-71a3960a167e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d793ec72-b186-4013-9ef8-6f8d83c13141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b09760-b925-4999-8dda-ac6a01847618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d9b05a-ee74-48da-bc1b-03824b473aa2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1be0ec4-ba6c-4006-90c1-289924657b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566dd70a-982d-43d8-9927-f3cc2f27774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c73c52d-a494-4c66-afe3-f31ae3851652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50fde1b-3c39-41b9-9163-384ec3fd8a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a644fc5-d68a-4154-8da4-7578fb0c8d1f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928aabbe-98ef-4917-93ac-78e7498c3e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8dd0fb-9fa7-4e7d-8ea4-7c15d0767cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca395588-637a-4698-91b0-992e5f73b7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358fa835-718c-4f3a-a9c4-66dc2d479b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5c30cb-aa88-4244-8cc3-c191148b245f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1eabda-02c9-4c7f-8240-5d8a8e13e071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b535bade-4dbb-4799-a9ad-ed1560984e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b808fa2b-2ce5-49f8-b0b4-252603aa1bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93a622b-5757-4541-a969-470d3532afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4f5394-6523-458e-b99c-6dfef499198c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca7cc03-c643-4219-a4be-9eba78f51085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a813c16-437d-43ca-8bc2-9493d576aa9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b668d-b5ff-4822-aa82-a7acfa0eff68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984779b2-45cc-4dbb-8d00-19be41eb71e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf9e42-5040-4230-9e69-339b39ea19e0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3553e58-7d0f-4c72-a6a5-32d3cfe9ded3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5010ebcf-c060-438e-aa57-d304bf4f96ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee4248-02b2-4386-b695-197638a5f9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eb1065-f375-43ff-8b36-1c8c975905a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "face168f-72d3-4025-9386-734925e99e81",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f08f9d-82e9-418c-a1fb-260072c81790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f435c0f3-0017-46e3-b5c5-dd2d2ab3b88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30183655-513b-4c9d-82d1-45caf46ef2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d4b505-32d0-4b87-9b3b-f2a8e7d535c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149b16d7-e1e1-453b-a8f0-96423aac3361",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d9ef99-3884-43d7-88dd-d853b289be92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629a46ee-a262-4ef0-821f-05123bceba56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2467669f-76b8-43ea-8ba1-68e830073b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4675b4-281a-4671-86f1-7c4970e47834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d00feff-98cb-409f-a9d2-4155d0adc79f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a90d09-d58a-4d3b-b038-29a26228df06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3827f7ad-a788-44e2-9e33-edce187be0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22009397-6c9e-44fb-9584-f02159aa5dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947e7849-a2b0-4017-8723-6aa04f0bdb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b1a340-2ea3-4302-97af-7c2abdbedda7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0087d46e-4b50-4940-9265-d72a6558d635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d373eaa-5614-415d-bdff-ec130c3fcc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d35710-bd65-4a76-aad3-373cfbcefc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cc7236-e0d8-405e-85f5-dd6678dfc489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5871278-fa51-4061-89ae-37d2e59c2eb4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef138f74-e1df-4d86-b9b4-7ff78fd0dd10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3749e8-c0a2-434f-b3b6-fb097b7c0e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440ed6b7-9a2b-401a-9230-af6e63e88e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a70231a-e1f5-4008-9518-9d32346628f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd74d59-836c-4a98-af32-3b16be06f7bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ce6f12-5c8f-4e49-a7b4-8cca9f3dfcde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d011ccac-1620-4cf8-821c-6cba5836ad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e982b38b-40e8-4ae1-aa4b-fd0c54d31a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fc3560-adf8-468b-b891-da8fffd43cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0f4868-f014-4a7c-abf3-63e53aa78ac8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da39966-66a4-4f0d-9c5e-1ac72542a74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7730bf25-d371-4511-9f39-6b84385ea003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7468be1-2f0d-4133-9383-233390bb5503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90084ab-29f9-4a13-9bf6-8e83891c95fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699263e0-daa2-4ee3-8298-25e0d6b4824e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b2552-0d88-4d02-99f6-b624a2aa1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0b160b-bd1f-439b-94be-42815176e30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6ed19-62a3-41a6-b353-b929e14d6033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95dd33b-bbf3-4d26-be10-8bcc097431f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7e83ad-b25e-4b3b-a1bc-190caf110e50",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9550c53c-3f63-497b-b654-d49e3a950867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479692ff-0a04-43c3-a60a-f4ad0a1363a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fbf731-fd0a-4706-a609-abd24a7e039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818b7c94-feb5-4c79-b489-1c3e7e5218a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2f92f-f52e-49e0-9290-24d3c8e4e620",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702939f-52b0-4f35-a141-a8832cffb302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7647dc7-0658-415d-ae48-f118f57ad57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd73d65-c9ca-417f-b871-d24d9224458c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b031ada-108d-4b20-9c55-35aff0b5b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e69fb07-103e-47b9-a6de-273783f08867",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a677aa3b-e64b-4784-a70e-1637cd4e5ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f096fa-9f32-4173-bda6-bdbccdcdca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8e8ad-d212-4205-becf-574c308dc5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158eef6c-ceb2-4233-acc2-5b3da90b5f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74070c5a-4946-4557-bd26-807314b706e6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d24d33-d777-4048-adaa-ce47131d1db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d3229f-dfe4-4ca6-8656-e14ca87c9017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ece3fb-6566-466c-868d-190ec739374b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9999db77-b282-4783-90fa-8ce018d2076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1e26ef-97ab-484d-ac59-44c6296be455",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c802c3dc-3dfc-4dba-933c-a292ad7c500b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e27e32-3972-4530-b260-f0249063c035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0115bd-1c19-4f95-8d65-044e7f8f3a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8311af5f-2866-4c08-b48b-952c06f5e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5781900e-36a6-4fef-8beb-bb1de15d33c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac52639-13f7-4db9-9b46-0a4dc7d87d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3dd5b72-0756-46c9-b159-c4e49d068413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc42459-6ee8-41dc-ae6e-3302aff8ef60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed01d11-614d-4508-83ca-29a03e59a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f76e442-2b16-40fa-80cf-c02bfcca6bb8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20471519-c0e8-4521-bbf8-a5e7624e57ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab91e936-fc3a-47a8-a049-a9c00642d51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6671ce-8c05-4239-b41c-e9159851c579",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6af8a8f-8230-4d79-b366-6008e01941a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99dbb44-8704-47ca-8bf6-e9cfa2e56706",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8cd7a-e436-431a-bdae-b23d5682e397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcb1e13-797a-457f-ad91-8f6b84f13b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bbf280-164d-41cd-bed3-bbecc3ae46d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dac332-2d56-45f7-b59d-761d49790b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d89d8e6-1755-4a8e-a2a4-65395927e0ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54726605-f0df-4dfb-a945-277207eba380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f98a4467-99c9-4cf7-9c48-537efa341328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6081599-4dd4-4a65-97b4-25768254e537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0c5149-d0c9-4ca3-98e8-c0a8aa44dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e569c570-2d28-4512-9d23-62452dd4a114",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f04a2-9229-45e2-b9f5-3ed19fbb0da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16cd918-76ee-4102-85dd-61751565f945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73486825-bb5a-4a84-ac44-aa0862489fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4813faf0-325d-4c7d-abba-1223dd240203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65de6f54-ba27-4679-8de6-3f502f12067e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9366061-47c3-45d1-aef6-25a98e2b8331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeca53f1-9abd-4b3e-b333-b0e734bab2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e36558-b6a2-4670-8052-a70fe51eacd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725bdc06-6ac5-46a2-9bb7-3bc32b66ca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36341bac-374f-420b-b26a-612ff3e6a920",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ec96ab-5405-4ec5-9b5a-33ea33c61efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f1d853-4b7c-4ee9-be2e-1eddeb98cb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cda70a-307b-4f1c-bc67-322d436e0089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d80c1d6-13a3-48f3-94ca-eff73f429766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2a9ca1-fa43-4742-bdb6-012620bb273f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0250b1-ad6a-4ef8-9159-9ec85259901d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8182013-236c-4510-88c8-39c96fd31fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da51229-2d21-4376-9456-b04bd51e3c0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8e5bb5-d0ec-476a-b744-c4f109b8977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ccdd2f-8b3e-4e4d-b2ec-b9533ad2f991",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653764e-3eec-4e53-b9c8-8fdb46712809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e617d83-6ddb-4c08-b606-8386afb56b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc0b439-a162-44c5-ae83-69cd09a2ebb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a413ec-13f3-41a1-a038-4b7c38c3bb25"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e53999c4-0a7a-4f29-9c78-efcf9e2f33fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a0e86e0-4f71-4a88-8032-e3aec2990bf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe5780ed-210c-411e-bd19-c67d16d16446",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2e9c96f-6c72-4916-a9b3-3f2f5a8f0377"
                    }
                  }
                ]
              },
              {
                "id": "eb6e3dfe-8ea6-4816-a165-787be728bfdc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e441d6a3-1bd3-428d-bd34-02df42837e6c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f367a61a-1f88-46f6-954b-8a48d2e8ee73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6d679999-3367-4ac3-abb7-b8ae20765112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780850f0-927a-4650-b4e2-83c057010179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aca06f1d-d34b-46a7-920a-b5430771085b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea4a5136-0a6c-4f82-b7b9-3f8587472fa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b3b6fdb-4f7a-4173-99a8-9f3fafee4368"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be86a986-b71b-4829-8b45-d9ad79914100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303cc01a-a720-4949-8929-22faee78ebc7"
                    }
                  }
                ]
              },
              {
                "id": "bf0df57b-a23b-4b3d-aa74-6349f31a55cc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "13c77f35-a886-4b35-97e8-426bbd0522bf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f283b1f6-f505-414c-9205-3b3379c6fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bd0f1c1d-6813-441c-8ef9-ee6270ea67f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee5cfb2-fb05-4a22-a2aa-ebac355aa2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2e6c71-852c-4884-bc1c-8406a6805534"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c855580-e55b-4d5f-ad68-16ad8ffa1bb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4653687-4f17-4fae-aa08-6684bb797915",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7e94adb-e218-4ea9-b971-458458cc3c72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85c0792b-e3a5-4d4d-871a-c475412f5456"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d35fdec4-b7e8-4b15-8b85-9f429363b690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd55f272-bb3c-4b50-bf82-563333cd20c1"
                    }
                  }
                ]
              },
              {
                "id": "91b35ba0-ebdb-491c-b418-9df7e33c6f4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1c607db-9ad4-4c3d-b2a4-545e38c4fdda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e33ba411-57c5-473f-a992-6983a677b58e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1a69409-17e9-41a3-bb79-e78639c2d22b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f542ade2-8ee5-47e5-92af-638e8073f37d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd183c97-1fea-4a05-a3be-90eabd31ff1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "974e0c70-4dfa-428c-a32b-9fd9d954ad2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bdf77f5-74cd-4a8d-9657-c414d53c8576",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea881056-5c98-4e09-9b06-e4fb636c4356"
            }
          }
        ]
      },
      {
        "id": "365b0887-1a3d-4a45-ab94-126cfe27d6c0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "35d55e8c-6ea0-44c5-a03d-41350af84fed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4767d720-3ab0-4e2a-b3ee-543fc1ca0a7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed89cd55-022b-4601-a626-cbf32c2beb12",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652c5c98-998a-462a-a901-4fed4748cabf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6814df3d-670f-4a20-bb16-9435bade56fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8835205-eaf2-4b18-bb7d-7d1c2f32a421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abae5604-b2b8-4df8-a24f-9a99362357b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20fd0fee-5caa-43cf-ae12-26d2e2b4029e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e5c883c-7a8a-468e-9e6b-1170fad1d8fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc53a1e5-94b0-4a80-9dd4-c16ff801da58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "765fb5d2-9bc7-4035-b487-d0377fce28f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd32c856-e0ba-453a-afdb-e5a00659fd8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "855579d6-850a-4c48-adfc-2ce715bdba57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e4eab7e-acf1-4b66-8b4a-133bff2e1408",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d4d56ed-af1b-4e04-8939-6638aadac474"
            }
          }
        ]
      },
      {
        "id": "2b737cd8-49e7-403e-b5c6-6eefacb36057",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "74854f16-e6d2-468e-beb2-a4c8a35189de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df5c5b3a-25f0-44bf-98f0-7b1c5b3f8f87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04575099-645c-4bb3-872f-87fbd3276f1c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f5a984-3009-4151-a4ab-534eb1e68845",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54f98fb6-3ee1-4f0c-924a-20b474bbfedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d3b152-72f8-4c58-a51a-a5a3f7924249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac66cc1b-f172-4df8-b92d-7b1489515589"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b43b6f7-f290-4097-b8af-88dc6b8f6248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "155afe4d-e4f4-43c8-b9ed-b5576910ab03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f78c459c-f2b8-4df9-bbd8-955460620cf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da5712c-f224-48bf-b9a7-aa4a6bd3051b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b4d02e7-a719-4a6b-80d9-56f847fd2146",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f5b5894-2ff9-4195-9fc3-af9b6e7cd5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2264bdd-dfd2-458e-8b54-7b46e74cf332",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c44b6b3-a91b-41c1-beb2-db22f2a3d678"
            }
          }
        ]
      },
      {
        "id": "ca5d4880-06a8-4ffe-998c-d98e1ccff87f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2e428d76-9c4c-488a-8128-a312cacdeca0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98360042-d5f2-42a3-915d-5a2fa375fa46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afe4e0c3-85bf-4d50-b95e-16afbc4fd668",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea028006-ce5e-4385-b391-dbf2c31dfc3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7b71ef5-a63e-423c-992b-95b37134863d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c20d74-028d-43c8-bf60-6f38ae039204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1f6bf5-4b2e-475a-8c93-a6f2aad2e339"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46a9ace0-1cc7-40b9-b5d5-3f6354f62974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7172f07-7efa-48f6-afa6-cca3a34a1db8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b909d9-86f9-4950-a1c7-239dc57d1254",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85b189c4-dabc-4e0d-8c40-e49a236e4876"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a253a8ac-2b5e-4b17-94e3-8da608e6bdeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f4ecb470-3b8d-4dab-a759-97af873734c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "466476fb-55d9-418f-8a86-c0ae0d7aeb5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2e5648c-19ac-4274-ab58-3e95098c000b"
            }
          }
        ]
      },
      {
        "id": "743982ab-f5f2-4e24-aecd-4c84d4993ad1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b6a528-5317-4388-9731-c1809a9002e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d485ae9c-3dc1-436a-845a-6ee2ae5ce950",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8007a9bc-36b1-480f-ab71-17855a432bc6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61bca2c6-57e8-40f8-9b8d-e70bda9b82c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "217db08a-9d1d-4f8f-8a40-85513bf5bc4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 151.46428571428564,
      "responseMin": 5,
      "responseMax": 13747,
      "responseSd": 889.5543754148632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720831181677,
      "completed": 1720831228083
    },
    "executions": [
      {
        "id": "bbc12021-7d9e-4f13-a5ad-040f9b17f9fd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26eb6299-2fcf-4fe1-b493-8e8bf3a8eae1",
          "httpRequestId": "f5099b2a-e988-4f1d-9b3b-9199827b4ec0"
        },
        "item": {
          "id": "bbc12021-7d9e-4f13-a5ad-040f9b17f9fd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "648e459f-5cac-4793-ac09-2a4eebef7c4a",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "ab12fbc6-f945-477e-840c-912922169629",
        "cursor": {
          "ref": "4bb273ea-cfe1-41ec-a199-6009d4333bcd",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fe9c26b1-5306-463b-966d-050f08ca5c43"
        },
        "item": {
          "id": "ab12fbc6-f945-477e-840c-912922169629",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e3960fbf-5ca3-45c5-9629-77e0fcc204db",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "60ef9b3b-76be-4fa5-857b-b54bac80279f",
        "cursor": {
          "ref": "102483d4-c04c-4e63-8642-1521f55c2821",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "53b92016-ab52-49aa-854c-2271c71f7328"
        },
        "item": {
          "id": "60ef9b3b-76be-4fa5-857b-b54bac80279f",
          "name": "did_json"
        },
        "response": {
          "id": "42d48ef3-6b9a-477b-920e-4cffa9d7a693",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50b641d-7f20-4915-993d-bfcf12cdc388",
        "cursor": {
          "ref": "ed738c78-ed46-404e-87da-3afbb26300f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c61bae5d-68ae-4b9d-bd77-8d17775cdf8b"
        },
        "item": {
          "id": "e50b641d-7f20-4915-993d-bfcf12cdc388",
          "name": "did:invalid"
        },
        "response": {
          "id": "09c5aa8b-9421-4d74-aa4a-82663eb02fa1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 364,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50b641d-7f20-4915-993d-bfcf12cdc388",
        "cursor": {
          "ref": "ed738c78-ed46-404e-87da-3afbb26300f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c61bae5d-68ae-4b9d-bd77-8d17775cdf8b"
        },
        "item": {
          "id": "e50b641d-7f20-4915-993d-bfcf12cdc388",
          "name": "did:invalid"
        },
        "response": {
          "id": "09c5aa8b-9421-4d74-aa4a-82663eb02fa1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 364,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdc1a4c-5d45-4404-8d26-5ac2b02b7fae",
        "cursor": {
          "ref": "ced1006b-fa27-47b1-b067-e8365022eb7a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc918a6f-717e-493d-840c-5c52d894f2b7"
        },
        "item": {
          "id": "6cdc1a4c-5d45-4404-8d26-5ac2b02b7fae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d138d4a-c2a9-4141-998b-8db044c78768",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09c6e1d-d523-45fb-81fb-1e9831d89483",
        "cursor": {
          "ref": "fac77033-4a34-4668-a166-96760f0aa09c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbbdb0ac-df7f-4742-9e48-8b06d3d39339"
        },
        "item": {
          "id": "f09c6e1d-d523-45fb-81fb-1e9831d89483",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "202b8fbb-5b09-4037-8ca3-50b0226e68c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7a7d6b-a6a8-4e0d-aa8c-23bd5e767fd7",
        "cursor": {
          "ref": "460a3a91-e4a7-4478-8c51-ccca7bc34db1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2ee49682-61ef-4b5f-a3d4-c64c9ad681c0"
        },
        "item": {
          "id": "4f7a7d6b-a6a8-4e0d-aa8c-23bd5e767fd7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea0c2034-4416-4014-9570-57ded561816e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6694463f-0a87-4f3a-88df-1fdc3bfe1ae0",
        "cursor": {
          "ref": "56dff9d8-1587-434a-95be-f9f1dbf37dce",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7d03a59c-c331-4d9b-8f0a-9b4937f7b8a0"
        },
        "item": {
          "id": "6694463f-0a87-4f3a-88df-1fdc3bfe1ae0",
          "name": "identifiers"
        },
        "response": {
          "id": "7845d087-8550-4cd8-9a67-98fac5dd1bf6",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd0262e-7b37-479e-afe4-dd57299ac1ac",
        "cursor": {
          "ref": "87f99c7a-8f97-4c1e-9263-97676125bf95",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0075b857-b37d-4307-a0c0-fb83bed69d74"
        },
        "item": {
          "id": "1cd0262e-7b37-479e-afe4-dd57299ac1ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f91886a8-41cb-48c7-b983-7956eee92f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bca359-053f-4143-b0bc-6af3aeb04896",
        "cursor": {
          "ref": "a87498f5-332f-4c27-b077-bd78dee82de9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b7e1b0d1-9445-4e0a-a945-e7532a1398dd"
        },
        "item": {
          "id": "75bca359-053f-4143-b0bc-6af3aeb04896",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "358a9f8c-dcde-48c1-81c7-fd8b897061d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c63f96-2142-4f10-bc24-f45945afa0c3",
        "cursor": {
          "ref": "8c21e736-2214-4edc-a8b7-8b34d88fac36",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd2e43e8-548a-4c07-ad88-03fd168bafd7"
        },
        "item": {
          "id": "20c63f96-2142-4f10-bc24-f45945afa0c3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e48a3d0-fe5d-4eb0-ad4c-b45569844364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41d55cd-4d47-4f43-ab96-ea8a03c2d737",
        "cursor": {
          "ref": "0c12eef9-a6c6-4f34-a5c9-d34082e22f29",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3e573321-05d3-4495-bb80-d04448270ea4"
        },
        "item": {
          "id": "c41d55cd-4d47-4f43-ab96-ea8a03c2d737",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "08a83d9d-edec-4a41-9a4f-ee332e59f77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aad395-e878-4665-b0c5-25a8a00a5b69",
        "cursor": {
          "ref": "0c45fb03-dae2-4760-9efc-2944ef307151",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e56e3eb3-e443-4f60-98f7-fd0c4ec2b247"
        },
        "item": {
          "id": "e5aad395-e878-4665-b0c5-25a8a00a5b69",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "64c69739-f8ca-47bb-b489-48bc89b6350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87302fc4-cad1-47ef-a89c-1da7875344c1",
        "cursor": {
          "ref": "6fa0736f-19b1-4a50-a777-20632fc737aa",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d3b1c3d2-7de3-4506-83cc-3e1413238a63"
        },
        "item": {
          "id": "87302fc4-cad1-47ef-a89c-1da7875344c1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cf4b8cce-005b-4dea-82c8-a1e63afd82d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d898be8a-bf86-4b4e-9bbd-2cf9fb35fd80",
        "cursor": {
          "ref": "b6c35e83-ba25-435a-b525-e02712fd3beb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "613ba6fa-c586-40e5-8c84-f1209ccefefa"
        },
        "item": {
          "id": "d898be8a-bf86-4b4e-9bbd-2cf9fb35fd80",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "422e130d-9403-4fcd-a507-70103b027b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c47bec-1ac1-4b80-ad1a-4002b17c160e",
        "cursor": {
          "ref": "12b2736c-130e-4a03-9b92-fba12fd31d4a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9d84e37-5907-4202-b4f1-44043d591404"
        },
        "item": {
          "id": "49c47bec-1ac1-4b80-ad1a-4002b17c160e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9093a6e6-bb78-4ec4-8d99-fe271dbd4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fbf2e-1508-4761-85c2-bdf77bca69fa",
        "cursor": {
          "ref": "3ac3bda7-1bd0-45f7-a449-ad86b5fc4b0f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "49d7de25-9089-47ac-b09f-fc09871b6d1d"
        },
        "item": {
          "id": "653fbf2e-1508-4761-85c2-bdf77bca69fa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95bc0efb-c77a-4ac0-877b-079f80b18be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd4011a-dc86-48c3-940a-29ef1be605f2",
        "cursor": {
          "ref": "fb9ffe47-412d-404b-b214-f11726293d83",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2505be20-fdbf-4213-94b3-fecc7851492f"
        },
        "item": {
          "id": "6fd4011a-dc86-48c3-940a-29ef1be605f2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "82a37f41-eba5-41af-b0c9-731adaec9d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6536f68-d60a-44db-9078-7ca1df8c29c0",
        "cursor": {
          "ref": "886cc1ac-0dae-4154-bd3d-d09af746bfe6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9ae6a9d-0d28-4e53-8ff8-950239773dd5"
        },
        "item": {
          "id": "f6536f68-d60a-44db-9078-7ca1df8c29c0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7d4790e8-da35-4d2c-b5a5-07b8a3efcaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f513a-7ab0-45b3-a4f2-a405bfa9bc78",
        "cursor": {
          "ref": "1feff0c9-09bc-4560-af8f-ff09892f3261",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "03fa8378-27fc-4ae1-9176-dfdcf5233699"
        },
        "item": {
          "id": "5f9f513a-7ab0-45b3-a4f2-a405bfa9bc78",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e485ffca-f705-47df-9b1f-b0f5b2fb4237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f869ac13-0450-4fb1-951c-097eae13247f",
        "cursor": {
          "ref": "d27902af-6b51-43a9-a1e1-f7fd9ffd4fcf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f07b7b7d-b35d-4771-b205-22f6cb54fcb6"
        },
        "item": {
          "id": "f869ac13-0450-4fb1-951c-097eae13247f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8a782cbc-8483-4ad3-9e0a-452da8b81a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82e9a5-5f51-4a71-8d65-37f22a471fa5",
        "cursor": {
          "ref": "066fb786-07d5-44ae-8e15-d81410404de6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "267174b4-53bd-4a00-9904-b836ca61ca1c"
        },
        "item": {
          "id": "cf82e9a5-5f51-4a71-8d65-37f22a471fa5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb5c17c1-fd91-4c56-ba52-10aeb242a523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5dbe82-bc16-490b-a671-6b3e065d3374",
        "cursor": {
          "ref": "d00edf79-17f9-42dd-9dfc-3dc3bf21ff6d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea4d6c3c-ddf6-4e3d-81ee-75f240e361b6"
        },
        "item": {
          "id": "0c5dbe82-bc16-490b-a671-6b3e065d3374",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0d839741-b4c6-4ac9-bfe1-05d755273929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611600a-2384-4023-8a03-88f62b5fff17",
        "cursor": {
          "ref": "91da0690-ee21-4d13-b465-e7372db53ca9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c29c8691-997c-4538-bd25-9a23306b9bfe"
        },
        "item": {
          "id": "4611600a-2384-4023-8a03-88f62b5fff17",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8896ce7b-37a1-4d6d-9142-31f78a95c828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9959e83a-f10f-499f-8cd9-fe072c0cfc59",
        "cursor": {
          "ref": "18dcb1f5-d83f-4975-8ad0-a5f5bb843ec5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20c81b91-a16e-4b13-809a-ef36039e3776"
        },
        "item": {
          "id": "9959e83a-f10f-499f-8cd9-fe072c0cfc59",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "02c512b4-cf31-4db4-89b0-73e948527605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd8dd2b-ee71-486d-bdb4-5bd281df05c2",
        "cursor": {
          "ref": "04a7d9d0-3530-41c8-9965-375a0a297806",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bcfbcb53-9b90-4be1-aee0-3e73309edaa4"
        },
        "item": {
          "id": "0fd8dd2b-ee71-486d-bdb4-5bd281df05c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6287db0b-1409-495a-8757-91543aa95686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e7b1a2-f010-43a8-aefe-5347c34a489f",
        "cursor": {
          "ref": "57b6b533-8481-4e3a-a6e0-74f2b9f0c924",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a53d1100-bdf8-4abd-9f77-2acfbea4cfff"
        },
        "item": {
          "id": "f0e7b1a2-f010-43a8-aefe-5347c34a489f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "68bb7308-01a0-4e1f-b1d2-f8718ddaf2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33246291-05c4-4879-b756-2dee3e0d4101",
        "cursor": {
          "ref": "020535f6-495c-4e5e-be62-27e6070af05e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ceccf8af-cc58-4536-b611-22717b88a4e2"
        },
        "item": {
          "id": "33246291-05c4-4879-b756-2dee3e0d4101",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a6b2139-a679-4df5-815e-e99903859334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49077499-afe0-4a10-8445-d63475e9a9b1",
        "cursor": {
          "ref": "0b873219-4471-46ad-93f2-ccfe791d6787",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f299cf26-24d3-49f6-ad41-42cd5efe1f2e"
        },
        "item": {
          "id": "49077499-afe0-4a10-8445-d63475e9a9b1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e17b959-dd1e-4004-97f7-de1267585502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a82933-980e-4523-8ace-9941a5bce0c2",
        "cursor": {
          "ref": "c5cf649a-2324-44e5-a759-b01ebeaefa78",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a2432604-d0ad-4c3d-95a6-e865d28e2494"
        },
        "item": {
          "id": "73a82933-980e-4523-8ace-9941a5bce0c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9cdf4fd2-02bd-446c-b051-36615c999437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facffff0-c6bf-4cae-9ed9-8d387bd2c748",
        "cursor": {
          "ref": "5eaf8723-4faf-4bf8-b01c-0546803e6f05",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6f4717b8-111c-431a-9188-ba9e75e78969"
        },
        "item": {
          "id": "facffff0-c6bf-4cae-9ed9-8d387bd2c748",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f06c186d-3575-42cc-a363-c867d708f9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6452a100-1593-4cce-ba7c-94e12e61ddba",
        "cursor": {
          "ref": "c1a95e09-7d8f-46f7-9e75-8d860470ffcf",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a02d3422-970a-4519-a392-75bb936d64a2"
        },
        "item": {
          "id": "6452a100-1593-4cce-ba7c-94e12e61ddba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cc38c387-f66e-45db-ac13-197917f78b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697790d5-b29c-46d0-84f6-45f024e1d37d",
        "cursor": {
          "ref": "69727565-97ac-4ff3-871d-94b2e967c883",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa9adcaa-7d5c-4cad-9675-82da6b10edf5"
        },
        "item": {
          "id": "697790d5-b29c-46d0-84f6-45f024e1d37d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b7d450e5-c372-4188-b6d2-0464852d8e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872b8a2a-6905-4e0d-9c06-539477b2d6b2",
        "cursor": {
          "ref": "f26493a1-87a2-43f6-a1f2-435aa2b67b68",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cf4f1a62-8560-4753-8c63-de9ca47254c5"
        },
        "item": {
          "id": "872b8a2a-6905-4e0d-9c06-539477b2d6b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0071edc-363e-4fea-baf7-a6f2a05d53ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cca32ee-0014-42e7-a36c-0a27bdd44e64",
        "cursor": {
          "ref": "90d79da8-861f-4be2-bc37-27ab00fd3c23",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d90b2171-d1ad-4afa-a937-5feb82e53756"
        },
        "item": {
          "id": "6cca32ee-0014-42e7-a36c-0a27bdd44e64",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a018dec6-6331-461b-bf5e-98af37ca9ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08855103-c78f-4889-919e-17fe2c08eafb",
        "cursor": {
          "ref": "236ae65d-b3aa-44c6-a42e-29c687e6e724",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6cfa5d0a-b246-4923-a25f-9b36fbcdd6c9"
        },
        "item": {
          "id": "08855103-c78f-4889-919e-17fe2c08eafb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "61dfc604-7013-4b3f-a929-73da098c29f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cc7b00-01d6-4798-8844-9b3bf4701a61",
        "cursor": {
          "ref": "d3b20a86-a6d8-4d77-80fe-027b87f3b5e9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "376b62c9-4a4b-4565-8b59-9310321a744f"
        },
        "item": {
          "id": "e9cc7b00-01d6-4798-8844-9b3bf4701a61",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a49a4593-e4d6-4469-b564-1ff925a63080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d38b9f-44a4-4dec-89c9-e4dffac8f15b",
        "cursor": {
          "ref": "fddbbb55-7508-4dc2-b4ab-e912de6e921c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "317d24a7-c2be-4ee2-bce6-4e002c27bff1"
        },
        "item": {
          "id": "d6d38b9f-44a4-4dec-89c9-e4dffac8f15b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "12605540-2f26-40dc-8870-1e2c7af5de7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0496fef-502a-4276-9bfe-397bc3933c37",
        "cursor": {
          "ref": "34b85db9-89ae-4536-9113-d20e22935c1c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c31ca9a2-674f-44e2-a559-dbc2d6f269f0"
        },
        "item": {
          "id": "c0496fef-502a-4276-9bfe-397bc3933c37",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7992798e-6222-4013-9550-345c0447bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fedaf8-d89c-4538-976f-f05798131857",
        "cursor": {
          "ref": "fb2ba394-11c2-4239-893e-efe64b65b8f0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "629d114f-6282-43ea-be7f-562fbc943a01"
        },
        "item": {
          "id": "94fedaf8-d89c-4538-976f-f05798131857",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8aa35eb5-f8f4-44c9-8ac7-9b9924d144b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db757e3-b54e-4454-8a7b-ef942ea04981",
        "cursor": {
          "ref": "1f4b4a8f-6837-45fd-b6fa-c4c8cc14cc77",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "49ae2d54-689b-4235-8281-22bb1bbf66b9"
        },
        "item": {
          "id": "5db757e3-b54e-4454-8a7b-ef942ea04981",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2021c10-765a-411a-a929-dea51a8a9f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8267b9-213f-4b70-8466-539db4cd64d3",
        "cursor": {
          "ref": "838a69da-cf9e-4dab-8634-66c227e6a541",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ff8a8bcb-4182-47a7-baeb-4935d055f80c"
        },
        "item": {
          "id": "fa8267b9-213f-4b70-8466-539db4cd64d3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6ecc23a3-bfda-4811-8667-9f9a8244f662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba27526-eb61-4b19-aca6-b1193a487c9b",
        "cursor": {
          "ref": "836b2400-34a8-4a12-8cdd-8d1a85aaa15c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "421b3fc2-5aba-4746-aa2a-4a3c7420c026"
        },
        "item": {
          "id": "1ba27526-eb61-4b19-aca6-b1193a487c9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "49d880fb-ddd2-4956-ae90-d9af1ecea7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17350ab9-4385-4c5b-9957-7e793dcff87f",
        "cursor": {
          "ref": "57cc5ebd-160c-42fa-a72d-67f7edc45247",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5f717b0f-ad01-4b4f-96bb-31f3e853b853"
        },
        "item": {
          "id": "17350ab9-4385-4c5b-9957-7e793dcff87f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "46361330-bc4e-4347-9215-f1d056f261db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcd5575-f6eb-4f3b-afa4-fefcd7983197",
        "cursor": {
          "ref": "481097fe-eb18-4f3c-86fc-67442bc97c1c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c12c9cf2-9025-47df-8977-a189cef1c315"
        },
        "item": {
          "id": "3dcd5575-f6eb-4f3b-afa4-fefcd7983197",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "74d3fee0-874b-44b0-a9c1-c4db2c451249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732af08b-9c15-4597-b54f-5e4ad22d9f3a",
        "cursor": {
          "ref": "32ff0f7b-9d12-47cd-98d7-a1712b4a605e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57ee8029-e734-4601-9635-984eab3013dc"
        },
        "item": {
          "id": "732af08b-9c15-4597-b54f-5e4ad22d9f3a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a47bb922-3a7b-4357-9007-7acf73968807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08939350-cc38-4f8c-a283-8793eb2b8ea0",
        "cursor": {
          "ref": "30f03cd1-8a80-4765-984f-f0204758c632",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "61398466-56ac-496a-ba95-538da5bba9d1"
        },
        "item": {
          "id": "08939350-cc38-4f8c-a283-8793eb2b8ea0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c8b9286c-596b-4d53-af1e-d3bbc4d0e2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf3e0d-6391-441e-841d-f65544cb5d4c",
        "cursor": {
          "ref": "0b039cb3-8df2-448c-bbc7-840b3063d4eb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "de92ab91-2448-45c5-840f-d47944c91857"
        },
        "item": {
          "id": "fcdf3e0d-6391-441e-841d-f65544cb5d4c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a9f837be-d728-4d2b-a06c-5687b8962246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e708718a-73ba-4d96-b658-7c69d0df12ac",
        "cursor": {
          "ref": "fc018427-4e41-49c0-ab33-b853803a7768",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "85cabf48-c06d-4b79-bc9c-ac47e6d48889"
        },
        "item": {
          "id": "e708718a-73ba-4d96-b658-7c69d0df12ac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ace07bce-3d73-4658-befa-9833d82223e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a9209-9953-4586-a876-4c662fc70dfc",
        "cursor": {
          "ref": "4815a685-5b73-4752-8518-cef87b3aa81e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2be1ceff-a73c-4d07-b04e-045a4e7d420a"
        },
        "item": {
          "id": "403a9209-9953-4586-a876-4c662fc70dfc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "acda1386-7d36-4bb4-bf2a-5f6dbc1716f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4c4874-4198-486e-ad1e-b89b43479a9d",
        "cursor": {
          "ref": "4d931206-08be-4d04-8eab-ee4509eb94b7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2a878a6a-ec62-4b02-82bf-a9bb363846ad"
        },
        "item": {
          "id": "0d4c4874-4198-486e-ad1e-b89b43479a9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "682e559b-19be-40db-be5f-a855be0b35fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e049c77f-b00d-468c-8270-564e75adddad",
        "cursor": {
          "ref": "a6e3da1f-ee82-430b-a0a3-841596bba428",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d4e5d98d-b042-4c2f-b779-c9eb4a054fbd"
        },
        "item": {
          "id": "e049c77f-b00d-468c-8270-564e75adddad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "db879270-50ed-476a-ba96-c0ab1dacba2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7410139-91ee-4252-bed7-cb639973e56f",
        "cursor": {
          "ref": "6cba6162-2ee0-4adb-939d-465307178d8d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7bdcb6b3-a9f7-424e-a9fe-34680b7a3cbd"
        },
        "item": {
          "id": "c7410139-91ee-4252-bed7-cb639973e56f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22f706e2-eefa-4b28-84a9-ab20c7ffbb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206390af-4fec-4e8c-8769-c1c6297555c5",
        "cursor": {
          "ref": "b3f4749f-2db6-455b-ba91-07192cd0deef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ca7c693e-4941-44e3-a298-3f402b0ef69e"
        },
        "item": {
          "id": "206390af-4fec-4e8c-8769-c1c6297555c5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f007c091-b476-4469-b64e-eb1db1a13980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4daa7cb-d192-452e-b804-e0401739450c",
        "cursor": {
          "ref": "935e4c34-95f9-4497-8486-be7ca0265430",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "60f452f4-127e-4da7-99e2-542dff0ae5e2"
        },
        "item": {
          "id": "a4daa7cb-d192-452e-b804-e0401739450c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5ad7ec53-b2b2-49e4-9b44-0d3f0b04e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e2ef1a-b699-458b-a51c-0b7b687408ed",
        "cursor": {
          "ref": "94804aec-06b7-4e1d-a007-018c119f4547",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "86c78d8e-25d0-4531-acfe-49743c6166dd"
        },
        "item": {
          "id": "54e2ef1a-b699-458b-a51c-0b7b687408ed",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "df978803-31ed-41e9-a9ef-3c803712e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b508d-04fe-42f2-9141-e4bc9927b0cd",
        "cursor": {
          "ref": "44ed10f9-2839-464d-9ae6-cab0f5d70feb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ea24e7b7-99a0-42f3-b7f3-84e04f9eabdc"
        },
        "item": {
          "id": "d68b508d-04fe-42f2-9141-e4bc9927b0cd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1d5e78e-9407-4876-85db-a69384209d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701b5608-3abf-4a79-a15c-1f86a386598a",
        "cursor": {
          "ref": "63caa5cc-07a1-42fb-888f-c506120a3482",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c71a756e-e80e-4f12-aa33-43445138fb50"
        },
        "item": {
          "id": "701b5608-3abf-4a79-a15c-1f86a386598a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d78373a-635d-4c38-a873-34d36fe8b26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50de4688-7120-4cb3-975d-8987e4dd00e4",
        "cursor": {
          "ref": "48588660-cef0-44fe-88bc-fa89cf3eca43",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "632ee9c8-05f3-4388-a351-5e134ab4751c"
        },
        "item": {
          "id": "50de4688-7120-4cb3-975d-8987e4dd00e4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d650a2cb-63d8-4a70-8609-bf3728bfc92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481bed09-8e9e-4dcb-9198-6c978cde07cf",
        "cursor": {
          "ref": "d4f6bf5d-926d-42fa-90b9-2d399e2a0997",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f929a825-316a-4c9d-862f-757bed52f515"
        },
        "item": {
          "id": "481bed09-8e9e-4dcb-9198-6c978cde07cf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9078ffcf-093a-4db7-a497-eae54e42ffbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd4b0ab-a157-49e4-9368-2699c73220a3",
        "cursor": {
          "ref": "04dbdda5-c2b1-4818-a3dc-bb85cd0967b3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c1604e3a-b22f-4af3-b2a2-975b83ed6c26"
        },
        "item": {
          "id": "ffd4b0ab-a157-49e4-9368-2699c73220a3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "464d54d7-9411-4a87-b77a-8ce064b77e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea321925-dbac-47a8-b3c3-1c16d0e23cb0",
        "cursor": {
          "ref": "e5e8ca8b-64e4-4691-b5db-8891bd930dd3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42437a65-e0e2-4a1f-8219-47f4642a899e"
        },
        "item": {
          "id": "ea321925-dbac-47a8-b3c3-1c16d0e23cb0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "372c0aa7-0e2b-48b2-ba98-e3dcc5d68fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a5729-2535-4980-877b-55d5aae63e32",
        "cursor": {
          "ref": "70bb8be2-303e-461e-ae32-269a3b6cddbf",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9a9939ce-2205-46dd-80ad-eb1636137f67"
        },
        "item": {
          "id": "108a5729-2535-4980-877b-55d5aae63e32",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "06795cbc-075a-4107-8cde-6e96c5860a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd86c3-ba41-4584-ae7a-441b0b8510f3",
        "cursor": {
          "ref": "62310a27-a1c1-4ced-b90f-66994c8a4502",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "97bf94b5-16cb-4972-8397-7b15d9be36a1"
        },
        "item": {
          "id": "6efd86c3-ba41-4584-ae7a-441b0b8510f3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3f4eff31-b32b-4c2b-a2dd-691215486165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f4a74-4153-4b1d-a73a-1b4718fe5821",
        "cursor": {
          "ref": "2f306cae-8023-485f-82b7-37fd0386e456",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "104bb2d6-39f2-4aaf-a9d6-a29e0d37fd88"
        },
        "item": {
          "id": "c63f4a74-4153-4b1d-a73a-1b4718fe5821",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9e4180ea-2149-4fbb-b2b8-cf291f13394f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57038d7d-a371-4bb4-81d5-5b7bcb2819bb",
        "cursor": {
          "ref": "a46f68d8-c42b-49e8-a16b-a98f74988eff",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bf71e145-26f6-482a-83f6-cff0ac299ea3"
        },
        "item": {
          "id": "57038d7d-a371-4bb4-81d5-5b7bcb2819bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "550f9a39-812f-4124-908c-f6049e19b564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b18e91f-a70c-4fd0-ad7d-0c5c8d20d8b5",
        "cursor": {
          "ref": "9f0c30d2-0cf0-4849-a551-fa1a903aec60",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ef519af-b97d-4221-ba77-e774d768c5c4"
        },
        "item": {
          "id": "0b18e91f-a70c-4fd0-ad7d-0c5c8d20d8b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "875d17b7-205b-4f84-b4e3-18140970fe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655cbe5f-2377-4156-8bd3-3e8c143954f4",
        "cursor": {
          "ref": "c15eefdf-5ded-4cba-9496-6172af8744f0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cc42a2cc-9f68-4acd-835e-823692dcc565"
        },
        "item": {
          "id": "655cbe5f-2377-4156-8bd3-3e8c143954f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f81b4778-619e-4747-9505-6c8e4aaf5002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec4c7b-3fc4-4b65-a42e-33bcf3c32560",
        "cursor": {
          "ref": "274e6b9d-0a57-46a6-8c9f-8baed8270ff7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "33f080d9-1657-4599-9138-904b966e966a"
        },
        "item": {
          "id": "8cec4c7b-3fc4-4b65-a42e-33bcf3c32560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5f7eab53-a4c7-4c6a-ab93-b374761e9c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e63a8-5d3f-4248-a12e-973cb05cc946",
        "cursor": {
          "ref": "2ce38b86-a070-4d4f-ab7b-b8b2faf7a8e0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "16015322-1ee8-4441-9036-0642fc738d72"
        },
        "item": {
          "id": "634e63a8-5d3f-4248-a12e-973cb05cc946",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "78a9216c-935a-4b1b-90f5-8de1186da09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62377e7a-fc58-4c1a-b913-1e915ea76c2c",
        "cursor": {
          "ref": "2db165c1-c30e-4097-b6c2-cacb915ded56",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cb389cb3-7355-4d1f-8f7b-3642ebf62bb0"
        },
        "item": {
          "id": "62377e7a-fc58-4c1a-b913-1e915ea76c2c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a184423-6f9c-4486-97e0-7c1b5248a1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712df886-cf65-4c2f-a06c-fe1511ec6358",
        "cursor": {
          "ref": "acb26bb7-52f2-4966-83ed-80aa9e3d3854",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8b7bf686-aab9-4cf1-b5fb-8ab25571b1c9"
        },
        "item": {
          "id": "712df886-cf65-4c2f-a06c-fe1511ec6358",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "020287b3-2ad3-4d85-89b8-e25cc6b5e0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb02966-9c63-4b24-96d4-dfe946ba34db",
        "cursor": {
          "ref": "8df9f737-54d1-4480-8a53-3e766cfda0dd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a3e9cf03-a94e-4cda-8173-8cfa413de455"
        },
        "item": {
          "id": "6cb02966-9c63-4b24-96d4-dfe946ba34db",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eebb245d-62ed-45c3-969a-a4280c0184b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66719fd-404f-4c1e-a0f2-08efaaf332b5",
        "cursor": {
          "ref": "92e90d0e-5dca-453a-9f67-d2cb1e6d2be0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e939b97b-4fb5-4b40-80e5-f4b0f30b4d8c"
        },
        "item": {
          "id": "c66719fd-404f-4c1e-a0f2-08efaaf332b5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3e208639-7409-41fd-802a-7d30116f2252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c62b831-91f0-4f5a-9a84-b952b05e1218",
        "cursor": {
          "ref": "c5af8476-c3a6-4d02-8809-9818f71413b0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f95edc75-c029-4efe-b585-0d9a3bd2a655"
        },
        "item": {
          "id": "2c62b831-91f0-4f5a-9a84-b952b05e1218",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "465c9760-5a80-408d-a96a-56d28693f8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2729ae33-c323-4be7-bc19-adaeaabe90d5",
        "cursor": {
          "ref": "50f893f7-9414-4eff-bd0e-0d79f3895358",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b7f908f8-ac82-4273-a006-c0eb2a3fbb3c"
        },
        "item": {
          "id": "2729ae33-c323-4be7-bc19-adaeaabe90d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "72a6d6a7-a8f0-483d-a9f0-bc795eb15d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b79af1-23ae-49d2-909e-87d895b7ded0",
        "cursor": {
          "ref": "86e0cb5f-4a23-4d09-813d-95f4afce469f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "80d3636d-3370-4a56-a7ea-a38e6d406169"
        },
        "item": {
          "id": "b1b79af1-23ae-49d2-909e-87d895b7ded0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "834f7dc6-b6a0-41a4-a8f6-547e878abfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4bbb46-5135-4325-a5e8-943f6a6f8cf6",
        "cursor": {
          "ref": "06ee5987-472a-4f46-95f9-0ea9cb266715",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0dff4b44-1910-4cef-ad40-e9a23c36a4cf"
        },
        "item": {
          "id": "3e4bbb46-5135-4325-a5e8-943f6a6f8cf6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "64a62d5a-49ef-4b4e-bb6e-c23697026eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247f0133-3acc-4de1-a1f2-2c92b37f283e",
        "cursor": {
          "ref": "b7a53af6-5706-4316-92d4-cc1177d60a8a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "36b9038c-fad9-40a5-ba5a-548ecb3eb8f2"
        },
        "item": {
          "id": "247f0133-3acc-4de1-a1f2-2c92b37f283e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc1799c8-fcab-44f0-9475-0f8859487c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb9c88b-9607-4231-869e-bc9816773c77",
        "cursor": {
          "ref": "5c0a3090-289f-4819-859c-169fdda2f89e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "baf30455-1bb1-470d-a39c-262e98bb0286"
        },
        "item": {
          "id": "cbb9c88b-9607-4231-869e-bc9816773c77",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9e80fc25-f91e-4ac1-b031-ccd635d8c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13393864-d130-408d-ba48-8f5f1f4a0723",
        "cursor": {
          "ref": "39fe39f0-3aea-4462-b7f9-caa93b5d98af",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1ef07032-8584-42f9-a22c-9e0d549200dd"
        },
        "item": {
          "id": "13393864-d130-408d-ba48-8f5f1f4a0723",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e91f3b13-a24c-43aa-a9ec-eda67ef8b0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09564c3d-53f1-4ee4-bdc4-8313f871a5e9",
        "cursor": {
          "ref": "695b75f2-ab51-4548-8060-60cec1017ed8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4b237796-1ca1-458f-93fb-bac1c8d94073"
        },
        "item": {
          "id": "09564c3d-53f1-4ee4-bdc4-8313f871a5e9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "29eee0f3-9d1d-425f-8869-9bdbf76f38d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3101d31-4349-49a9-8b45-972e52300e8f",
        "cursor": {
          "ref": "17a2d697-50d3-461a-af05-8491ce885e5f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "149b0167-d2d1-4432-92aa-800f479d5501"
        },
        "item": {
          "id": "d3101d31-4349-49a9-8b45-972e52300e8f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7086231f-74d4-4091-ab20-1f8bbc008c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48285dc6-e694-418a-8862-bd27c5d6bc3e",
        "cursor": {
          "ref": "899186ea-00ee-41b3-9fa2-59efe74a003c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c0588188-e3d3-4295-bf27-9a2c34c630a6"
        },
        "item": {
          "id": "48285dc6-e694-418a-8862-bd27c5d6bc3e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6afca390-1e9d-47ba-a972-efcd7ab1d385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db57fd-f2b0-4339-968d-31ec54cde029",
        "cursor": {
          "ref": "d7ab39ab-f801-4d42-a2b4-6fa81d99d4af",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5953d683-f32c-473f-a943-adbcf529c16f"
        },
        "item": {
          "id": "78db57fd-f2b0-4339-968d-31ec54cde029",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2e0ddd25-9efd-45e2-99d5-72cd365e9174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1da848-1349-4bcf-a8f9-159d2b4601d6",
        "cursor": {
          "ref": "761c7bd8-ddf7-4ac6-a2bb-46d190b30076",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "315e7acc-fd0f-4e83-8949-3bbb7bcfc41f"
        },
        "item": {
          "id": "6a1da848-1349-4bcf-a8f9-159d2b4601d6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0bae1637-0e73-40c9-aec2-e327bb8d14a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba97a146-8871-4297-a33a-e15bddeaf261",
        "cursor": {
          "ref": "4242b549-6ea2-44c2-b963-b68808c126e4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d0aab30-733d-4ff4-8ec0-e7979b7e28cf"
        },
        "item": {
          "id": "ba97a146-8871-4297-a33a-e15bddeaf261",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9124264c-ea88-4608-8f36-e834b40d233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb150a8c-a32a-4ae2-95fd-33061ec95b77",
        "cursor": {
          "ref": "7b13595d-6a89-4a50-af0a-7b647a709a4b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4b381df1-c5be-48d8-bd3c-024a496e852c"
        },
        "item": {
          "id": "cb150a8c-a32a-4ae2-95fd-33061ec95b77",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b0cc8bc-44af-4ab9-9328-e316c1871d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011f9f69-0917-4518-9b21-aeb4bc6edaa6",
        "cursor": {
          "ref": "025cfd91-e70b-43b3-b0e1-53a502247117",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f6e92bbc-59aa-41d1-b4ae-77882c20bb91"
        },
        "item": {
          "id": "011f9f69-0917-4518-9b21-aeb4bc6edaa6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5337e4ce-b099-48d1-aced-e28d6bae27f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cdbfa9-c20d-42d3-8b37-69816a345ef6",
        "cursor": {
          "ref": "af26faf8-4c55-4093-8977-1047a7a4a63f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c8852385-438a-4a99-bf8a-fc34a233b62b"
        },
        "item": {
          "id": "73cdbfa9-c20d-42d3-8b37-69816a345ef6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ccdd548a-bcf9-4c95-8bce-9917ea87a149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9431e85-5a58-4ee8-acff-68def330678f",
        "cursor": {
          "ref": "1d68df7a-2c07-47e2-9755-2ca5aa522a62",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "99e5680c-64cf-4f3a-8bde-1820e220e5c8"
        },
        "item": {
          "id": "c9431e85-5a58-4ee8-acff-68def330678f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cc5c3656-4c7b-464f-bdef-faebea77c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc710115-7cdc-4aa5-9676-b57d5475f507",
        "cursor": {
          "ref": "a8baa705-fa1e-4664-ba84-70c78df0b6a4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "592c46d8-b89b-41dd-bc12-ac97a427ef89"
        },
        "item": {
          "id": "cc710115-7cdc-4aa5-9676-b57d5475f507",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ed3a1723-8671-476f-9bf4-e41fa7115181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b111b-2799-48b0-8e97-59fe75e40bdd",
        "cursor": {
          "ref": "5eeda0a9-aad3-4d36-aa65-73a42f29b72f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "71fa6378-14e5-4e87-b252-fd541612d2c2"
        },
        "item": {
          "id": "fa7b111b-2799-48b0-8e97-59fe75e40bdd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a0caa33-c25d-4706-97a0-c3b7a65c7379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aac6b91-6761-41b1-92f3-afc361b46b77",
        "cursor": {
          "ref": "44268823-68d5-4e83-b119-7ecbe1a60b7f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "129cafea-df4a-4cd3-8b4b-5e2f20eac214"
        },
        "item": {
          "id": "3aac6b91-6761-41b1-92f3-afc361b46b77",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a37a26cc-7afc-43cd-9c03-d755a98fa1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c87467-b019-4198-93a1-4f3f1e4cd932",
        "cursor": {
          "ref": "a57784e0-9aee-4f4f-bdae-8a7eee31aae2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1a5abb80-0ee3-4329-9c8d-7ca079a1cb75"
        },
        "item": {
          "id": "d5c87467-b019-4198-93a1-4f3f1e4cd932",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cb1c2a12-bccf-4c1c-8e50-2134229928b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54a0826-4650-4f1b-a0e6-280229fe06dc",
        "cursor": {
          "ref": "5b84e860-cf0c-4103-8acd-e7194fdb3f20",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "49809a8e-48fd-4e88-90a4-a1411a0f22d5"
        },
        "item": {
          "id": "e54a0826-4650-4f1b-a0e6-280229fe06dc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "82c3214b-34f1-4362-8f39-accd03c81f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eed1f67-3a47-4e39-abb6-8432a56c4808",
        "cursor": {
          "ref": "01e3ee10-019f-429c-b879-3fd1ff601556",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2db5d7b7-1fb9-4afe-a32a-df554427e38f"
        },
        "item": {
          "id": "4eed1f67-3a47-4e39-abb6-8432a56c4808",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89329fec-9834-4380-8d5b-43676abf81d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21266bb2-5871-49cf-8e0c-5496891336c7",
        "cursor": {
          "ref": "3db60b78-e5f9-485f-a59b-8de92e8c4a23",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "81dcc6f8-ed3f-47c0-a901-efa70977d805"
        },
        "item": {
          "id": "21266bb2-5871-49cf-8e0c-5496891336c7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac4d285f-c8fb-4d52-a9c2-bb0d16074b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6193c646-3cd3-4959-877c-cde8ab519fb7",
        "cursor": {
          "ref": "703f8f39-b887-4066-a09d-e8a223b2e480",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "87448537-e109-40ea-8441-04a2e614dedb"
        },
        "item": {
          "id": "6193c646-3cd3-4959-877c-cde8ab519fb7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "375e05c6-647d-46f2-8864-3eaf8fc3941c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffa2bcc-1e78-40a3-abc5-5e880d7a28d9",
        "cursor": {
          "ref": "f108dbfc-6005-459a-96d7-82da56129fca",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0f310a9c-cbe3-434d-b569-c0e4c8e968d2"
        },
        "item": {
          "id": "fffa2bcc-1e78-40a3-abc5-5e880d7a28d9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a14b80a0-e3f4-4503-aa28-1668d307447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1eba91-1cef-4714-a81c-985660bd0d65",
        "cursor": {
          "ref": "8a6bcee2-8000-49db-add1-4bb53b6852df",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "864cc934-7b57-4213-8286-f08a6de31398"
        },
        "item": {
          "id": "9f1eba91-1cef-4714-a81c-985660bd0d65",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b657c2e-a90c-4ce7-9e2f-05c57c2e11bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade06f9-3dee-4fb6-a851-e85f342b842a",
        "cursor": {
          "ref": "a11a457a-9736-4626-81f2-23723213aea7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "da611962-d8dc-42c4-b3e4-c127dfce28f5"
        },
        "item": {
          "id": "4ade06f9-3dee-4fb6-a851-e85f342b842a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ff7793ea-59be-4240-88ea-7f77bdea8457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5b4a82d4-900c-4951-bb1e-c15fe8a65ad8",
        "cursor": {
          "ref": "c953ad4d-30ff-4efb-8b49-83270091ae1a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "653f009f-2b3c-41e7-9cf3-061d468ac91e"
        },
        "item": {
          "id": "5b4a82d4-900c-4951-bb1e-c15fe8a65ad8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e9d0bcbf-4207-482d-a470-645fb05356a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "93a1a601-bf4f-4e73-8474-809449b2d577",
        "cursor": {
          "ref": "70be2d9b-45a5-473a-802d-f22eb02beebe",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "87ee7aae-bddd-47d1-b791-7117b76346c6"
        },
        "item": {
          "id": "93a1a601-bf4f-4e73-8474-809449b2d577",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8c290b52-8434-4ce0-8930-1ea4c9c22571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c332b4b2-6ee8-4f6b-b89b-9cb15ef7352d",
        "cursor": {
          "ref": "d3f45f91-a202-4c49-b4ae-e8b7d6bebff5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "df8cffb3-0370-48b1-9902-4b0d16cc1d52"
        },
        "item": {
          "id": "c332b4b2-6ee8-4f6b-b89b-9cb15ef7352d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "af524357-2f75-4973-accf-93588e1a35c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2083677c-2bae-4144-a6a8-124c7af0bea2",
        "cursor": {
          "ref": "81d9542c-7f91-45f7-be24-05a431b1891f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df6b3de9-dcd6-4abd-a39f-cdfa19e5dea1"
        },
        "item": {
          "id": "2083677c-2bae-4144-a6a8-124c7af0bea2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0d5430f7-6875-4bad-9aa8-8506aa26a161",
          "status": "Created",
          "code": 201,
          "responseTime": 13747,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65086139-9fcb-4b71-a9aa-58cfcf4689b3",
        "cursor": {
          "ref": "7dc6d00c-9af2-4e75-bd89-2da9c02c4d36",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "366fd5ff-64c1-4333-9f9e-e7c14d1255e0"
        },
        "item": {
          "id": "65086139-9fcb-4b71-a9aa-58cfcf4689b3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "adf2cd35-76e3-4a92-9233-326515c38ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "50c24727-420e-48f5-b38a-c3216347f8ad",
        "cursor": {
          "ref": "acb84ffa-82a3-4066-8ff8-b93f213a54ad",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "09824aa7-e7a9-4bd1-b30d-2098e452a202"
        },
        "item": {
          "id": "50c24727-420e-48f5-b38a-c3216347f8ad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "01dfc1b7-433e-4110-8384-c61da155b702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6d21fa51-615d-4f51-a034-e8f8bb16202e",
        "cursor": {
          "ref": "71c872b0-ea66-43f7-8947-63e49d6a9a70",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9ae5b198-a4f7-4693-bcc0-46737c482ddd"
        },
        "item": {
          "id": "6d21fa51-615d-4f51-a034-e8f8bb16202e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6329cb94-4598-4d9a-a3dd-5f8054b15791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b369be83-a0af-4454-93cf-b4b8b06bd9ae",
        "cursor": {
          "ref": "25449bee-b834-42a1-a695-41a1fe4e9f56",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c0ffaba-4b25-4ffa-82c2-067622039629"
        },
        "item": {
          "id": "b369be83-a0af-4454-93cf-b4b8b06bd9ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "839f417b-331b-4d2f-a50e-5209b93e2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3a695a-2ed1-465a-9f41-c31e2083e666",
        "cursor": {
          "ref": "28c85549-8802-4508-a541-6341c521eb37",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cf3a2c6d-3975-4a74-a7a9-600afcac0b66"
        },
        "item": {
          "id": "fb3a695a-2ed1-465a-9f41-c31e2083e666",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ed3a9ec1-c73d-46a1-932d-0f33968141db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42323959-eca5-4946-aa74-557bb7df5938",
        "cursor": {
          "ref": "80638105-f986-48ca-bf57-7bf3f6d000ab",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6847511a-75cd-4da1-8228-04d5426a0fde"
        },
        "item": {
          "id": "42323959-eca5-4946-aa74-557bb7df5938",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ae338476-dbe5-4bc4-9ed8-065ba83e2067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2353900-9bea-4c10-aed2-78c4b290b569",
        "cursor": {
          "ref": "58699133-48e7-4662-af49-b2ce12842956",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "00f4a3bd-22f4-4888-8c64-9bd79651d9ba"
        },
        "item": {
          "id": "a2353900-9bea-4c10-aed2-78c4b290b569",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2363ff8-43c0-4a99-a0ab-dbaa4d50c11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40be318-6b26-41dc-b469-22ba82e8a693",
        "cursor": {
          "ref": "e0956d29-f797-446d-9ca9-689157d2d6e5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "54b368ce-8560-4458-a2ac-06a39d4f0ae9"
        },
        "item": {
          "id": "d40be318-6b26-41dc-b469-22ba82e8a693",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97dd738c-5d5d-413d-b1e4-f12b447ffff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394354dc-fca9-48bb-b94f-1780caaddf83",
        "cursor": {
          "ref": "2f44b20e-6f64-4149-9676-6aceac3b3b0b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "97a26579-07c1-4809-8ace-27ce9f03264b"
        },
        "item": {
          "id": "394354dc-fca9-48bb-b94f-1780caaddf83",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fba6109a-49f7-43d7-8223-0abcc1f4cf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d7d71-26fe-4b18-a11e-f7a2de17cba8",
        "cursor": {
          "ref": "51ce16d1-957f-4e43-a3bc-7b1fa5049fb5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef9adb53-e72f-4bc4-958c-947f0adb7c8c"
        },
        "item": {
          "id": "8f8d7d71-26fe-4b18-a11e-f7a2de17cba8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a9cb19c1-f6f3-47f8-a1c9-203e8088316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee58f71-a5b3-4887-9cd3-a1e82b90be14",
        "cursor": {
          "ref": "0dd94b13-d777-4a32-84c1-64c47c41f093",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "11b189ef-516b-4e6e-809e-4b4b960bca50"
        },
        "item": {
          "id": "1ee58f71-a5b3-4887-9cd3-a1e82b90be14",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88eb3369-c9ba-47f3-8ecd-56a6be43bea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a477e9-6f6e-4fec-80d7-b37de201cc18",
        "cursor": {
          "ref": "a24a740d-0767-4973-8e71-d861fd3d4f79",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9b9a822-35bb-41ff-a8b3-00722c04c60f"
        },
        "item": {
          "id": "50a477e9-6f6e-4fec-80d7-b37de201cc18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "59b03a0d-626e-4e14-9e70-6799006dec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72bf1be-08fe-47fd-8f70-396f3676d9da",
        "cursor": {
          "ref": "f01bd0e9-f245-4ff8-934f-9bfc8deacb74",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8d2b43e6-a2ad-4020-9c6f-b7b66d4aa76f"
        },
        "item": {
          "id": "f72bf1be-08fe-47fd-8f70-396f3676d9da",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "672222b9-7520-4bf0-8e93-589e169ad4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b5ef6-dfd6-454a-b976-1a2d7c05cf29",
        "cursor": {
          "ref": "db40ed9a-b8a1-4dd8-a78e-5378b077b8a8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b1d7dee4-7d6a-4e05-8293-fc7234fcd624"
        },
        "item": {
          "id": "d70b5ef6-dfd6-454a-b976-1a2d7c05cf29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1bc9f089-abc0-4a00-8d36-d3828f6c58e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae7d9d3-93ce-4238-a67a-a1d3a35973e2",
        "cursor": {
          "ref": "f79281fe-21fc-47d4-82f2-1e7ffe5b6487",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb02c298-758b-4dd4-936d-ee1bbf58d3e9"
        },
        "item": {
          "id": "0ae7d9d3-93ce-4238-a67a-a1d3a35973e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "098ca6f0-6a7e-4f54-83ab-46b4f7132384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddc1cf5-33f1-4833-8429-2cadbcdee35a",
        "cursor": {
          "ref": "4dde90da-1dc6-46cc-943b-eddbc5bc4ee1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9899c672-a552-4851-81e4-a3aec07458a5"
        },
        "item": {
          "id": "4ddc1cf5-33f1-4833-8429-2cadbcdee35a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "20df53de-72af-49b1-9909-4fc1168e1b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e15f854-bf5f-4e91-a20b-51d5762e7c31",
        "cursor": {
          "ref": "29ccd948-4e64-4134-9f20-fa1fb8b862d1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f6c919e5-8045-4f71-9ece-e48db3029808"
        },
        "item": {
          "id": "8e15f854-bf5f-4e91-a20b-51d5762e7c31",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c604afe-2d33-4d11-866c-313f2e2194a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352b0480-d98f-427a-b408-e4134068644e",
        "cursor": {
          "ref": "2cc0ca4f-d983-4f91-ae95-845601736eaf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "16720303-ba83-4354-bf37-faf1849133ce"
        },
        "item": {
          "id": "352b0480-d98f-427a-b408-e4134068644e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8eeb2fa2-30c0-4bd8-9116-103c0551041c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491cedb5-fd5b-471c-8f41-54e443094788",
        "cursor": {
          "ref": "ad4f22ae-7b50-48b9-8d7e-631c9b4367f0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7694ca79-84f9-4d95-8911-c0822ce71fea"
        },
        "item": {
          "id": "491cedb5-fd5b-471c-8f41-54e443094788",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6aae4772-e42d-48e1-8e20-d82163f8a0b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bb55a189-8e76-432c-9d2e-81870918d947",
        "cursor": {
          "ref": "24c26b94-5d91-4025-874e-9690b68ba5a0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f754fbf-648d-41ef-986c-e988b0e38682"
        },
        "item": {
          "id": "bb55a189-8e76-432c-9d2e-81870918d947",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5ea8c76-347a-4bc4-90ee-3c0617cbe68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26584591-6af7-404b-97a7-55e0a61d4592",
        "cursor": {
          "ref": "7129f755-0b2f-425b-baa5-88f3f832bff8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "387fbdab-6903-4ea9-8a57-5ecbd9b3d6b3"
        },
        "item": {
          "id": "26584591-6af7-404b-97a7-55e0a61d4592",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8dc78817-5b30-4ae9-aae0-6f6408802332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8122df7b-9971-4e23-b011-e79bda69aa57",
        "cursor": {
          "ref": "b65b0c12-6e76-4959-9b38-bf2d26461f4a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0625138b-14bf-4604-939d-a2ded79d3d98"
        },
        "item": {
          "id": "8122df7b-9971-4e23-b011-e79bda69aa57",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aaa54c3c-c0f9-414f-90e0-80f05cb942c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1b67ec-aa70-4fc9-9cd7-3009da473cb2",
        "cursor": {
          "ref": "91645555-fd2d-4300-8ab6-bb5f498cc024",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4003be0e-abb5-4891-acae-55c8b534abc8"
        },
        "item": {
          "id": "7f1b67ec-aa70-4fc9-9cd7-3009da473cb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b0d8e586-bf9b-44dd-82e6-b0cce4e501e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86779500-595c-4937-af4c-cf235cdcfade",
        "cursor": {
          "ref": "8d26b945-95eb-41bd-a7a8-871dbaa1cd77",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5c332aee-8b22-4625-9948-88f3be284b46"
        },
        "item": {
          "id": "86779500-595c-4937-af4c-cf235cdcfade",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45e16e16-14ba-4c23-ab5f-572b3b58fe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56efd498-23a6-470e-9ad3-b975edf403ad",
        "cursor": {
          "ref": "3b39f8c4-c900-4ac1-b2bb-8b1a26d2a4c3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "032ceb6a-1666-40a5-9635-28ae6cad1241"
        },
        "item": {
          "id": "56efd498-23a6-470e-9ad3-b975edf403ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f4588b4-6544-46b0-94bf-ce02c0517444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf503be-4d7a-44a5-9993-f7fba06ed696",
        "cursor": {
          "ref": "e78f42ce-324e-4477-be7f-b1dbe0572edc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "52d4797a-d441-4984-b41f-ead583f49cc9"
        },
        "item": {
          "id": "eaf503be-4d7a-44a5-9993-f7fba06ed696",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1915741d-ec76-45b5-89b4-1218b53a7409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb26b147-0b9c-4b23-8ae4-d24153bc3e48",
        "cursor": {
          "ref": "90b4694c-abfe-416f-8208-a2fa3e1d99c1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f8f474ec-7ce5-4905-9531-549a3e583e3b"
        },
        "item": {
          "id": "cb26b147-0b9c-4b23-8ae4-d24153bc3e48",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a5dfd778-b395-4b8d-9471-9da44f141db0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e8b08980-ee10-4566-837d-e44157c1148a",
        "cursor": {
          "ref": "2de859a6-0a72-444a-9125-149ebc3b73e1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "24f26087-509b-4272-a405-1d41504ed97c"
        },
        "item": {
          "id": "e8b08980-ee10-4566-837d-e44157c1148a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ea27c86d-4422-49b4-aa04-727479a5987d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58112610-074d-4cdc-bb26-c28c5f27dc88",
        "cursor": {
          "ref": "24e35e5a-1d7b-4bcd-aa5b-d8b07a0dc172",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3049499b-5657-40ab-a0ff-a8b1a8cc71c0"
        },
        "item": {
          "id": "58112610-074d-4cdc-bb26-c28c5f27dc88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e10bab2e-8748-4179-b94d-60bc43fafc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18c793a-5cfe-4290-a5db-b5d858b9fa34",
        "cursor": {
          "ref": "e92826f9-141b-4fc8-a574-2edc0af233c1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37703e3d-433a-472d-b640-83b8092f2506"
        },
        "item": {
          "id": "f18c793a-5cfe-4290-a5db-b5d858b9fa34",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a4569ae0-dcd2-44a4-82ca-849c41ef5822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b460b0a-1587-41dd-b91e-ebb63853f071",
        "cursor": {
          "ref": "bb047405-fd5d-4d50-90eb-5858c99d694d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b139b2ca-f3a7-4923-8ef8-07ae0a23423c"
        },
        "item": {
          "id": "7b460b0a-1587-41dd-b91e-ebb63853f071",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "655642bd-ee98-45ba-a509-29754a776bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c544473-ac07-461f-b82c-3495842f1c01",
        "cursor": {
          "ref": "cff46a70-fdbd-4023-be37-c7cf81858f7a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75c16416-30f8-436f-86a5-90128139e0fd"
        },
        "item": {
          "id": "8c544473-ac07-461f-b82c-3495842f1c01",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91ea7660-39a7-44db-b685-e9c6b8f8cfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b9898f-51e6-479c-90ba-63d5e61a52ad",
        "cursor": {
          "ref": "7fb0e301-aa30-41db-9638-2bb90536428b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bd0e21cf-c849-464a-86ea-7f4794797b81"
        },
        "item": {
          "id": "b6b9898f-51e6-479c-90ba-63d5e61a52ad",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27520ca5-30de-4b4e-83c9-a0b2d88c44ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd477704-e19e-4cec-8c35-f0b005e5f142",
        "cursor": {
          "ref": "687bf8d7-e9da-4168-a429-d3019d239b19",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a1aca3ec-9136-4cde-a174-a98f7ddb1607"
        },
        "item": {
          "id": "fd477704-e19e-4cec-8c35-f0b005e5f142",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fe292184-dec3-4c95-ad23-95e4cc1ef877",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5aba2577-b07b-4d3f-a55a-1bf28b7e21a3",
        "cursor": {
          "ref": "aaa98cf5-752f-4068-ac12-81021bf35fa1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0698431b-0b19-49e9-acc6-171a771c2e30"
        },
        "item": {
          "id": "5aba2577-b07b-4d3f-a55a-1bf28b7e21a3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8eabab83-9c53-4d60-b324-008e2997137c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "31e33248-1450-42b2-934c-bd74765b45d8",
        "cursor": {
          "ref": "e04ddd92-74d1-4ceb-a199-75abc7f372a2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e1d49e30-5a57-4ee0-8443-0aa292643ad2"
        },
        "item": {
          "id": "31e33248-1450-42b2-934c-bd74765b45d8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "34b247cc-237f-40db-be0a-638aeb83e43d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "87e98fc0-91d2-48e6-bd24-9d1f97861c1c",
        "cursor": {
          "ref": "36484ab2-4cc5-4121-b39d-dced3cadeb0d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "39ca56f7-abc4-49c8-8e7f-622de60dfd15"
        },
        "item": {
          "id": "87e98fc0-91d2-48e6-bd24-9d1f97861c1c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1f0018b8-8663-4bde-9c9c-881bd8afdfb3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "1a8ee235-9448-4b58-935e-5e903674f6b1",
        "cursor": {
          "ref": "72ac793b-d860-4e9b-ba15-cb790c9b8075",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "038752f1-5ccd-40a8-ad5d-4e643bfbba68"
        },
        "item": {
          "id": "1a8ee235-9448-4b58-935e-5e903674f6b1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e65fef2a-dfc9-4ab8-a6e8-b51110821bfd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3ea10c90-673e-481c-a8a0-6d7b26990726",
        "cursor": {
          "ref": "1245e9bc-1034-4caf-ac85-34f72e940873",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d63979c9-9a47-4183-85da-f444c5bb38c2"
        },
        "item": {
          "id": "3ea10c90-673e-481c-a8a0-6d7b26990726",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2e88283b-ecac-4a55-9c13-53d23c37b82a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "7f352c3b-b4d2-4b5b-a273-1c4cf5843f0f",
        "cursor": {
          "ref": "c068c7a9-88a3-4d29-a5ed-2dc589edfc18",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "63a3f43a-dbb4-4efb-9961-a3c7041a7955"
        },
        "item": {
          "id": "7f352c3b-b4d2-4b5b-a273-1c4cf5843f0f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98eb0545-4b46-43d1-ade3-80086fd4dc69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d2b117-8393-48d6-b9c7-7f7e8e4007ea",
        "cursor": {
          "ref": "847a373c-8a15-4401-807c-9cb31602cecb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b5cda9d0-2f29-4645-86ed-5b40c1668e24"
        },
        "item": {
          "id": "a3d2b117-8393-48d6-b9c7-7f7e8e4007ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "42c0c575-4667-4fc8-9a2f-5b6fa703d918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9e801f-e068-45e5-b469-f3b7dcba5233",
        "cursor": {
          "ref": "acc565fd-52b3-4318-961f-50db04c1cc3a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c4fdfc63-29b8-4637-af6b-462b98642a87"
        },
        "item": {
          "id": "dd9e801f-e068-45e5-b469-f3b7dcba5233",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3579fd5-3b47-4249-a158-f920a88a81bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e8794-4ba7-4329-b8c3-4ae03db580b9",
        "cursor": {
          "ref": "7ee705ac-5be0-4d61-a925-2a3af92dc323",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b580b6d9-c0b5-452c-949a-46e7715f90b9"
        },
        "item": {
          "id": "bb7e8794-4ba7-4329-b8c3-4ae03db580b9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e15f984-6a1c-4500-8b03-9c5548c512cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9399cb-9bd2-43e3-8b0c-79f4bbffc743",
        "cursor": {
          "ref": "6e9e903a-8bf0-4c27-9d3c-1cc303fc4492",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8ba29c72-6cd1-4a17-b7da-17eb9677d338"
        },
        "item": {
          "id": "8d9399cb-9bd2-43e3-8b0c-79f4bbffc743",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f609a01e-c7c8-4275-a1e8-299933364c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4488d5e-83ca-4342-b140-8286c45b361e",
        "cursor": {
          "ref": "40da6d09-9807-4b83-8c43-401cd17909e6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c86e6592-dcd7-419f-b0a9-e6ba7a172b20"
        },
        "item": {
          "id": "e4488d5e-83ca-4342-b140-8286c45b361e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d834c240-d444-43da-91bb-e5177c34dd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25c7e06-e205-46b9-ba5a-cca51e8c77ac",
        "cursor": {
          "ref": "feafbe9c-a744-4953-a650-8a3fe4adf143",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "611bb333-6b2b-43c0-8f19-68a65ee28df1"
        },
        "item": {
          "id": "c25c7e06-e205-46b9-ba5a-cca51e8c77ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b63b2b66-55ad-455f-9a94-77f75ca8b04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e720ce3-f36c-467c-99be-73d762c8628d",
        "cursor": {
          "ref": "1ee3436f-3337-46c7-bab1-d23760827318",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e4234ccf-3895-4cda-8684-78e0a35d69a6"
        },
        "item": {
          "id": "2e720ce3-f36c-467c-99be-73d762c8628d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b071a0f9-e397-47d7-ba70-afbde9674459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35543b72-84b6-4601-b534-cd67fe1faec9",
        "cursor": {
          "ref": "e1ab7f0a-2ad5-4c31-8421-e900420d60de",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f583aff4-f83e-4537-94b9-ac71390a2a81"
        },
        "item": {
          "id": "35543b72-84b6-4601-b534-cd67fe1faec9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "63a0239b-e340-4116-8938-70913bd67fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540ea9e0-a1f2-452c-aa2d-79a6fcc7ffad",
        "cursor": {
          "ref": "54a33be1-675f-4600-b0c0-47042e8cd23a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "64f987c5-bcd2-4662-ade4-3224ddb8fabe"
        },
        "item": {
          "id": "540ea9e0-a1f2-452c-aa2d-79a6fcc7ffad",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "02ead5ab-6b4b-4bb7-b21d-5210b4e7c743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57058a9e-c6f0-4f14-b9d1-c4c9d8eea58f",
        "cursor": {
          "ref": "658bae71-c663-49b5-9c00-1461c0c1df25",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a4590c86-e34f-48df-a89b-093ab358ebed"
        },
        "item": {
          "id": "57058a9e-c6f0-4f14-b9d1-c4c9d8eea58f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "73d1a719-dd1b-4ec8-9430-7fb7d0e6b910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddc6f79-3530-4e9b-a84e-b56bc48fb7d9",
        "cursor": {
          "ref": "bd6700fd-cb21-49db-a399-78a0678bfe58",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "424aadac-a25d-47c2-bb58-40fef46f483b"
        },
        "item": {
          "id": "bddc6f79-3530-4e9b-a84e-b56bc48fb7d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0afd149d-23fb-4e91-92e9-58d2c6bb68a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba4ea0-df75-4949-b23a-5995b47f3110",
        "cursor": {
          "ref": "7cde542f-5ab5-4966-a161-eee3f77b8a0c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bf70edd2-a320-4886-ae63-7bfd316f80de"
        },
        "item": {
          "id": "cbba4ea0-df75-4949-b23a-5995b47f3110",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "15bc95c9-9671-4357-bd9f-c2e0e3ea5c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0160967-123e-4fcd-866a-f7ed3935f0c1",
        "cursor": {
          "ref": "2f1794b1-5dd2-4b8f-ac0d-85ff4d25fe7b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0a3f91a-8a50-4aa3-a771-f401dd17ea7f"
        },
        "item": {
          "id": "c0160967-123e-4fcd-866a-f7ed3935f0c1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "75e77e3f-b4de-4426-b482-fe2c3cdab31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d40da2d-48f7-4654-a9fe-63db214df8de",
        "cursor": {
          "ref": "c94b1d97-9a7a-4703-a3f1-b8781a988252",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8c22af66-0ec4-41cb-907e-77b5235f7260"
        },
        "item": {
          "id": "6d40da2d-48f7-4654-a9fe-63db214df8de",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "25dfaa8a-c174-42e5-8a97-7921037d18ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cbcd63-7249-4422-97cc-e34d1825fe0b",
        "cursor": {
          "ref": "82893b39-6a14-43bb-aa3d-1d465a54711c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5672f5b8-f2d4-4f1b-80b7-29fb64f1104b"
        },
        "item": {
          "id": "e3cbcd63-7249-4422-97cc-e34d1825fe0b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "60dbf29c-09b8-48cd-91df-31b1c761dcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2b4cf3-848f-4024-8571-abc1e4557a24",
        "cursor": {
          "ref": "e279ba63-e9e6-439a-8a77-b9f2e3200051",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "53bfe294-28ff-4942-a2aa-5e20acae98f4"
        },
        "item": {
          "id": "ed2b4cf3-848f-4024-8571-abc1e4557a24",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0b81928d-faef-4e1e-999e-873c038fd18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7b901-aa90-4f22-b203-b26f6215e41c",
        "cursor": {
          "ref": "824fae9a-3299-4802-a0a1-6baf67eab05d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "84c880b9-2bbd-4589-80fa-99aa8b85b0b8"
        },
        "item": {
          "id": "48e7b901-aa90-4f22-b203-b26f6215e41c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eb362541-732e-4378-ab82-4ddcca8cf9d0",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "415db804-c314-4a0e-838b-44e389ca366c",
        "cursor": {
          "ref": "3e1c079e-b32b-4fda-927b-7052d3989168",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "47bf2b04-1cd1-4d5d-ae62-d72ecf328ac5"
        },
        "item": {
          "id": "415db804-c314-4a0e-838b-44e389ca366c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dbd0956e-56d5-45b3-8940-f46de216b7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e63589f-275c-4a18-b613-93108e4e6dcc",
        "cursor": {
          "ref": "0ec47812-a01a-4155-80a5-506b1455ec40",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b1acbfff-a0c4-4aba-9cb5-2d9e137c038c"
        },
        "item": {
          "id": "9e63589f-275c-4a18-b613-93108e4e6dcc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d3e0457-9137-46c7-b8cb-7c2ec14918c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0620ad9c-bb19-440e-a331-123e47f8b5cd",
        "cursor": {
          "ref": "0040e07e-983a-425d-81f5-61d108041712",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "612c4731-15a3-4185-983a-904634baa807"
        },
        "item": {
          "id": "0620ad9c-bb19-440e-a331-123e47f8b5cd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b645401e-70db-4b86-b615-925e12d75cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776005e4-b13c-44ec-8cb8-fcc21999f1a7",
        "cursor": {
          "ref": "0567ada5-8994-4e15-a786-3771849e29fa",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b5b083cf-2977-4b07-bacb-745a9e16d4bd"
        },
        "item": {
          "id": "776005e4-b13c-44ec-8cb8-fcc21999f1a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bd9e35da-0906-4f6d-a91f-d3f9986dfb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfe1898-81ef-4e25-bddd-194afe64b67f",
        "cursor": {
          "ref": "c064cc2d-5e5d-47d7-8df0-406ece9dd231",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "65b54e2c-5af3-460a-a6e4-6b76ec048ce9"
        },
        "item": {
          "id": "bbfe1898-81ef-4e25-bddd-194afe64b67f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e5806218-fe48-479f-ae58-29c76f6fe12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656abd3c-b256-4972-bd36-393f053bd365",
        "cursor": {
          "ref": "8e8197f9-30cf-4888-9bdd-15e306403d93",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ad0b7f0c-43ce-4c74-8977-50d3387430ec"
        },
        "item": {
          "id": "656abd3c-b256-4972-bd36-393f053bd365",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "83e87bc3-a573-4a3e-8adb-9301cb6455d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eefd13-0111-4c00-8489-777189f0455a",
        "cursor": {
          "ref": "4c02005c-1eb8-4672-927b-9c534ae43f41",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d78398ff-47ae-4932-9296-efb92c206d25"
        },
        "item": {
          "id": "09eefd13-0111-4c00-8489-777189f0455a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5eadf90e-2636-449e-b11b-7518d493ca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39ed72b-5209-423a-9820-eaceb6a2606e",
        "cursor": {
          "ref": "89b1db65-781a-4013-8ee2-9da6db238284",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ed8e58d1-d26e-4f07-b64e-93c9dff97976"
        },
        "item": {
          "id": "e39ed72b-5209-423a-9820-eaceb6a2606e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2f5c0343-a1ca-447c-ad85-aba4a7cea8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0112eac7-285e-40be-a328-805eecff62a4",
        "cursor": {
          "ref": "ce74861a-9de6-41ec-8d8b-02bc34dcd456",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d8d32e3a-b29a-438d-ba13-57dc8fc1e75e"
        },
        "item": {
          "id": "0112eac7-285e-40be-a328-805eecff62a4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9b47ae83-f79b-4158-92fd-9355287d7793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22355548-7631-4d7c-bf0b-74780e186d9f",
        "cursor": {
          "ref": "64cbf844-eae8-4baa-9bcd-8e4e85402c06",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3e894cfd-4b3d-4328-91d3-24ec04a04ec0"
        },
        "item": {
          "id": "22355548-7631-4d7c-bf0b-74780e186d9f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b87a59c0-36aa-4d5c-988b-89c39d5f39a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb52ae7-b2d1-458d-b14e-033d901ec2d2",
        "cursor": {
          "ref": "37ade998-e14c-49e6-ac28-0c1611c96ea2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f7907a78-26fd-41c2-9af5-d15876109c73"
        },
        "item": {
          "id": "0eb52ae7-b2d1-458d-b14e-033d901ec2d2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "26f0e5f4-6db3-455f-b60f-790ea5b2aea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363f54e3-0210-4129-b2fb-ec0d59ae32b4",
        "cursor": {
          "ref": "12374f37-9cc9-4ff4-a2ce-11f0a16f08ef",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c96edbd-90c5-4cb8-b162-f086c0be315e"
        },
        "item": {
          "id": "363f54e3-0210-4129-b2fb-ec0d59ae32b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6e7875d4-1dd0-4a3e-8e79-5a133b510a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec34be15-8294-4b58-80e7-5d74c0b4cac4",
        "cursor": {
          "ref": "39c50576-be1b-463d-90ac-b9f9ed406825",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "444b9c82-8519-47e6-bea9-c86fb28bc26f"
        },
        "item": {
          "id": "ec34be15-8294-4b58-80e7-5d74c0b4cac4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "78901997-ce39-492f-9a0c-4034df499068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf9f85f-f2d2-446f-8ae0-1b91673ac85c",
        "cursor": {
          "ref": "733ccf6b-5111-4e44-b2e5-5f89ef132189",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6459c61b-ded2-4f63-b6eb-ad9ca4066942"
        },
        "item": {
          "id": "edf9f85f-f2d2-446f-8ae0-1b91673ac85c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "664c2c46-a878-4b8f-b9ca-52628d2b4d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9301a573-7939-405c-8341-3fc8f499dd3a",
        "cursor": {
          "ref": "31f0884d-4672-4def-8849-2ca08f56ac73",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d0f8e2dd-600b-4b0f-bc3a-10d9ed6f4b89"
        },
        "item": {
          "id": "9301a573-7939-405c-8341-3fc8f499dd3a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "69121a73-b69e-4a39-b681-6fff54910310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880b149a-4e2b-4dfa-b051-939fbecde187",
        "cursor": {
          "ref": "8f28451d-b259-4f86-b419-4df7bf45ae7c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "11540eac-1db4-4f2e-a538-8d6b6b19f705"
        },
        "item": {
          "id": "880b149a-4e2b-4dfa-b051-939fbecde187",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7e728ebd-10f3-4b5b-be68-3aa1812397ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660325b1-8927-49ea-b538-92df23fb4d03",
        "cursor": {
          "ref": "da9040a1-3e3c-43b7-99ae-8a989819ce37",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cca986ec-624a-40c6-9a23-47db730553c6"
        },
        "item": {
          "id": "660325b1-8927-49ea-b538-92df23fb4d03",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "df6c0470-6df0-4c7e-b512-b9560f4cc152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3fadd-e2c8-4f7b-aef9-6893c9d39826",
        "cursor": {
          "ref": "ca344d8b-6419-4b23-8338-15adb2873c40",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72854e66-025d-4564-b075-2522cdd5d31c"
        },
        "item": {
          "id": "4da3fadd-e2c8-4f7b-aef9-6893c9d39826",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e602d8b-5040-4df1-867c-1fc70297d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3855bc4-14c9-4a1d-be23-94e40d2ddc4b",
        "cursor": {
          "ref": "4123b326-931b-4404-953b-a8c89aa344e7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a2a80c9f-072a-45ae-9bf0-2b8cbe8152f6"
        },
        "item": {
          "id": "b3855bc4-14c9-4a1d-be23-94e40d2ddc4b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ca9b72bc-ae99-4a62-bdd7-fa7ba6b7be79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38934849-a60d-434d-af44-735561693b61",
        "cursor": {
          "ref": "4c934b1f-a429-4564-bff5-cc4985ac4c18",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18ee33fb-b637-4061-bc05-4caf724c69c0"
        },
        "item": {
          "id": "38934849-a60d-434d-af44-735561693b61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7f26045c-0be6-4ddd-a60e-2c38c3a2123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2590d0d-6604-4b26-af33-3c92bb414232",
        "cursor": {
          "ref": "999831b8-1c95-42b5-9591-f6be495e3ae1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b9cf85d7-656f-40be-b2d9-49fc9e87bba8"
        },
        "item": {
          "id": "a2590d0d-6604-4b26-af33-3c92bb414232",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cd6c3af5-b2ce-462e-b914-425ab646f91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b40f6c-6dae-4e40-8b3f-dc38563c95cd",
        "cursor": {
          "ref": "dc8d813c-c9d4-4963-aee2-f10fb29d83af",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5fa45905-69fd-44aa-9625-6857fdebcdc2"
        },
        "item": {
          "id": "76b40f6c-6dae-4e40-8b3f-dc38563c95cd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21d8b960-7a4e-4d3e-94c0-2be43499debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f24a2-3937-4c28-9e9b-ef101946bf93",
        "cursor": {
          "ref": "1379f64d-f61a-4e18-8ba1-4aa7af8b0018",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "35ff8173-9249-4d0b-b94c-c6904311ea47"
        },
        "item": {
          "id": "1c9f24a2-3937-4c28-9e9b-ef101946bf93",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dbfd4727-f177-489f-a4b1-5bb88686955e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d49aac0-e123-4e8e-b1b9-ff4a16bdbefa",
        "cursor": {
          "ref": "6add9ea0-db95-4b8e-8809-acf37e7eed9e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "42c5266b-c6ea-468e-8690-33493b264b4e"
        },
        "item": {
          "id": "8d49aac0-e123-4e8e-b1b9-ff4a16bdbefa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa04f61e-8c05-4b24-b5e2-b988f29aed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12434ea6-6894-4624-ade4-cf6ace6cd157",
        "cursor": {
          "ref": "7e25fe77-cc7a-4898-8438-7f7b49b28085",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "40679ffb-34a0-4f86-8088-6925fa89d307"
        },
        "item": {
          "id": "12434ea6-6894-4624-ade4-cf6ace6cd157",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "297d05f1-4779-43f5-ae0c-c4b66519ca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f9b2d-dc61-4b5a-80cc-f5aaa30524e3",
        "cursor": {
          "ref": "5d487168-36fa-4d2e-ae2f-29dd8a01660b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1d5569bd-c72a-4088-a30d-2cc74b615909"
        },
        "item": {
          "id": "a17f9b2d-dc61-4b5a-80cc-f5aaa30524e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57eb7675-aaab-466b-934d-37eec515c8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3c2f6f-0f33-4c2a-9579-97d6e1452d6f",
        "cursor": {
          "ref": "df158a2b-ea1c-4d00-8a39-f621701fabe8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "267c4dca-e66a-46d1-b76c-64688bae01dc"
        },
        "item": {
          "id": "0b3c2f6f-0f33-4c2a-9579-97d6e1452d6f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fc231f06-6673-4623-bdc3-b0393b6214d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96b937-dbba-4133-833a-0082ea2f99f6",
        "cursor": {
          "ref": "2d1dfeee-bde0-46d0-94aa-64a8ba8a29fc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "435f215c-2f0d-4ca5-aaee-49e5a160c856"
        },
        "item": {
          "id": "1a96b937-dbba-4133-833a-0082ea2f99f6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c24b7396-a321-4ad8-839b-abfb0c15dfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a18630f-235f-4bd7-8be4-646fc595b403",
        "cursor": {
          "ref": "8aeb7855-d66e-4d3a-9ac7-b7648dc223bf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c4fae0ee-a510-49cd-8a0f-30e9c177e4df"
        },
        "item": {
          "id": "3a18630f-235f-4bd7-8be4-646fc595b403",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "604e1c32-04dc-44c9-8611-ce73e436a97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e019b1a0-2aca-4153-9ae2-5dd806704595",
        "cursor": {
          "ref": "f10fe602-9778-4648-baf9-76dcf8bac43c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba13f573-7112-4e4f-a750-c56ca3cb7d04"
        },
        "item": {
          "id": "e019b1a0-2aca-4153-9ae2-5dd806704595",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "41dc34c5-1bf3-42b1-ace5-3b71787e434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802186c8-6ee1-44e4-b69b-3c049bfdb099",
        "cursor": {
          "ref": "dfa1d749-8a78-4842-a6d7-be71b7f15264",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "af9c15a5-bef6-48fd-8f3d-7823f1900c64"
        },
        "item": {
          "id": "802186c8-6ee1-44e4-b69b-3c049bfdb099",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "958f4518-7911-414a-b75d-02dfee807022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f86007-b4f5-4c10-9ebc-1072cffd6f1e",
        "cursor": {
          "ref": "176c9600-fcf8-48a2-9bcc-988e3128f360",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f147977f-d4fa-4c04-b9d8-03696ee3fc63"
        },
        "item": {
          "id": "a9f86007-b4f5-4c10-9ebc-1072cffd6f1e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "97c94d4b-b2ab-4f26-ae4d-cf530140c149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e36c576-d862-408e-a712-166f8f4e2093",
        "cursor": {
          "ref": "5b53b178-278e-48de-a544-7a8a3faad086",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7418fd53-9439-47f3-bcde-6a40063ef8d3"
        },
        "item": {
          "id": "2e36c576-d862-408e-a712-166f8f4e2093",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "37bf01c8-42c6-4a57-a55e-c912afe2a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e5e011-47f1-4e08-aa80-945ef03bf314",
        "cursor": {
          "ref": "1f0572b0-ed4d-4776-a299-752139abacce",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3566ee2-39a6-4a08-b60f-000be1083157"
        },
        "item": {
          "id": "c8e5e011-47f1-4e08-aa80-945ef03bf314",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fde9826d-75ea-41b6-a4fb-2e3ca10bafcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597079eb-37bb-4e6f-a57f-22afe0ca2c40",
        "cursor": {
          "ref": "f943ed56-5c62-40f1-9ba1-0530e4ac1274",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c9787df-ec1e-4494-9eba-b5ecbafaead7"
        },
        "item": {
          "id": "597079eb-37bb-4e6f-a57f-22afe0ca2c40",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5934f4e9-ae22-442a-a119-832225900564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf240aa-22ae-4a15-9915-d60d7dc4c56f",
        "cursor": {
          "ref": "4ee116dc-f135-4df1-91c9-9c3319825471",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9c8f5618-735a-4d1d-8647-87a5c4dcbad6"
        },
        "item": {
          "id": "edf240aa-22ae-4a15-9915-d60d7dc4c56f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68069262-1bd2-435c-8402-dffc03d0f143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdced5e-26d3-4d35-b6f2-7347f487bf32",
        "cursor": {
          "ref": "c96df7fe-98ca-4f00-a0f9-81eea4f129a1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6cb0cd8a-b6d2-4eea-ab29-9762fdd204e3"
        },
        "item": {
          "id": "6cdced5e-26d3-4d35-b6f2-7347f487bf32",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c537fce-090e-4f01-9568-92071189b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cad06b-270f-4d29-bcf1-fba855807240",
        "cursor": {
          "ref": "5d17a520-f859-4b11-a060-40025acad41a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "60da9048-d802-4ac3-bc21-6074f7b0c614"
        },
        "item": {
          "id": "29cad06b-270f-4d29-bcf1-fba855807240",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1c7a0c2d-42cd-4b01-8906-30bf96c3669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6d8001-a5a7-4680-8b52-fbaf091c59be",
        "cursor": {
          "ref": "121f7c06-5cd7-44d7-99f7-e3fb2f340fb3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21373b3b-a7f8-487d-9b75-5135da645006"
        },
        "item": {
          "id": "5b6d8001-a5a7-4680-8b52-fbaf091c59be",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4129671f-4066-4538-a57c-34b62bf0fb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ebb6fd-8390-44bc-81d9-d8fc5e1d5b01",
        "cursor": {
          "ref": "298d11d1-a8be-48e5-8651-6ad20ba34a3d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc174319-3d86-48d3-abc5-f0241d40bd5c"
        },
        "item": {
          "id": "11ebb6fd-8390-44bc-81d9-d8fc5e1d5b01",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4eb8eae1-f518-44b3-b00d-b9e65dec8b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b61484-7304-4cdd-bf4a-e8b20a1940bd",
        "cursor": {
          "ref": "512fb531-8cb5-4f83-818d-63cca674322e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "391126df-cfc5-4c96-bd33-9db06ef67a2d"
        },
        "item": {
          "id": "20b61484-7304-4cdd-bf4a-e8b20a1940bd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "46c030d9-e976-4991-8567-9ea5b432a2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933424e5-d2d9-4217-b76e-bf974c870543",
        "cursor": {
          "ref": "ff145077-0c33-45bf-b88c-bafa07c1ff8a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "82276890-89e3-422f-be96-4ea5c80a8b25"
        },
        "item": {
          "id": "933424e5-d2d9-4217-b76e-bf974c870543",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fd59aed8-175f-4166-9f00-59025241ff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151912bb-d186-4c14-b2fa-071aa2e8b180",
        "cursor": {
          "ref": "2db31276-11d1-4a37-9d19-c647c2d48e2d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bba2326d-a3ae-4228-85e3-c5d8bc1b4075"
        },
        "item": {
          "id": "151912bb-d186-4c14-b2fa-071aa2e8b180",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9407e885-515c-49eb-bd43-c9369239846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee33d5-24a3-4cfa-87bf-018a0951410e",
        "cursor": {
          "ref": "39440f8c-a195-405f-a8a1-39d0c1a78189",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f3a98022-1201-40ef-af90-c6f82f583898"
        },
        "item": {
          "id": "79ee33d5-24a3-4cfa-87bf-018a0951410e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1bcce68-bd03-4256-aa4d-3792491a2cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94eb43c1-1f8e-4fce-8ec1-f67534e7788a",
        "cursor": {
          "ref": "8c25b496-b048-4cad-a73a-623fd8f65852",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "21fcc4ff-ebcc-4729-a214-17f94d8b49c9"
        },
        "item": {
          "id": "94eb43c1-1f8e-4fce-8ec1-f67534e7788a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b9b84413-ef81-4f2c-8507-a910fe617dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4826279f-5d22-42e4-8fd9-b6b5b9ea7924",
        "cursor": {
          "ref": "f5788b38-084e-40fe-bc0d-e8014064c2c6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a59e8d5d-24df-42c7-864c-66d77015eac1"
        },
        "item": {
          "id": "4826279f-5d22-42e4-8fd9-b6b5b9ea7924",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b5728179-2c23-4155-94f9-00f9d19134be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef5ea39-ac32-4c42-a3f2-88c2491fc204",
        "cursor": {
          "ref": "32a51a26-2631-4793-8761-45319df7c4e2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6ba43ebb-c31d-40df-9e59-efe40e21b2ee"
        },
        "item": {
          "id": "1ef5ea39-ac32-4c42-a3f2-88c2491fc204",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "93d4ad29-3059-45e0-9abc-d9a8f261670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864f1bf4-1375-4575-8a97-ff8c6e1f764e",
        "cursor": {
          "ref": "821eebfd-2525-4d6f-8a84-8cb81f78e440",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "df66f196-c357-4be2-9812-7af2530dd273"
        },
        "item": {
          "id": "864f1bf4-1375-4575-8a97-ff8c6e1f764e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d728dc7-b321-4548-878b-10cd1d9f6a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f818441-5a2a-4c27-8286-4b4f664d3a8e",
        "cursor": {
          "ref": "1825e129-6d09-47db-a949-3cd4cce550c8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8fb1458a-0950-4b81-b495-055013e09935"
        },
        "item": {
          "id": "6f818441-5a2a-4c27-8286-4b4f664d3a8e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dea06c6d-7a32-4ed9-b98c-eebf4794bfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcd1302-317d-4a7a-8ffc-3909a7feef13",
        "cursor": {
          "ref": "65a049a8-857f-42c1-92f3-4833943d880b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbb850ba-744c-41ac-850b-78ca954081fa"
        },
        "item": {
          "id": "0dcd1302-317d-4a7a-8ffc-3909a7feef13",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9ea227fa-675b-4fe5-9ec1-c2404053fe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c053ff-dab0-4cee-8093-5cb8433aed62",
        "cursor": {
          "ref": "7d420e91-7a56-4415-87af-d21a31ee7e8e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "66d0f929-6b98-45c5-8740-057cf588cd78"
        },
        "item": {
          "id": "c5c053ff-dab0-4cee-8093-5cb8433aed62",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "063c94e8-a827-4b7e-80db-3892f685061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c5ba15-50e7-4a68-8803-bb71fac6262e",
        "cursor": {
          "ref": "be9b98d3-42d4-4573-8240-0f9f9e4aca07",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0e9d36da-04b9-4367-be97-4c25d54e7731"
        },
        "item": {
          "id": "74c5ba15-50e7-4a68-8803-bb71fac6262e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "edb84d53-9b58-420c-ad77-d0c9ef17d7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8037814-22e2-4e86-914f-ee61c2e426a0",
        "cursor": {
          "ref": "69a4d10d-2013-4702-b662-9dc7b8865378",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "deecf23c-eb56-4eec-a2dd-b5580e1a894a"
        },
        "item": {
          "id": "d8037814-22e2-4e86-914f-ee61c2e426a0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c69ae966-b05c-42f0-8ec0-c999c980509b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d9b05a-ee74-48da-bc1b-03824b473aa2",
        "cursor": {
          "ref": "fffa0a3a-5f24-49ad-88ba-6bc96ce47d35",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c95bd1f9-e7e4-4abe-afcc-6971ca3f7906"
        },
        "item": {
          "id": "67d9b05a-ee74-48da-bc1b-03824b473aa2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "092b8735-5cd6-4edb-98a5-7e037db29866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a644fc5-d68a-4154-8da4-7578fb0c8d1f",
        "cursor": {
          "ref": "c4128461-2367-4f19-8743-e718c964c04a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b38019f4-e32b-4d80-a370-83b295222f8e"
        },
        "item": {
          "id": "7a644fc5-d68a-4154-8da4-7578fb0c8d1f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "736096b0-6a64-44b5-9b2f-44b9ad4b8351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5c30cb-aa88-4244-8cc3-c191148b245f",
        "cursor": {
          "ref": "6d3dacf4-963b-4295-8480-00fe2217b6bc",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6ffa2c7d-120c-4034-be24-5f77233b3696"
        },
        "item": {
          "id": "1c5c30cb-aa88-4244-8cc3-c191148b245f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "657fc6a9-cc52-45ae-a8e3-660519a77516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4f5394-6523-458e-b99c-6dfef499198c",
        "cursor": {
          "ref": "dab7f4a0-7472-48a4-9998-13de9f191779",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fe80fa5f-93b4-4e1a-bcde-3e0899af67b8"
        },
        "item": {
          "id": "8e4f5394-6523-458e-b99c-6dfef499198c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "903d8554-73bc-4806-8840-a4a4175d32b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf9e42-5040-4230-9e69-339b39ea19e0",
        "cursor": {
          "ref": "fa8e5974-6461-4dce-a239-bf2ea033c77c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "73597cf4-9487-46e2-9c39-f086013d20ba"
        },
        "item": {
          "id": "5cbf9e42-5040-4230-9e69-339b39ea19e0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de5a84b6-de4c-4297-a153-7225a512f349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "face168f-72d3-4025-9386-734925e99e81",
        "cursor": {
          "ref": "c37669ca-11c6-47e3-b929-129c5cf970a9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0391e826-4ac0-43ba-b001-d6dddb6821ad"
        },
        "item": {
          "id": "face168f-72d3-4025-9386-734925e99e81",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6fe351ce-9ce3-4f92-85d6-b09efe701844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149b16d7-e1e1-453b-a8f0-96423aac3361",
        "cursor": {
          "ref": "f12991cf-b90e-4fbe-958a-e73417976de4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "687675de-d042-4866-8b4e-a92998e101b5"
        },
        "item": {
          "id": "149b16d7-e1e1-453b-a8f0-96423aac3361",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2e3ec994-c41f-4f18-a74b-0c9bf370c6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d00feff-98cb-409f-a9d2-4155d0adc79f",
        "cursor": {
          "ref": "a92dca6e-43c6-44c5-8bec-9bdd701b12b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "43df02d6-f39f-480a-b759-f8478c12caf3"
        },
        "item": {
          "id": "9d00feff-98cb-409f-a9d2-4155d0adc79f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c9e53359-1f01-481b-8388-3760e1baf9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b1a340-2ea3-4302-97af-7c2abdbedda7",
        "cursor": {
          "ref": "4bab79bf-9d3a-46af-b23e-17eefd4b97b1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e9bdef5-0a96-4693-9487-9280ad20c896"
        },
        "item": {
          "id": "64b1a340-2ea3-4302-97af-7c2abdbedda7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6fb20b6f-82d5-4c18-9b8c-96f555ba8fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5871278-fa51-4061-89ae-37d2e59c2eb4",
        "cursor": {
          "ref": "f7344cdd-b52a-4ba2-87ad-c3ad1984d963",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d6570b20-96da-46c2-b33a-14d956be38f8"
        },
        "item": {
          "id": "b5871278-fa51-4061-89ae-37d2e59c2eb4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee70bdd3-85ef-4cd0-a3af-7f0e63fbb929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd74d59-836c-4a98-af32-3b16be06f7bd",
        "cursor": {
          "ref": "62c97771-62e2-46da-a51f-ff1615d2fe35",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "277c93a5-b13e-45e6-88be-3181efd37697"
        },
        "item": {
          "id": "bdd74d59-836c-4a98-af32-3b16be06f7bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3829ac76-729d-4e37-96b9-2ca9f7b35cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0f4868-f014-4a7c-abf3-63e53aa78ac8",
        "cursor": {
          "ref": "3f10d03c-db6e-4a91-8c50-7cbd29993d19",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1b546d1d-9f43-4f88-8281-8a572bfd8092"
        },
        "item": {
          "id": "5d0f4868-f014-4a7c-abf3-63e53aa78ac8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "02230a0f-b682-441a-a66c-7aa4aa846ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699263e0-daa2-4ee3-8298-25e0d6b4824e",
        "cursor": {
          "ref": "1e58a881-25ff-4dae-9ff1-b4c06a1d541c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0f90537a-fd4b-4be8-b017-5fcb33485758"
        },
        "item": {
          "id": "699263e0-daa2-4ee3-8298-25e0d6b4824e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "513f564d-3ad4-4165-be54-80eedd40d424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7e83ad-b25e-4b3b-a1bc-190caf110e50",
        "cursor": {
          "ref": "3384463c-9a56-4e76-96fa-2543fbf1ca61",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "230b93a8-98f7-418e-a00e-960f12808bcb"
        },
        "item": {
          "id": "ef7e83ad-b25e-4b3b-a1bc-190caf110e50",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "12374d68-6466-45d0-8b51-2f2718cc27b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce2f92f-f52e-49e0-9290-24d3c8e4e620",
        "cursor": {
          "ref": "fa5726c2-7ac3-484c-9277-2e5b86139e19",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9a78ab68-26c6-4e20-ba58-7ea7ebd1a324"
        },
        "item": {
          "id": "3ce2f92f-f52e-49e0-9290-24d3c8e4e620",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dd9f2fbd-9dea-45d2-bd42-d214c314041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e69fb07-103e-47b9-a6de-273783f08867",
        "cursor": {
          "ref": "eb2460c0-4a2f-4512-a41c-178eb640e666",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8135eaa9-36d7-49ff-8425-666505a2a590"
        },
        "item": {
          "id": "3e69fb07-103e-47b9-a6de-273783f08867",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8877e1e4-1c38-452d-8c23-b81c2ddd85ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74070c5a-4946-4557-bd26-807314b706e6",
        "cursor": {
          "ref": "cd1408d8-6cd0-4273-a55c-0d7366dd0c4e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3e1a2f0a-86a0-4b39-b0a4-605851493412"
        },
        "item": {
          "id": "74070c5a-4946-4557-bd26-807314b706e6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c6fd993b-38cc-4cda-a05b-643c95ffb008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1e26ef-97ab-484d-ac59-44c6296be455",
        "cursor": {
          "ref": "afebf23d-e80f-450e-bd28-f74053f1385e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8a63e2f3-63cd-48a0-8056-11babaa3125b"
        },
        "item": {
          "id": "3c1e26ef-97ab-484d-ac59-44c6296be455",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a1d9bb79-3b25-4132-82dd-7227a766ef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5781900e-36a6-4fef-8beb-bb1de15d33c3",
        "cursor": {
          "ref": "eef2f322-19fb-40a3-a2f3-d1d85d1a2ec5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ca8faa43-e9a6-4839-b3d1-5b3da3b46a8b"
        },
        "item": {
          "id": "5781900e-36a6-4fef-8beb-bb1de15d33c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f841810-0461-4369-b3d9-87d88c5de660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f76e442-2b16-40fa-80cf-c02bfcca6bb8",
        "cursor": {
          "ref": "d85fc6f4-035f-4340-883a-79562f4a4381",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2d33c60b-88a0-40b5-986d-ba8fb466493c"
        },
        "item": {
          "id": "4f76e442-2b16-40fa-80cf-c02bfcca6bb8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c95922cd-ac6b-4686-9cd3-1bb1d69a7013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99dbb44-8704-47ca-8bf6-e9cfa2e56706",
        "cursor": {
          "ref": "1235d92b-effa-41f1-8e32-d740e27eae9a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6fb9eb0a-b9b6-429f-9d61-af7dc512fef0"
        },
        "item": {
          "id": "a99dbb44-8704-47ca-8bf6-e9cfa2e56706",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "587e8c88-0b63-4888-ba5d-38947a15accd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d89d8e6-1755-4a8e-a2a4-65395927e0ce",
        "cursor": {
          "ref": "9735b1c5-baa8-4c43-b94a-270a2f122984",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4cbff99f-70d6-404b-aa7b-b98b871ef6da"
        },
        "item": {
          "id": "3d89d8e6-1755-4a8e-a2a4-65395927e0ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0b090c67-6d61-4955-8a72-42b64edd0bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e569c570-2d28-4512-9d23-62452dd4a114",
        "cursor": {
          "ref": "db40ab2a-cceb-4453-baa7-028e4b7aa5bf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d2afd6c8-c8e7-4e3d-a15d-8f62f9834a1e"
        },
        "item": {
          "id": "e569c570-2d28-4512-9d23-62452dd4a114",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c02b4050-65c9-4d47-ae69-104287671e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65de6f54-ba27-4679-8de6-3f502f12067e",
        "cursor": {
          "ref": "5ddbb581-f4c7-4e5e-8ac2-def9017b0615",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bde54236-46a5-40ed-bd2c-a8317c7b66a7"
        },
        "item": {
          "id": "65de6f54-ba27-4679-8de6-3f502f12067e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9c76a2ec-3925-4ff9-a891-203fb6db7d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36341bac-374f-420b-b26a-612ff3e6a920",
        "cursor": {
          "ref": "f835402c-28be-4e5d-b424-bddb8ab7e0b2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0b5038ae-dabf-4048-abf8-9601d5e2c314"
        },
        "item": {
          "id": "36341bac-374f-420b-b26a-612ff3e6a920",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a765d783-33cf-479e-934a-fb6b94078ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2a9ca1-fa43-4742-bdb6-012620bb273f",
        "cursor": {
          "ref": "715cf702-9eb9-4185-b1dc-5505606d7a6d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a7565745-808a-424e-9834-eb483414d84f"
        },
        "item": {
          "id": "0f2a9ca1-fa43-4742-bdb6-012620bb273f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c13b52aa-7911-4507-a7e1-0a0545164290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ccdd2f-8b3e-4e4d-b2ec-b9533ad2f991",
        "cursor": {
          "ref": "c207652c-4210-41e6-8977-e91f6adcdb5d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1855b298-e3f7-4610-98b8-c4a3e44e3051"
        },
        "item": {
          "id": "33ccdd2f-8b3e-4e4d-b2ec-b9533ad2f991",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "05369e79-faaf-435b-a46c-2588c7fa2f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e441d6a3-1bd3-428d-bd34-02df42837e6c",
        "cursor": {
          "ref": "a6e41f18-78b4-4967-ab75-9a51f3a33ae4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1b4e0db7-d43b-4fce-8260-48dcad976e7e"
        },
        "item": {
          "id": "e441d6a3-1bd3-428d-bd34-02df42837e6c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "316e1fe6-fb1c-43c8-987e-a4933a59a7d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c77f35-a886-4b35-97e8-426bbd0522bf",
        "cursor": {
          "ref": "b2cf7871-ee03-4ef8-8e00-87ed9ecd0c65",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c02f65b4-20f8-4785-9c2f-61f12ec1b7ae"
        },
        "item": {
          "id": "13c77f35-a886-4b35-97e8-426bbd0522bf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c984c195-35bb-40d7-91a9-54519d4e711d",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4653687-4f17-4fae-aa08-6684bb797915",
        "cursor": {
          "ref": "93fb47a2-a118-4fd5-bf06-f1ae21d1c4c8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88992576-b861-43fe-b3ed-5cbcfd97b41f"
        },
        "item": {
          "id": "d4653687-4f17-4fae-aa08-6684bb797915",
          "name": "credentials_verify"
        },
        "response": {
          "id": "440a3b1f-329d-466e-84d2-67084caee970",
          "status": "OK",
          "code": 200,
          "responseTime": 2097,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b35ba0-ebdb-491c-b418-9df7e33c6f4d",
        "cursor": {
          "ref": "0fb36fe3-d9e7-45f4-bd03-cb1e8b86f0f2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5aed301f-d2e1-4a8e-bf8c-53ff76fdcc7a"
        },
        "item": {
          "id": "91b35ba0-ebdb-491c-b418-9df7e33c6f4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9f1cf58-6ddf-40a7-9490-88777bffa55f",
          "status": "OK",
          "code": 200,
          "responseTime": 2940,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89cd55-022b-4601-a626-cbf32c2beb12",
        "cursor": {
          "ref": "0add2346-6c4e-47ed-bab6-6b626a753047",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee125a38-5a5b-4fdc-87eb-a658a3ab03f6"
        },
        "item": {
          "id": "ed89cd55-022b-4601-a626-cbf32c2beb12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73446979-98e1-4f4c-92d9-7cbda3486a45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89cd55-022b-4601-a626-cbf32c2beb12",
        "cursor": {
          "ref": "0add2346-6c4e-47ed-bab6-6b626a753047",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee125a38-5a5b-4fdc-87eb-a658a3ab03f6"
        },
        "item": {
          "id": "ed89cd55-022b-4601-a626-cbf32c2beb12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73446979-98e1-4f4c-92d9-7cbda3486a45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04575099-645c-4bb3-872f-87fbd3276f1c",
        "cursor": {
          "ref": "fd134e06-07dd-4481-aad1-48a088cca189",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "91733af1-2201-413c-bcea-0fb0156e099f"
        },
        "item": {
          "id": "04575099-645c-4bb3-872f-87fbd3276f1c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d314f246-3955-4f61-93ff-395bc1b5579f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe4e0c3-85bf-4d50-b95e-16afbc4fd668",
        "cursor": {
          "ref": "527030ba-f904-4f89-9b97-85149ef5f8d3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1599ea73-c7f2-4610-a984-651d16a20245"
        },
        "item": {
          "id": "afe4e0c3-85bf-4d50-b95e-16afbc4fd668",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7fe08453-1d42-4cb8-a07d-16fd3b8ca049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}