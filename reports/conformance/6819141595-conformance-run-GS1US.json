{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92acb509-c811-490b-96b1-2717407e8284",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45af66af-bde3-4306-8ca9-6b0c636607f8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "386158cd-32ca-41c2-947a-0e480100a0a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5fc3a0a4-3520-4fcb-9d56-09fab5103195"
                }
              }
            ]
          },
          {
            "id": "e3274ddb-f4c6-46c6-be00-79f1ff778e0e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2e1ace4-0458-43ee-ba0b-1918084bb0f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "60b4b625-6b8d-465e-b883-f5057d73bce0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "acb1cbc6-c993-40de-9e65-a29111306804",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fb857581-277c-4405-8f60-4c62c23a40cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a87e5bf1-7a3f-4571-9162-ea8557becd6c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad5ec056-48d3-4ff5-940f-4bd2f9f9776e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9b6020a-5ca1-4138-8550-9296c60ed444"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07c26423-01aa-4a50-bf9a-c5437b35b189",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb82c4bf-616c-4cfb-ab39-4500dd5f0067"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b11b391-771e-4776-9b67-27dfa7afe1e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08868658-3212-46bf-bf5b-65835481aaa9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "254c2854-ecd2-46ef-8cef-361afc29307b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7a792734-b7f1-4d4d-b9bc-d0ab40853ec3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5d5e741-8d5b-4546-8d7d-0ecac80b7f89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7ea3418-84ce-45fc-b3c2-4d193d23de6d"
            }
          }
        ]
      },
      {
        "id": "58624b31-833c-40dd-9199-4be1f26d717f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "93b9906b-b2cc-4de5-b896-e7886c861e39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae395e31-1fd2-4767-8a96-c962ce480564",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3db20d98-655a-445a-b8db-8587b389511b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b600ed-581e-4d76-9833-bdb31e11de3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d95630-49c6-4102-a9d8-d53b30a04ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23034cc1-b2a3-4098-aa06-5480a5e19ae6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465aae31-633c-4886-adf6-b689d858fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cfcb5cd-3325-409d-89da-bf1481deec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b116c0-a79d-42b5-9e22-f503bf7231df",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95cc938-d3bf-482c-9d45-fc2efe802c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "718e9a8a-bae5-442f-86a0-a79482306113"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f70c9e0f-0a22-4b36-af99-0c1df7692547",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fbd377a-75c6-45ed-8c7e-501fad3fda54",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea9336b-c0a9-4130-8d96-aa18340975ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5aa2f346-f234-4b67-984a-33f0f32bde81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285e7bdf-9c90-40b6-977a-51954e748263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c69770-b937-4755-9134-c03e33fcfb90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0dd0a780-f081-456f-8ddf-cfee0134512c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cc3f826-7657-4e5c-8611-757ecb7b2071",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba4f930f-b994-4802-b21d-2921bd1b4cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33de3ba8-2655-47db-90c9-904c7b44cee4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5152cdf8-3003-4526-8beb-fc0f746b73bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6b2f6a21-0d5f-4d6b-b51b-52f72f8b23f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7166aed6-a632-4941-ab13-51737770253a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42b55246-7e47-4048-9454-580d67fa94dc"
            }
          }
        ]
      },
      {
        "id": "ba1ac530-1825-464f-9149-d10612e16218",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37d99ad5-eec8-4e31-a528-f389675f8f43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2df14212-5a07-4dbc-bb70-62ca99687d2e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8db7217f-4448-4773-9b24-f119e54f043d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6c0855-547f-430e-b720-2c09470f948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdaa6cd-cc30-4b7d-a4b9-13a7f93d1f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0291e1a-f6d1-4ca2-89f2-024c2b79647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71684444-8e0a-4f64-b520-43dd5e4e216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afe15b1-5028-4a6f-af15-58326f360f44",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b4a773-e543-4fbb-b5aa-21922f3e5c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccef557f-f86c-4232-b238-1c923bdc5187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f47c2eb-0e28-41a2-b83b-a33d3f69f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d98159-ad84-4b1b-b4e5-c52cf90c3f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdad9a94-f214-41f2-a36f-c35ac70fcc66",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9ea44a-77c9-4dab-ad7d-25beae6690cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abff858c-00ca-4bbc-9bd2-c583da5a3f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c497e48-e07e-4d1f-9da3-ba73322bbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54890124-2b67-410c-84a6-62f9b2af1db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e703e475-bd7a-4364-8ae0-bd16cdfb0890",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2bc0b5-3373-4560-aef7-c9b940acb53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2644db-7552-4c91-83d9-dddea384376a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0555c7-63bf-4787-afed-28917e3b44ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e0d494d-7d43-4779-9dda-0b95890dd0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eea645-8a2f-464c-8385-e2f1ccc0904d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdbc48b-7cac-4165-983d-c6bd5da0a593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a223c8-bee2-4224-91c9-b9b4eb8275fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e006f-9e27-4c83-9dde-8dbd4ea49b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54cb0a7a-5737-42d2-903d-189b4c02682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b46160-fa25-43e7-b85d-9e783755a7e5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a657941-afac-4d95-910c-8a18f8e436cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664261d4-961f-4841-a538-9ed34b17c2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979fc00-e201-4301-82a0-6779211ecc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "695718ab-d0d1-4f1e-8044-bb364be44b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b936e0-07ec-43df-ad59-bdf16b32a9c5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548c981d-de15-45c2-bef4-720e688794f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd5000e-4250-41af-844b-945917ba1b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190f6562-84b8-4cc9-9c1b-1a1594ab3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac181ce-0976-4ce1-8660-ac85378117e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44431cd7-2c7c-464c-893b-4833627562e4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd9d07d-94fe-499e-a8af-effc4d25dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9996e522-0248-432a-ae71-32ad6a78a352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdd9379-0445-49c4-b675-47130d10a250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0c7a348-924d-43eb-bcce-2cdca034d462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f967cca5-69c3-4ef2-90d0-616bdf93b955",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7151a8-9a98-420b-9ce2-a1d7b4e5abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0303bf16-6e5e-4027-ae53-168597623f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a757c3-d35a-4744-b5a0-743844d619aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d996b62b-9067-46b6-8068-ff3d5b13d97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c9b83f-9a37-4ca6-8b6b-fea523e7e231",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d3b94d-6dcc-4658-8903-d7bf73a97632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd213c7-a91f-445a-8979-aec6a3282fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349595e8-523b-4471-b8bb-735edfcf4773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557ea6a8-728c-4f06-b495-e037d00bf639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397e028e-f35e-457d-9fa6-53e436c1b1c3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86bd3a0-6378-41d8-b785-552c70aba6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb970f9d-31bd-4c10-a042-f7fec1833479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb345ea6-3f66-4618-a06f-4508db356bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c418983-90e7-4b4b-8309-80a14bb3114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e911a843-fddf-4762-9786-ec4f7c32c38a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ced516-8a19-458f-be88-1d2919a5b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19114e84-1074-45ca-964c-8ad244754a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a64086-be08-4d7c-9624-c7225982cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dd12414-d612-4b39-95e4-ad05e89229af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9d3d99-3f68-4be7-a69c-911da719cca8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9456f6-daa8-49fd-bcb8-39aa83b60aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049a2995-4ecf-4f14-a226-870d03fbcfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a5853d-414b-4bbe-8593-90a9db674f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69231020-62ce-4a6a-a2a7-7de416f5a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139d484e-8741-4796-8796-a83b3f95a300",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d399f8-9e1e-4fae-98af-6ff0219cdacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ed886c-0bbf-4a70-a653-a2d3d6a44a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d4eaf7-749e-452a-ab14-9c585a2e2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b1f03c-c5f9-4180-abd2-8dae71738fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a038b630-aaa9-4137-b346-b2c5e9df61ca",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f158f16-591b-4eb6-9553-f0d123eabeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c250497-6b57-4b25-bf39-f2851886bcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa92644-bac4-45bb-83c3-457dbbf32ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b581d8d-3287-4021-99ab-b50fb57abd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51bc40e-aac7-4cd5-816f-6fb28d42378a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6f16f-c2f4-454d-ac2b-78ba22cc8c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7958698a-08c4-4858-9f87-3393463b5645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7107d2e8-10e7-4212-a1da-aba8721e23c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b764a4-9dfd-47a2-9537-4ad919dac96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c672af0c-e0a6-4c15-b8bf-a5f25a8f7c8c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991ca0d1-1b7d-45ec-9802-e791e4df0a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab9227e-d25c-463c-abad-a8ef89dad7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cad3f19-d90a-400c-ab8e-1d5f97897044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c33d1d4-acdf-46f0-a35b-62e72eac4845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae1072-d5da-4111-a580-55f1b922fd38",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e26a6f8-24ed-422d-a6b1-2c836eef6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2643fc94-aa3b-423d-943b-3fdfcdbbcee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7ee03-071f-42c3-ba0e-05c483bf8247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2480cf36-754c-458e-b008-7b38fabb33f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0a456a-b43e-4987-876d-38a9393acf10",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6df8f2-8bbf-4ee5-8fc7-773231056b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ae88a3-35c5-42ac-8d9a-67d2a18f5046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7d9967-c4b6-479f-9fcd-e73f09191a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4844422c-d3c6-4a72-9aea-ae3ee4325cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c447e13-4e30-44c3-806b-c589151da581",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c219fe51-1dfd-4fe8-b11a-392749fa2087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56448756-8aec-4349-ac0b-33f0a3d0d2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9429fd5f-6860-43c2-a8e2-2b816dd8e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "181762ad-14cb-4d75-a1e6-54cd3cb28bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720a6e08-899b-400b-b2b5-25101646c053",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3813743a-9a8f-49d4-90e6-35bdc564d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5a9849-ecc0-43f5-95ed-69fc0ba62299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248a964b-ffc6-4ed7-9367-fbbbfb6f7228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d088202-4dd8-4820-b74f-527e89153604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd4d26-d079-4ba5-86c7-1d4823945297",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cf5e08-4b2b-4bdc-aa75-c5308e3c0ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c04421-2532-4d88-a3dc-96ea9f2c3d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c5c870-dc68-470f-9ba4-b106d2656382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e71281ab-3179-49a2-b442-9c66b7404330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82728ba0-0e89-455f-a40e-073b8e3b060d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d99ed28-f7c0-4a8e-9da4-4e5b84c015fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5ec00b-88e4-479b-87f4-9ec4e930d699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02fa8d7-c71d-4af4-b0d1-dbf44868c74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5928efd0-35d1-4980-9f24-0a89076990a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1fdbdd-66ac-42f7-8914-03a9a6f0347a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cae9f52-c408-47ff-b82f-2ee055ab3350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dfd0b5-5d03-4c92-a53a-e070de005955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe369dfb-5059-4955-a2c0-cdb40e844d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eca54ed-ca54-4dd7-9ab9-eb7b6d00b5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9902185c-2f33-4c1e-9099-99979ff7e579",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e6a783-a7f9-4819-8566-a5f5890c498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ad367c-b139-40f7-897f-e7963a57f191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0debe917-0202-4f9e-ae44-cc14fd0bf3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b1e89f-fece-45ed-b0dd-c8824d402056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cca9e-a896-4f28-b921-f1b099a4eccd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4578eee-cb7b-4718-8599-9dbbbd0cff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88afaeb7-476d-4b16-99cb-e68a9313a486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be0f20-fe31-4c70-99c8-d4d881bab4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9851111-b002-4f8b-a7cf-43db630233ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242a5b19-12f2-4dcd-8749-80a631f50e04",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d4b638-0443-4b7f-822c-8a5620401f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56521d1d-b59c-441a-86cc-6007b0e487dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f674cb4-1a79-4e11-b190-6a0eda7aefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee847fb0-3388-4cfa-84e2-dc6bd412fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484a6ec-01ef-4d03-ad96-962e5634583f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62d17ec-1845-42dc-90f1-7c26347edafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705d48d1-eb56-4ef7-9f18-3e6fbc37604b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68835aba-615b-41b6-b119-a2cdbe798581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c25be4-ef56-4798-a182-d366080769c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f0b19d-81ce-494c-8cd2-712cfcd96903",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8451d2-bfb2-4c4c-914c-56b81e20f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3897e2a-10ab-4475-b9e5-613e93dc1a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f6b9b9-2aad-4482-a931-945ea802edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf1ada3-0572-43a4-a411-ee1dd2abaf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3e5a48-42c4-41fd-b935-37873fefd130",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f1f483-08e6-45ea-9300-0e22ef00b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0823d6ea-6f6a-4b44-a7a7-e1fd1b53b089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b67460-3b5f-4f67-a8ae-5b9235b9039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf71784-44cf-4b9a-a320-712071a1ddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e35bbb2-e53e-4ab8-8284-36a907b44a3b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d2abb2-d2f9-4f60-bddd-53b1655fd050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9134608-5507-44a1-9e17-3ee2e16cb68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2496320b-78ac-4608-98bf-b853dba2401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e49fdd-c52e-4a6b-946e-87285388d3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ffd380-0672-4095-aeec-ab267a253ea7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ba521c-bb62-46b4-a05b-8976e232c325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f65e15a-a4e8-40a2-8d2d-667feab21d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27e176-f77b-4709-a3bd-725e9295c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e74e718-57a0-44d5-9d4e-370bbcb38b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd34635-35ed-4b0d-940d-9384869e8ecd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e12cdd-69da-478b-8a60-0d8d1873eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62afc15-1c9e-467d-9be6-8859c8c9bdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fb6b92-b6f3-45e8-9a04-cee07527e096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dacc896-92d9-4f31-9bd1-88ad1e074901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a442fe-daae-4ce8-9235-41d26283810b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c595aad5-6bc2-4bb6-9255-deebc415fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d079d3ea-3a05-4f8e-9f9d-24e5908e3df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451bcb8c-d92c-42f7-937f-db0e55cda17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06821e38-be17-4ce2-8de3-201a555af925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccbb9ca-4932-48c6-a65d-107b1411ea49",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8979cfd8-82fb-4c9a-ad93-deb8677b9bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011e8f1e-45f5-4728-be7b-90b383356d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707b5a14-6dce-4cc5-aebd-2feaa306895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e152bd5a-294e-4b55-abfa-4cfaa8cafeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089a762-1407-4ae3-969b-bd9ba5808b8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124759d3-6e7b-44c4-b9e1-81031c4cac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad3c0e57-452c-4b82-9865-342f2bac4443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4ce739-cfe9-49e0-93cd-2d891cc8508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86360280-20fe-41da-8ce9-f310ba6edd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b0cc25-2524-48b7-8c0a-6931f209d326",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c329a91f-ec1e-4d31-859b-b7d1a7cae0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92207568-572d-455f-8ff5-9e69f8ea7236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d0194b-34b9-435a-87c5-3dafc24a4e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c77bf3-91d3-4ab6-b679-1d021e02164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090247a3-2af1-4b98-89d5-e2a5afda8432",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cadf31-46e2-4b98-9190-be3632761fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326cd10d-4b3f-47b8-ad3a-f2e5f4b15f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636c399b-a056-4855-8060-729c40222cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aee8e88-8856-41f0-8fbc-5075cae05ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b51d63d-7378-4b5d-9004-f6209b548272",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea2db9f-1eb0-4e34-86db-e02b6d1e90d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38eeeb68-3827-4bcb-a583-d4f5fa245e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1481b-2ef7-4587-90db-4e7cf95c44bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dadfe1dc-f2c7-4ac3-93bd-41e69ca78109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5eb719-7293-4432-9e01-65d1d01c70c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d7cfcb-4d97-4f25-b974-4b3eea47518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffcf411-1478-4aa7-8279-f3e4173e14ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac3b02a-5275-431e-bbc8-09966e6afc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05307a57-8511-4881-88a5-924aaaf7e504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fea7f0-ba87-4262-896b-7ad939a5afbe",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46009e8-2bb8-47dd-a1f7-d5443e9dbaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4774a4f7-c3c1-4398-971a-1a325076a0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe7a97b-dc78-40cb-98a7-c36558190577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1be7db75-4f31-46e6-a6d6-08375293e09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e728796-a2fe-4829-8eb7-fc2518854284",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0452cde0-366b-40b0-b9e1-ce8da39a58c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53c3719-a5ea-4c74-914d-bfcba823fd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4722cc73-8226-4d23-94d2-fe4827b5d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08e3d967-9fa9-4503-8393-94045eba2990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e6aac6-88a8-4d20-9213-b79af735b7fd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d41b05-e8ae-4747-8934-ae423a564d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ad25e3-1c44-47fb-b809-9c1e5aecf99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836fe6d-be54-4171-b2b1-31a35361705e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9000b659-291b-4fab-bae6-07707dbb12d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73ce8c2-cfc2-4a20-881f-4ee1ce46a68d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edf2056-c2da-4d88-bf20-fe9feea3e354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91efec7-b164-407e-92ef-d8acd14ad86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248a2af1-3bce-4616-a071-ecf7c4df8b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae86c9a-5472-4638-a19e-de00f885bed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bec96b8-0ecd-43c9-a4e4-99cd05fe0ab2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb8cb4-0092-4366-90db-473585f6f20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b22937-4dac-4ea1-bbe6-a2fb66b396b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc4cac5-f518-46a2-b3be-553162955153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2120dc91-2b7d-4966-a28d-20fb2ad0aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e725970-4d5a-4b03-8f15-971e3c0ef8da",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec019d-d200-4ed7-993c-d93ba2d949e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5935f882-af4f-45a5-b7cb-879ebd489565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc7a2b6-5a19-4036-8a1e-b79573cf50a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53f8722-cc46-4dc0-9cce-f0ebaf367cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b96e93-611b-46fc-9f60-2468dc3b6e98",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b11c472-f7e5-49a3-ae6f-083ed916bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118b9b59-7c7e-4309-9205-e0b347020ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c85039b-ecc7-4f4a-b5a5-b39ad119d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f27d726-6828-4d9d-9b6d-715912e90bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4572486-a1df-4760-8f41-8719552b6d07",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038637b4-1fa5-44cd-89e5-c86debacce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e499c2-c17d-4f4b-a875-4213e5fb476b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4b167d-f3cd-48da-b86a-64759c1f83b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1030f1a9-1529-4488-b98a-7ba49e4a75cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4cd56b-fd07-4f8e-9ac4-10eeb54165b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4108f645-de2a-4b67-95a1-ad8767834de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa018f2-3b29-429a-82fd-12a9a0f5d683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86455665-1415-4dfe-807c-4054c520123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9301f07f-5ffc-489e-91ad-21ebd845e6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3210890-41e7-4a8b-baf2-2b8a8a673609",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae3dc3-8d3d-4a32-8b18-b3820ccf674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ff83fa-1f81-42e3-9f52-fe2d4c13e86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174fdb96-75f6-4ac7-b193-3c9051260254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a85c39-0af1-48fb-85fb-6e9f42fb9857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911f4e9f-41fb-4148-b47e-e5672a2d6693",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe9cd26-ba7b-425d-8a77-cf1b603d2697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6007d496-2e23-4e64-a761-4534078e6307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128588e-e1b5-44ca-a5f7-da5c6fcaa9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2d770c-2379-4d8a-aa8f-b3539d2b4353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eae7a7-d25e-4012-be41-8b7bfb5e501f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7765aee9-7a48-4322-a557-dab21b29eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac07714c-b0aa-47b4-abff-a7ef2b3d4f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1fc1d5-22ed-441f-a0c9-3f6796cfad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5b6893-971e-41ba-b494-b1be2272bf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7e1bdd-d348-4b89-b93f-1124fbe19e35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cca43ca-86e1-4dde-b6ea-bfebdd3958b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4943bc98-9e03-4fcb-8137-29131a6575c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41883f13-7a58-4d02-8f71-ae6fd3450623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55fc9dd9-4eb7-4684-a09a-f031ad610085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ba9809-70da-4dab-8c6f-e13cc3285688",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9324bbd0-ce8d-4d49-a4ff-3e145861a076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b694954-a7fd-468c-962e-d512010848ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2318bf-0154-456a-ac93-d4951290f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7b9c1b-18d6-4526-8d58-9678abfcca9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2054592-73e9-420b-bc37-51851f01b59c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b316cb3-849e-4b74-8ed4-bea1ebbe8b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e1001c-ca38-4d7f-b07a-b5c0f30a6b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8bbad8-a1c6-4fcc-86ed-59c364fcfaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f215c6cf-7442-4417-9801-30223f57f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ddd946-3b47-45cd-a07b-c734136cb813",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9f59e1-c0a6-467f-865c-dbca2416089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded99482-19de-471c-8b46-bbd247960ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01e7a81-ea9c-4e9e-9161-1bb544910235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "41474a13-4dfc-40f1-b6b3-4ef49c30778d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254d7c41-78ab-4bc9-b3a7-be4b4d3c21da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5b42e-67e4-48f9-9145-2c16e8c2b4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541c7de2-934a-46a9-b994-d8857f7c660c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463652b9-0d38-48a4-9367-bed96785b90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa312071-7b6e-4739-ab8d-066f9b337fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95a5747-3230-4390-8e61-b61bff5ea370",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b9597-70d2-41f6-8734-07d5ec3295ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075d5e8b-b84b-4ff2-b702-a1fb74e511af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310400bc-5885-4b20-a874-77815d698a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e6aa61-a6a3-4d18-bf67-f5750308e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed14eb7-1110-4572-93e4-8a9e7bb51f3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e8d08d-15ce-4f6e-a01f-ddcade77982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde0127c-f254-498e-a979-622dabfa277d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b63e0b-e344-4e5a-b7c6-207a6cd0bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaa26c4-fa06-438e-9666-50d8e1e0d2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89feb7c2-91e2-49b0-a798-4d96a862d3e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867bd83f-cbcf-45df-abf0-8b93c929422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d971318-05ac-41f1-b59b-f2aa2e77a864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ee7935-9ace-4780-985a-1bbc8939b9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66376449-9af5-48b1-a398-c0209adff73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f1991-3121-4ab4-8f06-5ce823354ffb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aa898f-db73-418d-8525-6ffb74946753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24ded85-a63d-4ac8-b9f5-bee0b6ff8552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150bbdd8-7c98-4396-8f1f-e99aa51b0f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06e9067-d647-4037-ab67-502ac9c1e9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1634e2-56dd-4acb-89f4-ba60c454d244",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7217669d-baa2-4144-b8f9-577beeced761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98063eba-9a31-456e-882f-23459240cd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55345bdb-4f42-46f9-974d-de47bf8b7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6caf2ab-1deb-47ca-a430-d7f1b048f972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da63c3bd-49b2-4cf8-b71b-c5ec9e01ad14",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f143f25-0052-46b4-8f26-3e7efce0163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2c6a22-0d76-4fe9-b57f-4e50c80fed56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc55937-b89d-4db7-bd9e-e9ae456a685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79853eb-5ec8-4bfd-8f6d-61c83b194fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0892d1b-0e4a-43ed-b743-7de0eb8cdf4f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbd2843-d0b3-4939-b113-0c86535a8364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d796c-b4d8-44b9-a457-f3d5b3ea4d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf5e491-5532-49cd-a2ba-81c27648576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20a2536-d59d-47a3-b074-14f44876a2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee077be0-3d71-47e5-b457-e74ed1d39bb9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218bfac4-07ee-4b72-803e-362c690c75a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d483e364-7c5e-4702-b5ed-cc6efd5a6c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339dbb44-29bf-4199-a7bb-88922d2578a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f9d150-0018-48aa-b5f4-45c2286fe51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722c0772-78f8-4043-b4da-d94ea5e65eea",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9589b1af-41a3-4eb7-af21-926f02d11059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5be4ff4-d653-4b23-b515-acf12a5b988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fbdb5b-6f24-406a-afe0-f75d92f7c650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5b2bcd-89c1-4162-ae9d-4f94bec07058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52ef9ca-fdcb-4c3c-92ed-a9093dcf095e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821ab280-b762-40f8-b6bc-0323062c242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0e3c1d-8dd3-4650-ae5d-388fbd551533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28074f2f-bdda-4ede-a434-7cdf4e0703f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfc82a8-750b-437a-9bd1-0fdc6ba1e8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87717ec5-626f-4fd3-af51-088e246f124c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0454907-1ab5-4903-87ea-aafb3cd0cf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392010e8-ddfc-4047-b0fa-bb7af5b248da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567375f9-8189-48d7-9432-f81a7549ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b0d4c5-3160-468b-844c-ca3c6a8fa103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598d0cfd-0d66-44b0-bc88-39135e93d08f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb107e2-aed5-4844-b1d7-11b29444c49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c07a3e-e7aa-49a3-81ca-e887d715722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d1e6f-9da5-441d-a2b2-ebdaf9dc0b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0943b3f3-0823-4037-8d6b-9fdcaab4804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc472d-e23c-4d65-a421-132ca56a36e4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aa580b-f1f7-4470-b6a7-1cbdb6d5ea88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc95c61-2d3e-45f8-b64d-9085a2a5d6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcce0e0-6e16-4206-81c0-bbaa5f1fa879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9ae974-a347-4bc0-b8d3-6a7cc6748fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48f198-2525-417c-8e36-132d50a347a8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7bb847-38fc-472a-8cdf-e17421a27d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7fbd27-268f-46a5-9733-3ef969d0a61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca9597-e61d-491f-8cf9-aa040f534013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca175d46-d793-4edc-a613-6773f0fbb12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ba76ee-3ced-4f9b-a048-eb50cb66ce66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f5e514-17fe-498d-9e98-0aa4478f079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7adc590-e6ad-4e84-8673-6eaf5829d235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d415f3-1f25-4c64-9b40-be1d5e0f8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d9dc87-dd76-4479-9ce8-2d9de6712ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4377915c-1682-43fa-91f2-bfe53c295256",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff1d83-c3c0-42a3-9d79-b3fa18c4d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1d0015-521c-40ec-af97-0f29cff89416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d4cc72-927b-4af5-83a6-761e1a289382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b12395e-21d8-4932-a359-a0a3068da67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d8923e-52b1-41ab-9251-b37c0078966b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b751d549-f8de-4c21-9aa2-d59bf07b13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555a57bb-cb8f-4b1e-a906-773ffba6cef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2dff7b-53ea-4854-8e90-1dd61cad864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07c7c9b0-90dd-452a-b9c5-8199978aec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b0abf2-139b-4055-957e-f367a463f761",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bd98ab-80b2-48c8-85b1-aafbf73fbe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef3751c-bc53-4fc9-aa6d-ccb9cd7db4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9754d77b-dc9d-4897-ac0f-e93d9b16be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8c0c8c-6591-4360-b6c7-c6fc01b49216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6b9478-af1e-41af-8c17-7f4b7fcf4b8a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d7225f-c59b-4816-b996-5b9af107adcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3c5596-d591-4400-8e82-25bf7a8ef5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4225bf-a529-4666-95f2-8f3691becebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58798782-bc25-4245-9a68-9f2a0df468a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd829ee0-be7e-4b1f-a976-28ddb6d20f77",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf14db62-11a9-4f36-bbc8-e15caefd83b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d47f221-d845-41ac-9c10-73a1c072a8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c47c4c-5aee-4c63-b0b8-eef2c03c9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa36733-e684-40b1-88b9-a90eace8aff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7694f64c-4f07-4642-bf76-8540332e9275",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc55f60-21f7-49df-88d3-3b6d6693d21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1f7594-7f56-4e0e-9c39-6a8504263ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b4ecf9-a215-4cc2-8050-ae9e527de2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76715d5f-9ebd-464e-be21-e8a41c6d8ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f515eb34-4374-4f1b-b6ac-7dc19d3af68b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc5ab89-e5df-434d-8a18-41d447056ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d273681-1ea5-44d4-a498-e755cc1bb1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbefff3c-44f4-4bb4-be4a-2a060c80035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "314318e1-e096-4883-80dc-f1d9de1a9bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6db53f-7cfb-4232-afbd-c87a66761e2b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e982d5b1-dc25-4aae-8085-cd18b1c954af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20ea76d-d043-4fa6-ac2f-422de587e1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45fd29e-01ca-4feb-833d-f221b44f6d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31030693-2d8d-4326-ab69-141c0a538be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e97ffd6-8511-4320-8825-b800b32807d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63896fd-9629-40d7-a6e9-4f1a7c0d7d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253cb5eb-7cdf-43e6-9916-e54896811051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8689b8-88ca-485d-a472-c86cca8f9e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35601ca4-fb40-4629-92aa-553b619a16f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11c3c13-f39d-4b50-83ee-1bdb7fd530a8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b65a13a-bc02-4333-bc4d-6623a8379cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae42b9db-f3db-4359-b91b-7fafc1574ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab6196c-8f62-442e-ba2f-031edd0f32a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d51ecb-a746-479b-8f22-bda38779b834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef69fa5-4eae-4329-bd21-d47cd2358956",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d1337-19f6-4cc6-b654-32f3800f0b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc830421-95aa-4454-b70f-31bfc9830aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f315c3c1-1e33-481a-bed2-185921ce4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bad213c-ede3-427a-a608-511e4cb923eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095bb81a-109c-4684-b43e-f85eb737ccce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea495a3-fd5f-432b-b90a-49dbe7039c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11c4f4d-4315-4b3a-bad5-198b430750d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1218503-52d8-474c-93f2-78f120f26163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084e310c-419d-471f-9227-f0ec66652437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4c1e6e-0ba1-4c20-a6df-fa80e4a7dcff",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f677650c-d8b1-4ff6-922a-2db48b4f7aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb2fe6d-aae1-46f8-a788-21bbd2a19b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b84cdf-f68c-4598-a916-17eabd92b201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d69d0eb-6885-4cb3-bb45-e751e164b653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98417724-c1a9-455f-b48c-16ecba273384",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594f89b-21e7-4261-a848-d22a7c5abd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e364687d-34c7-45d6-bd71-282741ab3057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf72016-d7e3-41fa-89d1-565402af0398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdc781b-767a-40f6-826a-8bfd756efda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c6a80b-dfc9-441f-a649-7794a4606492",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa0276-3ee9-401e-9dde-517c6481a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0549abf-23b9-4d8d-82a4-aa3f7120eaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bab964-6284-4fb1-ba3f-dd1cd90e6599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d1e73d-4507-4328-bf92-1188ea43d6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e84972-ebc1-4540-a95f-50ba8de335a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b8bf1f-685f-4d35-84ea-f509442eb3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054bc01f-dce5-464b-9a91-9180a6ce0f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10450862-63e8-482b-b8fa-a5ccbf8add0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b02db1cc-8122-4fc3-8b9d-20ac5f1b5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1803ca08-fb20-4d02-8700-18a5c7e2b6bd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7668d-4677-4f4b-8699-1ea3a90e2ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205069c0-bd89-447b-85a0-ca5dbdf7f3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f0b3b-21a4-4c7e-aeb2-a962b924c697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f66d7e-2f2e-4c7b-8b2e-1708bbd58846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7ce3d1-8f3b-4391-a4ce-8da2edd78ac7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759fef29-6d72-4c83-99e0-7ce1739805a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5830e827-b60a-4a62-a29a-02c6863c774b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc109ed-ab16-48de-b31d-11a244f0056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51e9d57c-502f-4da9-8b3f-40ad117102ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a625d26-cbfd-41ad-a139-10cb79df6aca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de4e530-13e1-4854-bbc5-393f41d1be35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c6e82e-4cda-4667-a72e-ada61dfe3bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c646b5-2254-4bba-be54-f9b4f0724165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f42df8-a8a6-4d69-820e-11bddbed4b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2200b7-650d-447a-90a7-4bea04e76cd5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e66c0-e9af-4db2-9550-621407bf9d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a49ce840-3d16-456e-8b0c-e8b2b7f2a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910b8758-dc09-438e-aafd-c50d800369fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "098dca68-df47-4cbe-9e5d-a7b4f722282f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17f4f30d-25d6-4ee9-8ac7-05521f62a8f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ebcb619-138d-4721-9a99-9f30d6455fbe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be124c-39ba-478d-bf6a-2747cd259969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43618117-cfab-4267-9c5a-b56eebbf178e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf6240-5c37-444d-a6d6-02f4f7974d6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf20be8-108d-413e-a705-044c8a16d1b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf0c643d-00fb-478e-98b1-f0030d7faf32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7699fa9-e68b-48ee-946e-c6c63130dbc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa8dcc0-4340-4ad1-8e6c-a094bc624123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a55e2f33-d289-4733-828e-fcc30fce76cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8f89511-3b13-4288-a0d8-447b792c0ee0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "480c22d6-9689-4cc4-a701-8386656a246d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aafb07f9-ed70-43c0-a75c-2b7ac730b0fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6916e0a2-c511-460c-b616-9e4d637a59d7"
                }
              }
            ]
          },
          {
            "id": "d86fb6a8-b525-4cb5-a4a1-fcea37d7caf1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4727709-c919-4979-8eab-f2a6e3042bd8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "70ecacac-a1d6-48b8-85ca-18a95e3eb70b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1b7b0-5827-4fd3-bc85-500eba76a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "968730a5-0355-48bc-bf66-1bd77539178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd6e7ed-a41a-49e6-ac64-a2b57cf5f37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54db1f78-dc76-46e7-873d-86099bcf8bfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "986c7baa-6b1f-4271-9567-b2b767c2e05b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5419112a-71f8-453c-9352-57c0c21ee563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa3e6679-c4dd-4580-9d4f-c8e47307ce8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ba1b17b-384c-4664-8d96-4096b5704767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e48a2bd6-58de-442f-b4d3-f2596a6e17fe"
                    }
                  }
                ]
              },
              {
                "id": "cc3942d3-9943-4ce3-be2d-d13d4ac54bca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1648fae-bbc9-4102-96d0-5c7a97379dc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bce80b88-6035-448c-bcaa-de1cc3cad162"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caadd891-0168-4ed4-97a6-1f48b19fc62d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20bd6a15-cf0c-456d-868c-024c383827ae"
                    }
                  }
                ]
              },
              {
                "id": "e2bbf869-72ea-4826-a86a-a3953e4724bf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "596bebe2-99f4-4b7a-8efd-b03f40787bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a84205-50f5-47b1-9894-9e0f9763d40c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a07029e-057c-44c7-909a-4be4532204a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1155f150-3fcb-4545-9a1b-af6e504b709f"
                    }
                  }
                ]
              },
              {
                "id": "fefd944b-768f-4188-a7c1-84da3e0f940d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e9c2504-3c43-4b0c-aaab-907cf0ea0ab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "705d5f6a-48f0-4c68-9dda-7c25f823ac9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed54a594-029a-4b40-b5da-0b4253529c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b3bee5d-1c05-419f-aa06-bc1e6604f122"
                    }
                  }
                ]
              },
              {
                "id": "faf6a483-6a6c-45bb-973b-be1d50cf00d5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "892c03b7-a495-4b44-808b-922c6348fd63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8e0f40c-d976-48d1-948c-5c0986d62ef9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83e9d696-035f-4532-9959-38291952dc44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a5feb8d6-f306-4409-bf8e-306fbe33d615"
                    }
                  }
                ]
              },
              {
                "id": "56147ae4-c3d7-4795-8c5b-fbff7591268c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "381ed773-dcc2-49d7-b2c6-7dc9433ae66a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13865847-e39b-4a73-ad01-40b7c97caba3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "646b0d5a-1ec7-4082-9be3-03f54534523a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f74c9ab2-1085-4f1c-a02f-502c10207d10"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35f8d435-ce58-4a6b-8023-b208050cfd7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc5ce1b5-8a57-4eb4-9a04-23eee581439c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16574bc4-e940-4d71-8b05-3a16207a1d9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c885bc5-a9fb-4f47-bff2-9228e38f52e5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4faf2a03-9838-4d94-bc55-b75ee728a33f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0a9ddfce-7097-4ca1-b800-04e858e82b46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec547ae7-5c56-47fb-8931-e4cff4732102",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e97c6a1c-884d-4bf4-9f83-b95d5bc88646"
            }
          }
        ]
      },
      {
        "id": "74d9c920-b679-48c5-969a-bcc09e30c410",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "acb137d4-242f-4d99-bf72-295f4771282b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57f8c161-8f3a-4f35-89e7-feeacff7d0d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f32195e-d5ba-443a-9f1d-dccf1c2681db",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b690fd2b-1f7d-4a23-918e-9af3ce98f634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d0c63a-513e-4e95-97ee-4327479dce6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfb1126-c68d-41db-8653-258e57f65131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f753aceb-6818-4519-ba60-7007e011072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa9619c-474a-452c-985d-c59b9cd287cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a155413c-d721-4057-b700-4701be85ab87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824ba625-a957-4c1b-a1bf-cc727a6e3b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b891f01a-88a3-48d3-b7f7-2b357832ebcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "685b05b7-e660-4ce8-b291-733f46bc693d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894bd369-2bc7-4300-b3b5-fbcb9311ca0a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed24c36a-5788-455b-82fe-3a726201d554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36b15ef-11b5-4f1a-866f-163d31d0ad68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93460f5-3bbe-4a33-b35a-f0101a7ff5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24492f76-00b1-4cf9-8fb9-660c099f3087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ea8f2d-c7cd-40a6-a0c4-823132f05bcb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4da618-8c49-4052-90eb-614e45a9d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beece8b-e304-4206-9cc3-ac85b9be2933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb2425-6c60-443e-9ec8-2dafe6495de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f122a11-218d-444d-9bb6-511733257419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f55a740-bf8a-4669-8e30-ebf9b42a074a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca9590-04bf-45c4-8706-c3a8b66de3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c45e61-088d-482e-b212-9270eb09f319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693da701-6d12-4f08-8d92-7868fdde4784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c087ea7e-19f0-4ece-b376-50bd1e21a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4083a129-5adf-47e5-b760-9348c73e9197",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a29a58-d7ee-4478-a713-f2f81e7fd3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69967248-983f-4824-98cd-e7a99dacd232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0991ec36-54cc-4687-9126-3f7472ae9139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2469b180-ef93-4fc8-a17a-ac0628c897a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5aea20-22aa-4ec9-9b3b-6bcd0b4c3c9d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42049b1-c63f-4da6-b2e9-f877ff86ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc857a1c-3acf-4292-9021-a8f3af955d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c1276-9b29-4edd-97f7-089d75ee05ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93ec47b-7db7-4397-8376-c1273a0d0d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9da3de-3084-4d3a-9777-91d1a48fa7f4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27ef854-dfb6-4765-8672-480ec8379a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ef30ff-5e09-487e-bac9-54020c458ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3699a9b6-6cea-4f69-8367-84be1f2f3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d654916-d5a9-49d1-81be-a6790d6e6484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c574490b-4681-468f-93f3-e1fb26d84175",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b542386-6687-4cff-92da-8d199083827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62483af-4925-44aa-a5c8-e27bf8e98ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac5ed68-9c2e-4104-b626-cd2d1456a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b96aec0-b891-4b39-824d-058aef153b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e0df8b-d56b-4feb-9022-f60ad42e226e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560961c2-869b-4b69-bade-71fad53dbdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e665c40f-2e8b-494c-a3ae-6a841f9f7f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd0ac34-b07c-420b-b0fc-3e9be5ee2c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "967501cd-bdb4-4763-8711-20d98df5e5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f156383c-74ea-4a9d-9cd8-91682efbee4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30670c9-87f4-4925-99b3-1de531a74d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f640896a-d4c6-4d09-9a0c-d625bf55c1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b6b77f-3b5b-4fcf-bd1f-696555af8672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf17fd63-a722-431f-95a8-7ecf3cb9266e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e38e7e-521d-471a-b246-291df51ffe21",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b42ff71-0c0c-430e-a1fa-ff2e71e4d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db1a2f8-9b14-4c34-aaff-801afc5ade9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49e88e3-65e6-43dd-ae27-75bbc5503a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59212dde-46be-4f83-9e43-dc14811c9b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d0657a-1423-484a-bb70-0d6047fd2ea6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d036a47f-61ce-4108-b1c2-7ad7416bc2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b8abe4-096b-4f1c-974d-fb02522499e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0a16d2-28a5-4062-9932-e5b4ff6b62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf41ecd-adab-4cb1-b2e5-a1412c932234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05635e4-f57d-4084-915c-715410154b79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f06d1a-63d9-45c8-8cc0-cfaaa102a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcb6df9-8109-4512-a606-7b4d3878415d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d77970-56db-4306-b97a-3b7144652216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d378fe8-cba4-459a-875b-83c770b035e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65c46e-6a32-41e3-a649-eaad2e1b1bc8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af472cb-e97a-492f-ae68-06ef9665260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f628cd39-6f31-4ca9-838c-103e364855c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733da9f7-309b-4b2c-bed5-da976b8073b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "511c2b74-ea12-43b1-a20a-08a4505d573f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39c7bd6-7485-4225-bede-c4b97864100d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6343f56c-1f59-4842-9d5f-5e5ab1da31ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fff736a-49cc-475b-9b67-27a0da5643af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446a732a-22c6-45d4-a811-52977f684604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a970015-d5ca-4f7a-9809-248a0bcd0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2c5fd7-bdb7-4a05-bfb1-a3edce264a3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ac0395-2d8a-4533-a65b-8a4834fed917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afab5e7b-e8d0-47a5-8709-78733b2e9a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c628ea-7df3-43f9-8e74-997a0f3f45b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9ad69b-c588-4c7a-a95c-e7a06007862c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bbe2c6-980c-42db-bddf-0cf3089bd3de",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e53714d-b9bf-4bee-a1b6-6a5059179a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539ca7c2-018d-4195-8f40-48a644a63e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c884e36-2796-41cc-b287-3bf360429dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41d6a4a-0e6a-46aa-bd8d-528c626bbd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53bb17a-c308-4d90-a826-4410308d06ab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7830fe28-5a6d-4a5f-a2a1-ea6184fa6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0870067a-8204-439f-b8e9-cc12c419ec49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f0ba9b-92ec-4390-a951-7c6b275e2e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f443a32-8085-4b23-b9ee-58cf1dd3e18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c725f-c82b-4e74-972f-e9999fc8ac44",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04a0d11-01f7-465e-b4aa-f9cde941d33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f74b2-2b9e-4447-94d0-e5a4441c3f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f1a05-a3e8-4bab-b000-846b0bc50c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0d7b24-6a1c-49da-b1d3-896d3c911f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c9781-3865-4d1a-95f8-e351307b68e9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25dd52b-c226-4efa-9938-67198c8b644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210f37da-614e-49e8-9d7d-e4a4df38ba1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc9b957-7645-42ff-ab1a-f7109b4c2cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "871352ce-d273-4204-8e41-15d2a1d62007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4a350d-0554-44ec-bad2-b64defa11e5d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aa93b7-ac81-4162-84bf-60bd504836c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc43bd2-945c-4c91-b204-9e0417cedb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653ff570-c119-4e79-a871-ffcf3369b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d40420-9d61-424f-9503-f46942284d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadc3673-8b2a-4f37-841c-b55d9252c674",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf5664a-84e9-4343-b77b-ea730ba1d066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d34ac9f-d737-4853-a0a0-5ffbe2834e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e940ca70-fe14-4b9a-85bb-00a17ef03290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84d8190-44a1-46f4-ba62-cf368064622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c4dedb-e027-437f-bddf-e6be5137884b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608b3e1-7eec-4476-b29e-2769b78ba220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffeca7a-7aa1-463b-8511-5e41532679ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5988be8d-3848-4023-97c9-65be9db8a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "281a56df-27a7-4e85-a0cb-0ffd7eea3e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faab64b-bb7f-4dcf-8217-518cf29602b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d056dc5-e7bf-48f0-b2d0-4b43c619af2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b864ec81-e5b5-4b46-a9a5-5a91587e3224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d65583e-525b-4ad6-9f2b-a99c8af1548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25ad6d5-f04a-4396-b0d4-25649d7bc91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb6ce3-ba25-4f08-a661-93dbc5436252",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d84f4d-7797-45eb-b949-1a7c1022304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb519a21-ec32-4856-95a1-69ebd7db6550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c843cd-cf69-4c04-bacb-ce2f4bb2366c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d886ae0-5538-4c48-afb2-4b6402f15122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82642b0-7daf-4bd8-a7ee-1ce5559566f7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ba3105-d815-4ff2-8dd2-ad74f272cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee240f9-3eaf-4d11-9a04-3a9dc824ac14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ebf063-4a41-4caf-bfc8-a0c5adcccb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4770a5-bae1-4332-972f-62aa9c42af72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09092d-8e55-463b-93b1-4ca4b278f7c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7183aa-a88d-4a7d-bf2f-27c07df7fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d580db0f-6bfd-4d59-8b5c-c7c28cffb8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc095f9-f9b1-43f9-bc61-bf1450c9b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe57d08-d656-4e5f-939e-63efde048aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b708576-143c-4afd-a147-c067dde07646",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0438e5af-9966-4c5f-9153-7927bae22ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07bc8e8-6a68-4d1d-8658-66744748560b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b3045-b6b7-4c66-8333-545db9750ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c11bef6-f7ca-4067-83fa-0967521c5e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8ef8de-36b9-4de6-bf0c-d121cd43ad4a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d98927c-9782-4c87-ae54-267591fe1755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aeb2057-7764-4784-82f1-b8e30660ffcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf6483e-b292-4180-8f63-0f5246fc4300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a0a79a-4409-49ce-8640-d7eb13f7f322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dacc4b6-ebab-4e11-8c2c-617539df8d42",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4100e-481b-4cec-aa2b-f93e2734a1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610f4afa-5661-47f7-9137-a57426496711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039164da-c061-4312-8329-11e383008703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08daaa38-3bd9-4d15-971f-660d6f549e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb66594-3a41-40ca-b4d6-a7d1d142f83c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d915e5-cdab-4ae5-af4b-aff9b55fa135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a91b734-8f18-4930-ad7a-f5ed1ca811cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bb9655-8867-48fe-8522-47df992f9df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8bb1ab-692d-4f15-8e3d-7ac7fdd791bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "043cd025-47f4-413a-bc1c-2566491390ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b96a045d-1ef7-4371-8171-5614835b35bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6883ebe3-b4ce-4979-9212-c06b6d9b792b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44a8415c-7db8-47b5-984b-3fa46268a27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9404a51c-4220-468d-971a-66f052d48970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af2d404c-e746-4173-91cb-904f301779bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c23d961-8ec3-4108-af55-e57ebff65148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9619ac46-4f98-46f7-9953-8bfa84a43a74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a80ef3f8-4239-439e-adc7-aae37cbaff4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9ae3af3-4ede-4de9-a032-9754a906b1df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "933f10c1-5e4c-49ea-962d-122da805fbbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e883ecf5-6f5f-44cd-b469-bb590bfea4e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ac4bb87-c1c1-4980-a4b3-764848cad51b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe6549ff-93ce-493c-bc0f-378883a1a2b9"
            }
          }
        ]
      },
      {
        "id": "b1fa097e-e0b9-4bc2-ac67-74f1b333b85c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "87b78912-e6b1-4f1c-9cf7-2e8703826a95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5700da7-595b-4c9d-95cd-ce83ef341658",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f53cfaa-1c47-4585-b780-beca55ee32f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e6c162-6155-4ff4-8f8c-5aef04768381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7035e026-ae71-4081-8d9d-8cc9dcccbccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b75a816-4ce0-45af-b41f-55a9affbf1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a31bea-cbea-47e4-992c-6433318d9b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ed3790-e750-499b-ac94-fd3b4dbdf2fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f628c19-28f9-45e8-bbc1-c84bbfaf96d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4945cd25-c3d6-4c30-9b46-a232806b007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9381e0-caad-4623-bae2-7b7f48c4586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be59f393-8d3e-4f89-9d28-f318553e7cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79f09fa-eeef-4dcf-b9fe-0dc8d1d1afc2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbfb7ac-84b6-4f66-a271-f36e051c14ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9134ca5d-0cfd-46ec-a418-70ee4c17f168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fb5b6e-ef37-472b-8abd-9e7ce1f7a822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "332f7268-63d2-44a8-bd46-5e6cca02fe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafc6307-6bdf-410f-b7b8-d0d26e8aebdd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028a9051-025d-40a8-93ac-9b522686f29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb139af-b70e-4c30-b7fe-ca3da2297ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba79b86-2782-4433-87e9-9c6fb080ba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51362e0d-666a-466d-8785-7d02b82988b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d81e38-245e-4ae9-9a9c-2eff67c24551",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab2ece2-4bf7-4926-b65d-df37781bdfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f541e32e-3bfa-44ff-9741-a4436d7cb396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5b8370-7b84-45a5-a378-e1e578fae1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a313ef-fd0a-4f24-90e3-34b39c177bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb7c46-cdbf-43b5-b6ce-2d751179fe3d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e25afa8-72a0-4451-b40a-a1f9fba6b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19366d8c-ae1f-4a0b-95c3-0245d27c2a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87400c4-145b-43c6-bae5-e38f44884271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7191465a-fe4e-4292-9af2-98e54d0dfdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af77e43e-ed3e-44a4-9007-596f5bb037f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9202cc9-e3d1-49b6-8c34-febd9e4612aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1209b589-d653-4cd7-8f09-2c7b21ac2612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e5abeb-9efd-4ece-af84-dd3207626626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf480b08-bc7f-4130-bcae-fda27368c63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971b7c22-1395-4472-9d50-8749d74ca7fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15917ff1-e423-4680-83ff-5180bef246f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fb72e1-866e-484f-8436-2f52d802c48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf9ba74-0e91-470e-bca1-a67efe3eb960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8a6c1b-1577-4b51-bdf8-aae79d47a300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87026198-d693-48a1-b3a4-f660510b9a4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3371dcfa-1b53-489e-a1c3-b258929876d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d038801-397e-476d-bf25-7147369b5897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9cc364-b90d-4b1e-bc31-13bbd2a49193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0de2310-cf8e-4e0b-b5a3-89abf02a9819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b39c7ff-9703-4263-829c-d72bdd3fe6de",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e485f5e-8c17-4719-943e-9213f345d5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7513e8-e545-461d-8632-8b13f260d2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146fa04b-474b-4939-baa0-dd88237ed3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b13fc59-70ba-4437-b143-d265d57d5364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ba087a-83ce-4f52-a2d3-ac325379693f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7844e7e2-3a87-4f64-82ba-792c77affc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50896e84-49f2-4d1b-aea4-91988f2b0274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e26f0c-7dd7-4ef5-9611-0e885390ff30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1817b024-e620-4e55-846a-11bbc155f70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e33c6-bc2d-4c2f-85bb-1bcdbebb2469",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2760b3a9-80d1-40fd-bef4-c90c66ae1ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf58a96-1f48-4975-b003-877613c6f096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef016449-d064-4497-8ea0-036f620b7768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40962af7-6d93-4304-9f37-04827765e5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49082809-7b0a-4839-8dd1-e48dff18d400",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b37b1-c0ae-40b3-a431-baa2ad811e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8d1cd0-1fb2-4cbf-8ea9-57930b8aba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934de2a0-71cd-42c4-bd55-d3e81449b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0ad75-705e-4bbd-a1d6-628b55401d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d6017f-d6b7-48c3-83af-ff3a9aa13c2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb649b1-0db9-47d4-9d84-52ccf30d16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc53ac8b-8e89-4511-8304-13eeb1f846d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2f10e4-4a04-4688-a1dd-e46c9e5e0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b35e61-ad28-4ce7-91b9-2d008f11fc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c863304-affa-4432-a44e-485974dc9b4d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5056b92a-742d-4c52-9e4e-e9336ba45bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c80b9b-8525-44ab-ba6d-96108734ad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439a9697-ef65-422d-a67d-015ca9a28146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f041134-971b-47d0-81ef-8294e8fadd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec75c06-e531-4abb-8e9b-a3830ad2683f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e44802-0101-4add-bac4-521721afce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f94c17-4b5c-47bf-9b30-d536d831ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2e4e9-cf2b-46dd-ac11-6b5ae98a6f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1aa77a-39f4-4540-a479-7596bd246d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90aa1db-cf5a-40b4-8c90-3b3d6e93db27",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615216cb-4348-4d8e-8848-808629446e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789de51c-f6df-41ed-9513-8ee72a049c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ef9c6-b513-4201-a3a1-d4aba28598d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c84ace-2a3d-47b6-acee-2b1f0ea2872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c5515a-2203-42f1-9a08-4a53a1cdfdf3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e14c07f-bb18-4484-8262-826b1e2a71a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e15016-7a1f-4f0c-9dee-ebb9e538a075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f4f0b3-ef0f-4016-aa35-a4403090f878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a65148-afc5-4109-ad03-bf0ab01d1d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f8d5a-c073-4a28-a9e4-f58887ddffb7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702bf53e-2c6d-48dc-9de7-29ae03208555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1258b5d-f20a-4f43-bb16-de455e5bcef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d766e-3fc9-438e-9ef1-5a6c681f22f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05a9310-be96-4e13-b483-f3d433339fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b461dd4e-53a1-4cfa-8206-3281a9c467ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f12f38-807a-4658-96a1-c77fe966739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5d58e4-e3af-4b26-b74d-0efa1396b26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff2e42-107f-41b7-8fec-33366bc90d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a64afea-d51f-486d-bf97-c8b58610dbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5cc824-41ed-4b3e-b862-3c00f0187eac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ab455e-8207-4c2b-a5da-de0b06749b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3734249-d89d-4dbd-abfa-3005f7141617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09e83a-523e-4e86-8fb7-b44a4fd082f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a18245b-a1ef-4620-a6f2-71ef25d0decc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcb846d-fc09-46c2-9878-3d9cce952a0d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d09c1-c62e-4ecf-863a-96b96cb25dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d07ac1b-04a6-4161-8a27-17159289bec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7046995-41be-41e3-a36d-0416b0699804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5882cccf-f2c3-4a26-90b5-f2c27d12f00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d392c2-84f9-40ab-a414-16fec7f6d7d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24027028-ff94-445a-ab06-ef4813791272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c6898b-eb13-4ac2-a8e1-e88268a9b0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e782df19-0280-4923-8f1f-bdd659b82da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2137004-557e-41a9-b70a-b602cfb21818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ca6d96-5e36-47ab-a96a-1a96827c6394",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6dc2e4-26fa-4161-8ca1-e540ef64e05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f422306a-291a-481a-8656-a7a0cf35e645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69feb147-76fc-4c8a-85f0-791b641d7562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ac6d31-bfeb-4bf5-b999-662ddbd16089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2528437f-32ba-4286-a87e-c298e4b16a37",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cdeb12-f045-45b3-b8dc-79e4e5e43fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b043e-c7a2-4a90-b9c7-adec4f8b1f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52baad37-1d00-469a-b3ba-21018cfc2993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b0c8e6-e0ea-450e-8143-e09b2b1af375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68963bb3-6454-495a-b306-f01b5ecdf074",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4cfba8-c120-4fcf-b7c3-c49998c5a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8224d0a0-93c9-4372-92e9-f558959092c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c36cb1-c17e-4662-a12b-85a68e5fcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b94e355-5bd3-413a-b3e6-ae190b90ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f27680-0e92-436b-94f7-65ba560299a3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ead129-d6b7-48fc-be82-90d3090e6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec3dd1e-79ea-4ddc-9a9d-66376e1bc0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541e2a69-0b9a-4aeb-9ec8-53ea1e237daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb95b5a-221a-41d5-991d-a16264506363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d86adb-76aa-48e2-8cbf-cbf4024b127f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c05de-bb49-4e61-974b-b2a8502c1abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c865a1-81d0-45aa-aa6d-953473960774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a638ec2-e89e-419f-a43b-8b9476f18ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4a5d8c-18aa-4531-a3af-a1357ee2930e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e391cf4d-e6b6-4bef-802e-055c0eacf036",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb07bab-af35-4e95-b21b-c526556cd18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed84a5b-d954-4953-a015-c7ed8f52dfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f145d8-a5d8-415d-929b-e92a8a246948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad855be-4cc6-4f46-86ca-7fc4e20b72d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54973cbb-5652-4bb6-8286-b8916e615d79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50bf810-7367-4195-845a-ae45fd8c0c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050acfd3-4d8a-4db4-ac93-f68ed69c5f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d403ac7a-0318-4b4e-9a91-ca642c79114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f42042b-5e35-4364-abe0-fe725f664bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294aa659-90d6-4582-b2cb-b838d3b5ca64",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89566520-3fdb-4e95-b0f4-e8a358b2b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d125f2-0ad9-4a18-875a-3653147f76e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39f62fd-ad5f-4075-a9b5-e647c88aa4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a0c420-1887-4ff7-94ce-6316fc4162a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027c0808-b530-47e2-a3d9-343091402caa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde45cf-0aa8-4497-830d-95b8d1e86249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb055c5-b232-497c-b39d-e5bca2e2158b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052deca1-ee7c-4ddb-b77a-74580a4aeb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d10990-02d7-4fd8-a2b0-9fb595860939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d03eb9e-48c0-4b64-9bd2-f9f6c2709db1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca288d07-d0d8-4e24-9c91-5752c6359e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5158968-0f3e-4b61-94e5-cf1a10ddc808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac3787b-2486-451b-93a2-859b4123213a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3da039f-fe01-4cd4-af0c-2a664f009f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d68616-3c01-4f9c-b648-94796aa71113",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad321cf-f541-47d4-9cec-b0ea68348267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4806a6d2-2307-489c-988c-bf34c383d02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672f106-4f58-4a02-88ff-e479e8b0bbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93df5ab2-8641-4fa6-991a-e5221b528ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17029253-51f1-4cab-86da-c38104f3cfad",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9143a9-bd39-4392-ba0f-98a4ff27e507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8fd6ed-1463-4138-9fe0-4047a6ac4128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1cbdb5-b401-4fdc-8eb4-e00c69c7f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fefeab8d-6196-4091-b4c1-fc236ef78d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d20cfa-78b3-4a33-8411-51662b11b23c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf97ef-698a-4844-ac68-f233f3676940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0a3324-a61f-4802-a205-4bcacac7af05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedc086b-0cc5-49e0-8ac1-33170092200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a05c3b-4aa0-4a12-b14b-7e2e79d8b787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9317964f-5733-4f21-a8ec-9e5e29f55434",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d64b2a9-ae37-40eb-b329-a53f4e12c6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de97f7b-1d27-41b7-b1db-44f2a3b477af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67794228-db4e-4eac-b833-09d76382848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "741fa2d7-7a73-4353-b9f5-7bbcc9649de3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e57ca14-7d9b-45da-a87f-b6f555b6e64f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "881aebc2-135a-428b-a8de-fd8afb196a71",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362dd1b-6a6a-49f5-8361-ee79335cc1f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d55a00bf-4420-43cc-b6d6-f67fdb809b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6755b08b-052b-44b1-b80a-7ce3d434fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "831825c5-5a54-42ba-8346-24b9140cf4be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2a88a1-918a-4f64-b4fe-ff563673b14b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd7fd1e1-5209-45d4-8ffe-68bbcfb6f12d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e22e943-41e9-414f-939f-c47c1392e9c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69eb50ee-6ffc-43fa-b51b-4ef5a131fc29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33f04893-0aaf-4409-b2fe-1bf1df066c26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9941b64c-ad53-4941-87e8-61206af51818"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e93e4be-7de0-4b0e-b199-660ff7f00d21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31428a67-0d76-4888-a3bb-2a5e0e787934"
            }
          }
        ]
      },
      {
        "id": "b7880b54-dbcc-4985-989c-d03384946f96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "341a42b7-b120-4100-9d32-bdabc735e9bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e539c888-8a6d-4d76-b90a-cc2d548f75f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3a8eb72-594a-4542-8cbe-d215b23c1c08",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb85999-be7e-4153-b1a4-641f0a0fca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9644373-fabf-4d6f-8324-0c0952ef45e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b193831-02b1-47c1-965c-f86cbad3c75d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf4b9ca-afdf-4000-8945-9a68da61c161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bebdf69-c71c-402d-9f25-f3e93820ba61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f24add0-e6ed-47a3-8239-4e2ec6a3320e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d2c8ad-d0d2-4ae1-b4d5-469d51bb24e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ab6c64-df36-489a-aa75-1acc0d93f993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e320c7-7f77-425a-9fa0-ddeddfe11b69",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a446b-75a0-47c4-b9d6-d75991b3bb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97f6453-39bc-4cc6-91ec-3fc0ff1609d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c76730-37e4-4bf8-931f-f7f73c599ef4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c32fb-90a9-4acb-9209-4b528df9c1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88077537-ba25-4b19-886e-b72036b67ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd85ee6-0b36-4e29-be1a-9020681c77cc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbfab8f-4410-42d2-896f-49026b65f203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a715a5-97b5-48c3-b0ad-d338068e09b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e172722f-bcf4-4d01-9c28-2e8467cb3248",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4b840c-f9fb-45bd-9c1d-bde555a37c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f8933a-d323-48c0-9226-ee3e813d5ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d71aa-0ac8-47fc-bbb5-f96de2ceac07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80523b9f-95e0-46f8-9f7e-12fd60a0b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e72c0-3ef3-46d0-9c4d-20367d6ea5d0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5764b74-2944-421e-9244-2f35c347a7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd357a03-edae-4e9c-b070-509b128ea39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31151930-6d70-4825-acb6-489dd8596bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380e1e70-a10e-4b19-bebd-a6eb55614753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3178a3be-7645-43b3-b7e0-9abc9e845671",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5845b8-3271-4d64-9a62-a1ae71800fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8d0424-c3d2-4f91-a5f8-54e0c918f4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6d6941-79bf-4723-be26-ac6cc63de1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e41a007-3270-445b-bf4f-16da88a0f9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f6aff8-902e-4d17-b0d9-4118e561161d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3870fd2c-5999-465d-b236-6bece9c9708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bb9507-d4e6-4b11-ac85-e92c2fd32abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f03726f-6caf-410e-9599-409736447fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee46263-01f1-49c4-ad39-308585795c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60d2cba-c75f-4d91-8cdc-3673e7c5ec86",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313b3e67-336e-46fe-a579-98f3012c72f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d9dff6-e87f-4a97-8d49-f88850c857da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995bed8c-bad9-4f2d-97d0-30b877516a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7339c04d-9437-4187-8ffb-620de584312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fef6ee1-beb9-4607-a22e-ad3a570cea82",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883c9073-4ae7-492c-b95a-a607c9ae69dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a110fb2-ef1f-499f-9aab-f5c2461bd23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ce024f-1730-4a19-b8a0-be3290194773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e450f6-e86f-43f0-bd95-fa5198cc002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b865384-8646-4ffd-98eb-655e82fcdca4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaecd12-8961-4386-8ed9-ec9896ed2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f202ece-dc57-419b-86dc-0093979675ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61731fe1-6820-44f9-9b60-4f1471afccb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ff8ff6-2a63-4802-bbd8-0dcd6486a556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed5625a-f80a-4baa-9659-0b646d02419e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca87ac9-d509-465a-8cbd-d12ee096ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c80d04-9156-4ae9-8b9a-60ff9f100bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b919dd5-13e3-4c3b-93e8-6cfb15136339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f324c100-eaa5-4893-a04a-828e727cc6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d40fc19-e9d1-413d-9929-782ea226c984",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8b6dc-7ef2-4d37-a87c-2b917e619a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9ecaef-5c51-4249-abf7-b2bccac3d85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7260f609-f5ce-408c-b618-ada7d7322b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636d89a5-7741-475e-a9a1-b156809f1772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f148b41-5315-46d4-baf7-fe7af7b08415",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd5707-314c-424b-963b-4d01f23bdbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb719d5c-f3e4-4f60-bea3-30e93405ce77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08df2e-530a-4fe7-a6ea-e0736531a561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fa9b71-1bc2-4c2d-bc9b-205fd0b9d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c4457c-0b22-4478-aa7a-452e36e5fde0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d691abf-a9a6-47de-9f1a-06b87f30d35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f059233-be0f-41bf-9645-6bec9e742a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3446146-c97a-4c13-810e-1df227d785c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0200d2cc-b99c-44d0-ba6d-aebc1d0420e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3908157-302b-478d-bbb6-18dc5e1a35d6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51766eed-ea50-4dc0-8c25-6d9bec171073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024035a9-75c0-455c-a034-655683a17adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ace238-9824-43a3-9cfa-f15f6b9c0d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3f015e-fbb4-49ed-82db-e5ae6a8104b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45d7623-dd3f-4e81-a7cd-00cd4744d3f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e1a4c4-59ff-4248-bda4-e588df947ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1ed130-edb3-46ad-834c-2894cef15c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8741d8b2-dc12-4f10-a5c5-bbd9f8ca1d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aafbb43-398a-4946-81cd-4bd1439d9ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e17af10-4ce6-427e-9f49-bff95990bf63",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28597c31-04da-4261-8136-b02db45bbfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c0185b-a640-48fa-b4ae-d3dba2a74864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65b8c28-ee49-4e36-a276-34dcc51f9af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dde08a-5a69-4ba0-9e7c-ef46a0876400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624ff08a-a6ed-4f46-8526-f2dafa24f26b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588eadeb-90b7-4298-8e74-6763ba71519a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54850ef-8232-49cc-9680-168ababbfbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f6dc4e-a15d-4d24-838d-d9923ed32e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9428416-7c5d-4d6c-82e7-678e44f1c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d22ebd-0756-4bb6-a8e0-d4a7cb73e0a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab0110c-9a7b-43dd-823a-612b73d05718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cc1f05-13f4-4d85-ae02-7de2d1fbf7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7aa50ee-579c-4e9b-add9-aa27256515ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36807dad-c5b6-4d3a-b18f-0646e46649ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca2bc6-8543-4e2b-aef9-93b19d3ce473",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76046363-3f11-4afc-926c-18cbb2f14351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91e94de-2d1d-4ec5-8d90-37bb1b8e5647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e123f71e-baf1-46ab-9e2a-d40df9f1b91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22408629-83c1-4626-ae8b-61b1b3ea55d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6478da25-d91b-466d-be89-31d0652554bf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a8e3b0-cbb1-4c24-998a-e6f1084c67b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40173da4-8351-44fa-b677-32d1a21e0b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb5d835-90d9-4658-bdf3-158ae9373616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d553304-85d1-4670-b1d6-e3227969396f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0f582e-36a2-4f9b-8e65-51cb977ffe8d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f166c515-e453-4d9d-a0cf-35c617e9d470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f571056-bbfd-425b-95ce-87748bdc0581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbbcc60-fad1-4874-877f-13ca7f12bbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b946ac-c253-46ee-b28d-774cb49c24f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ffef1a-b947-4296-8a9c-2621bf31545a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc726c9-2447-499a-9ea4-fc99fce87075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625e7cb1-ab69-4dc4-8cae-9b9970b59f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fda816-1c95-4c07-9f07-34297674b154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5270cd1-3e51-4ad3-aac7-96b9dbcf6eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552b2d9-199a-41aa-b965-e192a258a85f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc627e00-15cd-4cc1-8e0f-0542335fd47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f317381-a2ef-4aa3-a86b-4c452ddcf085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f3fb1a-e20e-40c3-ad17-4745b7fb9dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5956bd1-01d5-4572-a5b5-47ad0799dc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ef1167-815b-4c4f-84cc-a075f948efc2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f840652-c084-47b1-8bf0-2266dcbd3ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88b251e-4b59-46f0-83e6-9e2851e00773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f50cd1-9552-48ca-954f-75948bfdd6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4ad643-63df-4b91-bc03-21154b0695aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b13a7d-8bfe-4aec-80c8-e295c0eefbd0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327c26e5-9ec2-474f-8d24-7756e1011823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c06c7ff-5751-4c33-9372-4f5cd77725dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa1d0e4-fda6-4a31-b97e-71cd20f643bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f146a842-703f-44d2-bb62-d2767b063a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31153a71-f0c6-481c-8645-ee121cc35c81",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eaa9a6-5e1f-4ef8-b27c-02e12268d73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd126d3-68f1-4f80-8865-cd0e5964e393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edef84a5-c16f-4063-88e1-05d66717eddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3626c2-452e-46e1-b19a-74bee4b5406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7a855d-d97f-4f5f-80c4-4a681674d24d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c5a15-b2e9-454d-91a8-22279c8eca4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732e0ef1-80a7-43db-9172-570ad4551e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2613a94-d62f-4c21-8ff6-f189bac56737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b9b510-d5f7-431b-836a-7f29c5a7920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c94b4-1be8-4c9a-ac7f-98c9dddeefcc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be46d6d-596f-46f9-9652-3d17853c6575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232da6e3-85f4-4f7f-847d-13c89f1b842e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7374e2-cf61-4dbb-8e0a-dd68aff576a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51797968-d866-45dc-b69a-fbd055901b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d988e5-560b-4315-b449-87e1efbf23ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afa25d2-3a96-4d6b-94ac-327a89438317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3cd933-2a7d-4f9a-b146-5757564d6781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307452b1-0e1e-4b74-a669-9e850ecfd42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7098c956-0ac3-4faf-8025-350188b498ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab684e7-0f5e-4efb-b783-f92ad166030d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4b88d5-1a4d-4f35-8116-edac9afa6eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c6e1b0-f81c-45b9-82e2-47c6068f0f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68b2ea7-0b43-4121-be19-d07c31a1c2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f526a9-a7a4-4aa5-bc2f-422601ecff6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ed4881-06e7-4309-940c-cbeec918c899",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80767f7-2c2d-4d6b-b83e-2b26b7c9e78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8eb2c-ae12-4f75-a439-54cd412326ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8839d2-b83e-423e-b5d6-f634a9b26492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b691642f-015b-49d7-83e5-537c1760efba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e58610-b884-4614-a8d4-ea434a2a67f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e395a-a96c-46f0-82ff-c80b54fa9adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73f5413-f263-427a-b100-04b1d7099b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b0bd92-66aa-4068-b774-344c9e82641f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb14a091-3b5f-4584-94a5-bea6f4ba462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727cf618-c6eb-4970-bc07-8af29d0474c1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c190dd-b25d-49da-ace2-e58d0293e1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ac51e0-417f-4670-829d-a5a95855aeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d89ca3-a3e5-4d8f-8e27-9a08e7214506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eece6adc-5357-48de-b105-cbd0a870be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e395ee4-e500-4b7a-a91b-647ad7e84a32",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ef898c-450f-4f71-9ec4-d254926deb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f58ace-337b-4a2d-933f-54627b2f44a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d58a53-05dc-4148-9746-d5d8626e51ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f56b0d5-1725-4765-a5bc-89d350d0c9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5893e718-f010-4238-8296-5d7d3270c81d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3828e38c-69ac-4388-bbf7-95bc57a12a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c85dff-0de1-44eb-81c5-56d2d576f349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ae44bb-513e-4df2-891b-5fccac019bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f270d32-1624-40dd-8b44-23ba49a65bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fba07e6-33f8-4716-9592-d295311b0ebe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f806e4c-801e-4e53-bae0-5b9f80b9e0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4347a0a3-92ca-4ec3-bdba-711f91ec2331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df235bf0-357c-44b1-b737-ff8c3750d34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459c4ccd-7c5a-4855-a39b-0c7924313173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811ff9c4-10ab-453e-89e2-dec59bb3b97b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fd44bc-1457-4e87-af4d-d5076fdad19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817a668e-ec55-4127-94af-f1a28e735b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe17fb62-3c3c-4aa3-abbb-445f01075248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f137b061-2022-4bcd-b5ba-f5f70bc9008b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7da7344-c56e-44a4-ad67-26476a7c8f36",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5ef172-70a6-4e40-9dab-ec08d9b8cad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2a2b7c-5744-4ce4-b767-f3dff2259ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb752d6-22ec-465a-94e7-ade8e9bb07dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412fc58f-a52b-4b2b-936e-d4169bf6b67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365f807c-3441-4d4e-a204-0cd17461c7f5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51d6b41-5213-4e93-8bee-480d5a414261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f72328-eed1-426a-82c6-5a1ab8477c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c73ca38-289d-4872-9b9c-711f77aed7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb060d3-5ef2-4b4c-93ea-0323ec31bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4acb61-b5ab-474a-b5cb-e3dbe6075c7c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d8f490-665f-48a3-a409-5bfcbb1e0c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b916228-ff7d-4cf4-8ed2-f2eb4d9ea145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c59fd9e-478c-40db-9688-2148ff968eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c55b498-f2f8-4e49-9ea9-491653933724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8fc1b3-954c-43ba-b961-9eac07c80e43",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f1243a-f3e1-4fc3-b6d0-7e04b993d61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331fe56a-3743-4929-a9d4-b03bd79156de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1354f0-bb8f-4985-af72-989b8bcf82be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6432f235-b458-4a88-af2c-175cf7ba6d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed00106f-6df8-442d-b6a6-ef527036b5d2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4dc3a-a125-4b5a-8cc8-be1f5f1a8004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81439b59-c5be-4a3b-9e8a-dffaea2e5891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ac58ce-b003-45b0-8c4b-bebd59a9a3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886c330-e417-4cd1-a55d-657018a23831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd12d47-5a70-422c-92ab-83cdfddcd062",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b43f33-3edd-442e-a4d8-86af2935a063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3736c8c-fae7-49e8-805a-6319d3e5553d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f405e-c512-4824-9d7e-a4d673003ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3572fbd-dca6-4352-9629-a23e9c2aee50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16453395-e5ee-4f2c-85a3-a9b50f215f86",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c48a93-e531-4698-b1bf-7ff2a0d3ff0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9498c0d0-c7bf-4fc6-bc7e-248d422882d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecfb8d4-5903-4a71-9793-76bea60f839e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fab597-0a79-453d-8c24-f63362195ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0712574-e642-4346-b42d-735abcbd60b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543e5f1d-1483-40bd-9751-32d47592d7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193335bf-8b0d-4ae6-af66-a61e8e87b902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ba5671-ce47-4ab6-ae49-600362a1f0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854fa7ed-e474-4d48-9c66-3e5463d284a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d08904-1578-4a5e-a640-bb5ad700f66e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d537fe48-f318-40f7-b87d-a2af9f69179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e8dac8-a649-417a-85e5-34a50a8b38a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8d7da6-165e-4311-8e4d-a6171bf54173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73579ba-cb9c-4841-a9a1-2b6bc50e1fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d5a42a-a372-4e8f-9ea7-395448ad1d89",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47773b3-67b9-4671-8c30-b2f26cda1d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3cd6b5-97b5-46b8-a9e7-6fd90ccc914d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab3e743-e017-4766-9d44-1ebb067a386d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d07015-e5b7-4fbc-9058-8b57569d7e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354a07b6-b702-42f5-9973-a9820948461f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ebe1a4-2113-4fd5-ad1e-f99bf7d5fb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fe84e1-44fc-4f21-a7af-14c3d47d8998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d1404c-55a2-415f-a89d-b268eb067148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735abf61-1e81-45fd-aefd-3efd363b8fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bcc35e-15af-44d1-8f8c-cde1221a79b7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291d220e-550f-42cd-b4a7-eb0f111ab967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9084ddf3-45c5-4190-8b6e-173bab8a438a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eb7622-5331-45c5-86a4-903de233ab0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8943fa-1747-4d37-a6a6-da0ae89cce05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307cae92-ca2e-45f8-b746-8d717773d09b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c84cb1-fcdd-4e7f-835c-186d545d3171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b121b5c7-996a-436a-ab92-cd2d92bd0f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6646e517-3cb7-45be-b48e-f80f5d215620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d709393a-becf-493f-8fd3-c848f251ec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dfb482-1458-480f-85ac-cad625b49f51",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29545051-6ca1-4bb7-aa32-b84785b1198a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc313b3-fbe8-484b-8382-825f490b07b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784d31c4-a733-4f89-8813-aeef9e51a827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ce3166-ac41-4b7e-b934-4d834843b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297e8736-6273-42c2-992a-027b02230f2f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be45a8c2-d88a-47c6-b679-894f29e4ac93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5256ec-8cf5-49a3-afdb-fae360bb5f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e915fe-1faf-4c4e-902a-af861f733070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d531c99f-1e52-42f4-b562-39ac9d0680a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b350266f-f3d9-4319-b0d5-41a38f94456e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7771d28a-9b8b-49a6-9d78-dd5b936865a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0eecfe-3b55-4c17-9b3f-e2b2bd3c8a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6f1d30-493d-4475-a747-c8e418c0fd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87aed7b-f965-4b50-a084-80488c63f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0168b56-6193-4d2f-9af5-093e6305c76c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10411124-5bd6-4bdd-9f30-bda3ecefd227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3836b10e-7c70-421f-8d33-36f0c0e8af1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0fd39-e645-4bbd-ad27-80ca09a7a6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44f556b-9ad0-4bea-9285-69a7ab7f10bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e810e2a-98bd-42e2-826e-389454ee8776",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a7ecc7-c67b-4cc5-bda2-e895d9e40be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68552088-0ca4-45ce-bf31-60ca4f2864a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973e3206-e2f0-4a00-9e0b-c913d1d53d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44cf082-70e1-46de-b2c7-e200bd9b6670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378afdc7-ed28-4e0e-9126-0096071e666c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a584a1-30e3-482c-813a-79397983235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146b3c8d-efa6-45e7-9e21-b415f1f5766b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252f37dc-d258-41f1-b0c0-a217435d49b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49eb9463-eda6-482e-831a-7cf9e246ded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3425630-7f76-48e3-9e62-15af521b57d5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3945c26-9dca-47d1-b049-bed924465a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd5f434-3f96-4b91-a1ff-7b8fbe7a985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046da6e9-9320-4ec0-a43a-aa8de5f816d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eb4086-db77-45c6-9f28-d4549b2d38c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f87a8-bb14-44f4-9c33-cc6ebf77882a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc29bce-a008-45ec-8f10-38419c5623f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b257d36-7590-44f5-a842-a1456257e072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08eafa9-8c68-4397-966a-96da9b5c0cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b462936e-6882-4eb6-a127-f1d66f260284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f96a253-f8b9-48bf-b390-57349fd89cb7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9114fe-09dd-4176-8b29-5c573547b154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc6f204-6f3f-4bbf-b0d8-95e2cc5960b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aeebf0-427c-4e3a-bbd8-d03efc66da0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f723b1c-0717-4932-ba2e-966a05c044f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f627f4c-a57f-48c6-a71d-6194674cccaa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622e9547-6a2d-4796-8491-fa6aebc1dae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbab2747-8ec6-4518-8e26-e4399ee636cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b902aec-5316-42bc-807c-a97bebbac378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31904b4-6ffe-4ed0-ad37-30ede7c4d262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec78601b-eb41-4a73-a62c-fea334ebdb16",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d2f84a-c622-43db-b53b-52fb03a48692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce3efee-df5e-4cd0-abbc-51de8a280395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581ce462-a0d1-435b-a370-33e085fa0412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd53b721-c02e-4feb-ae57-af2ca2382aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49674d46-8aae-402a-bf42-1a07ea117b4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e12058-7b68-4f9c-850c-307a016de26c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc6ae53-0cc7-435e-9d3c-106b8caf2145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb46b61-f7c4-43a6-a4f3-a15a44154984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eecfe2e-4796-4293-b512-86550e6a1544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d62ac7-22ae-4fe9-957d-d44ac82eacb8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d07332-8400-40b0-9ab4-06f66b55f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55650bd-4328-452e-930b-2e05d40b86af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4845c4-0df6-4853-a950-f8d12224c38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1236dc83-8986-4e5d-b4db-f8318ff228e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edaead2-b7e0-43ad-afaf-a2445489f229",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ecb1cd-6fb1-4de1-bd5e-a442f0cc2589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43452cef-2b42-4ff8-9ee7-27e5cda99bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4d0857-8abc-49fd-a00f-c2c5a6239e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b544ce0-4b82-4988-9703-fa7cfa54884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b6bd7-06fd-4547-bafb-a35400bfb417",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd597e7c-c336-4577-95a4-99682b7317b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14243fb7-f63c-4560-97bd-7087742b4c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade6393d-11b6-48e2-8b58-db1983b84ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59266af-74e3-464c-ae78-6d2a00e01501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c05cb2e-cd83-48b2-bd66-da062070ea04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d76adcb-8457-466a-8b24-081d0004169d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732f5224-f2cd-4586-bba7-456e4d50ed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cad737-0cb6-4602-a3bd-d1af1163db64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d482af7-950b-463e-9951-9b9edddda098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b7dc0-c6fe-4569-8e45-6193bc3fe099",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705f856f-0a14-40e9-b7d1-eb9857ff6d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea84e55a-6cb1-4df9-b5af-f3d8a07a3466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfceabe4-248e-4800-951b-c4800540557b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347ded32-0dfa-4514-8323-bc3773cfd9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a3cdb9-21d0-446f-a72b-0b2f7abf3b7e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3f7704-0e52-4dbe-ad6f-a98bd2532886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecd504a-0b85-42c2-86aa-c947b7514c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114c7701-5e4c-4a0e-ad38-963624481c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ad2256-0964-4368-9c79-58e3de78a1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cecb357-d43f-42b9-9cb2-4cac78ef01b8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af5cf7f-e4ba-4b91-bb47-7cc9d9c3d49e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f1526a-b5cb-4072-a6e7-e8beb12041b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d000499-ad1e-4ec6-b69a-9d3c1231eb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d98e23f-80b2-40a8-89c6-9fd34c82b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3f9d0e-2278-46d6-8a12-0d951fae17c8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfbf3ce-99fa-4f2a-9413-74ba690714c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7319fe-6425-426e-b7f3-a6115ed3c85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d50e28d-edca-4492-a61d-e0e4e563627b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b660687b-6dda-4013-bb83-3556e51d5993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6749e3a5-b9f9-4247-93ea-d1a50136d07f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d4262e-bb2f-47a9-a1a8-58beeaf4c28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5be63f-aa58-46ab-9afd-0f65d4ad2ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c1c28-ffb9-44d0-92aa-f6f92a1bb281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db36ae93-cc40-4cf6-b307-ab6a2bbe9d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97237c82-690a-47fa-a9f3-d7697565e66b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b94daf-d3b7-436f-aabe-16e4f6d3575a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c9a411-3dcf-4e35-91e0-a7ebef302bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3fec9d-2adb-42e5-bde5-aa6f978a0870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606341d5-cb32-4982-ba6b-86ca990cc924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cc647e-d61d-4cc3-97b0-aab262ef3263",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0cd763-6fc2-4728-88c6-e31774e9c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b774358e-c4e8-4cf7-9df8-4d7b1a20056f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489f6ece-f6c7-4575-9536-8e101474d64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935bdaa3-3e82-43f3-a8bf-8e7ca2f45dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c6032-751c-4934-a57f-b4ccc3e4a01a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2c0d34-24d6-4af7-8ebd-07d541f96e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4a60ba-b2b9-4333-8f05-fd2ceae7b3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c24b51-3788-491a-bed6-d1f8a199962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27790d3-615d-40ae-81eb-7d373b3ec99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2d235-9953-43aa-88c7-7281fd7e59a9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdacebd-751d-4555-8712-95c223fa0780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3b2d39-ca92-471a-8684-cd223b1f717f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e6228-17a9-4904-9d5f-1f2fdf1c6e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ecaad9-2332-4a99-a78a-51f6f533c1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f891872-92da-44cc-aab9-df998fef6de2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c919b1-5801-4b92-bf47-d24b216e071f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c324537f-7097-47d2-b143-e8376b5cb1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedcab2b-6e5a-40b2-be00-78ec61d9f566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e366335-a083-4ce2-85a3-a522a99e3f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06274071-30dc-4f5b-91fd-c69336a4d3f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8e9ecb-d63d-49ca-ac13-00a967df0118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8862aa58-e6d1-4359-acd5-fe26936e8739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8dd49c-fa17-424d-b77f-8e263864b71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3ffc3e-152d-46f2-a9e5-c82a5f640d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28cedc1-da8a-428b-875b-27a586710482",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9fbe65-7f99-41d6-b1ad-02762a7a6682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec239a3-ca5d-42ad-b191-e592c3a70cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06587dd1-c5b6-4ca6-a60f-029229fab4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9ac376-39aa-4b91-bc8b-267ba46e9a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01814891-f971-43df-b300-f74b9b7834d0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9731f117-f3e6-4653-8c34-4a24dff4c079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9959357f-df22-49c9-ac1a-57c2c5c4ec9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b3244-4e3a-4a9d-aa67-409f0356dde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee7fcd8-a0ae-4bbc-acf8-358e95eb8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a44b73-c878-4b8a-858e-9c508b8092ff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72291d6-19f9-47f2-a54b-ce63caa116c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cd749d-cee6-459e-8ab4-bdbebaec79da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3f6bb3-8387-4e44-a65a-d7a0112bfc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce42ff90-015c-47d5-bd57-a31029e98a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528ca2e-57db-499e-bb63-3339738c5e2e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80602aca-7869-4d1a-a06e-c0fcf863186e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7359e1-2cd2-4f31-94d7-058f287778b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd234236-8f85-4ac6-9517-16892300fed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b430f54-bbff-42f5-8ed1-a9ee2ef6b3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd79d717-8f7d-4ef2-8050-264c82da251f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e4496-bd04-489c-82fb-556833b66e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d45166-6214-452b-bf2b-91ff83f4a3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9457d231-f86f-4710-b470-44a1c240b0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdfd4f4-832d-401a-ab7c-95b79fe589cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2617d96c-183b-48ec-ad87-bb7a63d9b41e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a0b48c-949d-46db-95c5-631948f0734d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db39126f-f760-44e1-af5e-b7ae26914134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dab45d0-1502-4366-8018-efe30e9ea38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5abcc84-d26c-40f1-bc88-89760af0acdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62904ff8-b3e2-46ce-98d6-1ba6bcc5933b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc709c83-95ca-41ac-99f7-df658f3d9d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8b1997-e630-427b-a209-150c2427ab6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f97960-496b-4b9e-9885-623770e46976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431a093c-756c-4d89-9c80-eb916e6a4c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5dac95-d8f3-4991-84b9-5cc165f7bdc7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a003b1d-b2c7-4944-a859-8ea0c251d6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7c62d5-e4c0-454c-a616-e84723abbbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb90aaf6-ccff-4336-8437-cba870a34ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d229614e-10da-4274-b058-ca35894597ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b681876-bef2-447e-bdef-8aed98eacad2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdae127-07cb-44bf-8544-666f09768972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015f2225-64da-4d68-9c69-68cce8107469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ff8b56-b1b6-4ede-8834-7b8d7b40d258",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8afceb-3715-4cd9-8112-2412e1b0b2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10026fce-91f7-4f43-ab88-c2eb9c820162",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179aff0c-ed52-44cf-95c7-1f7e84f6a15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7b82c8-11f6-4182-94f4-3c76b5e13595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394646d-e941-4377-a459-b48ecc684aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627df610-be74-43f2-aa9b-42884aeed20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb7c82d-389d-4c40-8c9f-35f4791800a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d6dbcc-d13c-49a8-8e18-630fb5e98e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73a4bd9-76cf-4c16-90b4-8faa26d81b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe89fb2-cb68-4966-a164-5b74dd4e3718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f136a81-beff-465f-a80f-0b32d391f105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5d9888-f7af-4545-a4e6-b1f8f3265710",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb68b54c-1a64-438a-875f-fcc2551de1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9d5355-45c1-4547-be8b-a026cd3196cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c942a96b-c263-4e50-8d31-4da26b76f385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffec4d14-dc1d-45dc-bc09-a9012a1311db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10a18e-6460-4f81-b2e7-c8c9782121e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efc0c9c-0940-4d90-a283-9bb100c8048a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc65305-6d7a-4959-a7c0-f7844a1f2af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2713fba8-cb4a-4e4c-84ab-5a30ce09550d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6d4354-e9c9-4997-8f6b-7d2153f10e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcd25cc-3021-4500-ae19-c3b48f6c0470",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5047e032-8449-400c-9227-501b247f4638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b27900f-e313-47e7-99bf-673c80c78dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a45844-af53-4f88-82b3-f4f5df17f715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5a8eab-518d-4b12-9b4a-a715aa2224d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830d5da1-6351-4643-966d-35099efdc52d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f7567b-41a5-4fb3-aa67-1ed8217861be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecbffb2-ea57-4889-bb92-0dbcf80bf9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceadcf5f-b19c-4228-b4a2-36882fbd3501",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8466f7f-1dbb-4f6b-bca3-e6fed48aba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261723b0-5de7-4b6c-9e26-a97c6c03dd3b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2402f72-a95d-410c-938f-8efcf575fa77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0cecd9-62de-43f9-aa19-ecc4446671d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f717e3-6859-46f7-9628-d36d21b81a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3700c08e-3925-441c-92a7-1fe8863b3b5f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9da72ba-5d22-4452-b7bd-6392da4ce42e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94919f5b-71b5-4f06-bf16-64706beb2bd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d3032ff-5269-4e18-8647-fedda2567cf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91a29b36-12bf-46e5-aefd-9f098dc3ee11"
                    }
                  }
                ]
              },
              {
                "id": "f590d37c-8cb2-4b3a-811d-6a4872a8c313",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10fb9725-5db9-4de4-a1fd-76ee9caf0f04",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43ffffc-c3d1-4eaa-aa41-361bdcd79080",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e9db126e-2eea-4f30-9e9c-738a25225718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d4b381-26b5-46b5-86ed-42260a459636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "369f3cba-5969-4db2-a0a0-6a886a45f9f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53f1f8bb-3ec7-4803-9bff-941f0e41da7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c41467dd-4df6-48f4-b0af-efe350c7e5a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbdcd729-6670-40c8-b9b5-17302c700a3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b7da718-47bb-48ad-99f0-b17420871455"
                    }
                  }
                ]
              },
              {
                "id": "e7fe1400-379c-442f-83d2-08c50f6d2d47",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "77600cca-f01a-4116-bacf-6256aeea049b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d671fa3-04a2-4772-bcf2-318882a64d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49a37eae-89e4-43db-9dbb-c58183bbde35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6304b389-269c-4a56-828a-430d6c72b0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed06033-fde8-426a-9a5e-16404666b676"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a1757948-2b6a-48c9-b5e4-715b1a645d0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f483b3a-00c0-4c76-9fb1-511195b8fac2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cd1433d-09a9-42ee-9c48-10719f3ffefd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d06d5405-5c2f-458f-8820-cdaf5c49b964"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c568bfab-fdd4-4d52-9a9c-ac69d43a4ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11dd2695-7393-4b80-afd4-b6ad98297f60"
                    }
                  }
                ]
              },
              {
                "id": "f53c8e86-6b39-4dee-95c8-3e3c9b99ad54",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "115fb8a7-42bb-4cdc-9d07-feaa5de7e948",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8fa385b-a9b6-480e-9920-e713998556de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53561c6f-980d-43a0-a17b-abb472f134d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b37830-198c-48f3-983f-c33a738e2535"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "594de192-951c-4554-ae4c-f3dc7c9cfe8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6cf948ed-d4d6-4522-bee2-7075ca4095cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbb31215-7dfd-4fb6-b823-893596e96a9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "436ef7bb-b7a6-4a13-8088-2341a2813db4"
            }
          }
        ]
      },
      {
        "id": "aec7d11c-0641-4041-9d86-0ab5ff52cef3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "40afdf21-ea12-4015-baba-00fbe0e921a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b0850a4-8f57-4daf-a715-efe5fbbb299c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d9160d8-7d9d-49a3-8fc0-b754479c16a0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c67651-3901-4763-8134-ec754536554a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d524203-290e-4091-ad6d-7f7ad62023a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6999ae88-f7b4-4e4e-9e25-f53607261b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "113cf6e9-acb9-4994-b9f1-3608cb088282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d253a66-bdce-4adb-860f-230c3ddba953",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24b356a2-1a32-4c62-8546-05ec91ec50db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7b7400-e1b7-461b-a098-928d2e721797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66f34c6e-6663-4e3c-a64f-fa0529773d45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc0ed064-3208-49a3-89b8-1f2ec7881aa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a9bd4a79-752e-4825-bea7-08396eeb0027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abf4ed2d-114e-4883-b7b2-a18072d70188",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9df831f1-0607-4279-a4f1-131cbd144be0"
            }
          }
        ]
      },
      {
        "id": "58b0aaee-2183-4d9c-afb0-a57c038d3662",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cfc97fcd-d52f-4ff5-a08f-01abf43d539f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "169faff7-f217-4fe5-aebf-9d547e40ee4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f361cc64-cb4c-41fa-9a7e-8c26b1299694",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b54b24f-855f-435f-b7fb-b59f9c59f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f5806e-2705-4f6a-abaa-3db882176cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e8ab28-c3d4-49f3-8641-578a1062c548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6e14ec1-a360-43f1-992f-90ddb4c883cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78045a57-7433-4f0b-9bb3-7ab1e4e4fcce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bf07751-0efc-4c2b-8e57-bf8bc922ce34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48a5bf69-eac1-4794-b81b-69baa77c2e9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91f9aa16-c9b4-44da-bffe-3e1dccc9c3e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b64947a1-ec0b-49e1-bf04-168b5d1f72fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b54306d2-212f-4590-b8c7-bc318838aeea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e241269-6157-4ab6-9f73-0396921f6973",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7236bf45-b64b-4726-9c63-b6e8923e668c"
            }
          }
        ]
      },
      {
        "id": "901861b5-77e1-48a7-b6ed-9f2623970b95",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "14d54ddd-0c93-44de-9db0-d0825c81fd47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "901a7633-6634-4987-aed7-00da73408e94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15b01340-7a1e-48f3-89e6-45bcc7d77755",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813814c7-7866-49fe-94de-239f82f0ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca9e52b6-e2e5-4faa-a552-1801646d7d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63af000-ba21-4b50-ab32-3318c2980c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "803f5c94-527e-4803-bf74-2c4465e2ab9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2888224-f9b5-489a-8083-bdd4909f9557",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea6d8ab2-80bc-4b33-9df2-a663d5c6be09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37aa76a-7f86-4aea-8ac3-6b9fc6967fb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72119957-9a6e-4b7f-9af4-a9ef25a01625"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b47d7d48-ad21-4646-8855-78afe3ab8b2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2844c8f-ac58-49a0-b74b-53f9cacd8ed8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80877142-90ee-41bc-b8bd-30da020df214",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c842b8f-8bc7-4ca6-971a-7cb371d90464"
            }
          }
        ]
      },
      {
        "id": "643f27ca-fa36-4576-9913-5e3ed9f0c5db",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a78732ec-8cfc-4b25-8d17-09dab522cd0b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9c60316-5034-4939-961d-3df03c092c77",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2bf449eb-83bd-420b-ae4c-2f4875d8fe8a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c805d37-9ca7-4b57-8ea1-ec7e08a523cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b003b9e8-35f2-4756-8af6-16f50002e806",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.5964912280702,
      "responseMin": 6,
      "responseMax": 6376,
      "responseSd": 475.58116099089006,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699576465295,
      "completed": 1699576516340
    },
    "executions": [
      {
        "id": "45af66af-bde3-4306-8ca9-6b0c636607f8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c2205a14-a8cc-4f64-bb9e-fd3914056c5d",
          "httpRequestId": "2b414973-ef40-4083-a1c5-f6f628750ddf"
        },
        "item": {
          "id": "45af66af-bde3-4306-8ca9-6b0c636607f8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c55b3596-bbc1-457b-9613-eace0b6b4deb",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "e3274ddb-f4c6-46c6-be00-79f1ff778e0e",
        "cursor": {
          "ref": "7fcae653-36dc-4045-9863-c5c744fa651f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aef87410-2a60-494d-bdaf-4d9e61240e18"
        },
        "item": {
          "id": "e3274ddb-f4c6-46c6-be00-79f1ff778e0e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "23aaf140-8e87-499d-89a8-8c7bae5902b2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "a87e5bf1-7a3f-4571-9162-ea8557becd6c",
        "cursor": {
          "ref": "b9737363-66f7-411b-aaf6-772c56130c7d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "63738138-d68e-4fb7-9323-b63840f9679e"
        },
        "item": {
          "id": "a87e5bf1-7a3f-4571-9162-ea8557becd6c",
          "name": "did_json"
        },
        "response": {
          "id": "ddf805d6-a2a0-4a3e-8b2b-edf5f1c86a03",
          "status": "OK",
          "code": 200,
          "responseTime": 473,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db20d98-655a-445a-b8db-8587b389511b",
        "cursor": {
          "ref": "2f8bffbc-2fd0-498e-be84-3648711b2b72",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d7ab5725-c558-4d85-bb3b-b29714fc6539"
        },
        "item": {
          "id": "3db20d98-655a-445a-b8db-8587b389511b",
          "name": "did:invalid"
        },
        "response": {
          "id": "9003e4c1-2eeb-4bc7-9f24-f6149acdd62e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 640,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db20d98-655a-445a-b8db-8587b389511b",
        "cursor": {
          "ref": "2f8bffbc-2fd0-498e-be84-3648711b2b72",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d7ab5725-c558-4d85-bb3b-b29714fc6539"
        },
        "item": {
          "id": "3db20d98-655a-445a-b8db-8587b389511b",
          "name": "did:invalid"
        },
        "response": {
          "id": "9003e4c1-2eeb-4bc7-9f24-f6149acdd62e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 640,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23034cc1-b2a3-4098-aa06-5480a5e19ae6",
        "cursor": {
          "ref": "f9e06e5e-349d-443a-be9c-ab8bdc8a1ed2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7e923b40-3e54-4054-add4-f9f2b3d6c1a2"
        },
        "item": {
          "id": "23034cc1-b2a3-4098-aa06-5480a5e19ae6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5390225c-1823-4e70-944e-4bcc48b238ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b116c0-a79d-42b5-9e22-f503bf7231df",
        "cursor": {
          "ref": "4db6efdb-7e52-457e-9477-8c77719232d8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6b20040f-80b7-4b97-be29-29ba7351f6ce"
        },
        "item": {
          "id": "72b116c0-a79d-42b5-9e22-f503bf7231df",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3f2eff07-622f-4e30-b68a-bbb2bf5cc765",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbd377a-75c6-45ed-8c7e-501fad3fda54",
        "cursor": {
          "ref": "bba8bd0c-477e-4b1e-be2b-a4787a14f8ec",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7eb8c5eb-5f91-4c04-be89-84dd404a54b8"
        },
        "item": {
          "id": "3fbd377a-75c6-45ed-8c7e-501fad3fda54",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8b702c14-e99b-4b98-91b0-ab3885f58a94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc3f826-7657-4e5c-8611-757ecb7b2071",
        "cursor": {
          "ref": "ab2d7e28-72fb-44e1-afd6-355638e7c5f9",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76512460-a4ec-4977-b4f6-9f58c7e59406"
        },
        "item": {
          "id": "3cc3f826-7657-4e5c-8611-757ecb7b2071",
          "name": "identifiers"
        },
        "response": {
          "id": "8138a710-242a-4639-8fef-e09c2ec99cf7",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db7217f-4448-4773-9b24-f119e54f043d",
        "cursor": {
          "ref": "645347b1-06b4-4b89-b24b-76e41656ec82",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "46ed61cb-9948-4e89-90ac-07c8becb1848"
        },
        "item": {
          "id": "8db7217f-4448-4773-9b24-f119e54f043d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8031d4da-b5f2-4341-b182-75c00276393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afe15b1-5028-4a6f-af15-58326f360f44",
        "cursor": {
          "ref": "a75870df-4d12-4de4-8ac0-59a72c65da73",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24ebb562-e5cd-4fb7-b03c-da58399003e5"
        },
        "item": {
          "id": "9afe15b1-5028-4a6f-af15-58326f360f44",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "40e3d158-dd6a-4513-a2c6-cde1e87c7b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdad9a94-f214-41f2-a36f-c35ac70fcc66",
        "cursor": {
          "ref": "7262e1cc-dce2-4736-8a09-93a08b49eda0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6417b6bc-571f-47df-aaee-1e6436b4beb8"
        },
        "item": {
          "id": "cdad9a94-f214-41f2-a36f-c35ac70fcc66",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "26ec3ec8-fc1a-4d69-be3e-6e261672f30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e703e475-bd7a-4364-8ae0-bd16cdfb0890",
        "cursor": {
          "ref": "a38f3e69-baea-4a94-a34e-be353bd5b512",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1aae8d4-95ef-489e-ae89-d9abfaa85842"
        },
        "item": {
          "id": "e703e475-bd7a-4364-8ae0-bd16cdfb0890",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "012d2cda-4b3e-4094-9d83-4345a72271a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eea645-8a2f-464c-8385-e2f1ccc0904d",
        "cursor": {
          "ref": "35371f1a-8038-4b6e-bdfb-0a64482cf75b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "34ec5509-369f-4313-8421-fca85ff72418"
        },
        "item": {
          "id": "c5eea645-8a2f-464c-8385-e2f1ccc0904d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9c9c2c66-9d85-4ef9-a9d3-97acac6d3c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b46160-fa25-43e7-b85d-9e783755a7e5",
        "cursor": {
          "ref": "4deaa194-c307-48e8-8fad-f3c111da4167",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d646ff94-3181-4cd2-8111-89ec919ce1ab"
        },
        "item": {
          "id": "15b46160-fa25-43e7-b85d-9e783755a7e5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bb9ce430-10a9-43cf-bedd-ad887570ff06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b936e0-07ec-43df-ad59-bdf16b32a9c5",
        "cursor": {
          "ref": "0b5e25d7-6e46-4f33-ba3b-c7f7acd8b90f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b049ebf3-8909-41c1-b22c-93117a578686"
        },
        "item": {
          "id": "f1b936e0-07ec-43df-ad59-bdf16b32a9c5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1dee3ec3-cdfb-4cb1-a880-34d215c71ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44431cd7-2c7c-464c-893b-4833627562e4",
        "cursor": {
          "ref": "669baf46-3a75-4339-be43-4eeed6be504b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "14f0a914-eccd-4e39-be65-4e1cef79aee0"
        },
        "item": {
          "id": "44431cd7-2c7c-464c-893b-4833627562e4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b197a64c-93ae-44ec-ae8f-50eac3b44cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f967cca5-69c3-4ef2-90d0-616bdf93b955",
        "cursor": {
          "ref": "df351900-f9f7-4dda-9103-bb414c59a57e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "692d05d1-823a-41a9-886f-b181741715aa"
        },
        "item": {
          "id": "f967cca5-69c3-4ef2-90d0-616bdf93b955",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc84400d-1a36-4243-8912-a92ec6dfd25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c9b83f-9a37-4ca6-8b6b-fea523e7e231",
        "cursor": {
          "ref": "23e6e8f2-2fb0-4e6d-8d3a-5f11d97d1636",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "448ff04a-258d-4627-9a26-4c6c247b2925"
        },
        "item": {
          "id": "14c9b83f-9a37-4ca6-8b6b-fea523e7e231",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "38d0a321-1309-4946-8065-853d2da45feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397e028e-f35e-457d-9fa6-53e436c1b1c3",
        "cursor": {
          "ref": "b4619b85-34f1-43fd-83d5-686227e427d3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab4f4c98-436b-4f39-b9b9-336bbdbe0665"
        },
        "item": {
          "id": "397e028e-f35e-457d-9fa6-53e436c1b1c3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc0ac7ff-326d-4f91-8f1b-5c2d13a96b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e911a843-fddf-4762-9786-ec4f7c32c38a",
        "cursor": {
          "ref": "4d62275b-d641-4aef-a1ac-14b8909865b2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0a41b3b5-ec28-46b9-a35e-383abcc658c1"
        },
        "item": {
          "id": "e911a843-fddf-4762-9786-ec4f7c32c38a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b9105fdc-9713-42bf-bc55-a55aa1907f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9d3d99-3f68-4be7-a69c-911da719cca8",
        "cursor": {
          "ref": "469fa97e-7d24-46c3-8ca0-c487ae765745",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "94f1f644-c53d-4f61-86e8-adf9a8f976a9"
        },
        "item": {
          "id": "5c9d3d99-3f68-4be7-a69c-911da719cca8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5529aa74-b5b5-49bd-bc9d-b95c7ec8cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139d484e-8741-4796-8796-a83b3f95a300",
        "cursor": {
          "ref": "13f7ea26-8307-4f7d-94db-0f71cf009f9c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5b53c794-5d26-474f-b573-f6a6a4ae417d"
        },
        "item": {
          "id": "139d484e-8741-4796-8796-a83b3f95a300",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "20c416ce-63f4-4d84-92b8-0f23f9912819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a038b630-aaa9-4137-b346-b2c5e9df61ca",
        "cursor": {
          "ref": "ec34f0d6-a8a3-41d5-8071-4eff16382016",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "04f6da90-9517-47e6-8a62-548e40849536"
        },
        "item": {
          "id": "a038b630-aaa9-4137-b346-b2c5e9df61ca",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "151cd572-40c5-4bf9-ac86-8531a0320551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51bc40e-aac7-4cd5-816f-6fb28d42378a",
        "cursor": {
          "ref": "3a3265d5-58f0-4636-ad06-3ecb7bf20943",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "adba75e0-58ad-4923-847a-224dac0eb58f"
        },
        "item": {
          "id": "a51bc40e-aac7-4cd5-816f-6fb28d42378a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8fad813a-8917-4722-9eba-8492c3a26627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c672af0c-e0a6-4c15-b8bf-a5f25a8f7c8c",
        "cursor": {
          "ref": "b7dfe71f-b5fd-4523-82bf-4800e99ff0da",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6a8ee16-0901-4670-9110-b9077c197f0e"
        },
        "item": {
          "id": "c672af0c-e0a6-4c15-b8bf-a5f25a8f7c8c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "784572fe-0a86-4ef1-b212-32d5c614a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae1072-d5da-4111-a580-55f1b922fd38",
        "cursor": {
          "ref": "202be57f-3227-4050-bf95-6d4b7c3fcbbf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cca96414-1c9a-404d-8298-9103fd616dbd"
        },
        "item": {
          "id": "d4ae1072-d5da-4111-a580-55f1b922fd38",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "54e1531b-fd80-46e7-90e1-de9feab310db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0a456a-b43e-4987-876d-38a9393acf10",
        "cursor": {
          "ref": "c249dc79-58de-4a9c-a602-fa084a1f6fd4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e93f94cb-2c1a-414a-a78f-afbd1e8ac74f"
        },
        "item": {
          "id": "af0a456a-b43e-4987-876d-38a9393acf10",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8c8b5df-3fc8-4ada-bc5f-97d5ca2fae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c447e13-4e30-44c3-806b-c589151da581",
        "cursor": {
          "ref": "bd85dafa-f365-46a1-9d6e-61384b4312b2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "16b6a345-9c78-44a2-85b4-730e407f7215"
        },
        "item": {
          "id": "7c447e13-4e30-44c3-806b-c589151da581",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "261261c4-ea66-4035-bf2f-44c0d3c7c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720a6e08-899b-400b-b2b5-25101646c053",
        "cursor": {
          "ref": "256ccdba-d981-419c-a8ae-d2aa02608701",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8b0f0175-45a5-49e4-bf75-256f4fad9429"
        },
        "item": {
          "id": "720a6e08-899b-400b-b2b5-25101646c053",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bb7043c1-ca1b-46f1-978e-2a0754e97400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd4d26-d079-4ba5-86c7-1d4823945297",
        "cursor": {
          "ref": "64e7039b-40ff-40b6-8747-b0a62315638a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c4cb44e1-8556-4c17-99a6-0c2929f37af3"
        },
        "item": {
          "id": "5edd4d26-d079-4ba5-86c7-1d4823945297",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "50c8400d-20bc-4f08-8a76-8967139fdeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82728ba0-0e89-455f-a40e-073b8e3b060d",
        "cursor": {
          "ref": "afd5bf07-1b8f-4716-9584-63e02c55746f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "599b06ac-6476-4ad6-8438-f7d1a15b0c9d"
        },
        "item": {
          "id": "82728ba0-0e89-455f-a40e-073b8e3b060d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db480aad-2106-4e7b-ac1b-8f1a7c4ecf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1fdbdd-66ac-42f7-8914-03a9a6f0347a",
        "cursor": {
          "ref": "bc498cdc-452a-4438-9dc1-cb59366035af",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "33ed2b45-b37b-4b0e-9c85-f7a334637814"
        },
        "item": {
          "id": "3d1fdbdd-66ac-42f7-8914-03a9a6f0347a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5da37309-f5f8-42ea-bf72-948fea4100c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9902185c-2f33-4c1e-9099-99979ff7e579",
        "cursor": {
          "ref": "91f9f16e-0d8f-410f-85e6-4ada913b07e7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d252e952-8f90-4e76-a3e3-42b4924867cb"
        },
        "item": {
          "id": "9902185c-2f33-4c1e-9099-99979ff7e579",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ba83b618-594b-4ae4-a42d-a0a46e7d3458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cca9e-a896-4f28-b921-f1b099a4eccd",
        "cursor": {
          "ref": "a9c3d7e6-a7fa-4723-9439-fe2301a08f57",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae490d41-6cc6-4e98-85f0-232c198b5b31"
        },
        "item": {
          "id": "b18cca9e-a896-4f28-b921-f1b099a4eccd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "daaf5075-9679-4afb-afc7-5867dd7d8593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242a5b19-12f2-4dcd-8749-80a631f50e04",
        "cursor": {
          "ref": "a0959044-ce99-48d1-a80d-403b3879c98a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "12ad398c-d829-4cd4-b8b7-683ead8844f7"
        },
        "item": {
          "id": "242a5b19-12f2-4dcd-8749-80a631f50e04",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "69103e88-90fd-4b38-bd17-fde0ffed7d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484a6ec-01ef-4d03-ad96-962e5634583f",
        "cursor": {
          "ref": "e5cd8e48-c1a1-4feb-bf37-9ee9b8da7e28",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "19b19685-398d-461e-8e1b-dcfd55302822"
        },
        "item": {
          "id": "1484a6ec-01ef-4d03-ad96-962e5634583f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bdad9566-64ea-4db8-a83b-f3b79dfa42be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f0b19d-81ce-494c-8cd2-712cfcd96903",
        "cursor": {
          "ref": "ee06f459-4508-4fe3-98e7-606a7b0c88c5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a2facc5d-f09a-4493-b3c9-2ebc18d6d3be"
        },
        "item": {
          "id": "43f0b19d-81ce-494c-8cd2-712cfcd96903",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "167f93fa-8ec5-430c-9cd9-a2882cd9f259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3e5a48-42c4-41fd-b935-37873fefd130",
        "cursor": {
          "ref": "c2e868f6-715a-431d-ba36-e83a4e658f71",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "013ad58d-1a38-4a20-bd48-1529e4d1962e"
        },
        "item": {
          "id": "8d3e5a48-42c4-41fd-b935-37873fefd130",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f7be3d0-9d5c-4510-bb57-1f1bd2a3fd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e35bbb2-e53e-4ab8-8284-36a907b44a3b",
        "cursor": {
          "ref": "7af0b86b-4817-4d20-ad73-9c8b105135db",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e29b3957-4e25-48d2-9dc0-6cfe9246a73b"
        },
        "item": {
          "id": "6e35bbb2-e53e-4ab8-8284-36a907b44a3b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9bb782d2-9e30-4162-8ce3-271b885d4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ffd380-0672-4095-aeec-ab267a253ea7",
        "cursor": {
          "ref": "6b4742cd-675d-473b-99f2-b93972e9087f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d6eb18a9-fa8b-4ce6-8b0c-207273c8ddfc"
        },
        "item": {
          "id": "91ffd380-0672-4095-aeec-ab267a253ea7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "40adeb3b-dd1f-4379-ae4f-769f1f0653c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd34635-35ed-4b0d-940d-9384869e8ecd",
        "cursor": {
          "ref": "51e71733-6ed4-4fba-b028-3e3d001139d7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5c85647-eb96-4f02-9fb1-6c211c2390ec"
        },
        "item": {
          "id": "5bd34635-35ed-4b0d-940d-9384869e8ecd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d55e4dd-ab3e-4aa1-bd2d-fa25226e1cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a442fe-daae-4ce8-9235-41d26283810b",
        "cursor": {
          "ref": "2b5b19b6-45d6-481e-824a-b0553e0eb9ee",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bf0100c7-bb57-4ca6-b29f-1d787d2fb5a7"
        },
        "item": {
          "id": "49a442fe-daae-4ce8-9235-41d26283810b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47f7a866-8a74-4b92-a0fb-99468a67a6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccbb9ca-4932-48c6-a65d-107b1411ea49",
        "cursor": {
          "ref": "3e0bf797-14e8-4cb4-a368-dbbf17ab0e7c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54357f39-7225-480a-91c0-f4fbb6c54dfc"
        },
        "item": {
          "id": "4ccbb9ca-4932-48c6-a65d-107b1411ea49",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e23f8139-a5d9-4566-a107-2b52afe49a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089a762-1407-4ae3-969b-bd9ba5808b8e",
        "cursor": {
          "ref": "592670aa-b7aa-458b-9d27-8f2d1ad394ed",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4698d0f8-e78c-4f44-990f-a86d81363baf"
        },
        "item": {
          "id": "d089a762-1407-4ae3-969b-bd9ba5808b8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "34fad5a2-f61d-4267-a24c-6210b7f70c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b0cc25-2524-48b7-8c0a-6931f209d326",
        "cursor": {
          "ref": "23a2e340-5ce7-4c42-b6a1-c27f4ba8f90b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa7a7a89-20a6-446f-965c-bd608831b826"
        },
        "item": {
          "id": "a3b0cc25-2524-48b7-8c0a-6931f209d326",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e4fdf607-89c3-4ca3-914b-e13ea06c6d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090247a3-2af1-4b98-89d5-e2a5afda8432",
        "cursor": {
          "ref": "091fe071-e022-4f67-b8e4-284617cbd20f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aeb4ad24-8754-4e24-a0fb-43f591334bed"
        },
        "item": {
          "id": "090247a3-2af1-4b98-89d5-e2a5afda8432",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "63141792-1a91-407e-b88e-3cc40c165b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b51d63d-7378-4b5d-9004-f6209b548272",
        "cursor": {
          "ref": "d1a2f20e-548d-417b-a3cc-a2ff0dc6d4c2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "77861e18-1bff-40cf-b327-b0e2d7c3a393"
        },
        "item": {
          "id": "0b51d63d-7378-4b5d-9004-f6209b548272",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e004f863-bde6-4ca8-ab03-7d65d83cebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5eb719-7293-4432-9e01-65d1d01c70c4",
        "cursor": {
          "ref": "e9f7ab82-6c7e-4bfc-9a08-d3dbb7211111",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "edcbc5ee-3687-4ac3-b721-82db024efd95"
        },
        "item": {
          "id": "df5eb719-7293-4432-9e01-65d1d01c70c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4faade95-01b3-499e-a560-0a83b37943c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fea7f0-ba87-4262-896b-7ad939a5afbe",
        "cursor": {
          "ref": "23737e57-ec5f-47d4-9bef-85af8e3cf63c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "eec0b641-d82d-4185-b3b2-2e40b146f1be"
        },
        "item": {
          "id": "f7fea7f0-ba87-4262-896b-7ad939a5afbe",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "84832637-fac1-4558-ac8e-501977cd7fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e728796-a2fe-4829-8eb7-fc2518854284",
        "cursor": {
          "ref": "883b8f8f-a939-4ece-86aa-a41161bfc883",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f6dff275-fd47-4d2e-a776-e6fabe793a53"
        },
        "item": {
          "id": "9e728796-a2fe-4829-8eb7-fc2518854284",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9173c052-5121-4279-a1c8-20cc0295fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e6aac6-88a8-4d20-9213-b79af735b7fd",
        "cursor": {
          "ref": "305962ab-3fd5-4264-91d1-4b0a1f1c5dcb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "17e8c42c-c4ac-4bbc-8c73-a5306341f830"
        },
        "item": {
          "id": "52e6aac6-88a8-4d20-9213-b79af735b7fd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c6645d50-4223-4863-a3f1-eef8adef98ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73ce8c2-cfc2-4a20-881f-4ee1ce46a68d",
        "cursor": {
          "ref": "f8c24f19-a677-485e-bdf2-55c3d4b27e67",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "849a741b-8f8c-49ea-ba61-159e5fd7a937"
        },
        "item": {
          "id": "c73ce8c2-cfc2-4a20-881f-4ee1ce46a68d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4faf56f-f282-45f1-96b8-6a57fa3874f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bec96b8-0ecd-43c9-a4e4-99cd05fe0ab2",
        "cursor": {
          "ref": "db722afb-6ead-45f0-a5ee-32961136809d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d2a0225-8020-4f32-82a8-aea8a0af12a4"
        },
        "item": {
          "id": "3bec96b8-0ecd-43c9-a4e4-99cd05fe0ab2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8bc2db78-445c-44b3-910b-d6da5932afc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e725970-4d5a-4b03-8f15-971e3c0ef8da",
        "cursor": {
          "ref": "52002cf3-5de4-4096-9e3d-f633936c3dc3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1edb632d-db62-429d-a66d-9e046b50bbc7"
        },
        "item": {
          "id": "5e725970-4d5a-4b03-8f15-971e3c0ef8da",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "90874f85-0258-4953-a06c-e4ff987742ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b96e93-611b-46fc-9f60-2468dc3b6e98",
        "cursor": {
          "ref": "9ac5c6a5-e542-4c2c-8db8-c81cfd58edb7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4747c603-f66e-4048-b8c3-717406252f13"
        },
        "item": {
          "id": "e4b96e93-611b-46fc-9f60-2468dc3b6e98",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "602d955c-afa0-4696-a827-371c74861da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4572486-a1df-4760-8f41-8719552b6d07",
        "cursor": {
          "ref": "64107646-f3b8-4153-a5a3-2851f7ad2164",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0baf8092-b8ed-46df-b4f4-f19982e15e22"
        },
        "item": {
          "id": "d4572486-a1df-4760-8f41-8719552b6d07",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "71cc8cfb-7d2c-4d24-8fa5-e5949dbfb942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4cd56b-fd07-4f8e-9ac4-10eeb54165b0",
        "cursor": {
          "ref": "10659509-c499-46f2-b556-b9b7ed6ef21f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e21c578d-6cdd-45df-a099-f3da826ac875"
        },
        "item": {
          "id": "fe4cd56b-fd07-4f8e-9ac4-10eeb54165b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "95ba12b1-3e24-4586-b48b-d617d357d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3210890-41e7-4a8b-baf2-2b8a8a673609",
        "cursor": {
          "ref": "c833dae4-bd9d-4979-a911-a2af72eb7525",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b80a689c-5d3b-470e-83bd-34786fd4ff3f"
        },
        "item": {
          "id": "b3210890-41e7-4a8b-baf2-2b8a8a673609",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45c5de23-4530-4f99-88ba-d19568965878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911f4e9f-41fb-4148-b47e-e5672a2d6693",
        "cursor": {
          "ref": "baca0987-c214-4885-baa4-d9737a97d049",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "adef8053-266f-4fb5-9854-51c7446cf54d"
        },
        "item": {
          "id": "911f4e9f-41fb-4148-b47e-e5672a2d6693",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "203b85e4-7bf8-4988-8801-901d0936832f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eae7a7-d25e-4012-be41-8b7bfb5e501f",
        "cursor": {
          "ref": "546f3b8f-608c-4918-9ff2-4d17ce5410d9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "83529404-3f35-4a90-9098-09ac0d9e34a5"
        },
        "item": {
          "id": "90eae7a7-d25e-4012-be41-8b7bfb5e501f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e9177699-3b60-487f-b4e4-e9342a19c10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7e1bdd-d348-4b89-b93f-1124fbe19e35",
        "cursor": {
          "ref": "c187f2df-140d-4ac5-aac1-847c13c5d127",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7df37a86-27e7-4305-a7f8-cc32af5c6218"
        },
        "item": {
          "id": "7b7e1bdd-d348-4b89-b93f-1124fbe19e35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "02221bac-ca06-46f7-9955-9edc06141499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ba9809-70da-4dab-8c6f-e13cc3285688",
        "cursor": {
          "ref": "39315ba2-1acf-40d4-81b1-d0ac6fa7c2b7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6f809bcb-136f-491e-8924-a65666db7ead"
        },
        "item": {
          "id": "17ba9809-70da-4dab-8c6f-e13cc3285688",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "be9b54c3-c851-453c-a148-24b71910630a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2054592-73e9-420b-bc37-51851f01b59c",
        "cursor": {
          "ref": "b453f40d-8acd-4c26-a5c6-427c9953dba8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "489cf100-1d9f-464d-8a8a-24a445d0f588"
        },
        "item": {
          "id": "b2054592-73e9-420b-bc37-51851f01b59c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "be7651f6-86bd-4428-b2d5-9521e34c9c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ddd946-3b47-45cd-a07b-c734136cb813",
        "cursor": {
          "ref": "3af6f287-0193-4b12-8ba3-38a31b49f6d2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fa5186bf-782b-4fca-9c06-5c2db56d12d7"
        },
        "item": {
          "id": "c9ddd946-3b47-45cd-a07b-c734136cb813",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d7b743ee-e1d9-4106-aa9e-f4b9206a3380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254d7c41-78ab-4bc9-b3a7-be4b4d3c21da",
        "cursor": {
          "ref": "d8398838-abb9-4854-acef-e3098d2c3514",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a3ecb0d-54ff-4f06-b366-013ba1b98ac8"
        },
        "item": {
          "id": "254d7c41-78ab-4bc9-b3a7-be4b4d3c21da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "37a0c56d-bc7a-40b3-b9f1-5fd50f86b478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95a5747-3230-4390-8e61-b61bff5ea370",
        "cursor": {
          "ref": "595e7514-f78c-4589-93a9-cf1ed75e76a9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "091e8d38-4761-42bd-b7ca-cb3d4350783f"
        },
        "item": {
          "id": "b95a5747-3230-4390-8e61-b61bff5ea370",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3c0177cf-7706-4be0-b13d-0b6239189fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed14eb7-1110-4572-93e4-8a9e7bb51f3a",
        "cursor": {
          "ref": "a6eaeb55-fa7e-411a-a93c-11b3ddd3791a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2e7adabd-f64d-4f0e-aa4e-250c74430574"
        },
        "item": {
          "id": "0ed14eb7-1110-4572-93e4-8a9e7bb51f3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8ebc3b9e-075a-476b-a29f-b97b2f43b698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89feb7c2-91e2-49b0-a798-4d96a862d3e7",
        "cursor": {
          "ref": "670514d9-35ca-4528-bace-9e7db8bc631d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "38e91012-e157-4460-a9d2-0a5ec073e344"
        },
        "item": {
          "id": "89feb7c2-91e2-49b0-a798-4d96a862d3e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "69bc0275-438b-41c6-8924-1884e5945762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f1991-3121-4ab4-8f06-5ce823354ffb",
        "cursor": {
          "ref": "c4c69117-2006-4281-957f-6e5a86369be0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f1ae3a07-41f1-49c0-bcb7-62d019fad231"
        },
        "item": {
          "id": "373f1991-3121-4ab4-8f06-5ce823354ffb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9f9179d6-d640-48f9-a2b8-9dd0ca45c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1634e2-56dd-4acb-89f4-ba60c454d244",
        "cursor": {
          "ref": "8fdb91c0-61e4-4987-bcd6-7e19eddd7c85",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "62cb1ba5-8e38-41c9-b3ca-c627b5d2e29f"
        },
        "item": {
          "id": "ed1634e2-56dd-4acb-89f4-ba60c454d244",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "03ef4103-8c21-4b70-aeac-bcb01a559855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da63c3bd-49b2-4cf8-b71b-c5ec9e01ad14",
        "cursor": {
          "ref": "9ee54d84-8f9d-49c4-aab8-b54601d2fe8c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1a9de78d-e76b-4805-a4fe-2b0de67de535"
        },
        "item": {
          "id": "da63c3bd-49b2-4cf8-b71b-c5ec9e01ad14",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1711f38d-b814-4b2a-8d1f-75608122bcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0892d1b-0e4a-43ed-b743-7de0eb8cdf4f",
        "cursor": {
          "ref": "4451d678-7357-458f-853b-11615c4a9d66",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "da760c80-8daa-447d-b2b0-769cca0fee1f"
        },
        "item": {
          "id": "d0892d1b-0e4a-43ed-b743-7de0eb8cdf4f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2abfe77-0e0c-4785-97d5-dd8294388ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee077be0-3d71-47e5-b457-e74ed1d39bb9",
        "cursor": {
          "ref": "514c6c0a-b0ff-4da3-a05c-a2adf5dcc17f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "12e2dce9-25af-4d1c-abf9-c14a3fff0104"
        },
        "item": {
          "id": "ee077be0-3d71-47e5-b457-e74ed1d39bb9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "46eb4471-54d1-465f-9b2d-e23c17ec5d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722c0772-78f8-4043-b4da-d94ea5e65eea",
        "cursor": {
          "ref": "1bce0868-bee8-490d-9413-1a7f40bf0f3d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "95e35d8d-c20c-4a1b-abf5-4c3bfae7d227"
        },
        "item": {
          "id": "722c0772-78f8-4043-b4da-d94ea5e65eea",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "beff0d70-0d1d-4b51-9924-247d88b0c702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52ef9ca-fdcb-4c3c-92ed-a9093dcf095e",
        "cursor": {
          "ref": "59961cda-d61a-4825-bb11-d42719df52c6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dbc5d684-c18a-429f-b4b1-2afa9ac72f03"
        },
        "item": {
          "id": "d52ef9ca-fdcb-4c3c-92ed-a9093dcf095e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd91ac70-c9ca-4663-b806-a45a75fd093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87717ec5-626f-4fd3-af51-088e246f124c",
        "cursor": {
          "ref": "697c4df4-dd55-49bc-8e84-b94b65d5ffb0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6f47ec6e-54cd-4fc8-97ac-68bfcf0b986b"
        },
        "item": {
          "id": "87717ec5-626f-4fd3-af51-088e246f124c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "03e466b9-1bec-4d37-a3be-2f4afd1ef5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598d0cfd-0d66-44b0-bc88-39135e93d08f",
        "cursor": {
          "ref": "491a0a0a-3db7-47ea-8d45-22839d33355d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "17ee4fa2-3eb0-4edc-ae94-a38bab5e99d4"
        },
        "item": {
          "id": "598d0cfd-0d66-44b0-bc88-39135e93d08f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e59398c-04d0-4dc0-8a3b-1af88d360676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc472d-e23c-4d65-a421-132ca56a36e4",
        "cursor": {
          "ref": "f207c4ef-8f0e-42c0-a026-e5c0de8f0020",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "014681a6-86c7-4656-9e54-c3d9b1197ac1"
        },
        "item": {
          "id": "ddcc472d-e23c-4d65-a421-132ca56a36e4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "74fe7114-3208-40bb-944e-e0ecc113a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48f198-2525-417c-8e36-132d50a347a8",
        "cursor": {
          "ref": "c414c9e3-62c1-4187-8348-bcddbae7a4e6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4960a536-5d70-438f-a313-9250091207d1"
        },
        "item": {
          "id": "cd48f198-2525-417c-8e36-132d50a347a8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b963e26a-a0de-4f02-9b07-52d3e433ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ba76ee-3ced-4f9b-a048-eb50cb66ce66",
        "cursor": {
          "ref": "b9bce8ed-f312-4bac-a7ef-ea588f6b0d8c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d6cf6c10-6879-4493-953d-43026bdb9929"
        },
        "item": {
          "id": "d5ba76ee-3ced-4f9b-a048-eb50cb66ce66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a0c36a39-f9b9-4ce4-9028-1f7aed73010b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4377915c-1682-43fa-91f2-bfe53c295256",
        "cursor": {
          "ref": "1492db10-639a-4e95-9c49-d303f4d401d4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d19b047b-beb2-412f-b28d-1f136cff2985"
        },
        "item": {
          "id": "4377915c-1682-43fa-91f2-bfe53c295256",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0c92e2c0-4835-49e7-9b9a-45e21b3c4f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d8923e-52b1-41ab-9251-b37c0078966b",
        "cursor": {
          "ref": "1538bf6c-fbed-434c-94c5-441842a68345",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9c8379a-8228-443a-8402-012c7faee5c7"
        },
        "item": {
          "id": "f7d8923e-52b1-41ab-9251-b37c0078966b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "279e5c3e-be58-4630-ad50-d9876895de4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b0abf2-139b-4055-957e-f367a463f761",
        "cursor": {
          "ref": "08ea60a5-52ff-4322-9052-670c328a09a5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7831ff3-68f5-4eb3-a59d-102b310b05e3"
        },
        "item": {
          "id": "f3b0abf2-139b-4055-957e-f367a463f761",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3b4f874b-811a-48b5-bf65-2e4b0290456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6b9478-af1e-41af-8c17-7f4b7fcf4b8a",
        "cursor": {
          "ref": "f737dc82-740f-427e-a756-5824b650810a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6efed526-f4ee-4932-a796-f558b3f4ec83"
        },
        "item": {
          "id": "bd6b9478-af1e-41af-8c17-7f4b7fcf4b8a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a4be71b1-f935-4892-bb59-4bb99fdb4bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd829ee0-be7e-4b1f-a976-28ddb6d20f77",
        "cursor": {
          "ref": "46d04357-35ad-4a4a-9494-04624edc2d68",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2e34ce41-13d8-40d2-889d-86f549b05492"
        },
        "item": {
          "id": "fd829ee0-be7e-4b1f-a976-28ddb6d20f77",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e66317c-db41-4c21-b39c-24663410faab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7694f64c-4f07-4642-bf76-8540332e9275",
        "cursor": {
          "ref": "7b0ed57c-0ca2-42fe-bb98-f6cffac89822",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fe53569e-9ed5-415f-84cc-994a8101c547"
        },
        "item": {
          "id": "7694f64c-4f07-4642-bf76-8540332e9275",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "76ec6702-e58e-44ce-a6cb-2429f15767e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f515eb34-4374-4f1b-b6ac-7dc19d3af68b",
        "cursor": {
          "ref": "08ba76a6-ee42-4f70-a633-fd020eca7551",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1c261f0d-06e8-490e-b6ee-42b717b8372c"
        },
        "item": {
          "id": "f515eb34-4374-4f1b-b6ac-7dc19d3af68b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "af239f28-40f5-47e7-b6e3-fb5282bc1afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6db53f-7cfb-4232-afbd-c87a66761e2b",
        "cursor": {
          "ref": "bd6ef30e-b17e-46e4-bdf1-a0250dc0a97e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "10e1eeaa-b396-4af3-ae19-5403c1c8c458"
        },
        "item": {
          "id": "1e6db53f-7cfb-4232-afbd-c87a66761e2b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b8c75ae3-4618-4bf8-af68-75de435117fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e97ffd6-8511-4320-8825-b800b32807d0",
        "cursor": {
          "ref": "8c3f4ccb-47ae-4936-a9d3-75c733fd08de",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e876d50-92ba-46d2-a83c-97f2cecd5a60"
        },
        "item": {
          "id": "1e97ffd6-8511-4320-8825-b800b32807d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c5f4dd7b-54ad-48d6-98a5-7683ec5b36c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11c3c13-f39d-4b50-83ee-1bdb7fd530a8",
        "cursor": {
          "ref": "1478e51a-58d6-4f61-9c7c-ce531866a06c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "465942c9-2391-49e7-976e-f4fd7e67c34c"
        },
        "item": {
          "id": "f11c3c13-f39d-4b50-83ee-1bdb7fd530a8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5625784-84fe-4793-a856-919b143f3161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef69fa5-4eae-4329-bd21-d47cd2358956",
        "cursor": {
          "ref": "a949d1a6-346c-4c08-8e5e-98c95593b159",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ce73e7af-4318-4562-a9e9-9ef8e8fde14b"
        },
        "item": {
          "id": "4ef69fa5-4eae-4329-bd21-d47cd2358956",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54ea330b-7ccc-4b60-92a0-44e70c6ff11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095bb81a-109c-4684-b43e-f85eb737ccce",
        "cursor": {
          "ref": "b26f3daf-289f-43ce-ab77-2b002520fd93",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "091ba173-4961-4751-8629-45ab718138fe"
        },
        "item": {
          "id": "095bb81a-109c-4684-b43e-f85eb737ccce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bd3fb151-2727-4329-9c4a-14cc8651f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4c1e6e-0ba1-4c20-a6df-fa80e4a7dcff",
        "cursor": {
          "ref": "d99bc074-bbac-4eb3-a718-7836f5b4d162",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b34307ec-05ac-4d4b-899e-93c5c46ce8a9"
        },
        "item": {
          "id": "8e4c1e6e-0ba1-4c20-a6df-fa80e4a7dcff",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4f976f63-fbe8-44a3-93f7-8e6ec8e90903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98417724-c1a9-455f-b48c-16ecba273384",
        "cursor": {
          "ref": "4149929a-e239-4e38-8ba2-268fc6e2a522",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d18181b6-1998-4811-8400-3b9632d1af8a"
        },
        "item": {
          "id": "98417724-c1a9-455f-b48c-16ecba273384",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "33f02890-84cf-4bdb-a5cd-6dcc5cae9318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c6a80b-dfc9-441f-a649-7794a4606492",
        "cursor": {
          "ref": "4df9a061-2a86-4597-9079-90eaa42c6118",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9652c9e5-a32b-44fe-aad2-f4b6d8811841"
        },
        "item": {
          "id": "17c6a80b-dfc9-441f-a649-7794a4606492",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ee9475ae-8202-47ff-be4a-f906e8bff569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e84972-ebc1-4540-a95f-50ba8de335a6",
        "cursor": {
          "ref": "90d64112-653a-4d00-8c79-f8d6346fc60c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0c1ae840-2142-44ce-b510-b325a91735c5"
        },
        "item": {
          "id": "a9e84972-ebc1-4540-a95f-50ba8de335a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1f375c88-80d5-46fa-90c0-7d5bbc939d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1803ca08-fb20-4d02-8700-18a5c7e2b6bd",
        "cursor": {
          "ref": "5578922c-e882-4222-8b97-e1355f1e9379",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1523fb36-a903-4f41-b397-dc6287f22819"
        },
        "item": {
          "id": "1803ca08-fb20-4d02-8700-18a5c7e2b6bd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3c26bec0-2604-47a3-bd32-ca677530a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7ce3d1-8f3b-4391-a4ce-8da2edd78ac7",
        "cursor": {
          "ref": "036409b7-5e09-47dc-a6f7-10f5cd24c55c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4c4a9be3-fff3-45b5-8ea6-d0bb0f0d59ec"
        },
        "item": {
          "id": "7a7ce3d1-8f3b-4391-a4ce-8da2edd78ac7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6dfd23bf-a341-4cc3-8d84-0ff66cc98923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a625d26-cbfd-41ad-a139-10cb79df6aca",
        "cursor": {
          "ref": "bc32ac27-a3c1-4165-bb25-717a374a9b78",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a3c9188e-482a-466c-a0e7-de207363720a"
        },
        "item": {
          "id": "7a625d26-cbfd-41ad-a139-10cb79df6aca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a7515b39-733b-44ae-b4e6-a8834b47e1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2200b7-650d-447a-90a7-4bea04e76cd5",
        "cursor": {
          "ref": "75caf30c-12d7-4830-b496-1da363817784",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d1cf9d3-b97b-42b7-aca6-7305a8dfea33"
        },
        "item": {
          "id": "3d2200b7-650d-447a-90a7-4bea04e76cd5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ac6598d7-1fae-48d7-9068-709118160d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebcb619-138d-4721-9a99-9f30d6455fbe",
        "cursor": {
          "ref": "c5036fde-ee56-48dc-8d52-bee3eaaaf23d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8ef0cd70-989a-4f15-b0a4-0847038f79d2"
        },
        "item": {
          "id": "2ebcb619-138d-4721-9a99-9f30d6455fbe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8cc20b58-355d-4ee0-b51a-ed721936d9be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ecacac-a1d6-48b8-85ca-18a95e3eb70b",
        "cursor": {
          "ref": "a28795f2-e793-4bf5-9cf4-22be9a93ea06",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c9d807b4-8a40-47f2-aff2-c4b8ff57a865"
        },
        "item": {
          "id": "70ecacac-a1d6-48b8-85ca-18a95e3eb70b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d4d64f40-8681-4234-8033-e60e15d9250c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "986c7baa-6b1f-4271-9567-b2b767c2e05b",
        "cursor": {
          "ref": "2b1171b2-fca2-4ce0-879b-369dc7ee9366",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "798038ab-67db-4c31-b31b-30062c437bea"
        },
        "item": {
          "id": "986c7baa-6b1f-4271-9567-b2b767c2e05b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "42a710b8-8c2e-4a80-b72f-b46644884b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "cc3942d3-9943-4ce3-be2d-d13d4ac54bca",
        "cursor": {
          "ref": "87ee94e8-3d8e-4dda-b1f7-2462b004f35d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "09280fc2-adb7-4972-a3e6-7106759bd2fa"
        },
        "item": {
          "id": "cc3942d3-9943-4ce3-be2d-d13d4ac54bca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "92590bab-3ff1-4dcb-948a-1483463c4b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e2bbf869-72ea-4826-a86a-a3953e4724bf",
        "cursor": {
          "ref": "48659fa1-bb07-4483-91b1-0445673d26af",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3319adb1-9a02-4bbc-9681-bb1c7642fff0"
        },
        "item": {
          "id": "e2bbf869-72ea-4826-a86a-a3953e4724bf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f6767c9d-7b48-47c7-904e-4e7d7341ac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fefd944b-768f-4188-a7c1-84da3e0f940d",
        "cursor": {
          "ref": "86870c15-5ad7-426c-85ba-354f659e5594",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "99aafd3a-c1ca-47a6-97cf-7bd2c6154e1d"
        },
        "item": {
          "id": "fefd944b-768f-4188-a7c1-84da3e0f940d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "00fe87dd-062b-4d42-958d-aeafd064f343",
          "status": "Created",
          "code": 201,
          "responseTime": 6376,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf6a483-6a6c-45bb-973b-be1d50cf00d5",
        "cursor": {
          "ref": "437e5aa3-f5dd-4ae8-9651-418c0efec01b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "877a2529-92df-401f-bafe-b36b3e5f24c4"
        },
        "item": {
          "id": "faf6a483-6a6c-45bb-973b-be1d50cf00d5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "629a39d5-6b90-4b80-a1bf-ede9acd709ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "56147ae4-c3d7-4795-8c5b-fbff7591268c",
        "cursor": {
          "ref": "7fbfab6b-c198-40fd-b0ea-8db6b1cb55dc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f1276727-fce8-4494-a438-ecdfa22306ad"
        },
        "item": {
          "id": "56147ae4-c3d7-4795-8c5b-fbff7591268c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d79c71c8-6e15-4028-9028-7b02d6114a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6f32195e-d5ba-443a-9f1d-dccf1c2681db",
        "cursor": {
          "ref": "8605e6a1-074a-4311-98f3-2632a36897eb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "67e15cf8-763f-45e2-ae63-4e35ca8604a9"
        },
        "item": {
          "id": "6f32195e-d5ba-443a-9f1d-dccf1c2681db",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1256af00-a4ae-44dc-bce5-d8bd6be54d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa9619c-474a-452c-985d-c59b9cd287cb",
        "cursor": {
          "ref": "4e5cc3f8-1833-42ec-8550-a437336f96c6",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "36620def-31d7-49c2-aa3b-a5273205fee0"
        },
        "item": {
          "id": "5aa9619c-474a-452c-985d-c59b9cd287cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b5394b9-378d-42c9-a3df-92f9256b3e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894bd369-2bc7-4300-b3b5-fbcb9311ca0a",
        "cursor": {
          "ref": "7f59c2ff-6694-4033-937a-dadae0fd47f4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "53603d9e-75de-4781-892f-5803c90dc452"
        },
        "item": {
          "id": "894bd369-2bc7-4300-b3b5-fbcb9311ca0a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "043f8fa2-54f0-4980-812f-87a9df965cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea8f2d-c7cd-40a6-a0c4-823132f05bcb",
        "cursor": {
          "ref": "4ade905c-651c-449d-b50a-17131d777a33",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a991b57-8237-488b-991f-28a6f27fa621"
        },
        "item": {
          "id": "37ea8f2d-c7cd-40a6-a0c4-823132f05bcb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "99d280cb-77e9-4326-8381-1f33e7922b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f55a740-bf8a-4669-8e30-ebf9b42a074a",
        "cursor": {
          "ref": "418a2795-108a-4628-8ae3-c511872418f9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "05e1ab0e-8670-487a-84bd-b0a6f896c037"
        },
        "item": {
          "id": "9f55a740-bf8a-4669-8e30-ebf9b42a074a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c33ecfb1-f6b8-4e73-98a5-2ed0db4e571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4083a129-5adf-47e5-b760-9348c73e9197",
        "cursor": {
          "ref": "0ac1950a-85ad-4e7e-9076-26cff04db4b9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7920756d-c50f-41ae-b1a4-c031c549c21f"
        },
        "item": {
          "id": "4083a129-5adf-47e5-b760-9348c73e9197",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a703ade8-7aff-4ec6-948a-5669da58b526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5aea20-22aa-4ec9-9b3b-6bcd0b4c3c9d",
        "cursor": {
          "ref": "1515a10f-dd18-4e78-8e9e-930eca221df0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a258748-4a14-4d77-83f3-412eae40a97e"
        },
        "item": {
          "id": "9a5aea20-22aa-4ec9-9b3b-6bcd0b4c3c9d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd475e4e-43eb-4007-9a3d-215f0b3c3def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9da3de-3084-4d3a-9777-91d1a48fa7f4",
        "cursor": {
          "ref": "2505f247-b86f-4aaa-befb-bae043361279",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e5a6d535-f247-400b-bbdc-9c43a583ab47"
        },
        "item": {
          "id": "2c9da3de-3084-4d3a-9777-91d1a48fa7f4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "033041c1-06b2-41dd-81e5-fc5e9de825fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c574490b-4681-468f-93f3-e1fb26d84175",
        "cursor": {
          "ref": "8d838ab4-a793-4e5b-8a10-f25c8f5f867c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "51d55b06-b519-403c-a601-dd81c9db98f9"
        },
        "item": {
          "id": "c574490b-4681-468f-93f3-e1fb26d84175",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0d4f838-1cd6-4c7c-82c6-89dc647d5594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0df8b-d56b-4feb-9022-f60ad42e226e",
        "cursor": {
          "ref": "c46fc0db-58f4-407a-bc3b-785178c7e051",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fbd66fdf-a03a-4725-9c29-c82ab65d8d71"
        },
        "item": {
          "id": "d1e0df8b-d56b-4feb-9022-f60ad42e226e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "750c9cf0-eda0-436a-b4d2-8f1f21684fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f156383c-74ea-4a9d-9cd8-91682efbee4c",
        "cursor": {
          "ref": "0d3a90c0-661e-4ded-a922-7b90e2651b19",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dec749b4-e849-42dc-89ec-e1e8d819ceea"
        },
        "item": {
          "id": "f156383c-74ea-4a9d-9cd8-91682efbee4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49346375-9598-4c48-8bac-662a79019a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e38e7e-521d-471a-b246-291df51ffe21",
        "cursor": {
          "ref": "4f9a233d-ddaa-4b7f-9223-374e3f2db9e5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c3df0b32-49dd-495e-ba0e-a4b26a7be8c7"
        },
        "item": {
          "id": "d8e38e7e-521d-471a-b246-291df51ffe21",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "caa9d090-e571-4a92-a979-878f08dbb70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d0657a-1423-484a-bb70-0d6047fd2ea6",
        "cursor": {
          "ref": "06ab2954-458d-4cd1-bd19-5c99f5d227f7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bd74b3c6-8c1d-4c16-b057-6c5d4304b444"
        },
        "item": {
          "id": "16d0657a-1423-484a-bb70-0d6047fd2ea6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aaf32971-78ba-44ca-a42d-1eeea98649dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05635e4-f57d-4084-915c-715410154b79",
        "cursor": {
          "ref": "d42262e1-7fd2-42b3-9182-03331d3074b8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3e721c95-0ea7-4e66-9d35-115fd2e71fc2"
        },
        "item": {
          "id": "b05635e4-f57d-4084-915c-715410154b79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a7007f7-eb33-4109-ba0c-1350a65a990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65c46e-6a32-41e3-a649-eaad2e1b1bc8",
        "cursor": {
          "ref": "016f532b-e528-43a0-bf77-61dd0f21ca66",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "122e465a-4c9f-4288-b426-7e2fd434269b"
        },
        "item": {
          "id": "fd65c46e-6a32-41e3-a649-eaad2e1b1bc8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "185a080b-135e-45c1-9527-dccce986d7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39c7bd6-7485-4225-bede-c4b97864100d",
        "cursor": {
          "ref": "f2f306e9-0363-4257-98c5-1565ad04bc07",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "390cdfb0-bbf3-4a5c-b7a7-e290f7378873"
        },
        "item": {
          "id": "b39c7bd6-7485-4225-bede-c4b97864100d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf16509b-a739-42a7-ba1d-2666a73d05e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2c5fd7-bdb7-4a05-bfb1-a3edce264a3d",
        "cursor": {
          "ref": "8ad45363-b08e-4645-a78b-3002c5d495a0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1901eaac-3ae0-47b5-8aab-6e335079a7be"
        },
        "item": {
          "id": "ea2c5fd7-bdb7-4a05-bfb1-a3edce264a3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4902c1d-0a5d-4d73-b46b-56fd81d3e520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bbe2c6-980c-42db-bddf-0cf3089bd3de",
        "cursor": {
          "ref": "f2760b1c-8278-455c-b372-2f77cf0948ee",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "748360eb-3003-4749-9dc6-24883c62d649"
        },
        "item": {
          "id": "c6bbe2c6-980c-42db-bddf-0cf3089bd3de",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70f3b363-bca3-4f26-8590-864356303b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53bb17a-c308-4d90-a826-4410308d06ab",
        "cursor": {
          "ref": "746eef71-79da-4107-8345-73050b2a45ef",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2083b5d0-daf4-47e7-b6ae-d2900cc2a9b8"
        },
        "item": {
          "id": "d53bb17a-c308-4d90-a826-4410308d06ab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6edaa551-08da-4575-a33f-0314adb72692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c725f-c82b-4e74-972f-e9999fc8ac44",
        "cursor": {
          "ref": "b6b67d44-72b9-41f9-a4da-2958ef0b9fe9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "735519f4-49f1-4f81-b82f-f76056249590"
        },
        "item": {
          "id": "698c725f-c82b-4e74-972f-e9999fc8ac44",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fc8fb7d-1d83-49f9-ad8d-4a6605f223a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c9781-3865-4d1a-95f8-e351307b68e9",
        "cursor": {
          "ref": "64430668-390c-48f8-ba9b-493a8a70fa9e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4d9b4f69-cf86-46d3-b8d9-1d1bb17cdbb2"
        },
        "item": {
          "id": "af7c9781-3865-4d1a-95f8-e351307b68e9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b568021-3f55-4b13-b97b-0b4566a6e3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4a350d-0554-44ec-bad2-b64defa11e5d",
        "cursor": {
          "ref": "72b96665-85a2-41c3-a650-df585077a480",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "85a5d9bc-e560-43f1-b596-263990449d73"
        },
        "item": {
          "id": "4a4a350d-0554-44ec-bad2-b64defa11e5d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8bcd575a-3d12-48ff-8e7a-25f80a3700e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadc3673-8b2a-4f37-841c-b55d9252c674",
        "cursor": {
          "ref": "d83bdac9-0b9c-480d-b300-a580bae196d0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "76b7de69-9099-4c06-ad5e-0666dc04316b"
        },
        "item": {
          "id": "fadc3673-8b2a-4f37-841c-b55d9252c674",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01cbf311-8abd-40c2-9bae-4ae0ccb2d0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c4dedb-e027-437f-bddf-e6be5137884b",
        "cursor": {
          "ref": "ed907019-d6a6-4fa1-865c-2c3d5353234b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "764d90b8-5154-4fb0-a23c-21773f2bb819"
        },
        "item": {
          "id": "61c4dedb-e027-437f-bddf-e6be5137884b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ade06d2e-4baf-404d-9a0c-7b3b11261082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faab64b-bb7f-4dcf-8217-518cf29602b6",
        "cursor": {
          "ref": "8463679e-ac7b-47c7-91dd-0612384ca30a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4795cfff-2484-441d-a788-a2d8c444c586"
        },
        "item": {
          "id": "0faab64b-bb7f-4dcf-8217-518cf29602b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fed7354-4b2a-46fd-9490-99ce65875375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb6ce3-ba25-4f08-a661-93dbc5436252",
        "cursor": {
          "ref": "43c45753-5db6-4d45-bf4a-63d039f0fa9b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8af14ab4-92e6-4ac2-a72c-5d16f09f1d88"
        },
        "item": {
          "id": "07eb6ce3-ba25-4f08-a661-93dbc5436252",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "93f22320-9a43-4344-bc84-7b7ae6127e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82642b0-7daf-4bd8-a7ee-1ce5559566f7",
        "cursor": {
          "ref": "68ae9b30-b414-44b8-9799-6ef2e1961ea8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e932f9c5-6305-4ba9-a0bc-f24e13b1a8ec"
        },
        "item": {
          "id": "a82642b0-7daf-4bd8-a7ee-1ce5559566f7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3469526-8840-4022-a520-0a51222eb296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09092d-8e55-463b-93b1-4ca4b278f7c2",
        "cursor": {
          "ref": "9bbcfbde-d1a1-4f5a-93c0-d2368956e500",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d50f405a-b9bf-4a74-a4d7-786afee03bef"
        },
        "item": {
          "id": "bc09092d-8e55-463b-93b1-4ca4b278f7c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2529c40c-ab72-4bc6-9b02-b53250f2baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b708576-143c-4afd-a147-c067dde07646",
        "cursor": {
          "ref": "051c3ecb-8bca-4ef3-8cca-d138ed92dd20",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6b7601fc-51a6-4f23-97a7-bdd1db88c34e"
        },
        "item": {
          "id": "9b708576-143c-4afd-a147-c067dde07646",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae472cd6-48b0-45ac-bed8-2a36af708b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8ef8de-36b9-4de6-bf0c-d121cd43ad4a",
        "cursor": {
          "ref": "0efbe185-5979-46ea-b0cf-2f91adc1d577",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3e0dcbc9-84cb-4647-a16a-9aa23cb0d22e"
        },
        "item": {
          "id": "1e8ef8de-36b9-4de6-bf0c-d121cd43ad4a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b0fc725-8bd2-4fae-8daa-9e81a2f002be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dacc4b6-ebab-4e11-8c2c-617539df8d42",
        "cursor": {
          "ref": "4ad23a5a-835e-45c7-823b-35efa160aa01",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "742d06a1-b6dd-485e-a03d-e1a15309b5cb"
        },
        "item": {
          "id": "9dacc4b6-ebab-4e11-8c2c-617539df8d42",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a118dbe-4cd8-49b3-954a-d9005be78c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb66594-3a41-40ca-b4d6-a7d1d142f83c",
        "cursor": {
          "ref": "b5257d9e-4e27-43e1-baf3-3db249e04934",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cd16d040-ced2-479d-a9f5-7124a30a086b"
        },
        "item": {
          "id": "deb66594-3a41-40ca-b4d6-a7d1d142f83c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72c1fa3d-90b9-470c-84c8-67035366f784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96a045d-1ef7-4371-8171-5614835b35bd",
        "cursor": {
          "ref": "950081ff-9383-4806-8dae-3d3bd068a2c0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "258e8180-fa34-4497-9edc-2df62d98fb08"
        },
        "item": {
          "id": "b96a045d-1ef7-4371-8171-5614835b35bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4214e6bc-3946-4a7f-89ac-bfad033c1d84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53cfaa-1c47-4585-b780-beca55ee32f2",
        "cursor": {
          "ref": "6b36a94f-b431-4f9e-9c33-ab0a285e0683",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ea61b700-5acd-40be-8444-b53785d5e339"
        },
        "item": {
          "id": "4f53cfaa-1c47-4585-b780-beca55ee32f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8dccae57-95d7-4469-bf28-b70b7541ca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ed3790-e750-499b-ac94-fd3b4dbdf2fe",
        "cursor": {
          "ref": "f143abfa-407f-425a-bb31-3e3fcdda5fad",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1197f35d-c945-4dbc-a392-c4215b8095f2"
        },
        "item": {
          "id": "42ed3790-e750-499b-ac94-fd3b4dbdf2fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a09e65e7-487c-4bb7-a4d1-b9f7f7add96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79f09fa-eeef-4dcf-b9fe-0dc8d1d1afc2",
        "cursor": {
          "ref": "2b5349b1-567d-42be-ae9b-b9fd064f2702",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b1416873-67c6-4e46-876b-3d0d81dce226"
        },
        "item": {
          "id": "f79f09fa-eeef-4dcf-b9fe-0dc8d1d1afc2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f11c4081-0ea5-455f-8700-4dc143cb1ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc6307-6bdf-410f-b7b8-d0d26e8aebdd",
        "cursor": {
          "ref": "dd650d9a-8e23-45c4-914c-af1a462c1184",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d98d1168-467c-4ffc-b876-1fb0b3d317d3"
        },
        "item": {
          "id": "bafc6307-6bdf-410f-b7b8-d0d26e8aebdd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "999d17d9-fb89-48c3-957e-eb23857b5aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d81e38-245e-4ae9-9a9c-2eff67c24551",
        "cursor": {
          "ref": "7991342f-661b-4a9e-9e2b-d7a37620e7d4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2d44bdb4-23d2-4588-ba75-7b54d1c2873d"
        },
        "item": {
          "id": "a3d81e38-245e-4ae9-9a9c-2eff67c24551",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6a5a4000-9069-41b0-8832-edea6f8559af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb7c46-cdbf-43b5-b6ce-2d751179fe3d",
        "cursor": {
          "ref": "e9560dd2-4d5f-42ca-85e7-14cb49fef6f8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "010b82b8-b8d1-4b29-b250-4ef0dc1139fe"
        },
        "item": {
          "id": "64fb7c46-cdbf-43b5-b6ce-2d751179fe3d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "362c97fc-6c80-4661-9e9b-49c69a28a9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af77e43e-ed3e-44a4-9007-596f5bb037f3",
        "cursor": {
          "ref": "d48c40cc-fab3-4bdc-a976-ca944bfcd663",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b9a2b8c5-ad95-404f-a9c3-8af976687bf6"
        },
        "item": {
          "id": "af77e43e-ed3e-44a4-9007-596f5bb037f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd5b662f-6e28-420b-8674-3a0f54910103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971b7c22-1395-4472-9d50-8749d74ca7fd",
        "cursor": {
          "ref": "3dab5dc1-df49-4ae5-b324-884ba15f6e5d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b60c350b-6dca-444e-a739-2a043ed07872"
        },
        "item": {
          "id": "971b7c22-1395-4472-9d50-8749d74ca7fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d2db0d9a-fa47-4901-b7ac-dc9a84444968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87026198-d693-48a1-b3a4-f660510b9a4e",
        "cursor": {
          "ref": "71352770-a185-456d-8362-825d395e3174",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c45ad5b2-3dab-47c9-8cc0-36ba69d01c3c"
        },
        "item": {
          "id": "87026198-d693-48a1-b3a4-f660510b9a4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3126ddf6-54ba-4370-b4f4-b925c54b9316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b39c7ff-9703-4263-829c-d72bdd3fe6de",
        "cursor": {
          "ref": "98eccc51-9f02-475c-af1a-8b92875e56b8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5d0ecc06-1a3b-41f2-b735-b3fd6e0a9e03"
        },
        "item": {
          "id": "2b39c7ff-9703-4263-829c-d72bdd3fe6de",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8f1bb87-5d1e-4b74-aa9f-4cd56f0542ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ba087a-83ce-4f52-a2d3-ac325379693f",
        "cursor": {
          "ref": "22beaddd-1868-4db2-9746-858ae924d2b5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7e39ac1f-7808-4927-940e-a8e6d3178791"
        },
        "item": {
          "id": "e1ba087a-83ce-4f52-a2d3-ac325379693f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46a7135e-45ed-49a4-b7f9-e023bd6c6c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e33c6-bc2d-4c2f-85bb-1bcdbebb2469",
        "cursor": {
          "ref": "0455db0f-cbec-4e2e-bfca-38391e9170ea",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dbf67e2a-04d6-44e0-99c1-50f4a3c8c867"
        },
        "item": {
          "id": "b59e33c6-bc2d-4c2f-85bb-1bcdbebb2469",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bdde2267-a242-4cb4-9903-bb327f3503e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49082809-7b0a-4839-8dd1-e48dff18d400",
        "cursor": {
          "ref": "cdbb4d25-593f-44c6-af85-7bce7acc0770",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4e05037f-ff04-4e96-94b7-e755bf1454e3"
        },
        "item": {
          "id": "49082809-7b0a-4839-8dd1-e48dff18d400",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd8e8933-64fe-4598-a990-779df092a0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d6017f-d6b7-48c3-83af-ff3a9aa13c2d",
        "cursor": {
          "ref": "ddd16c28-295e-4e4c-8aef-f1dca1a8400b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "06018f2b-0198-4471-bb20-f443aa4ff823"
        },
        "item": {
          "id": "92d6017f-d6b7-48c3-83af-ff3a9aa13c2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a92a83b8-aaca-48a4-8071-7deee29dd29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c863304-affa-4432-a44e-485974dc9b4d",
        "cursor": {
          "ref": "2ee7d820-9011-4f74-a197-4ac7c9e9945e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4be371e1-2625-457a-9fcc-31a934b6fde8"
        },
        "item": {
          "id": "0c863304-affa-4432-a44e-485974dc9b4d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "35b4116b-6821-4cb9-a384-eba36bae4fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec75c06-e531-4abb-8e9b-a3830ad2683f",
        "cursor": {
          "ref": "afc06e56-d0b1-482f-9fce-9601efe022a8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4693e8a2-dcbf-46bc-b5bd-4527def62572"
        },
        "item": {
          "id": "3ec75c06-e531-4abb-8e9b-a3830ad2683f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d31c32c-dc01-4455-a3f7-97ba7989fdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90aa1db-cf5a-40b4-8c90-3b3d6e93db27",
        "cursor": {
          "ref": "7e380cc9-bff0-40cf-9b52-b35201389100",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e7854c85-0371-4573-9c7f-67e3f897deb4"
        },
        "item": {
          "id": "a90aa1db-cf5a-40b4-8c90-3b3d6e93db27",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6bd8af97-81f0-439d-aaa4-9e30ab6d390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c5515a-2203-42f1-9a08-4a53a1cdfdf3",
        "cursor": {
          "ref": "fdf7377d-9e24-488c-b780-60e91a108c52",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b280a480-1e28-4101-96ad-bc35c3283d93"
        },
        "item": {
          "id": "90c5515a-2203-42f1-9a08-4a53a1cdfdf3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a758e38a-c385-4ae4-bd2e-f5f58bc48942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f8d5a-c073-4a28-a9e4-f58887ddffb7",
        "cursor": {
          "ref": "77c83d58-883f-4f45-87b9-8ffdc11ff5c8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9be96db3-a71c-4825-a30f-3ec06ce77cc5"
        },
        "item": {
          "id": "4f3f8d5a-c073-4a28-a9e4-f58887ddffb7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8a49e78-dfde-4903-8ec7-8b1c3bc58c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b461dd4e-53a1-4cfa-8206-3281a9c467ab",
        "cursor": {
          "ref": "01b359d0-7ed6-48f1-8cd8-c0ba620927a4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a6459caa-4321-477b-bbf6-b36d274a37e6"
        },
        "item": {
          "id": "b461dd4e-53a1-4cfa-8206-3281a9c467ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "da7e5e39-f744-4398-ae3e-492ec7c0ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5cc824-41ed-4b3e-b862-3c00f0187eac",
        "cursor": {
          "ref": "a49f9994-95dc-438f-bbc4-12addc68ba1b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ef5537ec-9871-4d0f-8dd2-2385cff32779"
        },
        "item": {
          "id": "0c5cc824-41ed-4b3e-b862-3c00f0187eac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7d2874b-bc4b-4157-a3c4-056a506bdf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcb846d-fc09-46c2-9878-3d9cce952a0d",
        "cursor": {
          "ref": "bd72852b-c342-4f46-92ae-9ac8b902952a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2de03967-9760-4aac-8b4a-6193d1b3eadf"
        },
        "item": {
          "id": "9fcb846d-fc09-46c2-9878-3d9cce952a0d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16429748-19cc-4705-b415-593af7e76974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d392c2-84f9-40ab-a414-16fec7f6d7d9",
        "cursor": {
          "ref": "c04ca2b5-64c4-442b-a88f-0bd6427017d0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8f68a760-4fe1-4e64-8324-fd3d03e55031"
        },
        "item": {
          "id": "55d392c2-84f9-40ab-a414-16fec7f6d7d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d1826b51-42b4-4e41-8e28-41ec79533b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ca6d96-5e36-47ab-a96a-1a96827c6394",
        "cursor": {
          "ref": "c0422487-f223-4774-bd06-13657f88a905",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c175014-b998-4f36-acf4-4c1295be82ce"
        },
        "item": {
          "id": "d3ca6d96-5e36-47ab-a96a-1a96827c6394",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66604aec-fde4-45c0-8404-d9739e9c6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2528437f-32ba-4286-a87e-c298e4b16a37",
        "cursor": {
          "ref": "fc92cab9-caea-4275-ae4d-196e820cf72d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e90cad65-1610-4d02-9fb1-2aef73297395"
        },
        "item": {
          "id": "2528437f-32ba-4286-a87e-c298e4b16a37",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8289d226-a478-4b6c-9a87-6b8584f9329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68963bb3-6454-495a-b306-f01b5ecdf074",
        "cursor": {
          "ref": "69c48189-d4b3-4a68-a7fd-f2af88340e09",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4880c36d-e809-4558-af67-e71fcf9d33c1"
        },
        "item": {
          "id": "68963bb3-6454-495a-b306-f01b5ecdf074",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3b2854ea-9b24-4c03-a88f-775900250af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f27680-0e92-436b-94f7-65ba560299a3",
        "cursor": {
          "ref": "413aa371-ce80-4b25-a76a-cd92c5b4c16b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bab6762e-e7a0-475f-89f4-0bcee706564b"
        },
        "item": {
          "id": "19f27680-0e92-436b-94f7-65ba560299a3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96deae26-973a-476a-a4c3-afa540f5df3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d86adb-76aa-48e2-8cbf-cbf4024b127f",
        "cursor": {
          "ref": "c15bd98b-c4ef-4483-b2f0-22c2488b93fe",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "69d5cc0e-a8b9-49ea-9ecb-6d40d9fa67e8"
        },
        "item": {
          "id": "f7d86adb-76aa-48e2-8cbf-cbf4024b127f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4fe32b89-7152-4d2b-9b02-58f540fe2e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e391cf4d-e6b6-4bef-802e-055c0eacf036",
        "cursor": {
          "ref": "80e026c6-689b-4aed-99eb-e987ae16c877",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4efd3d34-2ce4-4b37-be10-41603414fac5"
        },
        "item": {
          "id": "e391cf4d-e6b6-4bef-802e-055c0eacf036",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2f980014-129c-411a-8e2d-7dab1f79f761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54973cbb-5652-4bb6-8286-b8916e615d79",
        "cursor": {
          "ref": "0627888a-a813-464c-a137-143680765025",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "616a84a1-7610-4e2e-b64d-7aec6ff83a68"
        },
        "item": {
          "id": "54973cbb-5652-4bb6-8286-b8916e615d79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "20908ddc-2fd1-4f99-a53f-c6839f7363c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294aa659-90d6-4582-b2cb-b838d3b5ca64",
        "cursor": {
          "ref": "b259752a-3c87-40ae-8ffb-e8e283bc2d4d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d524781-0f9d-4936-a431-5b01b917e9d7"
        },
        "item": {
          "id": "294aa659-90d6-4582-b2cb-b838d3b5ca64",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e166280-bb29-4f46-8f06-8bcb28550ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027c0808-b530-47e2-a3d9-343091402caa",
        "cursor": {
          "ref": "591040d2-1a2f-4639-b6d9-cb5ad9400710",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b2a5d8d-6366-4edf-8088-36f927a5a40c"
        },
        "item": {
          "id": "027c0808-b530-47e2-a3d9-343091402caa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "66c3aed8-9bd5-4485-a53a-32e5cf7c6a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d03eb9e-48c0-4b64-9bd2-f9f6c2709db1",
        "cursor": {
          "ref": "f7fba49d-a87c-4d1f-b348-82b60655fb97",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "14e95cce-bc20-4ddb-b37e-d85da292e91b"
        },
        "item": {
          "id": "5d03eb9e-48c0-4b64-9bd2-f9f6c2709db1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7cc3caf3-cc80-48b6-9fdc-35bde1cffae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d68616-3c01-4f9c-b648-94796aa71113",
        "cursor": {
          "ref": "5900ab30-af25-453d-8a23-f466776e9345",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "26c3f975-dab2-47d5-bdc2-e984fdfe81b3"
        },
        "item": {
          "id": "d7d68616-3c01-4f9c-b648-94796aa71113",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1af6b566-c700-4aae-aa36-ff624c7551f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17029253-51f1-4cab-86da-c38104f3cfad",
        "cursor": {
          "ref": "6041293b-61ff-4db1-a61f-1346e7658b49",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "da4f5bf0-5cd0-40bd-a30f-3372a92b215f"
        },
        "item": {
          "id": "17029253-51f1-4cab-86da-c38104f3cfad",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eb7627ae-7ce5-4a77-ac8d-96fa5d9db107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d20cfa-78b3-4a33-8411-51662b11b23c",
        "cursor": {
          "ref": "20353968-86ee-4f50-9718-e26ada3ea6f0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6cba4ed6-91a2-4d73-baf8-e42ea3af6078"
        },
        "item": {
          "id": "e0d20cfa-78b3-4a33-8411-51662b11b23c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8a43af01-d5eb-48aa-b15b-7b0d12f93f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9317964f-5733-4f21-a8ec-9e5e29f55434",
        "cursor": {
          "ref": "83f870f7-84c1-4ed7-b2c1-42840f743b70",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "64c8177d-bf72-4def-bb4f-eed9e590c03c"
        },
        "item": {
          "id": "9317964f-5733-4f21-a8ec-9e5e29f55434",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6b5a25bf-e079-45fd-ab8a-08980a65a1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881aebc2-135a-428b-a8de-fd8afb196a71",
        "cursor": {
          "ref": "6b9e705e-20f1-45d9-9996-4256a3ea050d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fb612d43-7b44-4007-8e20-e4cea0c8d0e4"
        },
        "item": {
          "id": "881aebc2-135a-428b-a8de-fd8afb196a71",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d7f0932e-3517-4a8e-9ba7-4c3287c24578",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a8eb72-594a-4542-8cbe-d215b23c1c08",
        "cursor": {
          "ref": "7ad36794-6861-47f8-a72d-d71f42cbf00a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5da4b58d-3f80-42b8-afc4-bf9e4f03520c"
        },
        "item": {
          "id": "d3a8eb72-594a-4542-8cbe-d215b23c1c08",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "66bb77c2-d2ba-44e4-9794-745248208c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b193831-02b1-47c1-965c-f86cbad3c75d",
        "cursor": {
          "ref": "bfee39a3-5f02-45bc-978a-ad2487831210",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "782952b2-6375-4cc4-97b5-55e3c44fcf24"
        },
        "item": {
          "id": "9b193831-02b1-47c1-965c-f86cbad3c75d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da954d00-4def-46a2-8ee4-791d0395ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f24add0-e6ed-47a3-8239-4e2ec6a3320e",
        "cursor": {
          "ref": "4453ed00-9c32-48b5-a097-ee581955e243",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ccc4a0c8-bfcb-4fd3-882a-57b8e50ee759"
        },
        "item": {
          "id": "9f24add0-e6ed-47a3-8239-4e2ec6a3320e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b515c7e4-de46-42c9-940a-c76eb82ad74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e320c7-7f77-425a-9fa0-ddeddfe11b69",
        "cursor": {
          "ref": "4187860d-ca8a-49f2-b465-ff0649907900",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a7b0a954-97ee-4c85-8cab-c180be698dec"
        },
        "item": {
          "id": "e9e320c7-7f77-425a-9fa0-ddeddfe11b69",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a5067889-18b7-47d4-a7ac-085380abc7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c76730-37e4-4bf8-931f-f7f73c599ef4",
        "cursor": {
          "ref": "2621d234-2189-45ad-bc00-192db2f85f3c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "969f06fa-ea5a-4171-9ba7-3947a697fe32"
        },
        "item": {
          "id": "22c76730-37e4-4bf8-931f-f7f73c599ef4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7d22be6f-9361-4003-8e60-a212ce3c65ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd85ee6-0b36-4e29-be1a-9020681c77cc",
        "cursor": {
          "ref": "bed9ae2e-7d15-4b6f-bf44-ec6e12f06cb5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "29a12bf0-aaff-49e7-adae-7baec2115eda"
        },
        "item": {
          "id": "ccd85ee6-0b36-4e29-be1a-9020681c77cc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a0196726-7bc4-4526-98f8-b7580e603b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e172722f-bcf4-4d01-9c28-2e8467cb3248",
        "cursor": {
          "ref": "9d7c9287-fe38-469a-976b-7188c648f3cc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "19fb90d2-4218-47aa-9a82-231b4510794c"
        },
        "item": {
          "id": "e172722f-bcf4-4d01-9c28-2e8467cb3248",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "954c831d-1f86-4c77-873a-50e292819ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e72c0-3ef3-46d0-9c4d-20367d6ea5d0",
        "cursor": {
          "ref": "ff5ba5af-a18c-4b46-85b8-220edcbe0f56",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2ef99d80-7390-41fb-aff2-b4d32185b0e6"
        },
        "item": {
          "id": "ef9e72c0-3ef3-46d0-9c4d-20367d6ea5d0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "11d5381a-7b74-4fce-bf15-dd7b766a98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3178a3be-7645-43b3-b7e0-9abc9e845671",
        "cursor": {
          "ref": "e06ec2fd-7e8d-4905-a4d8-75936873831c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2da256a6-984c-47c4-b645-8b1973663594"
        },
        "item": {
          "id": "3178a3be-7645-43b3-b7e0-9abc9e845671",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e07e490e-ffff-4eea-a1bf-a9ab568b83a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f6aff8-902e-4d17-b0d9-4118e561161d",
        "cursor": {
          "ref": "b335388d-3984-4262-8cfd-7e949a378ff2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "51b26cdd-8014-41c5-ac23-bbafac8c9345"
        },
        "item": {
          "id": "e4f6aff8-902e-4d17-b0d9-4118e561161d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1c4e1387-c676-45b6-96ee-814f9339ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60d2cba-c75f-4d91-8cdc-3673e7c5ec86",
        "cursor": {
          "ref": "afc40bd7-629a-4e67-ac7c-f60ed268ebc6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0440580a-d2aa-48a7-aa3c-bfd3078d52d9"
        },
        "item": {
          "id": "e60d2cba-c75f-4d91-8cdc-3673e7c5ec86",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "22dd0eb1-8532-4466-8524-9640cd60ebbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fef6ee1-beb9-4607-a22e-ad3a570cea82",
        "cursor": {
          "ref": "c075b95b-2f0e-498e-84ff-735cb35076b3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "86ec5810-24d1-4f1d-86a3-2a52d10c947b"
        },
        "item": {
          "id": "5fef6ee1-beb9-4607-a22e-ad3a570cea82",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d2ac167b-8053-4f84-b25f-7728526b1b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b865384-8646-4ffd-98eb-655e82fcdca4",
        "cursor": {
          "ref": "fb051ddf-cf88-4681-bba4-13d6afaf8103",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b39653fe-0dd7-4350-a476-4ca397b50968"
        },
        "item": {
          "id": "2b865384-8646-4ffd-98eb-655e82fcdca4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0dae74be-02e9-4be2-ac1c-db7768f0a4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed5625a-f80a-4baa-9659-0b646d02419e",
        "cursor": {
          "ref": "b960273c-e1b9-4521-9dce-2ab1a5d3cd32",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7a8225e7-0d18-4dec-a437-49887d62fc58"
        },
        "item": {
          "id": "7ed5625a-f80a-4baa-9659-0b646d02419e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "84974d54-46da-47e2-bca1-336c70d919ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d40fc19-e9d1-413d-9929-782ea226c984",
        "cursor": {
          "ref": "300f2ee9-52ae-4ecd-840f-8d1f28850765",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bce7e2ff-eb7c-4b6c-94fe-ad1a3c9cbd71"
        },
        "item": {
          "id": "0d40fc19-e9d1-413d-9929-782ea226c984",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ef0e8f07-240c-4e28-a128-a3aee8163436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f148b41-5315-46d4-baf7-fe7af7b08415",
        "cursor": {
          "ref": "42b5aa5d-3762-4422-a17e-b4537312b2b3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e3d01018-a3a3-4688-b5e2-750d2307d6a0"
        },
        "item": {
          "id": "6f148b41-5315-46d4-baf7-fe7af7b08415",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cc1835c7-f710-4ca8-9d09-15110be835b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c4457c-0b22-4478-aa7a-452e36e5fde0",
        "cursor": {
          "ref": "b99baffb-100d-406b-ad8b-1b0072f58e3e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "196aa913-9952-4649-908b-53f67e4a2f38"
        },
        "item": {
          "id": "25c4457c-0b22-4478-aa7a-452e36e5fde0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "68824f1d-dcee-493a-b6e5-96543f8b7c13",
          "status": "OK",
          "code": 200,
          "responseTime": 238,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d3908157-302b-478d-bbb6-18dc5e1a35d6",
        "cursor": {
          "ref": "462702cd-d6f2-49d8-ae65-7605bb333cc9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fa5681a5-e352-4fb9-ac9f-82c9d1be7fb3"
        },
        "item": {
          "id": "d3908157-302b-478d-bbb6-18dc5e1a35d6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8708be9b-e9c7-423e-9010-ee59c3b54756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45d7623-dd3f-4e81-a7cd-00cd4744d3f7",
        "cursor": {
          "ref": "99104902-f318-4a68-b31d-7191e20d3abe",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ac8521af-2e12-4ae2-a410-4f5d2ab7a32c"
        },
        "item": {
          "id": "e45d7623-dd3f-4e81-a7cd-00cd4744d3f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c689e7ec-5c04-4260-b4e6-dbb3d7cc1aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e17af10-4ce6-427e-9f49-bff95990bf63",
        "cursor": {
          "ref": "4a42acf6-fa83-4596-bc35-3e769d796a4e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "deb7843c-e697-4538-a68a-6cbd42033957"
        },
        "item": {
          "id": "0e17af10-4ce6-427e-9f49-bff95990bf63",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2bc702ef-4cb8-4831-95f7-ce8c6c39d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624ff08a-a6ed-4f46-8526-f2dafa24f26b",
        "cursor": {
          "ref": "645e4793-5d95-4b68-afc5-6fbaac55ed98",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "44ea5c94-8d85-44b0-a242-c70dc00124ba"
        },
        "item": {
          "id": "624ff08a-a6ed-4f46-8526-f2dafa24f26b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37b8dbba-6953-40a2-ac34-ff2c5234b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d22ebd-0756-4bb6-a8e0-d4a7cb73e0a0",
        "cursor": {
          "ref": "b6d726a9-6ff6-4b5b-ab39-97283495f84b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3ded0192-7a99-4e9a-9bdc-90e089a77926"
        },
        "item": {
          "id": "45d22ebd-0756-4bb6-a8e0-d4a7cb73e0a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9831e8a1-b000-4b00-91b4-e6ffbe2ef00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca2bc6-8543-4e2b-aef9-93b19d3ce473",
        "cursor": {
          "ref": "cbc9b541-fd9b-4283-ae2a-d8dc10bb4a6c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "095e7911-e122-4521-a924-aaf48399245b"
        },
        "item": {
          "id": "14ca2bc6-8543-4e2b-aef9-93b19d3ce473",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6c1a4bc-031f-4791-96ea-5e3210d597b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6478da25-d91b-466d-be89-31d0652554bf",
        "cursor": {
          "ref": "921d72b0-9423-430d-b7d2-390b2d40779e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9c17aed0-85da-454c-8400-bcdccfa136a1"
        },
        "item": {
          "id": "6478da25-d91b-466d-be89-31d0652554bf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23828513-b6b3-4989-9125-77396e0b39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0f582e-36a2-4f9b-8e65-51cb977ffe8d",
        "cursor": {
          "ref": "3f2567c1-f1a9-4616-9e37-a5c6d4596dc2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e706b6e3-9d5d-4410-bcd7-7568f055f718"
        },
        "item": {
          "id": "aa0f582e-36a2-4f9b-8e65-51cb977ffe8d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "37cb64e0-3e6d-4258-b8af-2ce2514f0a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ffef1a-b947-4296-8a9c-2621bf31545a",
        "cursor": {
          "ref": "ef8de835-fb4c-421f-966a-92aff24db6de",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c00ceea7-ed52-4d2e-94a2-5076caf2a9a6"
        },
        "item": {
          "id": "e9ffef1a-b947-4296-8a9c-2621bf31545a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dad66c49-5ac7-4790-949f-eab934bc14c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552b2d9-199a-41aa-b965-e192a258a85f",
        "cursor": {
          "ref": "0a9a28ef-607b-4059-bc44-8911f3e40a23",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cfb57340-90f3-42e0-ad86-2f8e0e7e3b54"
        },
        "item": {
          "id": "7552b2d9-199a-41aa-b965-e192a258a85f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7a53053d-7cbd-4dfa-95f2-d67840255aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ef1167-815b-4c4f-84cc-a075f948efc2",
        "cursor": {
          "ref": "352c8415-03c7-4991-b848-6ebc760a472d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e0011560-51a9-41b8-b074-7c56dc903a1b"
        },
        "item": {
          "id": "12ef1167-815b-4c4f-84cc-a075f948efc2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "22fd58ac-7c5c-48f0-b555-0e52a5cd0046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b13a7d-8bfe-4aec-80c8-e295c0eefbd0",
        "cursor": {
          "ref": "365949a7-d0fe-46f1-83d7-e8d46061a683",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "be47f787-5efd-4d4e-9c2a-18f887406a81"
        },
        "item": {
          "id": "90b13a7d-8bfe-4aec-80c8-e295c0eefbd0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1504ff38-d879-40a4-92e9-88223347d19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31153a71-f0c6-481c-8645-ee121cc35c81",
        "cursor": {
          "ref": "2d7ec940-af83-4688-b699-3b0782263783",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "10189c1b-05cd-4af6-8d81-f977d4d6fc37"
        },
        "item": {
          "id": "31153a71-f0c6-481c-8645-ee121cc35c81",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2f8eaec3-dbbc-42d0-bef3-484055517c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7a855d-d97f-4f5f-80c4-4a681674d24d",
        "cursor": {
          "ref": "8ddabea5-4895-41c2-8bb6-6ab5976b2695",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "688b44f5-a7e1-4ea1-ad45-2c255cfd75ed"
        },
        "item": {
          "id": "eb7a855d-d97f-4f5f-80c4-4a681674d24d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1577198-4fa0-4280-8c41-63f632afbc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c94b4-1be8-4c9a-ac7f-98c9dddeefcc",
        "cursor": {
          "ref": "2471cc1c-1850-4707-b52c-2793e383dc8f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d0ed725a-bd39-433a-a603-e29cf2504323"
        },
        "item": {
          "id": "741c94b4-1be8-4c9a-ac7f-98c9dddeefcc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a1e21544-3a28-42af-9a96-b3f9858d778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d988e5-560b-4315-b449-87e1efbf23ec",
        "cursor": {
          "ref": "1c14f159-0f85-40c9-875d-6748a748edf9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "36a23572-ba59-47ce-b726-7d4fc0a73e8c"
        },
        "item": {
          "id": "f8d988e5-560b-4315-b449-87e1efbf23ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c4fef125-f3b1-478a-9184-f591acce2edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab684e7-0f5e-4efb-b783-f92ad166030d",
        "cursor": {
          "ref": "cf4fca2c-33bd-4ec6-9601-1eb42a18271f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "76fc454f-8339-450e-8aa3-96bd7b358fa5"
        },
        "item": {
          "id": "0ab684e7-0f5e-4efb-b783-f92ad166030d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4d5a1315-ecef-4fe1-870d-bbac231993de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ed4881-06e7-4309-940c-cbeec918c899",
        "cursor": {
          "ref": "e71732e4-e53c-4750-9046-cd834f1f5268",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dcb6fefe-3bb0-474d-bc54-eb5d01002d64"
        },
        "item": {
          "id": "b6ed4881-06e7-4309-940c-cbeec918c899",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "00099ecc-786d-408b-bea0-478426184bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e58610-b884-4614-a8d4-ea434a2a67f6",
        "cursor": {
          "ref": "438aa3b6-02dc-4426-bf4d-a2481a1b51bd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3dbff3de-6ad1-4afd-9c2d-84a2c88b8064"
        },
        "item": {
          "id": "69e58610-b884-4614-a8d4-ea434a2a67f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1eb6e208-4d36-41af-81a5-9de3fa19ea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727cf618-c6eb-4970-bc07-8af29d0474c1",
        "cursor": {
          "ref": "1e12e80a-9b80-4284-81a1-e6452482493a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9a915baa-e32d-4897-a456-ea5a5d4fda0b"
        },
        "item": {
          "id": "727cf618-c6eb-4970-bc07-8af29d0474c1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "74e54b01-374a-4e6d-bdc6-3bae59a5fdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e395ee4-e500-4b7a-a91b-647ad7e84a32",
        "cursor": {
          "ref": "d73ab2ff-9ff2-47f9-a49d-cf1c3ffe1e37",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5942469a-b77d-46f8-8325-6bca8e9948db"
        },
        "item": {
          "id": "6e395ee4-e500-4b7a-a91b-647ad7e84a32",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51f0d55e-442a-48c9-964b-7cb40ec4e9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5893e718-f010-4238-8296-5d7d3270c81d",
        "cursor": {
          "ref": "e83bb596-2c28-4953-a974-610834cfde57",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8981db7a-a870-4070-ab2e-3453fa41903f"
        },
        "item": {
          "id": "5893e718-f010-4238-8296-5d7d3270c81d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cd5a4c4d-ee49-4bcb-8310-4d208b24b236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fba07e6-33f8-4716-9592-d295311b0ebe",
        "cursor": {
          "ref": "22350f7d-facd-469d-a47a-505087972d8b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "88097aba-97a1-440a-b1e9-5ae11e89b1ef"
        },
        "item": {
          "id": "2fba07e6-33f8-4716-9592-d295311b0ebe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "870596dd-5599-4873-a9a3-53eb8d3c139d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811ff9c4-10ab-453e-89e2-dec59bb3b97b",
        "cursor": {
          "ref": "fe6f9494-88d8-4bb7-afb1-33b1256d0703",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "61869076-7210-4dd7-9af1-4ceba801b695"
        },
        "item": {
          "id": "811ff9c4-10ab-453e-89e2-dec59bb3b97b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4c698cb7-4f25-4a80-a507-05399765b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da7344-c56e-44a4-ad67-26476a7c8f36",
        "cursor": {
          "ref": "a5bf0803-599c-4143-849f-e1f41c1310cb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "23a731cc-a025-45ec-9fc2-245053835633"
        },
        "item": {
          "id": "e7da7344-c56e-44a4-ad67-26476a7c8f36",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e1732631-455c-44d1-a516-282c1e912e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365f807c-3441-4d4e-a204-0cd17461c7f5",
        "cursor": {
          "ref": "f9bc980f-fcdb-43ec-8c5c-c5dfd1d4e876",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f4d6504d-6f14-4b08-a703-f7881f27ce34"
        },
        "item": {
          "id": "365f807c-3441-4d4e-a204-0cd17461c7f5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "684ee466-badb-463d-b91a-4443a534a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4acb61-b5ab-474a-b5cb-e3dbe6075c7c",
        "cursor": {
          "ref": "8e3eeb88-d96d-465e-a9d0-2c18c611d6ca",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "80a639a8-ed81-42b2-94ba-f7eda0dd9391"
        },
        "item": {
          "id": "9d4acb61-b5ab-474a-b5cb-e3dbe6075c7c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60f15e24-ccda-45fd-85fb-91f6df80fed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8fc1b3-954c-43ba-b961-9eac07c80e43",
        "cursor": {
          "ref": "815b2da7-c586-49ff-95b7-0a155177872d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "62443cd9-ed14-434b-a253-58e5880e1f34"
        },
        "item": {
          "id": "9f8fc1b3-954c-43ba-b961-9eac07c80e43",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b0fb3a3-8ffc-4986-81d6-219b9df94540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed00106f-6df8-442d-b6a6-ef527036b5d2",
        "cursor": {
          "ref": "17aa4369-cac7-4648-8903-71cdd0f195f4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1fe22d85-cf0c-4418-b241-2702ba438531"
        },
        "item": {
          "id": "ed00106f-6df8-442d-b6a6-ef527036b5d2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b69294d-5618-459f-b71a-20af6649eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd12d47-5a70-422c-92ab-83cdfddcd062",
        "cursor": {
          "ref": "4d0d2701-d236-4e6f-b07d-ffd7904867a4",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5956b1b9-90ec-4ebf-90c4-2d4d54d16ab6"
        },
        "item": {
          "id": "ccd12d47-5a70-422c-92ab-83cdfddcd062",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b8eced10-ca34-443a-b564-14422e604f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16453395-e5ee-4f2c-85a3-a9b50f215f86",
        "cursor": {
          "ref": "789703b9-4e8d-4ff5-8dc8-684d24ce15c5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f72a0517-3c51-4caf-b7d5-092bfb6ba4df"
        },
        "item": {
          "id": "16453395-e5ee-4f2c-85a3-a9b50f215f86",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c969d550-c502-4d7a-ae70-69ffbc189976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0712574-e642-4346-b42d-735abcbd60b1",
        "cursor": {
          "ref": "9816915f-2933-47bd-bb91-7294ef219437",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fa7b3d7c-1fe4-4424-985d-a60fc0b974d0"
        },
        "item": {
          "id": "c0712574-e642-4346-b42d-735abcbd60b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1d5ee882-5a31-4a22-bc4b-04bd2b956f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d08904-1578-4a5e-a640-bb5ad700f66e",
        "cursor": {
          "ref": "686ca5f8-d907-4a19-8003-4652e52acb6b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8100d5ea-472a-4ef6-8a04-848592db57c4"
        },
        "item": {
          "id": "47d08904-1578-4a5e-a640-bb5ad700f66e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "79159288-cae0-4384-b227-b0196ef42d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d5a42a-a372-4e8f-9ea7-395448ad1d89",
        "cursor": {
          "ref": "f0396f44-a3d5-4741-837a-1c8274bc53c7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "76e11da2-0640-453b-8c76-cbd833a83a5a"
        },
        "item": {
          "id": "78d5a42a-a372-4e8f-9ea7-395448ad1d89",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "83a15c79-2f90-45a7-b224-a007e9d9e5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354a07b6-b702-42f5-9973-a9820948461f",
        "cursor": {
          "ref": "c55900e0-501e-438f-aec5-2fbf51e0ea85",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "701f54a4-1621-4333-930d-eaff7f1c71fb"
        },
        "item": {
          "id": "354a07b6-b702-42f5-9973-a9820948461f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "85308b9f-6f3e-41a4-ae36-88af6624293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bcc35e-15af-44d1-8f8c-cde1221a79b7",
        "cursor": {
          "ref": "2231c4a6-1071-4494-ace8-4c2618598d93",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "299b4678-396f-4bb9-b6f5-8baa3cb69f2c"
        },
        "item": {
          "id": "90bcc35e-15af-44d1-8f8c-cde1221a79b7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ee0b0384-1027-44c0-a689-c6ed5ab0aa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307cae92-ca2e-45f8-b746-8d717773d09b",
        "cursor": {
          "ref": "c440ffb6-c02f-4d5a-8bba-e0f19f6c8986",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7282bb65-9025-4d76-a232-38944ccb99ab"
        },
        "item": {
          "id": "307cae92-ca2e-45f8-b746-8d717773d09b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2500bb69-aac4-459b-be89-5e8c93c2b6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dfb482-1458-480f-85ac-cad625b49f51",
        "cursor": {
          "ref": "579d23bd-f037-4bb1-b391-de25952bccf5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "59265b4c-6dcb-494f-827e-a0f22505e31a"
        },
        "item": {
          "id": "59dfb482-1458-480f-85ac-cad625b49f51",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "79de0d07-7413-480b-b245-942ab6ffc707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297e8736-6273-42c2-992a-027b02230f2f",
        "cursor": {
          "ref": "b2e5e693-955a-4783-8d3d-fcd16dd865aa",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9c2d8557-01db-4650-9e49-3d2fbceea2ba"
        },
        "item": {
          "id": "297e8736-6273-42c2-992a-027b02230f2f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0e6b796-7bf8-4fdd-8f07-ceef95112c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b350266f-f3d9-4319-b0d5-41a38f94456e",
        "cursor": {
          "ref": "7f05c023-2f2e-4237-a7c1-863f83ab0807",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1aeb53bd-ed1e-449b-881f-2dd003d16511"
        },
        "item": {
          "id": "b350266f-f3d9-4319-b0d5-41a38f94456e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5fb6aa7d-d4c7-4302-9102-9b2e65a8d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0168b56-6193-4d2f-9af5-093e6305c76c",
        "cursor": {
          "ref": "95b1f1de-63f8-4b26-b440-d125fbc1e489",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af1ab4f6-03c1-4024-ae35-098952679cf4"
        },
        "item": {
          "id": "d0168b56-6193-4d2f-9af5-093e6305c76c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1a7e63d4-24f7-4b0c-9ecd-9be7ffeee565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e810e2a-98bd-42e2-826e-389454ee8776",
        "cursor": {
          "ref": "41232fe0-58f1-44af-b263-51afab7bd8d5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ad55b9e7-a0c1-43b9-aaac-5f819129f1ff"
        },
        "item": {
          "id": "5e810e2a-98bd-42e2-826e-389454ee8776",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f15c635b-18b4-445d-a1b2-fca9766870b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378afdc7-ed28-4e0e-9126-0096071e666c",
        "cursor": {
          "ref": "76e57b96-33cf-4f1b-915b-96e9b6a7624f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e5febee-d18a-4f77-b86d-9aa6657de525"
        },
        "item": {
          "id": "378afdc7-ed28-4e0e-9126-0096071e666c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "51dc9f2b-465f-4f50-a18f-9383cea84894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3425630-7f76-48e3-9e62-15af521b57d5",
        "cursor": {
          "ref": "38fc6f72-1b28-47e8-a969-b0b5c08ee697",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b71e6dce-e3c8-4836-8ee4-552e02c72067"
        },
        "item": {
          "id": "a3425630-7f76-48e3-9e62-15af521b57d5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4916c153-e588-4638-a049-f6fd60a20812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f87a8-bb14-44f4-9c33-cc6ebf77882a",
        "cursor": {
          "ref": "92aed944-a65f-4cd5-9454-bd7e3e53f644",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "35e19e3c-c94e-4638-afbd-0b0a73666985"
        },
        "item": {
          "id": "8c6f87a8-bb14-44f4-9c33-cc6ebf77882a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aa190eb5-fb8d-4d1d-a7e1-6d27ae3d16be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f96a253-f8b9-48bf-b390-57349fd89cb7",
        "cursor": {
          "ref": "7a2b8c47-ff6e-4b82-a54a-71f1ac99757b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "208be86d-88a6-4cfd-abf4-a1e4009ba28d"
        },
        "item": {
          "id": "2f96a253-f8b9-48bf-b390-57349fd89cb7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8b89334f-6c11-4237-b4a4-ee049a405c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f627f4c-a57f-48c6-a71d-6194674cccaa",
        "cursor": {
          "ref": "7d699c4f-f7eb-4d3d-904b-50456181de96",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "77078543-28d2-41fa-9773-b3b5c7b12445"
        },
        "item": {
          "id": "2f627f4c-a57f-48c6-a71d-6194674cccaa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e12964c6-81c8-4c14-a6f5-431e233c43fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78601b-eb41-4a73-a62c-fea334ebdb16",
        "cursor": {
          "ref": "87a5503e-7e39-4d70-8f32-feba493f913d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "14b442de-9106-4cb4-a612-9036283e4eee"
        },
        "item": {
          "id": "ec78601b-eb41-4a73-a62c-fea334ebdb16",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3d09a6dc-2d21-43b8-bc07-385b8dd4ccb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49674d46-8aae-402a-bf42-1a07ea117b4d",
        "cursor": {
          "ref": "6b7dc3b2-cbe5-4693-bf74-717564ba9f8d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1a4a3913-6dff-4224-be19-97e72e645d1b"
        },
        "item": {
          "id": "49674d46-8aae-402a-bf42-1a07ea117b4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "12fbed10-46aa-4002-8488-91b514ef42e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d62ac7-22ae-4fe9-957d-d44ac82eacb8",
        "cursor": {
          "ref": "1d961e7e-c083-4cf8-a946-488449c132dd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "403f0eb3-7570-4b73-8a0e-456ed256ffde"
        },
        "item": {
          "id": "15d62ac7-22ae-4fe9-957d-d44ac82eacb8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5e01cb63-ad4a-4d6f-9cd4-7ff1d47160fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edaead2-b7e0-43ad-afaf-a2445489f229",
        "cursor": {
          "ref": "c83800e5-9b14-46ce-9490-820f8260c286",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02f966b3-48be-4907-9c30-9d23c454feb1"
        },
        "item": {
          "id": "0edaead2-b7e0-43ad-afaf-a2445489f229",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f0562bd4-f004-49a1-8577-63f046ba745f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b6bd7-06fd-4547-bafb-a35400bfb417",
        "cursor": {
          "ref": "9967c33f-9e46-4f63-9d8b-ce29ef4337fe",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bcd932e0-9470-4a37-b0c1-2cf8658f6a81"
        },
        "item": {
          "id": "cd6b6bd7-06fd-4547-bafb-a35400bfb417",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8ccddf5e-f581-4957-b327-ef0b9a9306b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c05cb2e-cd83-48b2-bd66-da062070ea04",
        "cursor": {
          "ref": "1f757eb1-07a6-49b9-9051-ae6135d54010",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4982a346-a448-49c2-8a10-f1345b589558"
        },
        "item": {
          "id": "9c05cb2e-cd83-48b2-bd66-da062070ea04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6a90ad90-7eb4-4338-a5f0-d49da311710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b7dc0-c6fe-4569-8e45-6193bc3fe099",
        "cursor": {
          "ref": "0e3f1bf3-1ee2-4226-b9ed-38b95310345f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d85a2b34-e12c-4b48-84a2-f44fec478a3b"
        },
        "item": {
          "id": "083b7dc0-c6fe-4569-8e45-6193bc3fe099",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "91b6f81a-ac9c-4988-b708-2b43245647c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a3cdb9-21d0-446f-a72b-0b2f7abf3b7e",
        "cursor": {
          "ref": "b33ccbc2-db6c-4c5f-bc85-43175a8c9cb2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "78bc3e7d-5ac8-492c-84a4-4698a12ad114"
        },
        "item": {
          "id": "39a3cdb9-21d0-446f-a72b-0b2f7abf3b7e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "64e3d9fe-4a6b-4668-bdc5-455e8dbfb8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cecb357-d43f-42b9-9cb2-4cac78ef01b8",
        "cursor": {
          "ref": "ae778cc8-8d76-429f-b076-f4ed3a2aba43",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "083a4967-ba0f-4ebb-9cc6-80cfeadeb1e9"
        },
        "item": {
          "id": "1cecb357-d43f-42b9-9cb2-4cac78ef01b8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b3b5b10-bc31-47be-aabb-93af3386991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3f9d0e-2278-46d6-8a12-0d951fae17c8",
        "cursor": {
          "ref": "9269801c-1480-4e19-85ec-a3d46074c1cd",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dc8e96b0-603a-4430-9fd8-9ca7fb1942ea"
        },
        "item": {
          "id": "4c3f9d0e-2278-46d6-8a12-0d951fae17c8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fa682988-1062-4aae-8b8b-d5db5907704e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6749e3a5-b9f9-4247-93ea-d1a50136d07f",
        "cursor": {
          "ref": "e112ae2d-f9d2-4969-9643-2a5dc3db6b1a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "22bbb661-b3ee-45d2-9049-50451e88d9a3"
        },
        "item": {
          "id": "6749e3a5-b9f9-4247-93ea-d1a50136d07f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81d9cd19-e629-4b41-8b2e-2cbb8fa4d179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97237c82-690a-47fa-a9f3-d7697565e66b",
        "cursor": {
          "ref": "ae85345d-832e-4fe0-8171-1020f2b4f6a8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "32bff0f7-7937-4fe0-ad65-8f4530672382"
        },
        "item": {
          "id": "97237c82-690a-47fa-a9f3-d7697565e66b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bbfa1be8-b369-4858-acb0-1c0633427bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cc647e-d61d-4cc3-97b0-aab262ef3263",
        "cursor": {
          "ref": "e2d74af8-1401-48fe-ad32-260d0b4b5f55",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "94d3c678-3c84-4d1e-bd00-7ca14617a407"
        },
        "item": {
          "id": "e9cc647e-d61d-4cc3-97b0-aab262ef3263",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "adb400c8-3103-4a6e-876b-bb38c2396aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c6032-751c-4934-a57f-b4ccc3e4a01a",
        "cursor": {
          "ref": "d22942e6-5665-4896-962c-e096852b1e23",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cf2d5973-3e82-4d09-9f73-b1a2c3df6aec"
        },
        "item": {
          "id": "f61c6032-751c-4934-a57f-b4ccc3e4a01a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c01c8e98-a86c-432f-a54d-1ccec416690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2d235-9953-43aa-88c7-7281fd7e59a9",
        "cursor": {
          "ref": "18833a11-2467-4b44-b407-bbb6d609f8e5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e5593c2b-0e51-430c-9cbf-71744716ec1e"
        },
        "item": {
          "id": "b1e2d235-9953-43aa-88c7-7281fd7e59a9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8405bcac-453a-4a2e-8d26-62d024d5fdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f891872-92da-44cc-aab9-df998fef6de2",
        "cursor": {
          "ref": "435e924d-ac87-472e-a2e1-624a9e6ecc4f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d913d12e-c2be-4a84-9855-561707594886"
        },
        "item": {
          "id": "2f891872-92da-44cc-aab9-df998fef6de2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0493a46d-4123-460d-85f8-600dcc3c47cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06274071-30dc-4f5b-91fd-c69336a4d3f7",
        "cursor": {
          "ref": "7db44793-35d7-416f-a67d-429329ff360b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "70bbd868-75b3-4606-9f88-1c03727dd7cf"
        },
        "item": {
          "id": "06274071-30dc-4f5b-91fd-c69336a4d3f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6bf111f0-557c-4745-819f-0370c1bdf35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28cedc1-da8a-428b-875b-27a586710482",
        "cursor": {
          "ref": "a042cc8e-3541-49f4-94c7-b3182d2121c0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e980ec1a-8004-413b-823f-668a71d8868f"
        },
        "item": {
          "id": "f28cedc1-da8a-428b-875b-27a586710482",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "19b77251-d81e-4c1d-b96f-ca38c6ea46cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01814891-f971-43df-b300-f74b9b7834d0",
        "cursor": {
          "ref": "66b2a5dd-9953-4249-aba5-623474859b80",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "58b6fd09-dfc0-4898-8678-f2016a5dda47"
        },
        "item": {
          "id": "01814891-f971-43df-b300-f74b9b7834d0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e19979b-840c-4d13-a9a7-26b4c1866f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a44b73-c878-4b8a-858e-9c508b8092ff",
        "cursor": {
          "ref": "fcf8d048-85bb-4363-935a-3e6367f374ba",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "349f91c8-2606-432d-bc33-6d8eddb75096"
        },
        "item": {
          "id": "a1a44b73-c878-4b8a-858e-9c508b8092ff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "84756188-bd6f-4a83-a10f-35dd0b912604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528ca2e-57db-499e-bb63-3339738c5e2e",
        "cursor": {
          "ref": "4fa74365-6ecb-4220-a96b-ec4edf29203a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bb466b0b-4987-4581-80c4-9dc2229d592f"
        },
        "item": {
          "id": "8528ca2e-57db-499e-bb63-3339738c5e2e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "578974e7-6567-42ab-afbc-23c7687a46ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd79d717-8f7d-4ef2-8050-264c82da251f",
        "cursor": {
          "ref": "421a907b-ed0f-4667-bf93-cb78368df26a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "96046830-7f59-464a-8029-a9e4dbcd8961"
        },
        "item": {
          "id": "cd79d717-8f7d-4ef2-8050-264c82da251f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d6f0cca-c87a-4d78-9a9e-c682d46adeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2617d96c-183b-48ec-ad87-bb7a63d9b41e",
        "cursor": {
          "ref": "6aba8ee1-3f97-4ab7-8278-212427cbdc8b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5f1a77c4-7127-4370-af93-a70cad2db83e"
        },
        "item": {
          "id": "2617d96c-183b-48ec-ad87-bb7a63d9b41e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "56244e01-09f5-4e2e-865f-d08ecb9b3384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62904ff8-b3e2-46ce-98d6-1ba6bcc5933b",
        "cursor": {
          "ref": "baccc1c1-e46c-40ff-8b61-6d378adecba8",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5c8d208c-d9ca-4427-8fc6-3690b49d4c62"
        },
        "item": {
          "id": "62904ff8-b3e2-46ce-98d6-1ba6bcc5933b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a8e620ca-8507-4b86-899d-390f148af1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5dac95-d8f3-4991-84b9-5cc165f7bdc7",
        "cursor": {
          "ref": "1dfa1708-877c-470b-83d4-dc9dd54b0d08",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7786824d-e2d3-4e4b-afd6-0d38368336c4"
        },
        "item": {
          "id": "ee5dac95-d8f3-4991-84b9-5cc165f7bdc7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "906d9040-f60c-4cca-b4aa-af3f12410cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b681876-bef2-447e-bdef-8aed98eacad2",
        "cursor": {
          "ref": "7c721c9e-c3d3-43cb-99cf-ec526e2ad645",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0406623b-68d2-4851-b80f-0728419bd6da"
        },
        "item": {
          "id": "6b681876-bef2-447e-bdef-8aed98eacad2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d3877fdf-122d-46dd-b56d-b3fe3f905419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10026fce-91f7-4f43-ab88-c2eb9c820162",
        "cursor": {
          "ref": "1b440f45-bfde-4a9f-b302-d7df266ede70",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4e399369-4496-41bc-a8bb-fe45337465be"
        },
        "item": {
          "id": "10026fce-91f7-4f43-ab88-c2eb9c820162",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "db3e5d30-ce96-415e-9672-4ed52e8f0376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb7c82d-389d-4c40-8c9f-35f4791800a3",
        "cursor": {
          "ref": "ce338f47-76d3-4785-b26e-fd3ac0c4798c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b9e329ba-a2fc-4f05-aa30-d4887df5003a"
        },
        "item": {
          "id": "bfb7c82d-389d-4c40-8c9f-35f4791800a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "66e1ec9b-9237-4e42-b21d-dff3616e0ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5d9888-f7af-4545-a4e6-b1f8f3265710",
        "cursor": {
          "ref": "b32035e3-5f86-485b-ac85-256b91875dda",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d47a56b5-5d63-4348-b43e-d942fb7eccf7"
        },
        "item": {
          "id": "3f5d9888-f7af-4545-a4e6-b1f8f3265710",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "351a926d-c652-4498-8031-f5574a2fad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10a18e-6460-4f81-b2e7-c8c9782121e0",
        "cursor": {
          "ref": "9f5ce4be-222a-47b3-853a-40ab25ffdf79",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fa5584ed-e7e4-4fdd-b9aa-e9e79b593197"
        },
        "item": {
          "id": "0b10a18e-6460-4f81-b2e7-c8c9782121e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00599211-466e-488f-be04-c4b8732c5c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcd25cc-3021-4500-ae19-c3b48f6c0470",
        "cursor": {
          "ref": "0dd64387-45a0-464f-a491-822d30b8b372",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e27cf050-dc6c-408c-b8f5-3d754a95b6b0"
        },
        "item": {
          "id": "4dcd25cc-3021-4500-ae19-c3b48f6c0470",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ac41f38d-6aa6-47a6-904f-a70461f412a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830d5da1-6351-4643-966d-35099efdc52d",
        "cursor": {
          "ref": "672dab1b-c228-4632-a38d-a192ecbfd5d3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "07ca599b-2ce2-4e69-969e-2aa99a97d154"
        },
        "item": {
          "id": "830d5da1-6351-4643-966d-35099efdc52d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "df11fe61-d589-4c23-a1ab-47432197bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261723b0-5de7-4b6c-9e26-a97c6c03dd3b",
        "cursor": {
          "ref": "de4a910d-d72c-45be-92e9-fd0fb52938b3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "76765e55-57d7-48a1-b9c9-b680f3ea3a4e"
        },
        "item": {
          "id": "261723b0-5de7-4b6c-9e26-a97c6c03dd3b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dde0966d-ae5a-43da-a62d-cad3890a54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb9725-5db9-4de4-a1fd-76ee9caf0f04",
        "cursor": {
          "ref": "a5e25529-a585-4d0b-aa10-76c03541a7f8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ca0fbaeb-fc9e-4736-a7c5-336d30f2594c"
        },
        "item": {
          "id": "10fb9725-5db9-4de4-a1fd-76ee9caf0f04",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e45b1cde-42ee-4ae6-88bf-d09b05bd05ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77600cca-f01a-4116-bacf-6256aeea049b",
        "cursor": {
          "ref": "81d2d1bd-1506-4271-a264-197e2ff8d6e7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9142e0ff-d386-4ae4-86d1-18b00fcf2d8a"
        },
        "item": {
          "id": "77600cca-f01a-4116-bacf-6256aeea049b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0d5a3f1d-65f4-4081-964d-14b53e7e2caa",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f483b3a-00c0-4c76-9fb1-511195b8fac2",
        "cursor": {
          "ref": "72488e8f-2b5e-47df-a1af-9559e7b8afff",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d4c0d408-d94b-4537-bcf9-bad6d00c8c8a"
        },
        "item": {
          "id": "4f483b3a-00c0-4c76-9fb1-511195b8fac2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "63200d78-a0fa-45b6-87f4-524962d4f1d5",
          "status": "OK",
          "code": 200,
          "responseTime": 3168,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c8e86-6b39-4dee-95c8-3e3c9b99ad54",
        "cursor": {
          "ref": "d30ca0e3-1771-4a34-9d80-0a041949a432",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cd2a1413-9129-43af-825b-25d7d5bc7eb6"
        },
        "item": {
          "id": "f53c8e86-6b39-4dee-95c8-3e3c9b99ad54",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d5346f05-8476-4a67-9f1b-aedc7aa41cd8",
          "status": "OK",
          "code": 200,
          "responseTime": 2527,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9160d8-7d9d-49a3-8fc0-b754479c16a0",
        "cursor": {
          "ref": "22caeb3a-ec5c-4589-8d5a-25ac67138a1a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3414cf59-db5c-4a5f-b56d-0e8149a6a3bd"
        },
        "item": {
          "id": "0d9160d8-7d9d-49a3-8fc0-b754479c16a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67aab315-b949-4cb3-99e7-f78f405f979b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9160d8-7d9d-49a3-8fc0-b754479c16a0",
        "cursor": {
          "ref": "22caeb3a-ec5c-4589-8d5a-25ac67138a1a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3414cf59-db5c-4a5f-b56d-0e8149a6a3bd"
        },
        "item": {
          "id": "0d9160d8-7d9d-49a3-8fc0-b754479c16a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "67aab315-b949-4cb3-99e7-f78f405f979b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361cc64-cb4c-41fa-9a7e-8c26b1299694",
        "cursor": {
          "ref": "c0ac5e77-2c6b-4341-aa70-d7decf483f34",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "679cf95f-0a8e-4882-aef0-b045a5df06dc"
        },
        "item": {
          "id": "f361cc64-cb4c-41fa-9a7e-8c26b1299694",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "86661cc1-cff2-4224-8893-9430eb9a872e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b01340-7a1e-48f3-89e6-45bcc7d77755",
        "cursor": {
          "ref": "79ffe908-1568-4a69-ba33-7a858f55818c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c7e63814-7970-4b5b-8eac-9afc4bee7258"
        },
        "item": {
          "id": "15b01340-7a1e-48f3-89e6-45bcc7d77755",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "be95f810-2942-4a0f-9a5a-b2c5789be4ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}