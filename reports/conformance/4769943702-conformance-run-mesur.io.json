{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1dc70c2-491c-4f9e-8d0c-0f3cce57c329",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01aae834-3fc0-4c33-b80b-a7eca4b4fa4d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1265b90a-43a9-46d9-9357-6a63aaea4c4d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "819b3146-bda1-40bf-9754-71b97b42c639"
                }
              }
            ]
          },
          {
            "id": "fd47f3f2-53c9-46e1-bc91-c1a8c7ba0f63",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c09bd7f7-2631-413e-a1e2-87bce4f1b666",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4f00ebf2-8699-431b-9e41-8fb9d2c41271"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "631986fb-c2ce-460b-a3b9-ba4f8895bdcf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "817a014d-3ded-4c1a-ad71-175e4c4664a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c82d00a-13da-4a81-bac8-e3947e7d2162",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b640a6a-b028-4de9-8282-0e4b8b4438bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03e8eee5-3fcb-4d51-bb66-5c922063dde5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c4d1d53-50ce-43fe-948f-ea11cba7c226",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a463595-8dc7-44ff-8ca3-9bd9d7726298"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6a6a9e8-cc75-4379-aae9-dccc408831f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96b4f80e-9595-4f49-b2ad-a6f068a8ef05"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05f6f169-5a30-4cfa-8e4d-aecd6301d569",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1a99aebb-0459-462e-93fb-85e4bf189a67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f32c17c5-2c8d-429a-9c6d-074d152dba0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0bfad1c-82d9-45c7-9341-c0a2b83d16ab"
            }
          }
        ]
      },
      {
        "id": "59face22-7180-4986-b3e6-8cdf51cf5dfb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14402a0c-9083-4472-b134-ce45e735d9ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c84c278-cdc0-4aa6-900a-3f6387c0c197",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68b1c6a9-4d98-43b6-8077-47ef990e2d5f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a3ea2-dff1-4a72-9915-62be3d7eb4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44172360-0694-4785-ac65-21097c9ca995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4d1045-8fa9-4630-9fd3-9be5ec8b92dc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b35fec-20ae-4bf5-adab-b018378d5fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "494522dd-54b1-4c12-b2b0-fdf00df36dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0a2c2-cc21-4d62-968d-e92f2d6a846f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dada1aaf-0f53-4f43-ba5f-f321441fa4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51903baf-0b1a-4a6c-a1ac-9db2bc62883c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07517e40-fd09-4dbc-9c58-51f413733d03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6547567f-5751-4642-b7d7-65b95bb3621b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c15ee70-4217-4aa7-aa11-487f41eecfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d7013b3-2b8b-480d-a247-76b7a560a3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8069b65e-1041-40ef-847a-b88507976c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34d9281-feb2-4480-9b65-845ba0d9f909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4099d4d6-343c-4ad9-9dc3-4da6df16e73d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01062514-a013-4ccb-ba95-bb15aebca39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0caa925-aaaa-4b39-b7ee-cf12ca45de1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52aaa2-c2c2-4471-a874-2ab4ba14883f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "63a33569-b09e-4c57-8acb-12c51bc8268a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78ace633-100f-4346-8069-4936a05de2be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18d03ecd-ccad-42dc-bea8-99eb4a38a67a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b834d81c-c82c-4ed7-a0fa-d4766cc7a039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ab5eedda-4e86-4031-b3eb-c58da11d6b89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a5832c2-eba6-4593-bac3-b6b2ef6d5435",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63883433-b552-412a-8f90-7ce5f9fe3b6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ed91204-303e-4bdd-b72c-e7a5c54924d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72eed6f9-2212-4f7b-97d1-9b375face9df"
            }
          }
        ]
      },
      {
        "id": "83dff288-0dae-4d89-8184-738c648eea1c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "65200298-6867-47a6-bde0-34d1e1d85f73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baa68273-7098-43a1-acd2-209baf294acf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7acfdabb-ba09-4372-beb6-7386620921b4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78026d2a-473d-4f00-b178-ee3b41ff658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561656c7-94df-4440-afb5-e4a27297bcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636838e-c17f-49c2-b185-011375bf55a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd317cff-56ee-4459-8b2d-ea9e77644f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d2d93b-3d83-49f1-9265-7786c4b08521",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1b9c44-4ae4-4254-a157-0e2db5e3728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e807aa-4528-45cd-86c9-6d45f9c848f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ee0ec9-d4c4-4fd0-822f-76170c9d98c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc1c780-726c-493f-ba0f-7d4b60346f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddae27f-e818-47f8-82d9-c3b30e0287e9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bac094-d1bc-4800-85db-08de0322fd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7526ef9-a5aa-479a-9093-42334f756c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a8173b-eb93-4c66-8cd6-5ed0fe15003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e172db-9d37-4a41-9cac-ed792156181a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139ee98a-532c-4b90-b968-bdbb04826551",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42d6468-653e-4809-8f77-cf7f1bc1079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b63c82c-977d-4a04-8a8b-e8379ab553d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad5db1-4930-426f-99ac-23acce88d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfba97ce-047a-47be-8b65-e36a082c272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5866b555-0ecc-4ced-87f5-0927f47f2eb2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1c235-f1b5-4d45-b8ad-e62e8e551ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b0486b-b425-43b6-942f-1db2a6587308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290836e-402d-4b8c-a1d1-2dac369cc57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a0610c-853a-4b0c-8014-a83175fc7ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c900fee-53c9-4e67-8cd8-0b4d805a11b9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab9845f-14b8-46da-b11d-14b8f7520006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4592ea6a-6637-474f-9896-28954c9e4628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b58c18-f758-42fc-a79e-c873c7d11443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae54dfd-e6e3-4ec1-8b42-947d154a6c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d9b869-8cf6-42bf-8363-aecf2bc269dc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a9d80-1759-4661-bfa2-a55de35356fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a059cfab-aebe-47c1-ab60-5d4bcb2d7ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236da128-0690-4a1a-a66c-5c29ca782f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b47dc67-654d-414b-934c-8993b361cda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b2034f-e6cd-4a6c-b0e9-f1822e6a1666",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f84456-e3dc-45e4-a4a5-4ce3c0d1b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb9ca0d-0cfd-4ce0-b3fa-5fb7b8746f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e68300-37a8-49d1-a47d-62572a3e39ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "966c7415-c6bb-4a30-9224-a464c6ab42a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef82c39-57b6-46fb-83a5-f509c93ed99a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688d11d4-8c83-442b-8cd9-345a1d65c7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502db682-a3a0-4a68-b0dc-a4a850becece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876ce49c-56d7-43ad-9e32-d5dc868ad0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80b3ca2-53ad-4d30-9f52-b8007f82bcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ec546-a406-40d6-a726-d8e42a61014b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299d6b7c-c5ea-40a7-a811-17e07814b53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa407af6-f1b3-44b0-9852-68193fd5101f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a6ca5e-f6dc-4c66-9985-c2504c86a734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a1b7018-81be-4a12-92f8-0fa38d049458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1858918-81d1-488c-b6ac-258b5b0d3d12",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90397ac6-21a9-48ff-83f6-c491752260c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c8dd66-a4d5-45dd-98b8-becb5a1edff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3847bbc4-77b7-4f5f-865e-74f2dc14ff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5980c23e-a315-48d3-81fe-7cf3fc797677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1430b243-3617-46eb-960c-aab97814d005",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fec074-130d-4ee2-97d6-462ff2253fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58145efb-07af-4ebb-8844-7d853834fdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00ad877-2cb1-4424-8c0b-d449c723cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ec31b3-4576-45e0-a182-69c156c2fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53083f76-803c-4ea3-845a-f177c521d898",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d21a584-eef0-43e1-a4ac-6a746c9dfb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11c6639-2753-44f6-8042-76f2ef98c96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0a4c0f-b2a3-48c5-bf9a-4fbd21c634c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21bfd8a-9d79-4080-b768-4d72dea3269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3596c3-9272-4f39-aec5-6c1b9e31eb9b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8c4950-6d80-4959-99d0-3ec7ec59a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2454b3-45a0-4ae3-abed-89cf4a2ebca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73752e3f-1c98-4d59-8d3f-7e328188a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25d44760-8bfa-4540-9f3a-3d4b4a56ed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5ebb40-aed7-4279-9f85-8bac9b0dcec4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a98f7c-6379-4a9e-839e-6d5374bd04c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b126ad-10dc-4ceb-8030-6bef0712cf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231b9639-f0f1-429f-9848-41380247dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ea665f-8abe-4dc1-b253-d5a8242d604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d526050-7a18-4d19-96b8-cadd5955bcdf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131182f2-9a39-4bf5-81e7-bab149e3a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f258acf-c9de-41fa-b93d-e54401c3221c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2e7f6-02f5-42cc-a702-c33ce3f707b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0587d745-0c9a-41c1-afe6-9e420449a852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c66dcb-6b7e-4633-a6bd-9318c09e8eec",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4426df-fdf6-4a2b-8682-9291ed66a808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32610f1f-4980-4150-80d0-93d021f3aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bdb063-f666-4f17-bc4d-a1431cc74240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d3262c-ec05-4b6a-aa2c-9e9b1ecbe071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31790a85-0048-43a7-9b67-7c55619d6951",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6307fe39-a859-47ed-81a3-dea00f2738df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7400d680-f405-461b-8fa2-45b697722baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe3c9ee-9157-4510-a343-a9e8f1de33fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33f5727-80b2-4e58-9683-ea90d3c7a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a570ae-0b8f-4dec-a12e-e427d68052d3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5583c853-f1d9-44c7-b026-fedd5d499edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2956ece8-0463-4011-a2a5-1dff3c7e7f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be01991-944d-4f4e-8fbf-ba5b1829fd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "376113ec-17dc-4d8b-a2a2-c9e57192a67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b8bc6b-6ada-4f31-9932-a389c2f9669f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ead79c7-09c4-4e2d-886f-88948464d793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f385bd3-515c-4505-a7d9-894381ed010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de21f5b9-c5ba-4580-b404-1587a8d5fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a149fc7a-c444-4fd1-8a93-e345b118b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8fff89-b5ce-49cd-a842-e2fbf9a184fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f83cb53-d329-4387-979a-0d02166004a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d208cb6-0a33-4cc9-9946-b11ee2927eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cbc87e-17b7-4aeb-9d3b-789092961e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdcfb12-bca7-44ac-965e-b8fb5b8e8564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad89b9bf-dd0c-4d42-8aa9-77227b5c01f1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249a8596-2611-4a74-84f8-2d1b6c079339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1a9f4c-a7e0-4a23-aa1a-2cc5b25ea43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f03f30-8f6e-4d24-8bdc-6b8418c3110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a73bdcb-0776-4c0d-ae61-acada5876165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6ddf80-7621-442d-80a7-3736c98722a1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aac088-2bf2-4c82-8c16-47809347d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aefff6e-9775-46c2-9121-ba4980128ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c28e5b-7077-4e21-8f39-de1015b6d34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3776f919-03a9-486d-a171-33385cbae7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888a08e6-71f7-4974-addb-91f3cf018515",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03cca70-79ea-44a4-aa72-17f19550ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61295409-2051-4463-be54-8696d6c23da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ce0c0-698a-47ed-9dc4-86b5aca64a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cee5da-766f-4902-80df-53c6ba843fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e4f13e-faad-4c03-ba73-3037b5d09cdd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba05550-5b36-40fa-8daa-f25cdd5d0bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910fa11f-9313-48ca-b640-8f3a954797e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab64c8cf-88d2-4084-9a8c-d7f273f770df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab4fc79-3510-4a8d-bcf7-3143ca487248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d3ee75-2217-41ae-8a17-9421138cd03e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad1f7b-df1b-4a60-9b2f-62ac657c9a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778ac929-0478-4bda-8e1f-f325604a273a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6614e1-bf70-41dd-8d5b-93be7bedcc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a26a7e6-033c-4054-b47c-517ea81b4efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9fa5d4-595d-42cc-ac6e-07ecba75e91a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd4a02-9861-46c8-b0cf-d62961d00c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96e501d-9c8c-4818-b030-2780130e8b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fbf3c-3247-43ef-b6ac-17ed7989d145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaf9156-e0f6-4079-a8e9-4d0954ee4b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b7b816-5d31-47cb-a918-c7b2fde46f0d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ea0711-ccce-40af-9334-bbdc4a9e0fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fceddc0-30f4-4d15-aec1-f9d69f5a1935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bac178b-91bc-4271-8098-20f7f1eccebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "983950f8-9eb9-40b2-889e-19362b59b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b0d99f-b542-49d9-b9f9-37028467511f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276e5243-99f8-4f96-a76b-32b1a7343f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149be874-15fb-44b3-a11e-91f16043237b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b0c1ec-e333-459a-97b4-97ad5112d4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b1ff66-65b5-494a-80d3-bd0ad65e0e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343fb543-5b5b-4297-b631-7e2078d67182",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5c0b32-d643-4331-a657-26f18b912498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c641f4b-5705-4d59-a6bc-6708d74f5130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a720770-25ae-4025-bb1f-6586871d8a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "65820937-0247-4b72-a0ca-bce404317386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd6dbb-352d-4353-9c4e-2abdb49a94c7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1820af7-ca16-4392-921e-9b196cadd0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae1190f-ced3-42ce-8628-fde4ef6532d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788cd807-a3cb-4ed2-902e-4b39813b0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b84a3b94-3b16-4e42-90f2-e8f7906b8cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e513e-e358-4cc8-8d62-84e8271a1c06",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bfdd4d-876f-4e97-8345-25e4d838938e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2d0ba0-2691-4689-810a-227c67c2f06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d7650-a312-4745-8e5b-2a076daaac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5f2d7c-d2b6-480f-b56b-0a66ef2ec075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac2a726-d21c-4128-8944-782a04b227bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b74fc5-5ade-41cc-aacb-d3c556a9e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a98520-c9cf-488f-9c4d-095d4fa675d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b29dd2-91bd-4019-ad8a-2a1abb82b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00bde131-7319-4678-981c-70b21e732657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8902eb-5747-40e9-9fc0-a971e19171dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516776cc-416f-4be6-8d39-e3f1ab9d68d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0492b519-0d92-4774-8520-8975a6be58a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadf89c6-9580-49a6-a75a-bce6cc9f6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5965d7c-79cb-4f43-bf72-6b40e2671dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9957028-568b-4fe4-8ae4-f9591f5ee30a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395e4e5c-9955-4df1-9d1c-b3b88b372c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220d243d-58cc-4700-82b6-094b890e5be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c30db1-a7be-4c92-af6c-9a2b1b8cbaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "109475e1-e8b0-4dd7-8470-f798a33d262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be4ed39-6349-461d-b98c-ecc0264805cf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04440753-5144-428c-b05d-154da453bb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fd38ae3-6a7d-44e0-948d-b463fc9ee19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc41843-e0ea-4cc1-be0b-882b09b6e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f59764f8-3a57-4f27-b5ea-aadf9f2856d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fdb941-c4c1-4bf5-804e-8e999bd8ff22",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398f22ef-23d4-4ebd-8336-9266c36550ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9038c4bf-fda9-48ae-a82e-96863d589159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeb0980-8f1b-4dee-a339-517f2d7584fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc6c8a2-0604-4e47-8d2c-17fc4841f99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5890ce86-eadb-434a-af9e-a49e33700e84",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36653731-2335-406a-b5dd-eaa8d40a2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01425bbe-e2b2-4cdf-90b8-8e2f9a15f19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78338bf0-abb5-4fa1-bdde-fa09d9a9bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fb31f7-3d2d-4802-9909-3060ad9b9a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b35028a-5ec3-4a13-88c4-03893d47d0a4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1da270-883d-42d2-9599-a11460dfde82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87cdf3b-d316-4ca2-b5b3-a536c3f1bffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a859e1a-de2f-4337-8da4-ae8a41e26d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71d49e99-a5a6-402d-b060-ef70a81ed73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc41d98-e668-4c31-87cf-38296bfb5453",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438158b9-99a9-4430-8a1c-d676512fb98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ad4d27-813d-45b4-b49b-1183a07fae2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973dc20a-ecfa-4978-92d5-50db11b7fc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba11b9e-fb36-4242-8a8f-6c29487492e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630af347-916b-47d3-a9f1-c274b424bee1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470b20d3-0bcd-485b-b768-f2afbb9a93f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe90ca6-e05e-4757-8c28-353f6d9433f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68ac9ba-bf9e-42f0-817e-4ed5f234842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dd48c6-a911-4d70-b596-f9ad84668ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c7aed5-76bc-4f70-bbec-24ec2352db0a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63db1cc7-8f81-43a9-b352-d3412095cad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a080b31a-9619-4234-bc9c-602e2181cc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4851ec-c9e4-48a4-9e49-896be07b2f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5b4093-8bf0-459a-ae09-c72d3fa32f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b8fff2-400e-47b5-bfe0-e4c9b174d5e4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af712437-24cc-4977-bbbd-c39a6da86779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe1453c-2013-4a55-868c-18f4fb57cd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3d691-9469-4038-ae8c-6a288aeb50b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23ba1edf-be72-4335-ac0e-5117c8f346b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a3092f-9c8c-45b8-bdf2-6a37c5fdd390",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd89b3-2f31-4a1e-8384-235201570c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4652af2-8ca7-4543-af1e-f5d8d3a792c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2a35c3-105d-485d-a102-2ff8933ac6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6324b29-397f-46d0-98df-3eef827b0847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d98055-a2c4-4b50-b5b8-5bbdfb51a241",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ab83ad-c6a4-4422-945b-f9de00e15085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b993497-d7ca-4b34-9406-3532ba57bd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53aefe7-32fd-4757-bbd0-1a1d1a6c1390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1994bf81-d22c-4a78-8bbc-724ff506c373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57fb8f-31b5-44d0-a822-c16842e0d3f4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69d5cda-d8d3-4237-afc6-9f853bf50a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8909c1e6-b52f-47e4-a8f6-ea8318d2d95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b48acd-6e67-47fe-9a5c-873a79b57dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb0a32c-e778-43a2-90d6-4bad828876d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eed6f9-13f8-49b4-a3e8-db73a2b67c66",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469fd9e1-0a44-4ac3-8bd1-5f5bc719ae84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4506a88-d91d-4ba8-82fa-2461c4271c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d323b7b6-5462-4916-87a8-5a0b32a5c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57772738-7914-4a92-950e-9b8b4cebef88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a216c3d-c397-4e2b-b6b4-e30325fc843a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2e28c8-7f2e-4473-a326-fc3322d6d483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d420d8-5787-4d17-a47c-f74f15fa4922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f612c29d-94fc-41d9-b2d9-40fe44c48d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6d27c4-e065-4693-ac79-540c30d099fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1039cb1-601e-48cc-9d26-689d728cdeac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1d893c-1183-4a52-91a7-8b9b0ab946a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964df8fb-b5a5-4b7e-b096-8a12fbfe9819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe5ae12-cbc6-458d-ab10-01bc4f976705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3541ca6d-49f4-40b1-9071-9544f0a5fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0cfc5-45b6-4f1d-8796-6766452d7ee3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b59896-9d09-41d1-8a0b-b8aa6596bbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb90239e-1675-45ae-bf91-809e9c475fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf68504-c67f-4475-b8f5-c812f4bde23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1dafd19f-3bc5-4678-8d18-01602a0c2166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac29f0ae-d26c-4f05-b9f4-8219c24dab99",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8811ea-2da3-4a1b-a097-f1e58dca77ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809896f5-c974-4d39-9669-283360358983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5921ca4-063e-44d9-ac60-1e9c7291b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "71714c86-7b02-4779-88e0-372c33fce9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1670ef81-4089-46f7-bed7-7bb24f660d60",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1a795d-129c-49e7-ba00-3627b66f2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c2cafd-f011-43d4-933a-b8c1a0fc53b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b0d194-244b-4119-9d1c-182d0f1c64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89160d1-c8ba-4cab-a275-d1ce96a7e5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c7631c-4eae-4c53-928b-db648066d9b6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477bd63-6b2e-40c8-8413-b3a7d07c43d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5d237a-9630-4545-bfcb-ce275a0af687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30786e7-bd01-4438-8dc8-baa654def38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "837e1e63-e6fe-4082-9179-7f8b0f53b5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10e8b1e-cd8e-473e-b341-61dfb2f49a52",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e189f41-9670-4213-a2ed-6c07dd6f1fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc40573-980f-40b2-a2bc-b15c5dd86837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec0f535-40ab-4008-99ee-d5f69b1e9605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b413753-124a-4d63-bb5d-6d2b01d273be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea07199-1920-4dda-9928-c87f088cfd2f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22749148-b3d7-4bbe-938a-146916d3081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa14a1dc-164a-4ec1-aabc-c7c6b7bac9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d78ed8b-dcf0-4f9d-9150-2396a33e2286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "538e4111-01ae-4fff-8974-54c442b1c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e580fe4-1c80-4cdd-9f28-bf29a056573d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a77f152-ef13-45b9-a1d6-f4e37df2395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b678ae6-a577-4df4-bd4e-88f35cb21994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64803218-8309-429e-913a-8d1da3ca6f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "93a2f9b7-8b2c-4f9f-a030-738c4140bd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a97ee52-2669-4d9c-8b37-f1dcb53e74ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ab7fcc-0277-4287-b156-315257e8c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddda4159-e8b2-4695-84b2-378f27794008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a1fd00-978f-4215-8949-9789d9d2669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b17d45-8c8f-4026-a61d-3e5e9c4c7b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208c2619-3a49-4432-a2f0-09c5488001e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc4414d-33d4-4507-b18e-932f7961ba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee816c95-69dc-45a8-ae8d-5a413967a908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02f0cf8-2dad-482f-91f4-5520f5e8c9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e57fe961-ba42-4779-a9b1-58adc4ecf440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6d5e98-5bd3-4a3d-b144-89d813992e74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43fe99-b645-4a63-9234-46def61b8c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55cfb74-bd00-4161-87f6-9e8b2c7f90a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d800ec13-c8a8-47f4-8ab0-f1e6b58232c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7041ef3-1450-4fee-8475-45ff06224aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b02756-ed5f-4abb-b0df-4c4c1c9e9100",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9958923-2d2a-42d7-ab1f-8f2216cf32dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b7e693-4730-4cb9-ba94-d3f20a4d1623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161ac05a-cc35-459c-897e-67d08607971c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f583a1df-3a7c-40f9-93c6-13bac6bbdaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9e3333-002f-42c5-b9b2-d96fe9c9636d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0d6948-d06b-45bb-a1a3-98e3ef340b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537fac9d-51ae-4b16-a752-6391afac88ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3aa569-3182-42fe-8dd0-b3d057b976e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba30ba2-8b4f-4ec8-b79a-fdcd56995f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47724be5-9ef3-4a0d-8c1a-404057aeb935",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea55cd8-c446-4b56-b93d-31ed63a176de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8420ff04-420b-46a1-8b39-f6febead6403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bca855-c43f-4411-90b4-cd5d30778f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f019eb9f-4bcd-4d67-8f0f-cbfba972c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fca3fd4-139d-49b4-b3fb-aa0edeae49d4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cee9cbf-e1d1-4f52-bfa5-ecc873c3cba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888f91b-0ba1-446d-9585-db0be67b5ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8503899d-feb2-498d-94e9-68061a506312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0189e2da-9cdb-482a-9750-f99635c7b6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4490decc-094a-4c37-935a-4170e0e23952",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501a0ba7-c317-44e6-bdea-3bfe93686207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45817343-8c92-4f73-a066-9556f74a5f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddfc37b-00c3-477b-ab56-73d7e7d5c925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "709905f7-b3eb-4ba0-8939-e6074b197b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db54ada8-72d4-4182-b407-d9b40c0526d0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e07ef7-4e4b-421d-8f75-b005eee51fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b172e0b2-da02-40ac-af0c-c25c5f26ab78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd8c34e-4562-43b5-9747-adaac2930fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f022c846-c4a9-4a27-b4c3-79744b2f3e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76aec44-e368-468e-bc72-42d62ed144e5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792409b9-304c-4bca-8ea2-b4b626e220ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7640b622-f179-4e2a-aa3d-c7ac275a53df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a978cbef-5197-44ec-a7b8-28ec8c0312d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f96dca-aa83-4d21-8237-4383d0304286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4949adca-db50-41ef-96a6-2567a76ebc04",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea4ec91-d317-486a-8b80-99acca46eb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186989a7-1d0a-4e20-bba4-ea427667051f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dcb77f-8794-4f19-afd6-c973c9fa9371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2e5533-7b5a-457c-a422-e54c1dc27602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337cadde-2e6c-466f-8643-19c6292766c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7d4fc9-fb84-47c5-8cce-463c5b7121c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a79063-e883-4426-ae9f-cf8d0fbdb7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650407af-6f29-4f79-88b3-ae8db405b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5a9bc0-64c2-4666-9fb7-5e839685bca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4500ad-b02b-49ec-850d-ce60669e2ed5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3591f4a9-edf9-4812-a570-bada1a12865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df88e2a3-d366-4865-a08e-a2d6f42f31c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72759427-1495-457b-9732-1c12b38335a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de72a08b-0474-4da6-9d8b-26de95e86655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b88bb1-cac2-4e3e-baf0-e2d003883f71",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acacc78-f87f-4f07-bd97-04ab0f425a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce230e32-3666-48fb-929c-5817a07c65b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc60d7e-498f-4500-984e-d76f2be188da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c2beb7-e34a-4b5c-a8c5-c6869aaa55b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d233cb-20e1-491c-88f8-800335d5ba92",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f0b66f-729a-4b4b-af7f-79b1c3bb7b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e058a01-ee16-4fb8-94a6-4fcfe7ff8b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea61ec-2f5b-4e62-a381-1619715e1486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "363c151a-74c4-4cae-90e1-c3d05adc3974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c8cffc-6ecf-4454-b75c-74a8065f0e4b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae0859b-ab52-4906-9a06-2f69ce6f6873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aadf885-f917-4a87-8380-a356a4d02a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea9f900-916a-4b4a-bd10-e038499e4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a665976a-11d9-4f49-a062-02d21708ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3369094b-af11-409a-a825-0756ffbadbf1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3121413a-6f7a-4532-9574-7d50a6dee1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041385d8-510e-4ae2-acec-59440704e15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cfc7cb-c6d3-4234-8e46-6e43d54a821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "839d21ef-1303-4bfc-8d8a-0b233cd84fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384dc85e-cc54-4725-a859-1dc7cbb8203d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3056e2d-3b36-499e-89c9-e31f84a4dd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d77df6-f4f1-4874-86b1-d262277beac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f150787-5b64-4b48-a526-639cd2811be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3556af3-2ffe-49f0-ac75-65915cb19b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a9601-8ccd-449c-a30d-78febe2e4959",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42048496-d391-45a5-8437-452f7a33a7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ebf0d6-914e-4d2e-801f-755c411e7cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e051b5ad-3b46-498b-bb19-82707a19f22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c646aa-77e9-47f3-8277-27784b97d432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae28ff75-34cc-413e-ab3c-0133d94d4414",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11afc9d4-e544-440c-ac86-311dd7309b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9f8a09-9b7b-419c-a158-37051fe358f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a908d2e3-26f9-47c5-9cb2-b4c40036b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27918566-ba3f-4110-a645-2632078435ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e809e4c6-75e2-4643-bbe4-41c5e75ad6a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0bc5b5-c15e-4dca-b5ad-85f1e78bfb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c6d99a-834b-4a7b-b234-a4603570899b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7843c3-9749-45ed-9b41-9438f8fe51db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "963c68bf-950b-4580-90dd-55ba004aa0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad51f2-923f-44ca-895f-d05130b159ab",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222ff4b8-a89d-464d-b0fd-724118a68410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f989cbd6-a8b8-4cf7-bf04-5c307b022d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3adab1-f266-4565-8497-b542cc9caf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d82faeb-cde0-4005-be72-eb417c9a8f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11ad116-ba41-4575-801d-3fc29b708bea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79833b2c-0ece-4cae-8488-06e24867b4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f1b05d-5404-49e1-b86f-01a0303259bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a942192b-ca80-49b2-9b18-9a01a08be82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb336533-6500-497a-a2c2-daac74b65536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac50d46-8ca1-4e63-807c-eedc5011010f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbad78f-4313-4b57-840c-ce913d6dd5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b26c377-eb2e-4c73-93bc-f1a004f669c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c1e4b-20b5-473d-b3e0-3ff08f9b0666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce6bd72-49e7-4d8d-943d-85fde9f46c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68c4dff-4cd5-48df-b759-a18d760148ca",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d17733b-0abe-42e3-a357-b78e0127ba2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1319c4a2-faf3-45c0-be87-f5a3927c712b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ed2348-a1d9-489f-9231-6888e5a0370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc67e6eb-a399-4718-bf3e-fc313ed9f71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86684f54-cdfb-4a7d-a621-3253a8ec0dac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e5179-a6cc-4218-b8e3-dac6d8e2ba14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b41f7e7-a9ee-4a6d-9658-6f5687dc50f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37ef24b-759c-495a-8c54-8a40bf172d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b753a8-b6b8-46f4-b25e-94a5c54ceac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7534aa26-c95b-4b85-a42c-3e4843e6da91",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad8b24f-8481-4a3e-ad42-be0ecf530260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb704c0-d7ec-443b-9f3f-5ed15ac64448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631779c4-9069-45e2-8b17-d521b7d9c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fe9580-de45-4770-af01-0772a7c0c4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03add848-e68d-456f-8ef7-94575f3abf42",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7a2cd6-ab83-461f-8088-026970489923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65967ff-2821-4aa7-af01-84c76a19e671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f17b78-fd5e-4ae4-a368-ef16b8dc7374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06aa10d6-9de4-4190-8d14-6b3b68768ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552a4e5c-5b1f-46d0-a412-0bbf85465b33",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944b6752-cd9b-4ca8-b6fd-47b828a83cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b79c01-3ff2-412f-9d26-a8828ee98bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e873187-7097-4639-8925-b60eac2772e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41bcff8f-0d6b-4f32-93fe-f93a59ab2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6150460e-75ad-4ea8-9ae0-7d8b40ad835b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b29ce3d-5892-43be-97fb-104fb00864fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1aee3f9-eb03-4aac-b15c-90eca98134f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf94669-8f7d-44c9-a228-29b0fd032f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f59ce5-55df-4b29-a3dd-3d4098579818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2807f5-b7f9-4c32-9598-3b6adf76ad4d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6f4e76-09fc-4d9c-af13-ba35ccfcd82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3897e0c9-df68-4a0b-a305-474e4065e66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7a3d07-ea71-465c-8d8e-11b6b43951fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c6272b-30b9-4008-b54e-3a12d02e98f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315b05fd-7e83-4891-a748-0f23c19da740",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf90a5-5d21-43df-b6be-6e0f98dd64b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365f20f7-e3b2-40fa-8ae9-e7fb025dad75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df15516-dc85-4d10-9948-ab07a5c20996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c042486-a891-4bc0-9e2c-befaaa8b1b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28b747c-eb3c-482f-adb1-fd34cbf3c438",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f606f2-3121-4cd6-a275-d7bb1196a2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e28c90c-8d31-4084-9a7c-e21feb1129ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c68d07-b02a-486e-8a37-3c280f10b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5d2ec2-a6ad-4cf6-b21b-f35b01d4afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beb01d9-9e37-4556-bfed-645364208c8b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f490f-4959-4709-a757-e565a15ac6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e174ed1d-a8b6-413a-89a7-7e959d7a51b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a7504-c1c4-4834-919d-b70894253e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f5b4f1-f177-4f8a-afb8-fc3650578153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97051996-fd08-42e2-9dce-a75a5d6a7a14",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8ed681-8be1-4ec8-a820-99c410f4c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3727cd8d-579a-49ef-8e6a-e75d44fcd51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aa5a39-673a-4d24-b3b5-ccb4bbf18ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc8391b-e395-442d-bc08-4b2f8916abc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5942d9-acd9-41af-ba72-ec17bd0dec27",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788e0b0c-55a1-4a3c-abef-dbd446c18029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "96bc4069-6852-4732-9523-baa7ae659f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a96276-ec6f-45bb-b6d4-0e793b4295bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7544e45-e015-4f65-8e70-a1067e3cfafa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "990ddf08-ef8e-4c10-90f9-64da40a53159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9578f6e0-6428-4093-8cc5-545b1a9b9724",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f01a085-6def-4171-8946-672ebc447d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c02010ee-32df-46eb-972e-d44f89e43c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93276c60-475b-4ac1-8145-663405fbf5ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f11337b-b2b2-4bc5-b1bd-0ffd76b995ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639680d4-4154-49be-b702-9a81d4114eee",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529cde1-1fac-4689-9a24-7c97c5e53b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5804f44-9549-4f27-b400-649fc5a959e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedd95c7-3cf7-4f08-bb47-bc3a7c8679cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76d73412-c1f7-4ac2-98f6-cfe2f31ed8c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10ae320d-156f-411a-be9d-7a7fa43611c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "076cc78c-abb4-4b28-878f-9ca0d2ee4478"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8162d01-a39c-4fae-b83d-211e83f89322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df15a63-0237-4fa5-be59-7a5a668aaf2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee44ea4a-2c08-46f8-a260-eb1a91f44535",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6eae644-ad10-4f5d-945c-4cdd5ea88caf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59b612c8-a8f9-429f-8b43-6c89e16ec877",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a96cd160-df19-4108-bb65-0824e33dc246"
                }
              }
            ]
          },
          {
            "id": "9fd26ea0-b7e0-4201-ac45-e8351173b290",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b80820f1-5bcc-437f-8a20-baf2a2990ac2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b16ba0-297e-4cce-a1bb-52ddcd182270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71f1d13e-8618-4a15-b6c9-5da927a79b39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04e597ab-1173-4767-aeeb-15bf464207d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb522f98-5095-465b-b44a-a6dfc52f87f9"
                    }
                  }
                ]
              },
              {
                "id": "48270268-5765-45cb-b4b2-a750a74f05d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f36f56a-74c4-43f0-b787-a50df149c297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7380402-3b9e-4df5-adcf-15bacca89749"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10378d01-cd2c-42ca-924a-636751d90b95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4d79a5f-4d54-4d53-921c-85ce434116bf"
                    }
                  }
                ]
              },
              {
                "id": "c1bccf80-8fb7-4e23-a93d-56fca104c72a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00cfb4c4-7e3f-49c1-8a00-f0204e7083f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2b81133-51a8-45f7-8db1-162e3779b1b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "520b9895-51a1-4279-a585-5f62145c40b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e0cd71d-42fc-40b6-a6a8-9e3f5335dd5f"
                    }
                  }
                ]
              },
              {
                "id": "533b14eb-eccb-432c-9d8e-1a2b1bc41fbd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5360b87f-7f07-420a-9f3f-62301f370763",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2941a182-300c-492a-ab0a-80bbb77129a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53e5cc60-1fa9-49ac-9c90-53aed3c1f61b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4867d732-d58e-4d86-b250-e0208a85b01e"
                    }
                  }
                ]
              },
              {
                "id": "d4cd2819-fbab-48cd-b3d3-9cabea599375",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d52abb1-2df5-4ad4-93ac-895f8fdda897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a93d7b3-cbb7-40ed-9118-0978d9216762"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a42ee05-ec9d-4266-a05a-f28b2adf1516",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eb1ecab6-1f58-40f5-a917-c4d1d2c92358"
                    }
                  }
                ]
              },
              {
                "id": "b376463f-f97b-43e4-9ac5-518803e0dd07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aebf0fba-15d4-4114-b2f6-fc3437e8c1ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3baf4e3c-2b3e-46ac-8c46-52872833ca7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8590ffc5-54b0-4025-a87e-c2bbf9e6e2be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0366bd70-a986-4983-b92f-000e6cf59fb3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "456009a9-d63c-477e-adb9-2ad3f42aa066",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17003b18-e9cf-432f-9519-c9fc9e19030d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "745d4f82-3c58-4b9d-8d81-143aa8870521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "668c72c8-a105-43e7-9495-d32667591efc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcca0c2b-0138-4401-b6fb-df407ec91592",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4bdb6fb0-6a71-4ba5-93f6-b875edd5e6a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0e9ad88-c79d-4abb-a757-fa92564508c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "805aa7fa-c2dc-4d01-a9e4-74c0d1d307b2"
            }
          }
        ]
      },
      {
        "id": "b677c714-e559-4cf5-8cc7-98c02dd4120b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "78977dc1-9b95-4f4b-b46d-0d6b8d70e120",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba78945e-f2f6-4811-860b-4528c55e08f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a908e0d-8e4c-4400-b241-f56d315ac31c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d4ad26-1e6b-4b06-b1a3-7e49808b8d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbce26e-91d6-4e83-a12d-c6a2ef56cdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f053ea8-dbdb-44dd-bbdb-2d8e2171d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf4fa7-6b90-42a8-9d79-d13adf7fb4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f35bb0-b3d3-4470-8812-c137242f3929",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e1a72b-ef32-4847-b819-fb86e3a1ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52237e48-c68b-4066-9b4c-745bd7150286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19dc0d6-bb06-445f-8d03-47e12e3c9e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1859eb8b-7f1b-4fc8-8114-2bd721b308e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5d4cd0-8bcb-4b68-a9e8-9ab27c668c5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d94582f-6479-47b6-ad65-8a877a5457d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee25dfc2-89fc-47ed-b3ca-c3803a9a175c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a668c9d-bf93-47e4-92e3-cc37dcf5e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5ec5a0-0a82-4e97-b3a4-c9630d48b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c002fa04-d287-42af-bbfe-20df6a3b2b59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f15a57-6cfa-4f5b-8829-9a3815bc1481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023b47f1-5536-4899-8718-d2865df557e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150a1099-1fe6-4124-9260-8fd605937294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43def2e-7504-4141-9f45-78630d57c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023eeb50-9e8c-4390-b156-9574fb18c085",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae7c95f-c8a9-481a-917e-1fea38ba3607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3cf3f9-6ef7-4ff0-b099-e1a38a0cae8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5143c9c-725a-46d4-ac5d-c82460748279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf8e160-ad44-4d8d-ae28-aba959bb174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d853ef5c-8b44-452a-9a77-1fcca1d6319c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1532d349-bba2-4026-9218-c3e2a4d99ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa1d058-f8d3-4d57-ada9-ee8f0444893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa0f599-7f16-46fb-a784-842d0834e188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b43afb5f-130d-4993-b899-e7bdb3a1c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf732d34-a635-4b5d-b863-bc909ad95537",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c499a5b-f709-402f-858f-77372d90b893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec406b9-f40f-4d1f-b64e-95d3aecbe829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff49651f-8812-4dc0-9c73-71e1e16299ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0beca3a2-c60b-499d-a50b-7b23e8116e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e78ea-e69f-4d87-a8fb-18ccc6713ed5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2e912a-a44a-4904-9aec-d74fc9407871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b535047-4533-444e-86ca-f3fa22449fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09584e7b-e76b-4d0a-8b23-acf87157dfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82efca47-9ca2-4bcc-a09c-fa2d7a5fe02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f554d41d-1716-4556-8fe2-aab8ee852b02",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68c32ff-5fdd-4128-b8c4-b8121fb83650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52721823-93ec-4e65-a1b6-589cc8bd2601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9b2543-ef90-47f0-a4bd-d916eeb06311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7db3cca-e675-4825-bcae-d9c911597611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec17d56-c04b-456a-9a26-dcf66b3bef82",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61564514-706a-47bd-bfda-0322b488fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d96575-43c4-45fe-8429-b5979a4d5afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab53ba56-15fa-401c-a102-cb82df6e3b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1447b253-6cf5-44d1-936f-deccd9130f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dfe4c5-223b-43cc-8b57-ad51dab543dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f606d1-1a56-4aed-af4a-19ed142bdc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d6f37b-3458-4e60-94bb-6a65207e3944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f422d2fe-d843-40cd-93fa-062eb9d3d387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "516fcc89-35d0-4d97-9668-199bef8f3e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470f07ca-6185-48e6-921f-8631ec3ba9f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf6aa67-895b-4080-99ba-2bee894bc95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415bfee3-69d2-4ca9-bf1d-a1af4bc24d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732bcef5-0975-404b-8f98-3ce91c220685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d69f1d72-d816-4cde-992f-f5d0cd828b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9efee13-4471-4596-9925-6b97fe4416ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c79ea4-5d12-423f-b409-276448337ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3d8c2-0a85-4a7a-b0dc-8c72a804b3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008d8e11-b45d-4300-b9ac-e77369011679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44aae6b-3546-4b48-8698-52521a461493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3a1faa-7126-4700-a217-4c6b5e559b05",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc27982-66b5-4d7b-8b91-ddd1ed8a7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4c0d85-592e-4890-ad12-6848c7d440dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ed8ae-6611-4349-bcab-fa52b1bf98f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f0344f-dca4-43b7-8142-e5d30a496e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d363212-3fc5-4a1d-9428-848ab246db98",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425dee10-1fd2-4c18-a052-8a19ff82413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e016c2-10bf-4a6f-b7e0-297c85746801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce79e30-0a9b-400d-8d15-926c977197ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ae143e-0be0-40a6-954a-d719fea1007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3ab97f-a50a-449d-97da-6de2f0de9dff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5e05d3-0844-4fa9-8b4f-19557e08aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ce0ce3-c1d0-4ea0-94f6-e6b9d2c7efff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6991a0e2-a112-4c91-91f8-eee5fb3672e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4138068d-4e9c-4e31-a1b5-4a3b89d13adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07261fc-fb15-47b8-9c3a-9f1351234339",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d174f-c377-4bcb-9e33-bb0ddf1b4adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b5c9ec-00b9-4391-bfda-8559dfcc9272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d1d1ac-3258-484b-861d-8fc7a392a7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fabce5-d949-4010-bb6a-2b40856b1fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376bacd6-55a6-48eb-b2e8-c9174f628bfa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852c2e71-ed0e-4ff2-8166-11fa0ac8e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661c4f20-66c7-403a-8f7c-b07fa7d097fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f99014-e4ab-46ee-b29e-42fdb21bd322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3ebf19-1490-4e5b-9a6a-70a746ea20ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bed91d-04dd-42e6-a795-9a0ae5cab302",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8906f1-63ed-40d1-b08b-18ef05a84df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f58960-f26b-4104-a1fe-cd28226650d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e62fe2-fd32-4de1-9d3e-55f16578d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e72281a-14b3-457d-8bcd-eee455fe0f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0264d0d-34a7-4cf0-ba89-3dc245693aba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4cfc90-17ee-4447-af10-5899f98515a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9879aa-5f5d-4bda-aaa8-3bd24cb65cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d5c6e4-8b87-412a-932b-d2a2c39ba18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f23f84a-899f-464e-9dfc-be48011c4ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b23df4-6935-4515-8ffa-3f5cbb6f68b3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c934240-6d52-48e3-a14f-f8229b9e69d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb0e685-caa9-47e0-8638-8832397f3937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984a71aa-943e-41ea-a5a7-674da8c1dc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdc596c-94d2-4410-90d3-3c9f188a878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a4d64-33ed-430f-9f43-9641344287ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9f36a-9598-482c-b00f-1992e91d5cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485d2bc2-e462-4ce1-b3df-fc9738683bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dd751f-64bd-4d38-8d6e-0095600fd773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec7d3c5-d997-4bda-9189-331be41a8e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a32a42a-972d-4f2c-8195-085fc18e0d51",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894961a6-a1c6-4bac-825c-37489cccea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b7d3b2-9173-4bf8-bf50-fcac50451c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358755c2-4b6d-44b8-8e7a-e416f0885fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c49c5c-9dc0-4d65-b8c9-a460d90738c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160fcf10-b53c-4702-ba96-921bc77a7f75",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8fba3d-9493-48ee-b93c-002f80aa3678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a26fd3-baa4-474b-bc30-e0efab504761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9174d99d-c9ef-4bf4-96ae-7dba9737fe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65174130-9635-42a7-81b1-720594267577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ebeee7-3942-4dd4-907f-0ce9992d4164",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3878e43e-5284-4c20-be5f-eec8a72f2b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c5c16b-7814-4f44-a179-3af40e3a4557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905896c-d024-4aac-a6cd-183f1815bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf9a520-2b9b-4897-b22b-61856803ab68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21919460-1a9d-4b31-8a80-4096cee65a9a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38d37ac-bcc5-4be4-a71a-f30475c964a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd9d489-373c-4c11-bc71-c30318b0578d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd93335c-8f35-4554-bb66-983a79e8b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "369f543e-fa26-4209-9971-d6a9a38b014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c41b0c-f97a-4a94-afd1-73d503f70397",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062b1219-cfec-44ca-9a1c-367a86a7fff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd5580f-55d6-498b-aecc-1b01f5908eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86690c88-5391-43ba-8f9b-8001b7759d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3101c7-4089-4771-8909-9d9d537aebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3de9d9-dc5e-4a18-a2b1-1c7bb9871640",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ce77e2-6807-48e7-a67c-46949a74de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca626a8-71d9-44e5-aa04-2ecc9c7853fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4fa498-8c99-42f2-bff2-b5a9e62702c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e9f86d-0d5f-404b-b61d-f0b77d47db75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194e1240-76c4-4f2d-ad7e-c6b11af6b37b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d3835b-a1e0-428e-b023-0783c74aae22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21b571f-bd39-4073-96d3-f69603031f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8694203b-4b22-4b46-b7ce-1434b3b20489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec37433-7206-43e9-b0ea-f30420257d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10f86a4-8b19-464c-9cbc-4dba830e4633",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e9792-0fdd-452e-a5c2-a12c5316fc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151d8805-ef87-4bd9-94c5-0841929562ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf756c6-320c-4c73-aa21-03d381b8da5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c106cfed-be12-4608-be7e-8be4660cd7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e901ed-3923-45ae-81ae-213e5014b41f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935346c8-1993-477c-9185-3ccc74280686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d098b1-4489-4ce6-9b6f-54be63aa789e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12d60a-d7e8-4b28-aa3d-ff8e1aaaddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11cba93-239c-4981-8c05-5c0aaa803b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f26866-bfa3-4871-a269-461734d65443",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388e8e79-35b5-4e8f-8302-a7e00f5c2ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69686a15-392d-4b16-92a0-e65d9d18295b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5446e204-b706-40e2-aefd-877611dcbd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4abede9b-1be6-4ffc-a9d5-7c0191814c45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27399689-ea03-4c10-8b52-dbbeda0aaacc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e556aaa-7888-42c9-90ce-cf09f01c91c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba63e962-7625-4958-8adf-e71086fb4010",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38f0a29f-efe9-4195-bc60-4ed419f325d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3046b9-242b-4cce-980e-47ccddcf2910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45997b14-76bd-49a1-860b-08d0c6a65fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86baf63d-9a2a-4aaa-98f2-bea3c1a44d66",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e405d4a1-af87-487b-9952-9024dbc1dca7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ced5994d-47ed-4504-b2e3-9881d446188f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2658a0e8-e3c9-4aca-9bc2-0cb1a5cf281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "700499a7-d9ed-43bf-8e9e-81462f5fbad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d992bc8-9058-403d-b19e-4235e86a3116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5f92ca8-aa51-4943-b1cd-1838d3065aa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef18012d-cb78-462e-ad53-680faff930bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24160f4c-e317-4f35-b406-5d6d0eca942d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abfe2e3a-0033-492f-8d07-c05210fb171f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e1a50a6-eb4f-4c84-b3e4-4d078ef2b45f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4a2c7b9-bfb5-4f48-b5b6-cbf197851e38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f19fc44-ddb3-4ed5-924e-8b5a20b357d2"
            }
          }
        ]
      },
      {
        "id": "c35cdc4c-ed34-470c-8fdb-a3739a761409",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4524198a-0ff0-44e4-9a62-1fc805f47694",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e630f11d-4b26-4c89-b863-d9837845db99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "691a542c-b671-49e3-af5d-069790067256",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122f1947-396e-421b-b274-6c58b81fcbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7b770c-ab82-4397-924b-49f7699476b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f13526b-9225-4640-857d-641bafef675a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c9cac1-058e-4af2-a6dd-56401619bba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93280a4c-261f-489c-bb14-0f191c29b441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27b7b0d-1fbd-44cb-8fd2-09271e67a456",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f29360-b02a-418a-b937-14325fd81663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c08853f-d636-483d-93b9-98f1c719cf68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095d13dc-a97d-486b-9716-6d7b4a3aff2b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf9d162-c095-4906-9eff-0cc0eaee112e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ded7cc5-5603-4750-96cf-735be483c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857397f0-3423-4203-9d86-103bf4512d1b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377ed52b-d59b-4a61-9272-9fc6c203e143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32798733-829d-4016-ac62-7d41340b16ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c531f5-8306-4a0e-98cf-09ea03907ebb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febd1dbd-41c4-47a3-a41f-5abd5065d9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0a110f-c76e-40c3-a204-5580f98e156b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4eb19c-0296-44c4-a8b2-175585f10488",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c01e58b-c4ef-43b0-af53-3b9df10e87b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501a9e67-0c52-4f00-97c9-b555df1dcfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5295ba89-89a8-44c4-8011-7da57814c605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022d1190-c76e-4166-81ba-a3919a786265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49b7852-ffcb-443a-82b0-54dab7b63ef1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4d8b27-23fa-492e-87d9-4af68e64303a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7f49e5-d316-40bc-a556-3b6e07b7b112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9625e2f-37dc-460b-b8a0-9203b5264203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b2f433-dde7-46ec-9537-4d6417a7900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aa6bac-a1c8-4f6b-8748-270ed07239cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3cf217-2a97-4131-ba01-047594c62645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7469538c-e2b3-49f6-a5b8-0eccec76202f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ff35e-211b-4faa-a81b-19531d3d2948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fa6676-7f30-4f02-8367-e8dd449888a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e78906f-eb93-4a41-8b62-7f138c8487e0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032e8c8b-8dce-41cd-8b22-252e65ce9f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6cf82ae-87b4-4bda-bf95-4d2f3af11a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e286090-0b10-4223-8c39-b60d12eb4ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c58a691-f513-462d-bf2e-f9a7278f4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193170a3-2007-4c86-92a0-499d4655fb18",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e0ad2a-4ba9-4c5d-bd51-9cdfd926530f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2c576b-e543-4877-b8a8-39dc1952cda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980842b3-369b-45a7-aba8-722f8c2c8303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b3f11c-5e22-4eef-a2aa-774d38764127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cfe4d1-059a-465f-8e34-d6bd80e85372",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd4c34-2d0d-4aa5-a150-2facd66961e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49915326-49db-4ca8-95af-e27153c7a4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f3d3f6-cdfd-4dd5-b7b5-0ec539ef94f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba82c527-a1a0-40f6-ac36-2ee4c137f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b391b179-aa17-45d0-be5c-4fcf1a681069",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79c7f11-a006-44f7-8e17-19637b32f556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56b507a-ef55-4622-9650-7c5f317720e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce75a83c-6734-43f4-ae51-47b2044daad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58608cb-c196-43b0-922f-75271d43e9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648ec06b-4fb1-4c00-832b-0f7e0dd5f3ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa2cf75-4c5f-4fe7-8669-571b7556f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1254a1-61b9-49c5-971b-4664455c39e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e9881-1d4b-4efd-9661-095ea3933062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba993f7-565b-4fd4-b753-62634d793337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73103f2e-4878-448b-b36f-93e5ddc42d28",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fbba8f-3480-42fb-b1a6-0f255971ca19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fed032f-2ee0-48bb-bcb9-6b8b2de910a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcda0b27-2ac2-4c73-a70c-9eba74d5e913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d967d160-d7e4-4eeb-bbe8-60608e827583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a45ba9-a4e4-4d37-ab02-ebc069d84b09",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1957e7fa-7c54-40e2-a9b6-bc9b76502f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b351955-c5a2-4786-802c-1c6ce7926e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d8fc88-1042-4942-a339-36eca97cbf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1ab50e-959e-4f73-9497-b7e1a8b2b688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca9f57-7ef9-4a54-a873-cccf1f66c806",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda5da9a-08a8-4b14-88fe-f7b7ec530b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d0bad4-d444-4a98-9191-2142873eab9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265dbdae-9503-4426-9d8b-77f4f2e1eaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeb2a36-8e6c-41f4-bad0-15f657972aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17803f49-d5ba-4ebf-9d94-4c759dd0334b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994506e8-9f8f-418d-be20-a3e4aa953bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d85ed3a-3ed1-4792-ae89-b8f5d3f8cae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef55a5d9-463b-430b-87c7-36af49e6bd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03079fac-24e0-440c-b458-d7c6257fa422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbb650d-0bc9-4179-8588-284312b29250",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34e0a6d-db14-4b54-9ddd-a812bcdd3eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f763cb5-951e-44df-a51f-6d1806344cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d41ec00-bfc0-42ab-a0fa-ff93942b3b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea972cfc-929f-492c-bec0-5eff3bdcdcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b2866-86c8-46dd-a2e6-3dc0bacc3caf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e2cc8-7557-462a-b623-bab6ec49b064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864a1b67-f22d-4e14-9813-e1ebfad464e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c71d61-dbab-43bb-ab28-303f1fd2e19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03445a7-74d7-4991-9255-77adaa483d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d41c012-acaa-47fe-98de-34bcbe5c0f1a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34319d-619a-4311-af34-92487dd1d7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ea29e5-3251-47ef-b7a4-ac6b30393746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e454e0-6bc4-48fd-bf77-6939b3a7d76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14949361-d2e9-4b8b-ab06-94be7e9f804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9778dc3-64bc-4659-a37e-41323771aa19",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3802dc-068b-4b53-a198-367461e9af80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610f03e-7d0f-46eb-98d7-195109993814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63265b4d-831f-4380-b401-9d12f1f53155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b12add-e637-4c21-9c82-45f764574369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d9d68-06ef-4960-984d-d18530f377c0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb5657-b912-4666-b87d-59980e302b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3db5a0d-e81b-473d-b6e1-8e718d03bdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18829c17-eb12-432c-a61e-7d72eb0531b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615e81a0-d25a-4a40-89b0-87d95ccb5e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dcd5d6-b58a-4684-9530-366d973d858a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3919cab3-8d9d-49f6-9a3a-e28964e2b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4315b9-b43b-4745-b48d-560270b192e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae78e8a-377e-40e3-ae9a-317a07f1b99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd7746e-4cc3-4007-9789-19db30c95cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53680874-259b-4f69-8bdc-24ab02013d86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5080456-8072-4d87-9436-c0da873425fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8edccb1f-ad27-4202-8c7a-9011a8718654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd895c-fe82-4717-ba2a-89441210f0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86573ac-b160-4e12-b3af-e61af1a1e391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35929351-aa45-483a-9934-6ad6d6fbcbf1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdb7640-badf-4e62-9698-ad33fa3c7384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a099a4-5c80-4af2-acdc-2c447f0c5187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa49692-d5cf-43e6-9c06-4c6f1c0d82ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c727b63-ffad-43c3-9945-61c8f9ae96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370c5bff-844c-4a9e-823d-2da41cd2f4a4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40368a99-b3c8-4f32-a583-aecd5e82c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0662897c-9fa0-475d-ba55-e093b0a2747e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad42ddf-e517-45a2-b0b2-160fb3c70d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b386bce-ed4a-4a42-ad8d-c8e515ccddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1cde2-73d0-4bdf-871c-7ab366dba74c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2923c-4472-49a2-af02-26859f6095c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816a6637-3ed9-4581-9437-93d877b3c04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1826c8d2-fb30-4dbd-a4b4-51c528a6bc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3264312-7da5-409b-bd0b-ff948ac49a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce49e4b-bd9f-4e2b-b085-c9bb2164955f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c6f0f0-3e56-4fc7-b9a7-8d70e59facc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79373b7-a51d-4a7d-861b-45008fbe727e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7814980f-ca49-4497-8b2c-a4c46bc3925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c019b8fa-ce65-45f9-8d2d-ead06e88e22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71a6114-0769-4fcf-ba0a-542194c01322",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c7b233-734d-41c1-a76f-9db814a030ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebc932b-fbd6-4c4d-8fb5-0e351d0967e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc94aa6-df79-4f3a-b9b2-7591a14e9957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636f672e-d77d-46f8-8cf0-eede62065ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eeceb8-27c2-44a9-8894-2e710f432244",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199dba95-0749-4b9f-83d0-4cfe434b8cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af16d2e2-161a-453f-a205-893173f75299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db67c7de-5f0e-4130-89e1-34d1d9f12a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c5d42f-709d-400d-94d2-d75448bd1505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4a70fe-5a37-45c2-9417-e8b40b5f54ce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de992b4b-9ed8-4512-bcb2-7326fe9c5f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bca8a0-e141-42d2-9430-b43d3cfb857a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac613aae-7cd4-4765-91fa-daa65f03bd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c074f8d-c6e8-4e5a-bacb-13743d73aaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c12bacb-8738-4d65-957f-2b2b3e38fc45",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf22438-f2a3-45f2-be78-6777f28132fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd4038a-6270-40d0-8140-c0f4aa9c4f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf1768b-4a9a-42c6-a083-76708b571d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aba4c2c-ace4-41e7-b5b3-e636e3a2a761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc298feb-cfc6-4aa9-8221-f871958aa1b8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54e7af0-a810-4f9b-b352-77dca9937bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deab61e4-4eaa-4211-be55-a5872009d930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1720017-ba1f-4945-a269-904a7b4fa53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d77af23-dd4d-44de-9d6e-8a0118c89dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2771ccc-cd75-485b-bc66-44d6602c71ff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb1f47e-e38f-4ebf-a427-cc6e641a78cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbd8c60-1c91-4f95-b8be-59aa6a2af679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353ecda-8504-4461-8040-211f9c553d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34183c41-9a32-4e83-89f5-80fe8666571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d1beb1-72c8-4e85-bb57-aa848ccc6651",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b3b50e-d901-4166-be55-eaa2aad75cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769d2091-2ba9-4164-a552-ebf4ab13c440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cde2c6-a4e6-4636-bf95-c4c14503f379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8490a34f-29ad-449e-b7a8-60214b00bcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5075a64-f434-4895-8f02-afa1ccf75d39",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebffc559-a3f3-4b55-9cc2-31113f191564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d63052-90c2-4d58-9a34-94e4433b663b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd20f4-f09f-4c2b-b049-a1175d0dedee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e501121e-34ff-46bf-95d6-378f61dbd72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4dc617-4270-4d77-8d35-5f22be526ce9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf42493-c3fc-4ae6-95fc-563ee10da54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6411b9-e377-4e88-826d-df274605c48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3496566c-630c-4814-bda9-b292e6ed8f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3796895c-550d-4127-ac54-fece0bfd9940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80d377f-b345-4599-86d0-3767f9f1cd20",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b1e06d-3025-4b47-8ff1-204073d262b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eedf6d8-6373-4eb9-bcd5-1259b82385fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf250a6-1f77-459a-9759-aa153d09b069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91c3dc5-b0d9-4d2c-9e04-33f6e5be16ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d75d12-2151-40c0-9baf-e2bcb220a492",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bacc5-acb3-401f-9e18-11d08ab9ff6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc51b07-b719-404f-8146-18c1f26252e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b868a344-84c7-4754-96d0-ec63aa2b6856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d75e274-e911-4b0f-a640-e11c713ddcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1db337-5ab4-4c71-b822-010c6d64d401",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999bbc86-019d-4a89-8b68-1bc057d37bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b98af0-50b3-49d9-a13e-f7a3c5e8fd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58348a38-3612-416e-a2d6-debc8b78b9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143db8c5-1aff-46bb-b8bb-3cc35a383e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903c01fc-a25b-4d72-8843-056289ab2176",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cabd2bf-49b5-4c23-9771-c034edb49c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae71665-d508-42e2-8a1a-d59c071e054e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf354ad8-928d-49e9-a0fe-feceedd1765d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ed8cac-3cc7-425c-8ac5-8ff758190346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ced9d1-dae1-4dc1-a677-b99fb5111dae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b196e98d-9cdf-40e1-8ccf-6522ae67fc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4e3cfc-9ccf-4017-a664-7b04deb3b21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505252dc-97c0-46e2-b5f0-39166833f738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c4c92e-ddc4-4982-b7f6-cc972fe681ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6bcfcc-0ae7-4f92-8f5c-a5ceca476ad7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97800c2a-8135-4220-8937-cec9683f8446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b54e0b-eb40-4172-97ef-230df650b23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3457b2bf-4954-422f-99e8-574348bea905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb6f00d-12a9-4123-8664-d570670f39d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f1616b-bc67-410b-af99-e44a15f77e68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d62260-d1d5-4294-af6e-9bcb63b09a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b984343-3635-41bb-a665-1d0368a78ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdd46c6-3186-4762-9766-9fa53cbb993e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff9ccfd-6f6a-4cd1-8bb0-da12abc5ffa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31542143-009c-490a-b0ef-f82e9db4c76c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad565b27-1e1e-47e5-9b4f-66eb7fa13774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287ba57d-83c0-4b86-94e0-c756e1a2ae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69f14d9-f6e2-4c10-ad50-cd0bdd191e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5336b6-f52f-4eb2-b830-6091033d24f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a93113-5f92-4432-ad40-bc0662167536",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ad508a-2da6-424d-a028-22e3334afa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a5ce24-5470-4a89-a361-ede47046290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b7397e-d0ba-4079-afc6-acd64c18e4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e43f0c2-037f-42f8-8c95-7c7a75a6e5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d4738c-aee6-42bf-9d50-2be3ce965e9f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2957127-9e68-4a24-b9ad-29923c3d2788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5ffbe9-d234-4fcf-99dc-42b936226965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697207b-ee9d-4b7b-925a-33d7bb1b1e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4803dac-ac1d-4876-b8c1-19b16314ba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe599dee-d3ed-4476-aa08-3d781157d3a6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c81bbc-6ecd-43fe-bb69-f0e8219d7bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a30ed9-f843-4921-abc2-16f4d91c751a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b7ce56-f82c-4a16-88f4-ee5ed73a0762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e92efd-cd6c-464c-b68f-40ea79f32755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e8edeb-d2f6-4cee-bb38-cce60e07a4aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfafe81f-6366-4491-af1a-04537795c22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d63f93-2f3c-4a41-89ad-fdb08cdb9b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac23af4-83ce-4509-a632-a6ca3db1357b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce9b49d-f9b9-44c9-8743-09f5cc4367ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ba5fc-ea02-473d-b839-d6e66fc3e3ea",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64192cd-1f1c-411d-aff9-aad5b77807e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbb6044-60ac-4aa5-9472-5b403f4de75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2078841-a884-4c6c-bc5e-a133a1f13690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54defcc-a4b7-48fa-8a70-399410deb78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6927f54-ba11-48ef-b5b3-ed072e347234",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87124df0-273b-4861-825a-e52f4e220b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159a68f5-5d81-405a-8277-1257ea1bddb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48deecc8-2649-4a6c-b91a-a5af3365e559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76434c4-da6c-43dc-9106-eedaf3ab761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f654ce24-bdd8-49fa-8187-e2f1c09cb82e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0982f90-4b1c-48d3-bcd1-87a0de65ab97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d34874-0ab1-48e6-8863-22a4a064c346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8147c87b-c019-4e76-a0d9-b4fdba071c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9af40d-e90d-47c1-b9b6-7a3a310dda6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b122c-721a-453e-95fb-491aa07277a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6334cb4-fd15-4e56-a41f-7998c39497c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8c886f-1008-43f2-8e52-971548fbeb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9208360a-d89b-4fe1-b133-8148645f278e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f56273f-48c4-4aa0-9977-c5c5af3786ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a64141-cefd-4687-a9ae-45f628eddfee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cad2697-ac47-47f8-9edc-f6d221d73a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ac84b0-bd2b-4e27-a1ac-06081b878f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a724032-362c-4d9a-b59a-648644815a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e325cda3-95a0-484b-9ef5-f5d4d53d13ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec930ebf-f7cb-49f3-82da-d325f131e37d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6956ae7e-cb74-4efc-8074-1793d3f50f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c1e859-2cf4-43b6-930b-493ca3819eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49620d0c-aad0-4bca-86fc-e6e2ae6b2a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee570536-2a2a-4f52-9303-60d39cd3ac3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026a3531-96f3-4a8b-8337-e119a27be6b0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6b7f3d-8582-4d51-a0f9-aa91d87cbf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b29eedd-ba2d-477b-b64f-adb5123232b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440f22f5-6fc5-48f6-af6f-90f669aa1718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d4c85e-8838-461a-a450-e2c99faddd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3c738a-3691-41ac-9186-44294451da4b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a4385-a9dd-4020-9f1a-4e7c7b8417c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29790462-b3b5-4a56-a8c3-66a7fc885928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006f4fd3-7e85-4bc7-b0f7-0751c8197f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0792c55b-6762-4ee3-a7dd-ba57a320b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9723290-e8e6-46bd-bba0-e013c8c03a88",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ef351-ee51-474f-bbd2-9b1bd866384c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e40204c-2a20-45c6-bb73-ab98d9ebc6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a3ffa8-61da-461d-b7b9-cbdf485956af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0470ea-1b8c-42ec-a7f5-cbdcc93dc724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0e3ed4-8f91-4774-a267-a2b43167800d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca3bf4-0577-493d-94ac-571356e98700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd66d6d-c5ba-43ec-ae51-559b7b235e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217efea-1a83-4cb2-a9a1-dff961852d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06d4fe5-7c8c-44ea-9f60-d3d9830fb546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ef8283-6751-48c8-9f8c-86ad22a14834",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbcce66-6bc2-460f-b491-18af9f829007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930921c9-d508-473f-8327-f7cfeaa72c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0a5ca3-33c0-44a1-ae6f-ed42607b4f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dec9002-d10d-44b5-af25-3f9dd9adaaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3a203-de64-4ef8-8450-da3a72901612",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07296f39-4522-4128-91b8-f513404ca633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47e09b3-0565-4845-9851-7de43c28d787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc83cc7-1905-42e0-9b1d-3dcec06c23d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3429bd79-4279-4b24-a809-b4c95fb871a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb37bfa-ddb9-471a-bd8c-3b72b85ab592",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459d9d5-6dd6-49ab-9ce8-5a7a5b7c43e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850cc55f-9831-4d29-b3c1-c74f1148669f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f94f1-3df4-4605-bdc1-fcc295f5e1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341fdbc1-f9e0-4ecc-bd12-524f4bd0e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d96de-2243-42c4-9f47-630236973ac6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584d9d09-397f-4373-ae8d-214f85b7bbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ffee41-37f2-495e-a69f-83a37d57a0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aec78d-a025-42ec-81ad-1663c0989303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b1efe5-285f-4990-bbe0-74a36db22d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce7bb7d-1714-4d7e-9cd2-20f3b66b5966",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6574c540-e5b4-47d0-a90f-5aa19d505967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47333c5b-e70d-4b20-ab43-e20870f9163a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd969f55-76fd-404c-be9c-0affda01b822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e889fc-0e50-42ba-9fea-936dc889943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd6e3b8-4d0e-4019-bd24-c23112b7adb9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf0ba6b-8935-4e07-a88c-6a8c1b086eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94401c8b-48a3-4548-8989-9bae23e40e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb2c5e2-a5d7-4807-969b-4edf3f4ac489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81349b0b-e82e-4712-8570-a3ff35f98720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c08dc2e-11bb-4353-a543-f4e0b7672e5c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cad8f28-523a-462d-b2e8-136c3786bade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df41276a-6c0c-4b07-9e6a-17dbba4fbdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98143836-72f8-48d9-ad5f-ad41cd95a6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c31450b-211a-4986-81d4-355560a613d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29e9c2f-bf54-4008-8f18-456d6dd3d7a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d4f76-312d-4e14-8243-a8f02ba4e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22e56b3-1b50-4f86-bc52-4c2b30331be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff45ed2-3516-4c02-84dd-33a7e2e550f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad4c1a8-4506-4d45-a7bc-529e31f6bccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ec0fe-2e6a-4d33-8c4b-99c440c43c2c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb7c7cc-2727-4f0f-8296-eee1edd727d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b6e8f83-8903-468a-b4c4-41e3b8450c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6506ac1-52f8-4195-90e9-19de35aeddb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12fbbea-80c8-435c-adea-37bed1ae3c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c960071-26e4-4f54-8668-7fda343dbc59",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7e703d-654f-4bbd-893d-a63a225205ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a303f2-d9ef-44f8-a062-a8903d3115c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7349715f-8321-40e1-b3ee-639de1d01f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8e5424-2ace-4af7-9aa6-e8c85c84c96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce07c2db-d38f-42ce-952b-35cdeb202d45",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ad4af9-3e96-4649-86e6-2af7187da822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4ce153-087d-408f-94d9-b72500485e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4344888-75c2-43cc-a046-51a3469921a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9b51f2-92a0-4a6f-9eb0-6e1f7722b474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194be0ff-c659-47c1-8ce0-3fcfd78e614f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5125859-76bb-482f-8a4e-93b9ebf5b87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f5d524-e158-4b70-b8f7-8036bc6d65c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f353b1f9-167b-467a-88c9-f7903eac49ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a489dc-b33b-4f29-b653-176b5a1e0d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d652a2-da56-4fee-a9d8-387d1eea3d78",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e733c8-a630-40f0-a9eb-bc7967917552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0eb7bfe-870e-4d46-ab98-7377e9818aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441d47e7-8653-4c39-959f-7fbc5c4761b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3cd8b4-e96e-4b75-89e0-e772e88010d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4836c14a-65df-46cc-8674-30c456995a4b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67706255-fca8-480b-8306-a244e56cf5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f700886c-eee8-4fd1-8dc6-f6772a25bff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a062792-9a05-4a80-b181-fd94b8c17bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb17a65-328f-408f-80a7-0ce580bd4f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b05a67-774a-4647-9214-1a4d6d732bc0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5b3a28-9353-48eb-98e3-f60fe5b429ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34eb6ccb-269f-45a5-99b5-590c50fb1f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfa1a5f-b739-4e42-abe9-2f658b530042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f346f235-21ca-4072-bfaa-5ac1ce963a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5736d8-3ba3-4d61-9fe9-6d1f3260f8fb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fe6961-81cf-44aa-b747-0c893a71f249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851d2ee1-b6c8-4769-8bb6-0bf094c86dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c69f89c-eb8c-42db-bcfa-702911e7c7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b940987e-5b4c-4e1d-9022-793c58044194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e064831-762b-4c13-89b5-8bf88cc560b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cfb71b-0548-4c90-9e1b-d5d685364050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd742c80-7eb5-4900-ab7b-ba5e606d2eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68b8d58-a02c-461f-936c-fb16bb7ce4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2acc633-c5ab-411c-8f20-ab85269c332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3750b8ae-3dc5-4310-a13c-f49f8ebdf6bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f9a750-422b-40ea-8f13-781cdc44c99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c9e3e4-197c-4124-95ec-de58dd077343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f539abb-3aad-4ead-8624-0be6871914b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9911e8ff-0f1e-45dd-a8b8-72de7ca2837d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a63c91d-a461-44f8-b97a-f417a32f25fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404cc2e-c453-46a5-a3b7-82eb4b597901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778d9fee-99c6-4b89-8cfe-1d758effe834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef0c098-f321-426e-b326-eb3ea3c71113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b1a256-407c-4a8d-8788-510ea63b3fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a231ae6-c4aa-4462-b0d9-b2d3012c3c14",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035a9484-8c85-408c-8818-41740f453038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4bb5cc-afe7-412b-9928-988dc26b686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348e7630-bee9-4739-a309-d93dd16de168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbc6967-87a9-4df1-a6a2-486fb3ecabd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dbc875-cad5-4911-8fff-d22d7cbe3fd0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42164b22-cd39-40fe-84c7-dc1dd592d05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf7afce-9f35-417b-abe6-aa9a5142fa4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a73fbc-ef13-4a5a-b06b-7a365b2c6e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea36d28a-2741-4991-bd31-8cd38ab64ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c433939-d894-4c3c-ac65-aada4d4423c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48163e6-77e4-4864-87ba-286a89a527a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0441bad4-57ff-4656-83fb-bd14c540f0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc55fa-d0d6-4127-a926-518edbc9fa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac4a5ba-369f-425d-a230-95c40d3158be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824f3e8a-d069-4399-b386-7c94f76f3871",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ccc7d8-4d00-4a86-8f8a-e8cc33e57ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5acf12d-e60b-4d14-9aff-6b21c4315d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c020d6bb-0b7e-4cbb-845b-328135cadfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a4a9bd-9dac-461b-9a0b-1a3fcb0059dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47751f9-27f1-4c4b-bcaa-801082b2e898",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a0ffc5-77e4-4e82-a79e-df52ba6a767c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08a6cb5-dab1-4e0a-b824-142f8817518a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6707ee7-22ec-4222-87d5-8de86921bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2c845d-df13-44f3-9ce6-9f0ed07c85ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdf83b6-bdda-46f1-865f-40283abf68ac",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ab6b8-bd0e-4ece-855b-897bb8688748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e1783b-45e0-408c-b30d-6fd6f615e809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cdaa0e-dc38-4085-a967-c58462ae4425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b6e914-cdf6-4745-81c5-a5cb7d4f4884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1c9f41-977f-47fd-a230-1a5771c59c93",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84146e5-6b00-4167-b96f-20e9f30d401d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2096e816-dc66-43f2-bfaa-abe7d4c19b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc08bad-91d0-461e-9c3b-1d1b377bb456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aca9d6-4ec9-4840-9954-aa985f5a7466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82843131-616b-4391-ba75-806c38ae7616",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b9811f-192a-4c93-8d5e-c9bca3e3e664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea5ac34-fcf2-4473-8348-21bb91c017ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05049e06-676b-4b27-b071-25475163026b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81396e7-30e6-4976-8e75-f79f2f8b79af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354cc13c-7abb-4922-9c12-024ee45fc869",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0fc80d-20fe-4c9c-8f8a-e0f4d6091e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90df16bb-afdb-4b26-adca-b8b4a8a89fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6303b1-7e9b-46c3-b105-4ee0b7370b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac5ae02-df27-48b6-a2ae-e6af7c426b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472dc776-073f-4814-9dc4-39592f7bcbc2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306b1bc2-60f7-453e-9525-883983c137ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcf4d74-cbf4-44ff-8350-5642a26b75a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bea8fd-176e-4673-ad7d-78d4c577cfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3955d467-23d4-43a2-b315-5e9370bbf6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fce646-4b64-4346-810f-52e4981b2824",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a58881c-fcfd-4154-9201-d4cd83d56bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1eb7d4a-cb7e-4057-8f1e-de91d2a171c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6372109-0a8b-42ef-9b29-6cd6588014aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399a99d9-3eca-4bcb-9a2a-33ccd8b1653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f352cf-0b02-48e7-b0e2-67333004e61a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af42528-9496-4b39-9ec5-b939cc7671ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2cedbb0-9d2f-44ed-8ca1-e20f0379949b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2221557b-e3e5-4d56-a74c-ab13155919dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b219d7-7826-4d0e-8f00-f865196e9632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6034d2f-e43f-466c-9e7f-b5b797bb13a0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edbbc62-7322-4519-be0f-bf9fc5414152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4986be-8e4e-41bc-bafa-2e1eccc4f9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39041d2-7fd4-4792-bedc-5496882a4e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d5945d-f09b-4f35-a0f0-ab59235482a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283462d9-2f62-440d-9b0e-aeaabfa49e4d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d38feb-cf63-4b77-b5de-5e4aed0a4124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c18856d-b94f-4e18-967f-9f421cfb60d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ae3621-a828-4c32-80e4-f5d75c58df12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c49e49-cc3b-4582-bdae-79d54a70cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a7c6f7-d896-49e9-b51d-62d74c1d3149",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b757f2b2-5b69-4bd5-b999-20b70b0cde57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128cfc2f-27d7-4da4-92fe-eca4034cfbbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b86524-9e07-49bf-9cb5-dce57b9e64e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1395b76-808c-443c-9f2a-b720291bdabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25de9e1f-700b-4739-b351-ed3dd5e47b3e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a29ee-e0c2-4677-96e2-78068dfb0156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3378771-9f52-4427-bcde-a030fa3a0f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74404051-cc5d-4a40-a828-71ccabac88f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bafadf-a088-40bb-a96d-9f5a778068d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d26d94-693c-4784-a9d3-d560d365b358",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309b76a3-2979-4bc1-927a-69b7923f919e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e24b518-2213-4ac0-968b-809f72f81205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e2d36-6580-4ddd-a311-32a0df6eb953",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a0ebd1-6196-4db6-aa55-65bf4dd28b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9377584d-2d94-47ad-958b-5aea7d7d0cd7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e031db-e81d-47ea-a98d-29e06ddefcc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e4292a-07e9-4372-b244-2898689954ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdcde0c-a7ba-4ebc-b61f-8365f80daa81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5857c97c-7640-41c0-9d46-7fe06276a9f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42697c17-5546-4d63-8552-81eb70ef595c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1447de3b-5948-4712-8615-e79053e6b220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e5ecc7-220f-4e9f-a5d8-8d5294f24ffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e1312c2-f64f-4414-8230-ecffd4798929"
                    }
                  }
                ]
              },
              {
                "id": "92c98bdd-6aca-4aa2-ae76-90fb09da3ece",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd63901a-ed4c-42c0-bbed-cad2545c8117",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8615a-2890-4c72-b632-edcefb013649",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f9dbca2d-4f93-461c-8a49-7517fce375ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ea2324-b89c-4dcf-96e2-6f2f8a815daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77f269e4-f51b-45a1-a1c9-65230071827b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719a326c-0744-4c68-bca7-fbdcbeac5722",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f383dd7-08b7-43b2-95b9-4107686f7bde",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "04cf12f7-ae6f-4054-9fec-9775d364b8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d2ad74-cada-457b-bb66-8ccc4ddba09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e262cb8-b9ce-4fbf-b3d8-c3c9e93ecdd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff7ee296-c7c0-4995-b7d2-66c24d4ec362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34745179-2b59-409d-ad6e-967bc5ff76e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e5116f-28b0-403f-a634-71c051b1dc35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "299ef4c8-913c-4f80-b8de-5f7341794bf3"
                    }
                  }
                ]
              },
              {
                "id": "550716a1-1f62-44fb-a18a-bb9069fe529d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c57c39d7-edc7-410e-aca8-edbf9e298f5f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde00afd-db6b-4d9d-8aec-f3d43972b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab7be383-852f-4648-94e5-146bd06a0155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a0d546-a2b4-4494-a747-99b268ef49d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371b2670-1eb5-4028-91ad-d0b23af409d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e7672f4-eea9-4cc6-917a-5e0ac9fc19af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51217ae2-6e2e-48c6-90eb-74c98dea21a4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11676b05-9856-4998-bc91-bbbd1b6b424c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d4965a1-2b24-41b6-83fc-42f6fc5d8fa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6cd66c-d3a6-4214-b61e-efc5e88de77b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50422fa-9a56-492b-9b72-f248a69d7f10"
                    }
                  }
                ]
              },
              {
                "id": "4fec0f7c-fd20-486d-b058-5a9f39fec5dd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c5264a2-3ca2-4880-9173-3f9f596eb965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3120a27f-11ac-4f4c-85d2-28cc9d9e2e2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37c80055-1e3a-4ff6-9668-4d29e8727a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835dd14f-56cc-49f1-ab9c-7420a60cd305"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a58cc212-975b-4c3a-8d69-c48a6ad42ce1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a68c949b-082f-4c39-9123-fd2b964baab6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30ad7c15-7d54-432e-b45b-dbb3969ed2b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf55809c-3440-485d-8ca9-533b9a8073d7"
            }
          }
        ]
      },
      {
        "id": "da0d4818-8758-4975-b9dc-bfc801805465",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "97b0c077-9ee4-458d-ac33-617d03f86515",
            "name": "Negative Testing",
            "item": [
              {
                "id": "519dde53-efce-4937-a7ce-d0d89a25cf78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d96568b-9537-464a-90c5-d02065415a58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "91bad04b-68a3-4759-9aa3-5a0eae7c6157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc9eedd-6a59-4a45-9039-065d1a8f24a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52b4abcc-972d-4c99-8c01-18fd32fb2590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b040890-2c10-4182-8025-31a256ddb454",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e96a8ca-c58c-4fe1-8b03-dd8378ba2a1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b2189d3-6f6c-4813-ae35-286b3ddd5524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8685c4-bc12-45a3-bd2c-68aed75af490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "610a4671-f906-4ecc-a7e9-2f07dd65e69d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37e56042-0066-4f8a-94cd-c40d149e974e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffe78bee-c79e-4e36-9573-cdf9ec4c8832"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d40b3108-a062-4665-bf51-85ec794ec886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ac3f419-f4bf-463b-87b6-e3dee8048cc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9e7ea2-bde3-4625-90d9-ea9824a07bd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e8e9d686-e019-4a1e-b30b-cd88e59f4a1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d950fbb-eea0-402e-a6d4-580d6db6a408",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49510d81-0169-4a70-b270-a2f273a6f8f1"
            }
          }
        ]
      },
      {
        "id": "a335b419-be0d-4d0c-b59a-9937c1148459",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f14522fa-b70b-4e01-aede-4420066aca3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8402058-e91a-47cc-82db-cdfe213b5f99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb2b03bd-6c65-4c3b-a4b8-dedfd60022b7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700d87a3-b28f-4868-a4b4-c07b0293b63f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd29a04d-0663-4f77-82af-e22cc421576c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802184a6-bfcf-4915-9129-cf0db3cb26cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c5e7e6e-9701-4a0d-9d0a-a52cd996a2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e89f25-9bae-46a0-aadd-95279fefab6a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51958d57-fc01-440e-b692-03bf8752b3d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba1f861-259c-4c86-9477-042c2e84b0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351d2695-ad8e-4cb7-ba8c-9516f00dce12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2da5dd11-328d-44e1-b13a-f08c1f2282dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70d0ba0-18e3-4277-84c2-52f036a25322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2909e748-11af-482e-b083-544f7a616540"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd3227f8-7822-4a94-bfbb-1e60a735fb99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a133488-7f93-4b6f-b7cd-ba2ac1c7f4b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e89dddf3-0a13-4024-846c-36c254aa83fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fd14d81-2203-48a2-bce6-f40fc9139ed0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e46cf0b-2212-4e98-b5fd-97907a7396f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82c3aa5f-5a47-4cb9-8973-8089cf722739"
            }
          }
        ]
      },
      {
        "id": "191b44bd-fcbc-41d7-93e3-083dcddc610f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1473491b-b248-4483-8ebe-3107934d7519",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0723686d-0272-41fa-a9f7-6f30c8a6f80a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50a0aef9-4d24-4913-9c61-d64ac6c9e6d0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada4c756-6bdd-4450-8add-3409945fd1f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34354119-e171-4f77-a7a3-37279b4c385d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2862f322-95c3-40d6-9519-a86be008218d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9263082-2c95-4652-93cc-1d2bb2a1ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f8e5d3-aebd-4b6a-a76c-98de3fb7cd05",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49893727-c8dd-420b-ac99-1bde68183357",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba03144f-6607-476e-b362-f197438911ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4fe458-9196-4943-b4d1-c96af25d9253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c41839b0-2eb4-4cd8-88d6-f1e070a1511a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c2f36ab-3efb-46aa-917b-adba27c88833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99e8b682-840d-4ea8-8128-8cdaca4cf4b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df115fb2-05c0-4668-ad71-aa17041dd4f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca76ca1f-58ab-4e5c-9e9b-a69457bda021"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c85b608-1e5f-4383-8287-07958dff0156",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4658dab-15ce-4c81-b9aa-fd45cf24b8d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2248a941-d489-4119-b71d-f0fae1493410",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9562775a-d6f1-4a34-84b1-cdc8a5d62b62"
            }
          }
        ]
      },
      {
        "id": "2102908c-831e-4102-8c14-01121695d029",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7bebca1-8875-4f8c-b1a0-74b0c06e517b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e8ed1d6-b561-4fb1-b14e-652198d8a4e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a894c229-0315-4265-bd33-55d2dac32152",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d83889a2-7404-4ab5-858c-4b1f86fd5951",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "456fbe78-a874-4191-b042-08e842e7dec4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 17.33846153846153,
      "responseMin": 3,
      "responseMax": 474,
      "responseSd": 56.62108248919757,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682123776786,
      "completed": 1682123791874
    },
    "executions": [
      {
        "id": "01aae834-3fc0-4c33-b80b-a7eca4b4fa4d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "70469970-8989-4692-ab17-6bca620437ca",
          "httpRequestId": "a4374b97-6951-4aac-bf7d-8870f817302a"
        },
        "item": {
          "id": "01aae834-3fc0-4c33-b80b-a7eca4b4fa4d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ed417f5a-a9dd-4753-8829-5b961d567373",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "fd47f3f2-53c9-46e1-bc91-c1a8c7ba0f63",
        "cursor": {
          "ref": "204bfe21-c712-4d0e-9bf8-a24fabe85f8f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3ad11df-6caf-4234-8aaa-a4db49fad188"
        },
        "item": {
          "id": "fd47f3f2-53c9-46e1-bc91-c1a8c7ba0f63",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "163af94d-83af-4c08-a0b2-0068644202f9",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0c82d00a-13da-4a81-bac8-e3947e7d2162",
        "cursor": {
          "ref": "ea7b77ed-92c1-4315-b0a7-ec26a421b57f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "40af5731-bd77-4f6f-8be9-fdc4187f5019"
        },
        "item": {
          "id": "0c82d00a-13da-4a81-bac8-e3947e7d2162",
          "name": "did_json"
        },
        "response": {
          "id": "38d4d646-e230-43de-b8ee-da95c1423eb0",
          "status": "OK",
          "code": 200,
          "responseTime": 190,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b1c6a9-4d98-43b6-8077-47ef990e2d5f",
        "cursor": {
          "ref": "6374b39e-2c52-42e9-ba47-5ec89a34dc1a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7f432c34-fea5-44d0-bd73-5f561dcd005e"
        },
        "item": {
          "id": "68b1c6a9-4d98-43b6-8077-47ef990e2d5f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6583aca2-c4cd-477b-9f9b-e4afca37515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b1c6a9-4d98-43b6-8077-47ef990e2d5f",
        "cursor": {
          "ref": "6374b39e-2c52-42e9-ba47-5ec89a34dc1a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7f432c34-fea5-44d0-bd73-5f561dcd005e"
        },
        "item": {
          "id": "68b1c6a9-4d98-43b6-8077-47ef990e2d5f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6583aca2-c4cd-477b-9f9b-e4afca37515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d1045-8fa9-4630-9fd3-9be5ec8b92dc",
        "cursor": {
          "ref": "da7bcf00-a61b-4c0f-b06d-cc7f2c8488ac",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3dd75dce-065c-47ab-8226-ca651b89d2f5"
        },
        "item": {
          "id": "af4d1045-8fa9-4630-9fd3-9be5ec8b92dc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9465015e-45af-44a5-b8b7-24c42e337b6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0a2c2-cc21-4d62-968d-e92f2d6a846f",
        "cursor": {
          "ref": "d56311fb-fde9-434b-9088-689e91bdad30",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dd998c55-de8b-4822-88c6-056a6e4a6513"
        },
        "item": {
          "id": "1ef0a2c2-cc21-4d62-968d-e92f2d6a846f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5d5b5e31-275a-4956-ba95-58a3f4d4ff29",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6547567f-5751-4642-b7d7-65b95bb3621b",
        "cursor": {
          "ref": "f86f4a76-c757-4ecf-a963-d9f5a7259736",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "62fa225f-00aa-4f57-a16e-ecfeaa2284f0"
        },
        "item": {
          "id": "6547567f-5751-4642-b7d7-65b95bb3621b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9ce81805-366d-4099-873f-0bd58e7c370e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4099d4d6-343c-4ad9-9dc3-4da6df16e73d",
        "cursor": {
          "ref": "cef92f82-df55-4a1e-9380-bb5d00c0eb33",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e184eb2-e93f-40f8-b36c-a983510e2082"
        },
        "item": {
          "id": "4099d4d6-343c-4ad9-9dc3-4da6df16e73d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5cc600c4-c2c0-4d1a-95dd-d12d1988841b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4099d4d6-343c-4ad9-9dc3-4da6df16e73d",
        "cursor": {
          "ref": "cef92f82-df55-4a1e-9380-bb5d00c0eb33",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e184eb2-e93f-40f8-b36c-a983510e2082"
        },
        "item": {
          "id": "4099d4d6-343c-4ad9-9dc3-4da6df16e73d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5cc600c4-c2c0-4d1a-95dd-d12d1988841b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d03ecd-ccad-42dc-bea8-99eb4a38a67a",
        "cursor": {
          "ref": "fd7c6919-b5ef-48e2-bf90-bd4bbb4fc967",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "adc2210e-e88b-4964-b09f-ff9213b1312b"
        },
        "item": {
          "id": "18d03ecd-ccad-42dc-bea8-99eb4a38a67a",
          "name": "identifiers"
        },
        "response": {
          "id": "2c18f41b-a4e8-40c5-8cc3-edf14ce28d46",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acfdabb-ba09-4372-beb6-7386620921b4",
        "cursor": {
          "ref": "b177f54f-f635-4d24-b100-ae98f05961da",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d95d5a3b-13e4-4413-8006-0ab400540ab6"
        },
        "item": {
          "id": "7acfdabb-ba09-4372-beb6-7386620921b4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "afef5fff-2e5f-4a66-815b-3b3e3abb06c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acfdabb-ba09-4372-beb6-7386620921b4",
        "cursor": {
          "ref": "b177f54f-f635-4d24-b100-ae98f05961da",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d95d5a3b-13e4-4413-8006-0ab400540ab6"
        },
        "item": {
          "id": "7acfdabb-ba09-4372-beb6-7386620921b4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "afef5fff-2e5f-4a66-815b-3b3e3abb06c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d2d93b-3d83-49f1-9265-7786c4b08521",
        "cursor": {
          "ref": "c8ca757d-7fcc-4f50-a5f5-cae1748ea19a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "445a6d8a-1fb2-4527-ba75-b476ef56c0dc"
        },
        "item": {
          "id": "87d2d93b-3d83-49f1-9265-7786c4b08521",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d5c02be6-371a-4607-a1d8-0056d688018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddae27f-e818-47f8-82d9-c3b30e0287e9",
        "cursor": {
          "ref": "559d49a7-3afc-4477-9ae4-f139f5b6b7e4",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2366a74e-2470-49f3-8991-a555434e0e24"
        },
        "item": {
          "id": "3ddae27f-e818-47f8-82d9-c3b30e0287e9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7d2cf39a-bce9-4145-9412-06b169927d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139ee98a-532c-4b90-b968-bdbb04826551",
        "cursor": {
          "ref": "8df4a1e8-d1be-4930-b926-74553f36814f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4457428c-d06c-40ff-bf2b-ae61d604bbf8"
        },
        "item": {
          "id": "139ee98a-532c-4b90-b968-bdbb04826551",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2745174b-a441-4c58-906f-f08af6ff8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5866b555-0ecc-4ced-87f5-0927f47f2eb2",
        "cursor": {
          "ref": "eda91f58-a1b6-43ef-a925-7d6621478b23",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3171d5b0-51c7-440a-8b1e-9b8e390014d8"
        },
        "item": {
          "id": "5866b555-0ecc-4ced-87f5-0927f47f2eb2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c78712e9-cc74-40c9-94cd-397d6ffdc3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c900fee-53c9-4e67-8cd8-0b4d805a11b9",
        "cursor": {
          "ref": "53335358-eac0-4d7b-ab90-6d4c35520261",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2516ec39-5f4d-4cd1-b64d-96d0119d8e2d"
        },
        "item": {
          "id": "5c900fee-53c9-4e67-8cd8-0b4d805a11b9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c5bc3a65-82df-4ccc-afcd-9ecc03bb0ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d9b869-8cf6-42bf-8363-aecf2bc269dc",
        "cursor": {
          "ref": "d0152d76-aa32-435d-a076-583845807e8a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0b037076-2c37-46cb-b495-3d372c479cb6"
        },
        "item": {
          "id": "b5d9b869-8cf6-42bf-8363-aecf2bc269dc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8346f8b9-c813-49bc-8195-e2c411a041c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b2034f-e6cd-4a6c-b0e9-f1822e6a1666",
        "cursor": {
          "ref": "a2d6c219-7fde-47c5-85e4-30ba5baa4441",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d66b1e54-0399-49f7-b0ed-fb0c342b86ae"
        },
        "item": {
          "id": "23b2034f-e6cd-4a6c-b0e9-f1822e6a1666",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dd0e594a-0dae-4b86-a1f6-4af290a83687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef82c39-57b6-46fb-83a5-f509c93ed99a",
        "cursor": {
          "ref": "d960227a-c977-489a-9e7c-9c141bbf833b",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8eef98db-32ba-47d6-920e-dd4e6752dba3"
        },
        "item": {
          "id": "1ef82c39-57b6-46fb-83a5-f509c93ed99a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6d8b82ca-6516-4f71-b110-0080c3201fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ec546-a406-40d6-a726-d8e42a61014b",
        "cursor": {
          "ref": "f63b0852-1844-44b4-85cc-e89610766dc1",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "75ce0ebd-d169-47e1-b38f-5305e3049c25"
        },
        "item": {
          "id": "9b2ec546-a406-40d6-a726-d8e42a61014b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b39c0b5-029f-4a91-af21-9476ab901607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1858918-81d1-488c-b6ac-258b5b0d3d12",
        "cursor": {
          "ref": "ea72a700-30b6-400e-a7c8-56792c4dbfd6",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e3d339e-90c5-468b-b099-afeb27157948"
        },
        "item": {
          "id": "f1858918-81d1-488c-b6ac-258b5b0d3d12",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "64a12be9-5711-4d7c-9529-267389c8a4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1430b243-3617-46eb-960c-aab97814d005",
        "cursor": {
          "ref": "b46fe4f1-7316-462c-949b-602ce04e85de",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f715b43b-e916-4cb2-8f52-c2531e30367d"
        },
        "item": {
          "id": "1430b243-3617-46eb-960c-aab97814d005",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2fd6f7b-185d-4cc0-ac39-eda4dd8ffbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53083f76-803c-4ea3-845a-f177c521d898",
        "cursor": {
          "ref": "25c4eb7a-631f-44dd-8887-0b9b266ef391",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "40cceca6-db09-49f5-a992-07938f456996"
        },
        "item": {
          "id": "53083f76-803c-4ea3-845a-f177c521d898",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b449fde6-c879-4e60-96b2-1bc55a6b370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3596c3-9272-4f39-aec5-6c1b9e31eb9b",
        "cursor": {
          "ref": "59ccd16c-39db-482d-83ec-cb9b37cada07",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eadf3eea-76a3-4804-a97f-d09f813d851b"
        },
        "item": {
          "id": "1a3596c3-9272-4f39-aec5-6c1b9e31eb9b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4e0dc9e8-0317-477c-8be9-f025e17bed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5ebb40-aed7-4279-9f85-8bac9b0dcec4",
        "cursor": {
          "ref": "ca1b1ee6-cfa4-4227-a12b-4e9b3211f160",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c3f8ca32-9c46-4c67-b914-300ac1bb4d09"
        },
        "item": {
          "id": "2b5ebb40-aed7-4279-9f85-8bac9b0dcec4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "72d358eb-d9c6-4156-98c3-91c78ab34ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d526050-7a18-4d19-96b8-cadd5955bcdf",
        "cursor": {
          "ref": "76aff657-0321-4783-88a3-32a2411a93aa",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5d58748-b7d2-45bc-a7da-eca1cb17e5f4"
        },
        "item": {
          "id": "9d526050-7a18-4d19-96b8-cadd5955bcdf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "154ab3d9-6689-4689-9ffb-1a75e7fc1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c66dcb-6b7e-4633-a6bd-9318c09e8eec",
        "cursor": {
          "ref": "c97f203f-6432-4e94-b877-847a084450af",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d14268a6-00ae-486d-bea2-42eea33afb47"
        },
        "item": {
          "id": "66c66dcb-6b7e-4633-a6bd-9318c09e8eec",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "48f31ad7-f909-497c-b35a-ad87d96effd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31790a85-0048-43a7-9b67-7c55619d6951",
        "cursor": {
          "ref": "7f4c5f08-59ec-426d-ba45-fe386c49aa41",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "94bb225a-7cc5-47dc-919b-ac838f3f4d85"
        },
        "item": {
          "id": "31790a85-0048-43a7-9b67-7c55619d6951",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "889d69cb-8db5-42ad-a800-bb1b2c9fb41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a570ae-0b8f-4dec-a12e-e427d68052d3",
        "cursor": {
          "ref": "1f67eb6d-c6ed-4b48-ae42-96c5fa62063f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88f97654-6215-4cfd-8855-b0e2e588e0b2"
        },
        "item": {
          "id": "26a570ae-0b8f-4dec-a12e-e427d68052d3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e0488d61-fe9c-43f6-86d2-805e11482095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b8bc6b-6ada-4f31-9932-a389c2f9669f",
        "cursor": {
          "ref": "2beb87fe-f165-493e-9a75-f9c3e0301712",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3ceecbfb-4f09-4d35-9104-63b523a37ab0"
        },
        "item": {
          "id": "f7b8bc6b-6ada-4f31-9932-a389c2f9669f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c2eb2c90-09c0-442f-8096-04f0e5226c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8fff89-b5ce-49cd-a842-e2fbf9a184fa",
        "cursor": {
          "ref": "d888a2d4-7e2a-4bc3-b63b-9fb5c59ce00f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bdd4fb09-0837-4f23-b3fa-5f72c1abf48d"
        },
        "item": {
          "id": "4a8fff89-b5ce-49cd-a842-e2fbf9a184fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d999798c-8b84-4b2e-800a-e521212a9eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad89b9bf-dd0c-4d42-8aa9-77227b5c01f1",
        "cursor": {
          "ref": "bf83bcd7-a997-49bb-9207-3bf1c5b055b1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "096cddbd-d809-4309-bff4-8a934bdcff3b"
        },
        "item": {
          "id": "ad89b9bf-dd0c-4d42-8aa9-77227b5c01f1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8c0eafb1-4f90-403d-9513-f257e7c1afb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6ddf80-7621-442d-80a7-3736c98722a1",
        "cursor": {
          "ref": "ac26c386-7d7c-4157-a010-31058e2a82d3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "134bcc0d-af6a-4eb9-81b5-cf12a812cc24"
        },
        "item": {
          "id": "9b6ddf80-7621-442d-80a7-3736c98722a1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e8069b36-2354-4df7-851e-9930df9fefaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888a08e6-71f7-4974-addb-91f3cf018515",
        "cursor": {
          "ref": "53d82f8d-67d0-47f9-a0f4-bf2ac64f737a",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a3a28ad3-f115-41aa-a4d6-f4aba65deaed"
        },
        "item": {
          "id": "888a08e6-71f7-4974-addb-91f3cf018515",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ffbcfdc2-400a-4347-adc8-7069b5544417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e4f13e-faad-4c03-ba73-3037b5d09cdd",
        "cursor": {
          "ref": "d19644c7-e6c4-469c-a5f1-a4aa90364ca2",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "81d0cf9e-95bb-4e6c-84db-d37daafe31b5"
        },
        "item": {
          "id": "e6e4f13e-faad-4c03-ba73-3037b5d09cdd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "77dd955c-ebd3-4113-8994-1cce94b963ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d3ee75-2217-41ae-8a17-9421138cd03e",
        "cursor": {
          "ref": "7e2cc44a-f7dd-48ec-b9a9-546cc71dc59e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "085399d6-e596-4e26-858f-663383420b0a"
        },
        "item": {
          "id": "61d3ee75-2217-41ae-8a17-9421138cd03e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8271e16a-6f36-489b-92d9-85915e113a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9fa5d4-595d-42cc-ac6e-07ecba75e91a",
        "cursor": {
          "ref": "87c28072-d020-486c-99a7-0d81559e4bb3",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "920940cd-de08-48a2-a09f-91e77b026226"
        },
        "item": {
          "id": "5f9fa5d4-595d-42cc-ac6e-07ecba75e91a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "873aac18-39c3-45af-9994-7b73030206b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b7b816-5d31-47cb-a918-c7b2fde46f0d",
        "cursor": {
          "ref": "94e19a14-55e0-4cfe-9c62-2fc6b0d10aaf",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8cc503b3-500d-4fdf-92d8-d7b35af61520"
        },
        "item": {
          "id": "45b7b816-5d31-47cb-a918-c7b2fde46f0d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "60a1f5ac-3d0c-4e3b-a478-26b7b8a713c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b0d99f-b542-49d9-b9f9-37028467511f",
        "cursor": {
          "ref": "9843c7f9-9779-497b-9913-8357322d5c48",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a12de159-4604-4a2c-9a41-a4cdbd8850de"
        },
        "item": {
          "id": "36b0d99f-b542-49d9-b9f9-37028467511f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f028042b-1917-4dd8-a085-9675aae71b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343fb543-5b5b-4297-b631-7e2078d67182",
        "cursor": {
          "ref": "22a9f95f-65b3-4e2d-a672-a1e01e382445",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "635dfce4-5982-4089-9839-a4c9f1af150e"
        },
        "item": {
          "id": "343fb543-5b5b-4297-b631-7e2078d67182",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d3a68570-dc3f-4198-a08e-bbf98bfc9dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd6dbb-352d-4353-9c4e-2abdb49a94c7",
        "cursor": {
          "ref": "f2820b2a-c908-45f6-8e30-81863b51d328",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df4aff31-e6e4-47d5-8a43-fec2162073af"
        },
        "item": {
          "id": "8dbd6dbb-352d-4353-9c4e-2abdb49a94c7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58da72db-0876-4aef-b97d-af6ebb2430f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e513e-e358-4cc8-8d62-84e8271a1c06",
        "cursor": {
          "ref": "f7e8c916-5c1d-47e1-b762-31c78c3bc049",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "570f16d1-90b6-40bd-b046-535a5514c0a1"
        },
        "item": {
          "id": "1b5e513e-e358-4cc8-8d62-84e8271a1c06",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21b8e802-a1f9-45aa-83ba-8b006c12f0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac2a726-d21c-4128-8944-782a04b227bd",
        "cursor": {
          "ref": "9470ce8b-3de1-4557-9c0d-98cf5ca50130",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "10d32bcf-75da-4042-83f8-42dc9b196cb8"
        },
        "item": {
          "id": "fac2a726-d21c-4128-8944-782a04b227bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd3ac8ba-b601-4c38-8664-9a436ef3501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8902eb-5747-40e9-9fc0-a971e19171dc",
        "cursor": {
          "ref": "0dee5e9f-901b-4279-8467-0c9c15cd051f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "067c53fb-6d42-4161-a2df-a68e7f72ea8c"
        },
        "item": {
          "id": "9b8902eb-5747-40e9-9fc0-a971e19171dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bf419ddd-4bcd-407a-a93f-0569e0fa34db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9957028-568b-4fe4-8ae4-f9591f5ee30a",
        "cursor": {
          "ref": "6dacd14a-a7f6-48eb-9675-bc4f3ea8b4d7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e85ebaf8-2641-4d34-97ad-30a60dc8b878"
        },
        "item": {
          "id": "c9957028-568b-4fe4-8ae4-f9591f5ee30a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "476781d7-312c-49c9-a74b-37bb217b4140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be4ed39-6349-461d-b98c-ecc0264805cf",
        "cursor": {
          "ref": "707067a7-1a08-4089-b592-a2b52f2911e8",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ebf4e73-6829-4c97-bf14-6f54e53f9ed9"
        },
        "item": {
          "id": "8be4ed39-6349-461d-b98c-ecc0264805cf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9f61be69-b498-4e16-bfd8-9a363477895e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fdb941-c4c1-4bf5-804e-8e999bd8ff22",
        "cursor": {
          "ref": "dfa2db22-2f19-4a09-bdeb-c96e7b3656e0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3cd0b9e8-bb1e-4c7e-9c32-4adb30168e8f"
        },
        "item": {
          "id": "a3fdb941-c4c1-4bf5-804e-8e999bd8ff22",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "37375c1a-e057-4170-ad48-d4f51cefa3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5890ce86-eadb-434a-af9e-a49e33700e84",
        "cursor": {
          "ref": "acefebbb-db36-4ac5-b839-3c66c5deced4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b68dc316-bfbb-426f-affa-8f558935bacb"
        },
        "item": {
          "id": "5890ce86-eadb-434a-af9e-a49e33700e84",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3bfd7d72-82be-4f31-921a-b8650bd295d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b35028a-5ec3-4a13-88c4-03893d47d0a4",
        "cursor": {
          "ref": "720561d8-3b40-4885-b63b-bd17a1afa2a7",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "386b3e66-4417-4c56-b6fb-e26c450d9a54"
        },
        "item": {
          "id": "4b35028a-5ec3-4a13-88c4-03893d47d0a4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0b92b45c-c047-4b82-9a03-1881a1161e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc41d98-e668-4c31-87cf-38296bfb5453",
        "cursor": {
          "ref": "9ce968f0-f146-48fa-81ed-4f925c9f70b1",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6b67061a-f10f-4132-a998-88938050ec0f"
        },
        "item": {
          "id": "6bc41d98-e668-4c31-87cf-38296bfb5453",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4cbfb5dc-2eb3-4e85-bfa8-71397683001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630af347-916b-47d3-a9f1-c274b424bee1",
        "cursor": {
          "ref": "872c4441-a940-404e-a302-4b930494dcfe",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a396f029-c6e2-4e90-928c-4794f56fbfba"
        },
        "item": {
          "id": "630af347-916b-47d3-a9f1-c274b424bee1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9142a6ec-4783-47c8-9acd-02c69d9e2d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c7aed5-76bc-4f70-bbec-24ec2352db0a",
        "cursor": {
          "ref": "ce5f952c-7aab-4477-ba4a-79b64da07162",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a296367f-a221-45b8-ab6c-abd7f521da0e"
        },
        "item": {
          "id": "a6c7aed5-76bc-4f70-bbec-24ec2352db0a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e7418de5-fd01-44e8-9138-39148b583728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b8fff2-400e-47b5-bfe0-e4c9b174d5e4",
        "cursor": {
          "ref": "50019e25-6982-4745-9d57-9917233672e7",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "99544675-af17-4ae3-b6a2-27afac2ea092"
        },
        "item": {
          "id": "15b8fff2-400e-47b5-bfe0-e4c9b174d5e4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7609f01f-8bbe-4036-9a27-acf6d63187f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a3092f-9c8c-45b8-bdf2-6a37c5fdd390",
        "cursor": {
          "ref": "501303f4-07fd-4821-ac39-7d1741088027",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3143e1ea-8c9b-4469-9e70-6b59c94b8a47"
        },
        "item": {
          "id": "e5a3092f-9c8c-45b8-bdf2-6a37c5fdd390",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c0b017c2-059b-4ca8-92ef-ecaf0d1debe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d98055-a2c4-4b50-b5b8-5bbdfb51a241",
        "cursor": {
          "ref": "9f778ea8-29ac-475b-808c-a6569c5c3e1e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ca750fc9-1082-4712-8bb3-50983deb0b28"
        },
        "item": {
          "id": "34d98055-a2c4-4b50-b5b8-5bbdfb51a241",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b0d74ed4-62d2-4043-953a-37f3374dbf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57fb8f-31b5-44d0-a822-c16842e0d3f4",
        "cursor": {
          "ref": "0fb75d07-cfa6-4454-a4ca-095d57621248",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0876e7f6-02a0-412f-a06d-1f203ec19439"
        },
        "item": {
          "id": "8f57fb8f-31b5-44d0-a822-c16842e0d3f4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "855a722e-e1a0-47e8-9c0f-75fac6ad5d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eed6f9-13f8-49b4-a3e8-db73a2b67c66",
        "cursor": {
          "ref": "cfad483e-d2a0-4bc0-a2a3-592aca8481ae",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c98e51fd-c6c6-4309-bd1f-90092ff7186e"
        },
        "item": {
          "id": "c1eed6f9-13f8-49b4-a3e8-db73a2b67c66",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a9ed145c-e3ff-4060-ac6c-1acf9a8e7561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a216c3d-c397-4e2b-b6b4-e30325fc843a",
        "cursor": {
          "ref": "f3e98677-2028-4c73-b64f-29aca302ca9a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3e805bdc-ed90-48b7-9a28-65b626fdf329"
        },
        "item": {
          "id": "1a216c3d-c397-4e2b-b6b4-e30325fc843a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d494d34a-6cc0-4939-be17-2574c8375666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1039cb1-601e-48cc-9d26-689d728cdeac",
        "cursor": {
          "ref": "369feed7-9363-41e6-9780-e0846fc56963",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "683251ae-193a-42c7-bec3-5e63206c71d7"
        },
        "item": {
          "id": "e1039cb1-601e-48cc-9d26-689d728cdeac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0fff730e-d360-4c5e-8095-f437735bef0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0cfc5-45b6-4f1d-8796-6766452d7ee3",
        "cursor": {
          "ref": "acb18111-c64a-404a-91ba-90eb47abc3c1",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0dcbfa87-4a2d-41b4-a562-6913e4510755"
        },
        "item": {
          "id": "96f0cfc5-45b6-4f1d-8796-6766452d7ee3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6eeb7220-7139-44f6-8e04-7e01c4dcb409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac29f0ae-d26c-4f05-b9f4-8219c24dab99",
        "cursor": {
          "ref": "af496b4a-bd2b-4380-abff-8d299137ee7b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6f2d869f-43f7-45fe-8ac0-24b1688fc664"
        },
        "item": {
          "id": "ac29f0ae-d26c-4f05-b9f4-8219c24dab99",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1cf46ff8-1cf5-4d2c-9af7-84f334fbc0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1670ef81-4089-46f7-bed7-7bb24f660d60",
        "cursor": {
          "ref": "7fa3fa47-571b-4ce3-a00c-f7cd12c45fac",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8aa7b776-717f-4a5f-9f11-c505378227e8"
        },
        "item": {
          "id": "1670ef81-4089-46f7-bed7-7bb24f660d60",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2b0e7756-2643-4a72-8587-dc3d29ebe053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c7631c-4eae-4c53-928b-db648066d9b6",
        "cursor": {
          "ref": "dc5bb37f-4132-4501-a442-77554e4ef4ad",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c60c6608-be0d-4b53-8f5e-572450b6901c"
        },
        "item": {
          "id": "85c7631c-4eae-4c53-928b-db648066d9b6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e506e56-6bde-43dd-8065-220e0f9bc776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10e8b1e-cd8e-473e-b341-61dfb2f49a52",
        "cursor": {
          "ref": "b9f3011c-0f0c-4a54-9a6b-d159f77b2c2d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "603b95ec-8430-43a9-822e-fb7af247aca6"
        },
        "item": {
          "id": "c10e8b1e-cd8e-473e-b341-61dfb2f49a52",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e28b7209-5494-42eb-9b5f-f84910c25630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea07199-1920-4dda-9928-c87f088cfd2f",
        "cursor": {
          "ref": "d5965cdb-699f-492d-8549-8d18e679c5c2",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3e00f9d-b25f-433a-ac88-46f8323c2e26"
        },
        "item": {
          "id": "8ea07199-1920-4dda-9928-c87f088cfd2f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5a554c3b-a560-4f36-a8f5-e66539ae0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e580fe4-1c80-4cdd-9f28-bf29a056573d",
        "cursor": {
          "ref": "87b57620-0d86-4e46-a6db-f14c23ea6024",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0101ef92-33d8-40fc-b77a-0b88a71ce66d"
        },
        "item": {
          "id": "9e580fe4-1c80-4cdd-9f28-bf29a056573d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2e561f2a-2ec7-482c-b6e4-120d98525c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a97ee52-2669-4d9c-8b37-f1dcb53e74ef",
        "cursor": {
          "ref": "449cdcba-cee0-40b4-996d-4071cc1002cf",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "307734f4-d433-4c76-b9a8-3361723d3a5d"
        },
        "item": {
          "id": "4a97ee52-2669-4d9c-8b37-f1dcb53e74ef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8c8218e6-d4e2-415f-b186-cca951e63985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208c2619-3a49-4432-a2f0-09c5488001e4",
        "cursor": {
          "ref": "4cc031e2-f699-4583-8a00-48304df6688d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b41f34dd-5599-440d-a1ce-b5c8c6826939"
        },
        "item": {
          "id": "208c2619-3a49-4432-a2f0-09c5488001e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dcd439e1-0201-4a88-b58f-648a1efc2455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6d5e98-5bd3-4a3d-b144-89d813992e74",
        "cursor": {
          "ref": "db24255b-1296-4153-b1b7-8658b3f39bed",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4cb06f28-5944-44a8-add5-34c330111e7b"
        },
        "item": {
          "id": "bf6d5e98-5bd3-4a3d-b144-89d813992e74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "37ec5f7d-81cb-4208-9c11-3dcfee21324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b02756-ed5f-4abb-b0df-4c4c1c9e9100",
        "cursor": {
          "ref": "75b4fe6c-2615-4e7d-a587-d61e55489611",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3ed5aa7-00db-4a30-9d27-9b1f3785eaf8"
        },
        "item": {
          "id": "51b02756-ed5f-4abb-b0df-4c4c1c9e9100",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "64849f97-7c21-4d77-8a82-02d8da0e8d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9e3333-002f-42c5-b9b2-d96fe9c9636d",
        "cursor": {
          "ref": "5f8a2740-b1ee-44f6-a6a6-f7469b0c56ec",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b39876b-450e-4742-a87a-32329be5ac2c"
        },
        "item": {
          "id": "7d9e3333-002f-42c5-b9b2-d96fe9c9636d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5384ee86-dec4-42da-af6f-45e9da387213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47724be5-9ef3-4a0d-8c1a-404057aeb935",
        "cursor": {
          "ref": "2c0c722b-7c7b-4a5c-8630-d82f342fa08e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "54f47958-fd8f-46ab-8418-80bd7e2d0988"
        },
        "item": {
          "id": "47724be5-9ef3-4a0d-8c1a-404057aeb935",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "38a74f2b-83b7-47f3-9339-c6a08c8efeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fca3fd4-139d-49b4-b3fb-aa0edeae49d4",
        "cursor": {
          "ref": "aaefc7b5-8845-4b52-9819-02a3c02b8413",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "211d0de6-8185-4ee2-bbc4-f966da5319c3"
        },
        "item": {
          "id": "9fca3fd4-139d-49b4-b3fb-aa0edeae49d4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "906d9813-47ee-48f2-a3da-e9696f2d52cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4490decc-094a-4c37-935a-4170e0e23952",
        "cursor": {
          "ref": "e52b771d-493d-48ec-8eb9-3e752e322691",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dbf06ea5-a343-4a66-af31-18cb86ce2fb3"
        },
        "item": {
          "id": "4490decc-094a-4c37-935a-4170e0e23952",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0f926b7d-35ac-4cc0-8f92-2f13e50adbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54ada8-72d4-4182-b407-d9b40c0526d0",
        "cursor": {
          "ref": "effa43f7-ae0c-4ff1-9df7-a841e2d5f6aa",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1cd6a12c-ead3-4bfa-843c-367d72109a78"
        },
        "item": {
          "id": "db54ada8-72d4-4182-b407-d9b40c0526d0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d67ae487-48c7-40bd-9d27-f56d73a6cce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76aec44-e368-468e-bc72-42d62ed144e5",
        "cursor": {
          "ref": "9fb039ad-a46c-40cf-b3d6-bb0eef25b7ac",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ca827e8-c087-4071-851f-05b6dba4e7f6"
        },
        "item": {
          "id": "d76aec44-e368-468e-bc72-42d62ed144e5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2fa6485b-15bf-4d97-9af6-2b374358c762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4949adca-db50-41ef-96a6-2567a76ebc04",
        "cursor": {
          "ref": "dfc657cd-6004-4852-9985-311d11b70dea",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d47bd83-50c4-4e16-a09a-0c12924f651c"
        },
        "item": {
          "id": "4949adca-db50-41ef-96a6-2567a76ebc04",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1d7db0b7-913f-4f7a-acd3-bf579e37199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337cadde-2e6c-466f-8643-19c6292766c3",
        "cursor": {
          "ref": "2a2fac57-a179-46cc-a5bb-d50a3f2ef4ca",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2eef8d12-022a-4b16-905d-62af381fc2ea"
        },
        "item": {
          "id": "337cadde-2e6c-466f-8643-19c6292766c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8d1c4b23-7571-486c-85df-16a4f5e9200c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4500ad-b02b-49ec-850d-ce60669e2ed5",
        "cursor": {
          "ref": "fcbe44f6-01a0-449b-9062-59fb173cf504",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "183a2b1a-218c-401d-840a-dd78bd4fe2fc"
        },
        "item": {
          "id": "0a4500ad-b02b-49ec-850d-ce60669e2ed5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "129f1643-de78-450e-bbfd-c4d548adcd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b88bb1-cac2-4e3e-baf0-e2d003883f71",
        "cursor": {
          "ref": "c7cfd480-d0a4-4e9d-8cd4-4e43673de388",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a6de2c26-4e06-4eca-a5dd-ab8f8c3ad1ba"
        },
        "item": {
          "id": "c6b88bb1-cac2-4e3e-baf0-e2d003883f71",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0a0650e1-b217-4180-8bb8-89559efae6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d233cb-20e1-491c-88f8-800335d5ba92",
        "cursor": {
          "ref": "fb723694-6313-414f-abda-3ec0504116b3",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ab901f79-aaa1-4531-bfd6-78a27b36fd8b"
        },
        "item": {
          "id": "61d233cb-20e1-491c-88f8-800335d5ba92",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a2dead17-fb39-49a0-9e74-55eaa7876a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c8cffc-6ecf-4454-b75c-74a8065f0e4b",
        "cursor": {
          "ref": "4a371742-7f62-4805-859b-4708660ca7ef",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8a9d20c2-d8c8-4d9d-8809-ad5be94069d4"
        },
        "item": {
          "id": "09c8cffc-6ecf-4454-b75c-74a8065f0e4b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ce9281c8-a25e-4238-b262-d214c1339ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3369094b-af11-409a-a825-0756ffbadbf1",
        "cursor": {
          "ref": "709b0bcc-eadc-411e-8cb3-18aceb80d73c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3beb45f4-c85c-4889-8def-3ddfd20eaffc"
        },
        "item": {
          "id": "3369094b-af11-409a-a825-0756ffbadbf1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fe59bd4f-86cb-4521-90e7-b1a3539332a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384dc85e-cc54-4725-a859-1dc7cbb8203d",
        "cursor": {
          "ref": "1c58056c-cb47-4434-811d-1d3fb3e7abd9",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1d33888-bc74-42c5-ab70-b70f5783fe1c"
        },
        "item": {
          "id": "384dc85e-cc54-4725-a859-1dc7cbb8203d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e9dcc1e8-b8ac-401e-8b96-b99e7396f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a9601-8ccd-449c-a30d-78febe2e4959",
        "cursor": {
          "ref": "6e2c0378-9665-420e-8c53-3f8a8e2fa50c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "31c40002-32fa-4d27-8b4e-05addb40e066"
        },
        "item": {
          "id": "ac0a9601-8ccd-449c-a30d-78febe2e4959",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e14a4010-2c7a-4fcf-bcd8-bbd7fbf46013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae28ff75-34cc-413e-ab3c-0133d94d4414",
        "cursor": {
          "ref": "3699dc8d-e8b6-4380-8391-9a023c39164f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66781efc-f019-4db1-9dec-dd0fac0839a7"
        },
        "item": {
          "id": "ae28ff75-34cc-413e-ab3c-0133d94d4414",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8aa44c9a-bc57-440f-b301-e377d82db9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e809e4c6-75e2-4643-bbe4-41c5e75ad6a6",
        "cursor": {
          "ref": "1867147d-690a-4deb-9695-5b11992b50fd",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f6cbd68-bd59-4504-b84f-419c115d8588"
        },
        "item": {
          "id": "e809e4c6-75e2-4643-bbe4-41c5e75ad6a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "674d8dd3-8be5-4e72-b1bc-1c9f786c77a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad51f2-923f-44ca-895f-d05130b159ab",
        "cursor": {
          "ref": "4f6575f3-0ffc-4d27-9771-0749afbe338c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "130b109c-48ee-45f4-9f91-db251e556238"
        },
        "item": {
          "id": "1dad51f2-923f-44ca-895f-d05130b159ab",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ead2abf8-8717-4f53-8ea5-7c55007ca4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11ad116-ba41-4575-801d-3fc29b708bea",
        "cursor": {
          "ref": "03ed5ea5-de96-41ad-aaf3-824ff32248e6",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aee567b0-4a4f-482f-8a08-8d460b437c8c"
        },
        "item": {
          "id": "e11ad116-ba41-4575-801d-3fc29b708bea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aa9052fe-c9a3-40b8-a7ba-aec73ba031d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac50d46-8ca1-4e63-807c-eedc5011010f",
        "cursor": {
          "ref": "514e3434-345e-4bbf-9ff3-7aeea86f271d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08ef2816-df16-45e8-abae-78e240eecc26"
        },
        "item": {
          "id": "5ac50d46-8ca1-4e63-807c-eedc5011010f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b980c2f-6568-4704-9d23-dcc9f327c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68c4dff-4cd5-48df-b759-a18d760148ca",
        "cursor": {
          "ref": "436818b5-1f14-4554-baf5-ef0015deb2a4",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a9eb36ce-e485-4658-aeff-6da27b8cbf83"
        },
        "item": {
          "id": "c68c4dff-4cd5-48df-b759-a18d760148ca",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2596f97b-69f9-43fe-ad62-7768a4293350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86684f54-cdfb-4a7d-a621-3253a8ec0dac",
        "cursor": {
          "ref": "8ee2dafb-f3cf-4e9b-8433-282af8bdd51d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bf90b0de-e2b7-4112-8374-a7c612a5b500"
        },
        "item": {
          "id": "86684f54-cdfb-4a7d-a621-3253a8ec0dac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "96867102-0949-4f15-ab6d-27f2739ec0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7534aa26-c95b-4b85-a42c-3e4843e6da91",
        "cursor": {
          "ref": "029340b2-518d-4dcd-86ea-418abbee9677",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6a982526-daae-44b1-a0ec-51783f6e257c"
        },
        "item": {
          "id": "7534aa26-c95b-4b85-a42c-3e4843e6da91",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b41a4c74-9333-45b4-a9b1-baffa5ce3eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03add848-e68d-456f-8ef7-94575f3abf42",
        "cursor": {
          "ref": "1d2490f3-984a-49eb-bd43-3f36eb520cbb",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "01460a1a-a443-4e27-a02e-050f1ccf4005"
        },
        "item": {
          "id": "03add848-e68d-456f-8ef7-94575f3abf42",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "30bad2bb-1711-469d-ab46-c72140b4f7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a4e5c-5b1f-46d0-a412-0bbf85465b33",
        "cursor": {
          "ref": "bb3a393e-9422-43d9-9c4d-903fda46240a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "54c9a302-f01e-42e7-8ca3-dd6ede0ae09f"
        },
        "item": {
          "id": "552a4e5c-5b1f-46d0-a412-0bbf85465b33",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "773aa9e2-b1db-45b5-a7e5-ebe2f2482ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6150460e-75ad-4ea8-9ae0-7d8b40ad835b",
        "cursor": {
          "ref": "bac57de1-9612-4ba8-b452-4f4d1dd23a50",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "412819ae-6f20-4622-ba43-9d93b3366296"
        },
        "item": {
          "id": "6150460e-75ad-4ea8-9ae0-7d8b40ad835b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "883d7490-9596-41ca-a852-0cc3136d92e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2807f5-b7f9-4c32-9598-3b6adf76ad4d",
        "cursor": {
          "ref": "c6d28af7-077a-405f-aa6c-44d0f91e8e03",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1b7e1343-f353-4099-b257-b0819e01172f"
        },
        "item": {
          "id": "cd2807f5-b7f9-4c32-9598-3b6adf76ad4d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a167d0a-170c-469e-abdc-55900176db5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b05fd-7e83-4891-a748-0f23c19da740",
        "cursor": {
          "ref": "fb3ca7b1-ba01-4184-85f8-484456d2bf2d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6cc084f7-488d-408b-abcc-feb1220c69f4"
        },
        "item": {
          "id": "315b05fd-7e83-4891-a748-0f23c19da740",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a824527e-adea-4e62-a919-876d4cd1ae4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28b747c-eb3c-482f-adb1-fd34cbf3c438",
        "cursor": {
          "ref": "a061e3f7-8138-4a52-a807-c734e0c2d3cb",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e147e0bf-2ffd-4104-abd0-0bbe779ff930"
        },
        "item": {
          "id": "c28b747c-eb3c-482f-adb1-fd34cbf3c438",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b29f87ed-cbf9-4c25-915d-332745f50f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beb01d9-9e37-4556-bfed-645364208c8b",
        "cursor": {
          "ref": "009968cc-2b7c-47e0-b17c-6b783d22cd47",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ea6c1afa-79d3-4e59-95cc-e14219101422"
        },
        "item": {
          "id": "0beb01d9-9e37-4556-bfed-645364208c8b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "73901081-77e6-4932-9f54-56040a5e3355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97051996-fd08-42e2-9dce-a75a5d6a7a14",
        "cursor": {
          "ref": "1ad0e565-3cfd-42a3-9e9e-8ef2a79be133",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "599f99a0-d1db-4117-ac9e-196c529a68af"
        },
        "item": {
          "id": "97051996-fd08-42e2-9dce-a75a5d6a7a14",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0e3813b5-01fb-46fa-a4b1-680e5e8c0fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5942d9-acd9-41af-ba72-ec17bd0dec27",
        "cursor": {
          "ref": "3b04bcd8-fcdd-456f-9543-cb1f561c5819",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b70a103a-431e-4953-b64c-33d378b0bd4b"
        },
        "item": {
          "id": "eb5942d9-acd9-41af-ba72-ec17bd0dec27",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "99286e00-bfc6-458c-a042-3d7eacc19bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9578f6e0-6428-4093-8cc5-545b1a9b9724",
        "cursor": {
          "ref": "468a4cef-d17f-416f-98a5-f16422552cf0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0bdd3506-2e63-49f2-a271-abf14122cb54"
        },
        "item": {
          "id": "9578f6e0-6428-4093-8cc5-545b1a9b9724",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "75238eb6-8c82-4e87-885c-e98adeae3ad7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639680d4-4154-49be-b702-9a81d4114eee",
        "cursor": {
          "ref": "37718a17-f5a4-4596-b412-1aea30eea482",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "57407045-732f-4183-a1fe-5bb5435574de"
        },
        "item": {
          "id": "639680d4-4154-49be-b702-9a81d4114eee",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d46b7854-a47d-47f6-9177-bfd3fba390ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 45,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80820f1-5bcc-437f-8a20-baf2a2990ac2",
        "cursor": {
          "ref": "f9477783-0ba0-4770-b55b-0563245f344c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c4d6766a-8553-4f56-a498-fe73cc77d177"
        },
        "item": {
          "id": "b80820f1-5bcc-437f-8a20-baf2a2990ac2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d79c007f-298b-4fff-829d-9aadd9ca67b2",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "48270268-5765-45cb-b4b2-a750a74f05d1",
        "cursor": {
          "ref": "67531bb3-566a-494f-8da1-9bcacdf1dc84",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2b9f5df5-ac0e-4447-9ae5-1480e3a98b8e"
        },
        "item": {
          "id": "48270268-5765-45cb-b4b2-a750a74f05d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6d52d90c-3f18-48bd-8aba-a1d589a53140",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bccf80-8fb7-4e23-a93d-56fca104c72a",
        "cursor": {
          "ref": "317afeef-b1bb-4b84-85a2-7310220024d4",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f581edac-2e20-4f39-9fa3-011c7dad7617"
        },
        "item": {
          "id": "c1bccf80-8fb7-4e23-a93d-56fca104c72a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1add0931-49ce-4bda-8e77-0a1fb2c1c8b5",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "533b14eb-eccb-432c-9d8e-1a2b1bc41fbd",
        "cursor": {
          "ref": "01012c40-e85a-4c82-8b03-2a4bcdc449b1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8f2ad80b-4708-4a59-8780-61c38d2729b1"
        },
        "item": {
          "id": "533b14eb-eccb-432c-9d8e-1a2b1bc41fbd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2e086d9e-e69e-4462-9738-69f96e663a23",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cd2819-fbab-48cd-b3d3-9cabea599375",
        "cursor": {
          "ref": "054e7c0b-63f3-4047-b1bc-2ce68fedd107",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ee1c1a7-d4cf-4cc5-8e98-ad6c4f8dea08"
        },
        "item": {
          "id": "d4cd2819-fbab-48cd-b3d3-9cabea599375",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cab866fd-432a-4b91-8a99-843a01807cff",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b376463f-f97b-43e4-9ac5-518803e0dd07",
        "cursor": {
          "ref": "10ff4f3f-806a-4bac-a259-606db6d7f298",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c6a0c567-c961-4350-8e13-4c0edaf96bff"
        },
        "item": {
          "id": "b376463f-f97b-43e4-9ac5-518803e0dd07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fd10a0e0-eb0c-400b-b2a7-1ce98fa73ff0",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a908e0d-8e4c-4400-b241-f56d315ac31c",
        "cursor": {
          "ref": "f88dd92e-3817-46bb-97a5-b2651ddced04",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3400ddc2-817e-4109-adff-452f10a7a091"
        },
        "item": {
          "id": "2a908e0d-8e4c-4400-b241-f56d315ac31c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "945caf93-4728-4a01-8de9-2ee8411d4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a908e0d-8e4c-4400-b241-f56d315ac31c",
        "cursor": {
          "ref": "f88dd92e-3817-46bb-97a5-b2651ddced04",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3400ddc2-817e-4109-adff-452f10a7a091"
        },
        "item": {
          "id": "2a908e0d-8e4c-4400-b241-f56d315ac31c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "945caf93-4728-4a01-8de9-2ee8411d4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f35bb0-b3d3-4470-8812-c137242f3929",
        "cursor": {
          "ref": "7087f277-b09f-4e77-b5bd-cf20fefaae76",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "97a101a8-fe5b-4fb0-b0cc-e45548499712"
        },
        "item": {
          "id": "c7f35bb0-b3d3-4470-8812-c137242f3929",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc38e595-2b3b-480b-9310-03d5f5d4f797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5d4cd0-8bcb-4b68-a9e8-9ab27c668c5a",
        "cursor": {
          "ref": "01f61c83-a4c6-4dde-a2a9-b8020e05617c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0b322b53-3412-42c8-8f7c-e2a3f2681d45"
        },
        "item": {
          "id": "3f5d4cd0-8bcb-4b68-a9e8-9ab27c668c5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c318069-bca5-44ec-be8e-aaa00d4d2d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c002fa04-d287-42af-bbfe-20df6a3b2b59",
        "cursor": {
          "ref": "59b076eb-b90f-4c56-8e81-0d7d39f57fce",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e94ba77-d43a-4916-965d-02fd5947057a"
        },
        "item": {
          "id": "c002fa04-d287-42af-bbfe-20df6a3b2b59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "22b1b45c-3595-41a5-812e-d52efb1a1cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023eeb50-9e8c-4390-b156-9574fb18c085",
        "cursor": {
          "ref": "4ef0148b-b8c8-4e9b-98e3-d0b7261a1a96",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b210ea66-af92-4b3b-918e-bf2bcf61ee21"
        },
        "item": {
          "id": "023eeb50-9e8c-4390-b156-9574fb18c085",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5d73c28-839c-4168-8d3d-da722d18d21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d853ef5c-8b44-452a-9a77-1fcca1d6319c",
        "cursor": {
          "ref": "722ab504-bcfb-4621-9c0f-1d1f15efbfec",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "df329541-f5b7-4e41-890e-4285db676cf5"
        },
        "item": {
          "id": "d853ef5c-8b44-452a-9a77-1fcca1d6319c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6b19e6a-7463-481b-b248-f9dda99e7d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf732d34-a635-4b5d-b863-bc909ad95537",
        "cursor": {
          "ref": "1dbee426-48c1-458f-8f01-af1a1c05df59",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "70eeac72-2daa-4516-b03a-20a3c209d19c"
        },
        "item": {
          "id": "cf732d34-a635-4b5d-b863-bc909ad95537",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "444c2e6b-4420-4b0a-876c-49b31fad985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e78ea-e69f-4d87-a8fb-18ccc6713ed5",
        "cursor": {
          "ref": "370555c0-ccef-4415-8279-cf920155be47",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eaf80d1e-7d7c-42b2-8804-cc23ec903511"
        },
        "item": {
          "id": "329e78ea-e69f-4d87-a8fb-18ccc6713ed5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2bb9b65e-1da5-4408-bd3a-1180e773c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f554d41d-1716-4556-8fe2-aab8ee852b02",
        "cursor": {
          "ref": "d4fef5bd-90c0-4a79-a4b1-a03019aa9d17",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be7e26ed-3d5d-495a-b339-61b585f7ca49"
        },
        "item": {
          "id": "f554d41d-1716-4556-8fe2-aab8ee852b02",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aca005fb-eb23-47d1-970f-349f22879ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec17d56-c04b-456a-9a26-dcf66b3bef82",
        "cursor": {
          "ref": "3124f39d-d41a-4cf9-b54e-ad42a48f44ae",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "133bd5cc-7fb2-46f0-938a-e703f12cfe51"
        },
        "item": {
          "id": "1ec17d56-c04b-456a-9a26-dcf66b3bef82",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6e563d6d-b815-4213-aba0-01715aaf4ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dfe4c5-223b-43cc-8b57-ad51dab543dc",
        "cursor": {
          "ref": "a2dfcb2e-bfa9-4811-880b-5139d84c8ab6",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a051b05-7bf4-4e76-8244-fa5f6f0760e1"
        },
        "item": {
          "id": "87dfe4c5-223b-43cc-8b57-ad51dab543dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c14ab08-471a-4aa2-9381-f02c19a00e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470f07ca-6185-48e6-921f-8631ec3ba9f8",
        "cursor": {
          "ref": "8e97e0da-d692-4f70-b9b1-35c4e21973e6",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "67e7b1cc-e7ca-4356-a6de-159ebe7525db"
        },
        "item": {
          "id": "470f07ca-6185-48e6-921f-8631ec3ba9f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "90b57bee-0ac3-4b83-8fd7-44e505f8d95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9efee13-4471-4596-9925-6b97fe4416ca",
        "cursor": {
          "ref": "2968fdf5-fded-44a1-af84-05ca6aeb8b89",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "846bb424-7d05-4314-8ef9-72d43cc82b04"
        },
        "item": {
          "id": "f9efee13-4471-4596-9925-6b97fe4416ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ddf56d8d-c9f9-4072-9c44-764d8f7f252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3a1faa-7126-4700-a217-4c6b5e559b05",
        "cursor": {
          "ref": "ba155214-d525-436d-b1ef-8e314b743eb8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fb59cf63-576c-4a94-a5fb-b5863baad01f"
        },
        "item": {
          "id": "9f3a1faa-7126-4700-a217-4c6b5e559b05",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "231eedb3-599f-4fc3-9e49-63d030a5d1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d363212-3fc5-4a1d-9428-848ab246db98",
        "cursor": {
          "ref": "2ff3baa9-3781-4e45-9179-c7a8e9fef9d7",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24064d30-e8b6-4a3b-862d-ccaf5664e52d"
        },
        "item": {
          "id": "3d363212-3fc5-4a1d-9428-848ab246db98",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f888d0cc-312d-4c00-b585-cd184c81f644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3ab97f-a50a-449d-97da-6de2f0de9dff",
        "cursor": {
          "ref": "1aa2a3fa-ba1b-4fc2-a3cb-072addbd22cd",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a90fd0a6-4e14-4afa-884c-e9e91b683cbb"
        },
        "item": {
          "id": "8b3ab97f-a50a-449d-97da-6de2f0de9dff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f776f340-2ce2-48ee-8515-1a165ac976fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07261fc-fb15-47b8-9c3a-9f1351234339",
        "cursor": {
          "ref": "9dff26df-4a57-4b4c-919f-2e99bec31349",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "425daa9c-29ef-4293-9008-0e130fd8df5c"
        },
        "item": {
          "id": "f07261fc-fb15-47b8-9c3a-9f1351234339",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "acf7ffad-f20b-4122-842c-52dd462071e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376bacd6-55a6-48eb-b2e8-c9174f628bfa",
        "cursor": {
          "ref": "4aa1fec3-a35d-44fa-a643-73558e9af860",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "20dbbdbe-386f-4528-b991-78f12827cc71"
        },
        "item": {
          "id": "376bacd6-55a6-48eb-b2e8-c9174f628bfa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "86befc06-4b29-4287-94fc-cb3533842f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bed91d-04dd-42e6-a795-9a0ae5cab302",
        "cursor": {
          "ref": "e4d2f2a8-4cc1-420b-85a2-dad790b6c40c",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8ad0ca1b-bf3f-47a2-a0db-1272cff9ecf3"
        },
        "item": {
          "id": "e8bed91d-04dd-42e6-a795-9a0ae5cab302",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b14e3686-ee14-4c36-8164-2aa41cc817d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0264d0d-34a7-4cf0-ba89-3dc245693aba",
        "cursor": {
          "ref": "66126770-ef3b-4d7f-bb66-11d4c127ba31",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e83d017b-795e-4ddc-9e9a-074ddaa2f6a4"
        },
        "item": {
          "id": "c0264d0d-34a7-4cf0-ba89-3dc245693aba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "26685084-4028-4326-ba89-255f0cba709c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b23df4-6935-4515-8ffa-3f5cbb6f68b3",
        "cursor": {
          "ref": "251ec5e8-dbf3-4cdd-88c9-c45f0dbcc454",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c0b2e1f4-d813-4348-89ea-a6453319ece8"
        },
        "item": {
          "id": "58b23df4-6935-4515-8ffa-3f5cbb6f68b3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9449ab6e-3ffe-4baf-97c5-f7d0b1ee5215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a4d64-33ed-430f-9f43-9641344287ee",
        "cursor": {
          "ref": "1b7c4842-bc95-41b1-b547-7ffdaa978cb5",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fb42499c-561e-4cf7-a161-25fbbc488f71"
        },
        "item": {
          "id": "3b7a4d64-33ed-430f-9f43-9641344287ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "53095e54-a377-4825-a414-5427e6b23e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a32a42a-972d-4f2c-8195-085fc18e0d51",
        "cursor": {
          "ref": "c2a27769-0ef6-4191-8fcc-3ab5e96da186",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e48ac443-547e-42e1-a1e5-4fd681c7a304"
        },
        "item": {
          "id": "2a32a42a-972d-4f2c-8195-085fc18e0d51",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "882db8db-865a-4381-9eaf-a55f943e652c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160fcf10-b53c-4702-ba96-921bc77a7f75",
        "cursor": {
          "ref": "9a466882-1609-4ecd-bf29-763142d9b4e1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1795d689-c90b-4473-83ff-df4bf32f4365"
        },
        "item": {
          "id": "160fcf10-b53c-4702-ba96-921bc77a7f75",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f31b3150-eae1-436c-a507-5474376ad99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ebeee7-3942-4dd4-907f-0ce9992d4164",
        "cursor": {
          "ref": "460f0cf2-a9c9-4f0e-b27e-d5b164446aae",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cb5ee127-e966-422b-ac69-832f4ce8c472"
        },
        "item": {
          "id": "00ebeee7-3942-4dd4-907f-0ce9992d4164",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f4cfea6-496c-4ab5-8c12-1434d75ce77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21919460-1a9d-4b31-8a80-4096cee65a9a",
        "cursor": {
          "ref": "0de575fe-6a90-4aae-9193-0792449c4597",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "09704603-ec03-40af-a6f3-93346311ba8c"
        },
        "item": {
          "id": "21919460-1a9d-4b31-8a80-4096cee65a9a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bb9d3b4-1698-47a9-8f35-93a0c4eb598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c41b0c-f97a-4a94-afd1-73d503f70397",
        "cursor": {
          "ref": "8d376b06-fe3c-480d-884a-0061ac95c6ba",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3cfec6cf-8a7f-4dc4-b150-b756389134fb"
        },
        "item": {
          "id": "b8c41b0c-f97a-4a94-afd1-73d503f70397",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8167ba07-0b8b-4d28-acb8-9a9f823126d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3de9d9-dc5e-4a18-a2b1-1c7bb9871640",
        "cursor": {
          "ref": "98d96bef-eb67-40f0-b7f2-e357e7e60724",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ec2245aa-b0d5-4b56-9c83-bb98c893908c"
        },
        "item": {
          "id": "3f3de9d9-dc5e-4a18-a2b1-1c7bb9871640",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e73465d5-64fa-4e2a-8b26-fb81b4c6dc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194e1240-76c4-4f2d-ad7e-c6b11af6b37b",
        "cursor": {
          "ref": "e56b976d-b401-430e-af8a-9562668343d5",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b5318130-5fb5-4538-aa6d-d80e123059ac"
        },
        "item": {
          "id": "194e1240-76c4-4f2d-ad7e-c6b11af6b37b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3663300f-e444-4df3-9ac1-7481fc2bbf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10f86a4-8b19-464c-9cbc-4dba830e4633",
        "cursor": {
          "ref": "c0744729-e7a1-4ed2-92a5-3cd1ec62d0fe",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "53a3030c-1f2f-48b0-9cb0-5f5429c10c41"
        },
        "item": {
          "id": "f10f86a4-8b19-464c-9cbc-4dba830e4633",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2cf8c10-11da-4480-8492-4c9c82020423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e901ed-3923-45ae-81ae-213e5014b41f",
        "cursor": {
          "ref": "ef22c02e-89f8-4978-b33c-c21420f17ca6",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd625348-ca6e-499a-82ef-2ac912fbf482"
        },
        "item": {
          "id": "22e901ed-3923-45ae-81ae-213e5014b41f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f385e0ce-3b20-4341-8aa4-e7349a4f6707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f26866-bfa3-4871-a269-461734d65443",
        "cursor": {
          "ref": "aad7d133-0327-4b96-8684-86b7902b4d77",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "043a6a20-a934-494c-a30d-b7079b7229f0"
        },
        "item": {
          "id": "b3f26866-bfa3-4871-a269-461734d65443",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "105e270e-e746-406f-a3b3-0a4061171476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e556aaa-7888-42c9-90ce-cf09f01c91c8",
        "cursor": {
          "ref": "eaeb8e02-9ffe-4769-9419-1fdb313c3225",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "222f99cc-fe4c-436f-a01d-c7701b8501ec"
        },
        "item": {
          "id": "7e556aaa-7888-42c9-90ce-cf09f01c91c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f3312b5a-d9e0-4428-a71d-6c3269b3eafd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86baf63d-9a2a-4aaa-98f2-bea3c1a44d66",
        "cursor": {
          "ref": "a2bd3d48-21f2-4493-98d5-77da06fb672c",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e034ce86-49f9-41b5-af34-cd4f5c143c1d"
        },
        "item": {
          "id": "86baf63d-9a2a-4aaa-98f2-bea3c1a44d66",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "cee68097-1afa-486c-8058-5f3496169918",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691a542c-b671-49e3-af5d-069790067256",
        "cursor": {
          "ref": "1d90e1be-e62c-47f8-8ec2-a0cd540e250f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b151fa96-1812-4ae1-b228-9b52b6558e95"
        },
        "item": {
          "id": "691a542c-b671-49e3-af5d-069790067256",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "df86f9ff-f0d4-4154-a8fc-9a07e9e49fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691a542c-b671-49e3-af5d-069790067256",
        "cursor": {
          "ref": "1d90e1be-e62c-47f8-8ec2-a0cd540e250f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b151fa96-1812-4ae1-b228-9b52b6558e95"
        },
        "item": {
          "id": "691a542c-b671-49e3-af5d-069790067256",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "df86f9ff-f0d4-4154-a8fc-9a07e9e49fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f13526b-9225-4640-857d-641bafef675a",
        "cursor": {
          "ref": "a30b51c0-961b-496f-934d-1a39c015a7c6",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "07831a2c-ec4f-4b4f-ae04-3d809afffe7b"
        },
        "item": {
          "id": "1f13526b-9225-4640-857d-641bafef675a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "174c1e5a-5cf6-41e2-a639-75920684595d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27b7b0d-1fbd-44cb-8fd2-09271e67a456",
        "cursor": {
          "ref": "50121e07-9008-4c70-a2a8-04565a54963c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e82f1433-7ca4-4bd7-8a85-11cc4f773949"
        },
        "item": {
          "id": "e27b7b0d-1fbd-44cb-8fd2-09271e67a456",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "15c6a884-36e4-43c1-b297-5ead9f17d6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095d13dc-a97d-486b-9716-6d7b4a3aff2b",
        "cursor": {
          "ref": "330e3506-1eb3-4911-8263-e69156ce8b43",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6236fa72-e7c1-4a7b-b321-fb02fed25459"
        },
        "item": {
          "id": "095d13dc-a97d-486b-9716-6d7b4a3aff2b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a497b2d5-15ad-40cc-8530-ec1346489575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857397f0-3423-4203-9d86-103bf4512d1b",
        "cursor": {
          "ref": "cfffea40-0873-428b-a2aa-f5b5c6542802",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5b40b861-361e-4b2b-b891-8925fed78686"
        },
        "item": {
          "id": "857397f0-3423-4203-9d86-103bf4512d1b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8f7c01c3-7121-4cbd-bda4-028fa32fdd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c531f5-8306-4a0e-98cf-09ea03907ebb",
        "cursor": {
          "ref": "ed089e8e-c7ed-4a28-ad9d-9e0e5e2bceb6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "484ec36c-9c4b-416f-b68d-1afafa30d5cf"
        },
        "item": {
          "id": "56c531f5-8306-4a0e-98cf-09ea03907ebb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5599b871-6ca3-4737-9059-10be58b05f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4eb19c-0296-44c4-a8b2-175585f10488",
        "cursor": {
          "ref": "0b85cb3d-9cf8-4655-8807-5341d8ae5987",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "03a0945f-1134-42b5-b4c4-cea5f321878c"
        },
        "item": {
          "id": "de4eb19c-0296-44c4-a8b2-175585f10488",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c8b02e86-47a8-4649-a0d3-f484176ba29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b7852-ffcb-443a-82b0-54dab7b63ef1",
        "cursor": {
          "ref": "66872812-71c2-42c4-b5f7-371f2a423286",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "acb38d57-a0bf-43df-b6d7-82237ca182dc"
        },
        "item": {
          "id": "c49b7852-ffcb-443a-82b0-54dab7b63ef1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8ff6ac39-22d0-4263-9a4b-b7429205b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aa6bac-a1c8-4f6b-8748-270ed07239cd",
        "cursor": {
          "ref": "8876b431-7d9b-4b9c-b494-0b733e537d5d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c3fcd19-cccf-4c1c-8f45-9fc83970cf28"
        },
        "item": {
          "id": "97aa6bac-a1c8-4f6b-8748-270ed07239cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47ec4b18-7639-41b6-82d0-0ec3216f592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e78906f-eb93-4a41-8b62-7f138c8487e0",
        "cursor": {
          "ref": "67d58dde-1b91-45c5-86b7-ac0d90577e84",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fe236100-f4a7-4421-b4ce-d65fe15f0c48"
        },
        "item": {
          "id": "2e78906f-eb93-4a41-8b62-7f138c8487e0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d832b86a-c5f6-4569-a94d-8b7c285016e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193170a3-2007-4c86-92a0-499d4655fb18",
        "cursor": {
          "ref": "c5f027a9-f31c-4d6b-97c6-f5141f12a4e7",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eee896a4-c14d-4ab4-8e08-2f1fb24feb4d"
        },
        "item": {
          "id": "193170a3-2007-4c86-92a0-499d4655fb18",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2fff85ff-cc69-4944-9752-c1ce3ab2450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cfe4d1-059a-465f-8e34-d6bd80e85372",
        "cursor": {
          "ref": "2b7063f0-16c5-47a5-809c-158513642920",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3a48ced9-d953-4dce-b34e-c57fff0321f4"
        },
        "item": {
          "id": "49cfe4d1-059a-465f-8e34-d6bd80e85372",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d2954e3a-37f5-4ddb-9d3a-846fa182de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b391b179-aa17-45d0-be5c-4fcf1a681069",
        "cursor": {
          "ref": "9d3c4a99-604d-48a6-af57-5769426f7f5d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4d6c9f69-1db3-4096-bbcc-0a78a4e01540"
        },
        "item": {
          "id": "b391b179-aa17-45d0-be5c-4fcf1a681069",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "12f999f2-9937-44a0-80e3-088121f5779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648ec06b-4fb1-4c00-832b-0f7e0dd5f3ec",
        "cursor": {
          "ref": "73c80b33-f633-4e26-b624-5dd2229055ad",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3b087a36-a199-4d04-a9f6-997c952ec79c"
        },
        "item": {
          "id": "648ec06b-4fb1-4c00-832b-0f7e0dd5f3ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a8e3eb72-cee6-4b94-8b93-65fb10fc4cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73103f2e-4878-448b-b36f-93e5ddc42d28",
        "cursor": {
          "ref": "ed68fe76-fb84-4cef-a493-18e29d3ba5e8",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ecdfc3d-4afd-477e-813b-391f169ec330"
        },
        "item": {
          "id": "73103f2e-4878-448b-b36f-93e5ddc42d28",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f6a87bb0-1eba-4818-9f2c-131223769a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a45ba9-a4e4-4d37-ab02-ebc069d84b09",
        "cursor": {
          "ref": "68a89662-2517-4833-8433-734a73246e45",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98a81ffa-d1ee-4165-9a2b-fe9631b4ad8f"
        },
        "item": {
          "id": "23a45ba9-a4e4-4d37-ab02-ebc069d84b09",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ada667a1-2a7e-4b95-a45a-36430bccb8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca9f57-7ef9-4a54-a873-cccf1f66c806",
        "cursor": {
          "ref": "ac83c7e0-6082-4e24-9e9e-0ffe3128f1cb",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "86d8c3a0-db16-48d8-a7b1-a16763ab1fac"
        },
        "item": {
          "id": "84ca9f57-7ef9-4a54-a873-cccf1f66c806",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a84c2d36-d114-4b75-941c-aa53e0630b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17803f49-d5ba-4ebf-9d94-4c759dd0334b",
        "cursor": {
          "ref": "b27488ce-c2b0-4ab0-85f6-6bc93b00cc86",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8053a556-8606-4f52-9226-5b25c659c375"
        },
        "item": {
          "id": "17803f49-d5ba-4ebf-9d94-4c759dd0334b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79f022a3-afab-4fec-913d-e6cab90047ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbb650d-0bc9-4179-8588-284312b29250",
        "cursor": {
          "ref": "e12e1111-d43a-44c4-a600-6cbf61932d05",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca93e382-1bf2-4710-a135-f94bf85047a7"
        },
        "item": {
          "id": "efbb650d-0bc9-4179-8588-284312b29250",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e6551fb5-d217-4f30-b202-783419612c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b2866-86c8-46dd-a2e6-3dc0bacc3caf",
        "cursor": {
          "ref": "4b2aef02-f279-4234-b99c-36503a0ea011",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd17abf5-50dd-4865-b01e-b388546cd03b"
        },
        "item": {
          "id": "d61b2866-86c8-46dd-a2e6-3dc0bacc3caf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8e50894a-5337-4cc8-9f67-262ebb40d659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d41c012-acaa-47fe-98de-34bcbe5c0f1a",
        "cursor": {
          "ref": "cedf0bb5-3865-4d63-9752-65275a2b6479",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6914831f-c282-4cb5-9cf1-743b65686286"
        },
        "item": {
          "id": "3d41c012-acaa-47fe-98de-34bcbe5c0f1a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9f5bd0d6-06be-41b3-818c-5c5954b1da5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9778dc3-64bc-4659-a37e-41323771aa19",
        "cursor": {
          "ref": "37e191ef-695e-4d07-b779-96b5b3a124f9",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "84dc6f04-dedf-4e94-bd8f-94be0e5ddbed"
        },
        "item": {
          "id": "f9778dc3-64bc-4659-a37e-41323771aa19",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "892e15da-738e-474c-b5d9-ec8b107b41cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d9d68-06ef-4960-984d-d18530f377c0",
        "cursor": {
          "ref": "e4ff1f31-809c-4b82-b2af-2c2af1d74e6b",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3a92f4d0-d5e4-42ef-8570-99cb8b3d6734"
        },
        "item": {
          "id": "f41d9d68-06ef-4960-984d-d18530f377c0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "36e93220-d5a0-4f0c-bf71-b011d6776631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dcd5d6-b58a-4684-9530-366d973d858a",
        "cursor": {
          "ref": "dc5a4289-701b-460c-a262-e0a4d15bf8a4",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aee809ed-52ea-4cbb-97b2-4f18b8cf7834"
        },
        "item": {
          "id": "19dcd5d6-b58a-4684-9530-366d973d858a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f8dfbb48-c3c5-4086-b078-485e7e44a78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53680874-259b-4f69-8bdc-24ab02013d86",
        "cursor": {
          "ref": "5125673b-7c89-4466-9759-f645ffff3a16",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c61e764-395c-4619-8d0e-efedc27ce80b"
        },
        "item": {
          "id": "53680874-259b-4f69-8bdc-24ab02013d86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "827a1c1b-56ae-424e-9efe-7abf63a8f9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35929351-aa45-483a-9934-6ad6d6fbcbf1",
        "cursor": {
          "ref": "e0ec92e1-68ab-4b13-a46c-a13b34c14e7f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1942d0cb-f2eb-43a9-882d-fae029ff3c97"
        },
        "item": {
          "id": "35929351-aa45-483a-9934-6ad6d6fbcbf1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "635fef93-0ff2-40a0-a4f7-baf2a8598e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370c5bff-844c-4a9e-823d-2da41cd2f4a4",
        "cursor": {
          "ref": "cc9bb6d6-057c-45d5-b391-4dd69d024871",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f64e6eba-d300-4ab8-9d81-bb911204de79"
        },
        "item": {
          "id": "370c5bff-844c-4a9e-823d-2da41cd2f4a4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "522d0d7e-0990-4059-8459-edf84494af1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1cde2-73d0-4bdf-871c-7ab366dba74c",
        "cursor": {
          "ref": "7bd1f101-8698-4d75-b215-25a95923f61e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cac99420-b471-4c82-8074-9cda5ff671bf"
        },
        "item": {
          "id": "0be1cde2-73d0-4bdf-871c-7ab366dba74c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b758cae8-a335-4c66-93b3-fdc75061ccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce49e4b-bd9f-4e2b-b085-c9bb2164955f",
        "cursor": {
          "ref": "eaee97e2-fb42-4b63-956b-3dee111305de",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9622b59e-fd61-4abc-a62a-9dcc5b16b0fe"
        },
        "item": {
          "id": "dce49e4b-bd9f-4e2b-b085-c9bb2164955f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "95084f8d-c4f7-4cbb-81c1-0196967a7bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71a6114-0769-4fcf-ba0a-542194c01322",
        "cursor": {
          "ref": "bf02c7a4-6eab-442e-9b65-40278c205198",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f88b783f-62d4-4fe7-95a0-aa5656e6ac07"
        },
        "item": {
          "id": "b71a6114-0769-4fcf-ba0a-542194c01322",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dace9119-8b93-49bb-906c-02cbd9188647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eeceb8-27c2-44a9-8894-2e710f432244",
        "cursor": {
          "ref": "7cb14875-58c1-4939-969c-5f8c14470049",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e15e85e-47fb-4d59-aa40-2b9c731ac87d"
        },
        "item": {
          "id": "77eeceb8-27c2-44a9-8894-2e710f432244",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1b29ac3-cb46-457f-b197-e90a9b1bb169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4a70fe-5a37-45c2-9417-e8b40b5f54ce",
        "cursor": {
          "ref": "75b405f3-c78d-487e-bea6-098f720d105f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ea0984f7-bc35-41cf-a29c-76bc268f80ba"
        },
        "item": {
          "id": "2f4a70fe-5a37-45c2-9417-e8b40b5f54ce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c64c0bfb-b642-4a85-9480-1422b2fc9a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c12bacb-8738-4d65-957f-2b2b3e38fc45",
        "cursor": {
          "ref": "b285341b-62c8-4591-9851-2490de9ae36f",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2469fe76-db76-439b-bb67-66156cd54060"
        },
        "item": {
          "id": "3c12bacb-8738-4d65-957f-2b2b3e38fc45",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d5c03d3f-7aa7-43cb-96d2-26a19d7fc297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc298feb-cfc6-4aa9-8221-f871958aa1b8",
        "cursor": {
          "ref": "1d0a1ad0-243a-4745-8bdb-74d6764a4967",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d88f6d1-936f-4b88-aed3-194e9c0eb72b"
        },
        "item": {
          "id": "fc298feb-cfc6-4aa9-8221-f871958aa1b8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a6c19018-6431-47c5-b281-bd663b955cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2771ccc-cd75-485b-bc66-44d6602c71ff",
        "cursor": {
          "ref": "b7229a79-33cb-43a5-a72c-83514a184417",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "775608e9-32cc-4491-b4ae-c0a58a8986ed"
        },
        "item": {
          "id": "e2771ccc-cd75-485b-bc66-44d6602c71ff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "74362ce1-a65c-41b3-bb3e-ef9c428fbeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d1beb1-72c8-4e85-bb57-aa848ccc6651",
        "cursor": {
          "ref": "70608071-f0f6-49a3-a478-978b67befea3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "875a9009-65a1-4084-8320-2ede6c43e6a2"
        },
        "item": {
          "id": "b9d1beb1-72c8-4e85-bb57-aa848ccc6651",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "19afbb41-c7a1-4e6d-8688-7be3af0594cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5075a64-f434-4895-8f02-afa1ccf75d39",
        "cursor": {
          "ref": "e57a01f9-c7c6-46d8-a9f7-6e6d40aa1e29",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ad1bd43-7942-4125-9c91-c01a8cbfc75d"
        },
        "item": {
          "id": "e5075a64-f434-4895-8f02-afa1ccf75d39",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54d0f62d-6803-412f-b804-1e12d3a6ccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4dc617-4270-4d77-8d35-5f22be526ce9",
        "cursor": {
          "ref": "3b4fc1fa-1b23-41ee-ab06-55fa2dbb9af9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "846ce055-a18b-4ae1-b4bb-d8b5f31c6eb6"
        },
        "item": {
          "id": "be4dc617-4270-4d77-8d35-5f22be526ce9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d7779d67-cf72-4c06-ae94-ea29583d35de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80d377f-b345-4599-86d0-3767f9f1cd20",
        "cursor": {
          "ref": "01e93e2e-d2a6-4d5d-ace1-7f7980035f70",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "696e6c8d-32de-4956-941d-a427e7dc5250"
        },
        "item": {
          "id": "e80d377f-b345-4599-86d0-3767f9f1cd20",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "10e7abd1-0c56-4eaf-8937-56e67ee3c67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d75d12-2151-40c0-9baf-e2bcb220a492",
        "cursor": {
          "ref": "717341ce-9ec6-4a27-8908-f8e7b5b04365",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ae20a43c-6c47-4c03-8b67-4637f738bd95"
        },
        "item": {
          "id": "47d75d12-2151-40c0-9baf-e2bcb220a492",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3de43e0e-ab8c-4715-a2db-1dd6235c15c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1db337-5ab4-4c71-b822-010c6d64d401",
        "cursor": {
          "ref": "bec37253-b387-4325-be37-c3b5a4abbd1a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7f7e4bda-720f-4255-ac2a-67a37daa0ecd"
        },
        "item": {
          "id": "ef1db337-5ab4-4c71-b822-010c6d64d401",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a960edd3-9c02-4f1c-824c-ee5aa4bc739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903c01fc-a25b-4d72-8843-056289ab2176",
        "cursor": {
          "ref": "9b03ce0a-4bf8-4b38-b9cb-f234eb5fd6d7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ec556a72-18e8-4157-87b7-703d8ae405c7"
        },
        "item": {
          "id": "903c01fc-a25b-4d72-8843-056289ab2176",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9ecf303a-f881-4e44-8e21-cc28fcb963ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ced9d1-dae1-4dc1-a677-b99fb5111dae",
        "cursor": {
          "ref": "a6433a9a-45b5-4d2b-a9f1-e31391f16abd",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fed1d63e-5f3c-47ed-83ea-3e2ed060f530"
        },
        "item": {
          "id": "55ced9d1-dae1-4dc1-a677-b99fb5111dae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c23cacd-6209-410e-9500-2f8e11caf648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6bcfcc-0ae7-4f92-8f5c-a5ceca476ad7",
        "cursor": {
          "ref": "0c3f55a3-08b5-41c3-ac9f-9089c6856fff",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f2f7286b-053b-4383-9ee8-78f8ae8f3ece"
        },
        "item": {
          "id": "4a6bcfcc-0ae7-4f92-8f5c-a5ceca476ad7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "de38c55c-56c1-40b0-88ac-edafe85f71bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f1616b-bc67-410b-af99-e44a15f77e68",
        "cursor": {
          "ref": "cadaac40-87c6-4f1b-8947-708505ac26ac",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "59cca811-2330-429b-8a14-f5b511f02724"
        },
        "item": {
          "id": "01f1616b-bc67-410b-af99-e44a15f77e68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83b9780d-9bf9-4c71-acbb-795d24f439f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31542143-009c-490a-b0ef-f82e9db4c76c",
        "cursor": {
          "ref": "09d8ea9e-b967-44cf-95d5-d72039747d9b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "60abcc83-ed4a-40b4-a21d-8d9cf34a67b8"
        },
        "item": {
          "id": "31542143-009c-490a-b0ef-f82e9db4c76c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c91544d9-4f0a-4747-97d2-e565b6d05e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a93113-5f92-4432-ad40-bc0662167536",
        "cursor": {
          "ref": "cca72a6e-a765-41c2-acb5-e37234705a1a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b51d108-6e31-4604-a1f4-36a0e73975bb"
        },
        "item": {
          "id": "b2a93113-5f92-4432-ad40-bc0662167536",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9aa4bbab-b2ab-4db1-8bb9-a5e9a48bf568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d4738c-aee6-42bf-9d50-2be3ce965e9f",
        "cursor": {
          "ref": "1f8a0e08-4a66-4549-8b04-84a87ede0cc8",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f4e51650-c180-4f4b-8b1f-44e9b3cfc103"
        },
        "item": {
          "id": "08d4738c-aee6-42bf-9d50-2be3ce965e9f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5747bd27-adc3-43ee-b1c4-7683a2fe4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe599dee-d3ed-4476-aa08-3d781157d3a6",
        "cursor": {
          "ref": "7ed46482-025e-4f75-924c-fbf7b3461c4e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e3a80666-3e09-4658-992b-2ecc7b6bf03b"
        },
        "item": {
          "id": "fe599dee-d3ed-4476-aa08-3d781157d3a6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b2bf3022-ab15-44e9-9f33-8ee8008b4f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e8edeb-d2f6-4cee-bb38-cce60e07a4aa",
        "cursor": {
          "ref": "817fa32f-9c2f-4149-b60d-f162ac8b3195",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7818b4ce-7fd8-4cac-95e6-6cdc7a84f1fa"
        },
        "item": {
          "id": "34e8edeb-d2f6-4cee-bb38-cce60e07a4aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68efe54f-1b80-41c8-a30c-eed25f5df642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ba5fc-ea02-473d-b839-d6e66fc3e3ea",
        "cursor": {
          "ref": "02ad514c-a51f-4584-89c7-da0bb55520e5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "581d18a2-f544-46e5-9878-8d64a857c64a"
        },
        "item": {
          "id": "851ba5fc-ea02-473d-b839-d6e66fc3e3ea",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "91cce8ea-87ac-45c0-be50-e071943dad44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6927f54-ba11-48ef-b5b3-ed072e347234",
        "cursor": {
          "ref": "864e4b0a-31f1-4c3b-8a15-be8704b047f9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70aaf51a-4576-4632-ad05-0cc73dfa42b3"
        },
        "item": {
          "id": "c6927f54-ba11-48ef-b5b3-ed072e347234",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e21f509-9b2c-4d8b-8259-5d8d436267c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f654ce24-bdd8-49fa-8187-e2f1c09cb82e",
        "cursor": {
          "ref": "867a29ab-119c-45e8-8f75-d1c17f8775e1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f46d5372-d8ab-4f6f-9892-7ad2104ecb66"
        },
        "item": {
          "id": "f654ce24-bdd8-49fa-8187-e2f1c09cb82e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4b885295-f3d3-4d27-b77e-fcec0ffff864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b122c-721a-453e-95fb-491aa07277a1",
        "cursor": {
          "ref": "4e0fa8b0-9d5c-475c-ae7d-510d4d051c63",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9f204f1-9d86-4140-9499-46baab1d42b4"
        },
        "item": {
          "id": "b21b122c-721a-453e-95fb-491aa07277a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5967cdec-506c-48fc-b45a-a60f8e3b8cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a64141-cefd-4687-a9ae-45f628eddfee",
        "cursor": {
          "ref": "83f8b4fe-6f57-4607-b45d-1917979ce262",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1eaadfec-3e90-4513-a6c0-216b9e6b0fbc"
        },
        "item": {
          "id": "13a64141-cefd-4687-a9ae-45f628eddfee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "622c82ad-68c9-49cb-afd6-e0d577827c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec930ebf-f7cb-49f3-82da-d325f131e37d",
        "cursor": {
          "ref": "5dd9389f-c96f-400b-99ad-becb7e95d169",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a734537b-62b8-43d3-bb83-4880c9405f21"
        },
        "item": {
          "id": "ec930ebf-f7cb-49f3-82da-d325f131e37d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ff665cd4-ff7a-469d-80b5-dbbeecdf681a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026a3531-96f3-4a8b-8337-e119a27be6b0",
        "cursor": {
          "ref": "eb45b0a9-da7b-4e15-8140-e4d87d2b4a0d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d5acb099-98e9-4b60-8d60-5eeed16b9f6a"
        },
        "item": {
          "id": "026a3531-96f3-4a8b-8337-e119a27be6b0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "edb90e5d-6874-4624-b153-37dfa73bcaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3c738a-3691-41ac-9186-44294451da4b",
        "cursor": {
          "ref": "c45ec686-94ff-46ee-a95f-9acd81c4883a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1288d72d-f48d-4624-bd2b-150ef6bc3793"
        },
        "item": {
          "id": "fe3c738a-3691-41ac-9186-44294451da4b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8445c34d-fb8b-4bd3-a8ef-9fee7e03d58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9723290-e8e6-46bd-bba0-e013c8c03a88",
        "cursor": {
          "ref": "79654eb1-aa7e-43a9-87df-8cd89a1b1d59",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cbad539e-3f1b-40af-9212-d222772facc3"
        },
        "item": {
          "id": "c9723290-e8e6-46bd-bba0-e013c8c03a88",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a06a5f9-9af9-493c-9c6e-a6e36578e1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e3ed4-8f91-4774-a267-a2b43167800d",
        "cursor": {
          "ref": "28704fe7-39ff-4824-b651-e9ba48cd12cf",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5476d72e-8cf5-4b76-80cb-5ac01bb2126c"
        },
        "item": {
          "id": "ad0e3ed4-8f91-4774-a267-a2b43167800d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2c5b0114-f7ed-4216-9289-1641ec369dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ef8283-6751-48c8-9f8c-86ad22a14834",
        "cursor": {
          "ref": "1395d1a4-2bce-4cb2-a549-6ddfb7642deb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d7ca8bf3-9d0c-4231-a17f-26dedb8e06bd"
        },
        "item": {
          "id": "c4ef8283-6751-48c8-9f8c-86ad22a14834",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c9857661-148a-4a41-86ad-c9ba11895513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3a203-de64-4ef8-8450-da3a72901612",
        "cursor": {
          "ref": "4eeb30b6-6b87-41b6-9569-732e52b1c778",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "14c39d17-2dd9-4201-9148-1de19c557a83"
        },
        "item": {
          "id": "26e3a203-de64-4ef8-8450-da3a72901612",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "21e92cc0-c8c5-4f6a-87f5-90e12d01a907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb37bfa-ddb9-471a-bd8c-3b72b85ab592",
        "cursor": {
          "ref": "c39e0326-3192-4963-92e8-561ae5ee34cb",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66562504-95a5-4f02-a2b9-1db8f9845b30"
        },
        "item": {
          "id": "1bb37bfa-ddb9-471a-bd8c-3b72b85ab592",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5c186d2d-7c52-4dcd-8afe-4cad14efeab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d96de-2243-42c4-9f47-630236973ac6",
        "cursor": {
          "ref": "8fab77a1-cd69-47e4-9496-0b7415a06a27",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "42dbb582-eacb-42aa-8890-0d1acba89e12"
        },
        "item": {
          "id": "b80d96de-2243-42c4-9f47-630236973ac6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e4187a9-9dd4-41c5-8336-ac26ece5a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce7bb7d-1714-4d7e-9cd2-20f3b66b5966",
        "cursor": {
          "ref": "17caa0cc-32a2-46c9-a35b-61fbb750e290",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "30a5448a-48aa-48e5-a788-ebf146513a7a"
        },
        "item": {
          "id": "0ce7bb7d-1714-4d7e-9cd2-20f3b66b5966",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32f7cebf-6611-4f31-8ace-45d9e6e4d1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd6e3b8-4d0e-4019-bd24-c23112b7adb9",
        "cursor": {
          "ref": "7e03a855-c492-4124-986e-6ef7a18f5252",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1e9a85a7-a737-4046-9e7d-85572c3208b6"
        },
        "item": {
          "id": "6fd6e3b8-4d0e-4019-bd24-c23112b7adb9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "29e83c00-8a93-4dbc-87f8-64aeac48b3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08dc2e-11bb-4353-a543-f4e0b7672e5c",
        "cursor": {
          "ref": "30290adf-d8cb-4624-8f81-3f7b1318bccd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8d7474e5-9699-4afe-90f3-be9126c78e8f"
        },
        "item": {
          "id": "5c08dc2e-11bb-4353-a543-f4e0b7672e5c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8235c435-1146-412a-8320-794d7bc12509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29e9c2f-bf54-4008-8f18-456d6dd3d7a1",
        "cursor": {
          "ref": "edeb7fd3-11d7-4798-9cfb-9c26a28e0f24",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "86c60f9a-037e-48c0-b787-050799bd0eea"
        },
        "item": {
          "id": "e29e9c2f-bf54-4008-8f18-456d6dd3d7a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "549c281a-6e31-4c50-9cca-cf47bd2ebaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ec0fe-2e6a-4d33-8c4b-99c440c43c2c",
        "cursor": {
          "ref": "b891c579-056b-4fa1-812e-773ca71b0241",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "11ac197f-2bb7-46ed-8e58-a617e3729062"
        },
        "item": {
          "id": "1f4ec0fe-2e6a-4d33-8c4b-99c440c43c2c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f56f0d0-e4d5-4479-acd3-b6eb344b6306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c960071-26e4-4f54-8668-7fda343dbc59",
        "cursor": {
          "ref": "963235b7-3617-43b6-bbeb-f590ef841cb1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "718a0c66-b1ea-44aa-b41b-db551394e94a"
        },
        "item": {
          "id": "3c960071-26e4-4f54-8668-7fda343dbc59",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fe724a38-22a7-49d8-bd33-2f652ef9e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce07c2db-d38f-42ce-952b-35cdeb202d45",
        "cursor": {
          "ref": "63cef0b6-49d2-41fa-a68b-b9e89013fe67",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e5db5398-5c31-4c7b-9d6c-7d8fed3342ee"
        },
        "item": {
          "id": "ce07c2db-d38f-42ce-952b-35cdeb202d45",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1cf6bc6a-64ea-4463-b7ce-19ea626add24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194be0ff-c659-47c1-8ce0-3fcfd78e614f",
        "cursor": {
          "ref": "7ae84932-4835-4d0b-a70a-61e00b6ee003",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a029293a-beaf-42ef-ac98-21de1517a962"
        },
        "item": {
          "id": "194be0ff-c659-47c1-8ce0-3fcfd78e614f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7cb98cae-9a9d-4707-b920-3274640b6c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d652a2-da56-4fee-a9d8-387d1eea3d78",
        "cursor": {
          "ref": "53f842cd-75be-43f7-b553-3793946f3903",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "194bfd59-72b3-4d4a-9b60-23b9ee6f84e6"
        },
        "item": {
          "id": "04d652a2-da56-4fee-a9d8-387d1eea3d78",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7c6ed3dc-2ec1-4a95-90e3-662bc538bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4836c14a-65df-46cc-8674-30c456995a4b",
        "cursor": {
          "ref": "242a9224-26a0-4af3-8b61-b6795c7ff3b5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe274b99-0039-4617-be25-33285db35754"
        },
        "item": {
          "id": "4836c14a-65df-46cc-8674-30c456995a4b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "505e67d2-1a46-4dd3-a8ff-81add8d67e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b05a67-774a-4647-9214-1a4d6d732bc0",
        "cursor": {
          "ref": "5cf1acf5-aa82-4fb4-a0ff-852a52c2029b",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ab9b829c-6dc2-4ad4-a837-a9775dbf5246"
        },
        "item": {
          "id": "70b05a67-774a-4647-9214-1a4d6d732bc0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1ee47e84-4b35-402e-af43-e1fe163f05cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5736d8-3ba3-4d61-9fe9-6d1f3260f8fb",
        "cursor": {
          "ref": "2059aa46-9e87-4bfe-a35a-889b3371cb63",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2d97cdb5-1d13-427c-b1cc-65a6c80fcc50"
        },
        "item": {
          "id": "2d5736d8-3ba3-4d61-9fe9-6d1f3260f8fb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eb7a49cc-528d-409d-92ef-a5a67710d80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e064831-762b-4c13-89b5-8bf88cc560b7",
        "cursor": {
          "ref": "7bace370-679c-4e21-a5ae-b26527299cc1",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "32d6f100-0e61-4c4f-b9b3-6726d47d4fb1"
        },
        "item": {
          "id": "5e064831-762b-4c13-89b5-8bf88cc560b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d2fccf3-5075-44b7-aa65-2831d212cc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3750b8ae-3dc5-4310-a13c-f49f8ebdf6bb",
        "cursor": {
          "ref": "8aeeedd8-52b7-428e-9c77-3e165ee06db6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8b5548bd-e560-4359-8773-a7ab3b1c4392"
        },
        "item": {
          "id": "3750b8ae-3dc5-4310-a13c-f49f8ebdf6bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "99b9c3b7-b20e-4fa7-ad7f-19136d4ec5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a63c91d-a461-44f8-b97a-f417a32f25fe",
        "cursor": {
          "ref": "6660a92c-8a03-4db4-9d37-1bad39ffbb16",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "954ca4de-5c47-4f00-80e4-2733ad2c48a8"
        },
        "item": {
          "id": "7a63c91d-a461-44f8-b97a-f417a32f25fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16a45121-dea9-4037-98c5-24b8ce94d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a231ae6-c4aa-4462-b0d9-b2d3012c3c14",
        "cursor": {
          "ref": "a9e0753a-fd5a-4c0a-b404-5bf1b5590d8c",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "954399a1-44ca-481f-a5fc-eef9f9052bbd"
        },
        "item": {
          "id": "4a231ae6-c4aa-4462-b0d9-b2d3012c3c14",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0cfaec5-a74b-4c1c-91fa-5f392c839459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dbc875-cad5-4911-8fff-d22d7cbe3fd0",
        "cursor": {
          "ref": "a4f7a26c-4b63-4287-aad5-421156c5e389",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4de555ea-bba9-4bc3-a788-8403e737c059"
        },
        "item": {
          "id": "68dbc875-cad5-4911-8fff-d22d7cbe3fd0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cdf6daac-ca4a-422e-a33e-4c59e33e5248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c433939-d894-4c3c-ac65-aada4d4423c8",
        "cursor": {
          "ref": "e9fdac35-869c-4323-b17c-177ad4f8a9e3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "be92bf44-5f8d-4dde-abc4-90fe60847e02"
        },
        "item": {
          "id": "9c433939-d894-4c3c-ac65-aada4d4423c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "68a18e3d-6158-452c-b73a-9de740cf6512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824f3e8a-d069-4399-b386-7c94f76f3871",
        "cursor": {
          "ref": "8c0db969-67de-4a46-810f-e8c265c09784",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "524bdbee-eeb6-4f56-92a7-56fe554ef361"
        },
        "item": {
          "id": "824f3e8a-d069-4399-b386-7c94f76f3871",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31c015be-1057-493b-923c-f9eda8179c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47751f9-27f1-4c4b-bcaa-801082b2e898",
        "cursor": {
          "ref": "13b38a7c-a5eb-4b0f-aa3e-906e9ceb2766",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f7b72f50-8ee7-4307-b89d-47df22143f42"
        },
        "item": {
          "id": "c47751f9-27f1-4c4b-bcaa-801082b2e898",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b5050273-7e0c-4526-9ed6-0281b8fb5457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf83b6-bdda-46f1-865f-40283abf68ac",
        "cursor": {
          "ref": "b745d8ee-c102-4326-9a9f-93c53bee81d0",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d86c7ed7-de62-4dd8-87a9-3549eebc30f5"
        },
        "item": {
          "id": "6cdf83b6-bdda-46f1-865f-40283abf68ac",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e7b92e1f-b153-4e7f-af3f-e7efd65f8926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1c9f41-977f-47fd-a230-1a5771c59c93",
        "cursor": {
          "ref": "66914b6a-a058-48f8-8880-e2c15614d2c8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "21573385-af71-4f3e-b8ac-ae13217e3a99"
        },
        "item": {
          "id": "1b1c9f41-977f-47fd-a230-1a5771c59c93",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "483e80bf-5d8d-45e2-8b4c-44f688eb6865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82843131-616b-4391-ba75-806c38ae7616",
        "cursor": {
          "ref": "a9467331-867c-4efb-a36f-436ac8b5e6b4",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ce06c909-3c78-4e40-a238-032a7dfeb281"
        },
        "item": {
          "id": "82843131-616b-4391-ba75-806c38ae7616",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a03f4bab-dbdb-48a0-9c01-d742e54c284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354cc13c-7abb-4922-9c12-024ee45fc869",
        "cursor": {
          "ref": "38e9d4f2-01ee-46ee-ab49-5ef16cfa5166",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d423c99d-21d8-42cc-bac4-fe61b7e02a0b"
        },
        "item": {
          "id": "354cc13c-7abb-4922-9c12-024ee45fc869",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "178b99c1-161a-45b1-969e-844bbc489e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472dc776-073f-4814-9dc4-39592f7bcbc2",
        "cursor": {
          "ref": "740de8f3-4596-49ee-808a-c701dd5dd76e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "94340c42-8c16-4912-ae74-8ff4b885812b"
        },
        "item": {
          "id": "472dc776-073f-4814-9dc4-39592f7bcbc2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "34372a07-fb54-4021-9f06-6ec420cf997b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fce646-4b64-4346-810f-52e4981b2824",
        "cursor": {
          "ref": "4b5cf1b5-8576-467d-914d-1ba253e5b8e7",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c3b58ac-30dc-4ef8-a6de-d38f80007f4e"
        },
        "item": {
          "id": "29fce646-4b64-4346-810f-52e4981b2824",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e7240394-a8a4-4cf2-ad0d-5c399c6aa795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f352cf-0b02-48e7-b0e2-67333004e61a",
        "cursor": {
          "ref": "238f1a98-a9d6-481e-b8a7-19837697df1c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b6bb291-01bb-47f9-978a-28990513c3a1"
        },
        "item": {
          "id": "96f352cf-0b02-48e7-b0e2-67333004e61a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "601b211e-b83a-47b7-b8c1-f67dc8a47c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6034d2f-e43f-466c-9e7f-b5b797bb13a0",
        "cursor": {
          "ref": "bf642cbc-0db4-4b21-8269-af986a51be24",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "97c71ae6-76ce-4b24-ab9c-9c8e897d8ad1"
        },
        "item": {
          "id": "f6034d2f-e43f-466c-9e7f-b5b797bb13a0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2367ab8c-5e2a-45a6-a6ce-432ab33e1505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283462d9-2f62-440d-9b0e-aeaabfa49e4d",
        "cursor": {
          "ref": "49fd1f13-33b9-408e-80aa-b124dc87b498",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b8bf1e0b-e18f-4a43-972c-ba4374dc47f2"
        },
        "item": {
          "id": "283462d9-2f62-440d-9b0e-aeaabfa49e4d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "81f1433c-c050-4ab0-813a-729cc4e293bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a7c6f7-d896-49e9-b51d-62d74c1d3149",
        "cursor": {
          "ref": "e8852abc-b6d4-4e89-a2a4-b06de4e7a731",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "83c5ba87-f7d8-4a5a-9907-2f989987ee88"
        },
        "item": {
          "id": "c0a7c6f7-d896-49e9-b51d-62d74c1d3149",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e118efdd-2dd7-48cc-8711-06aa49dea9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25de9e1f-700b-4739-b351-ed3dd5e47b3e",
        "cursor": {
          "ref": "b90ff9b4-27fa-45d9-abd6-0fd8965c82f9",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f2f14fd5-25eb-4a6f-9694-23bde3bb61bd"
        },
        "item": {
          "id": "25de9e1f-700b-4739-b351-ed3dd5e47b3e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6bb3915c-d8e6-4faa-95a5-7ed0f1819568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d26d94-693c-4784-a9d3-d560d365b358",
        "cursor": {
          "ref": "779e7471-46d7-405d-af87-72acfe8c391c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b3bd5ceb-2afe-4376-85c3-94d9c3cca6a6"
        },
        "item": {
          "id": "58d26d94-693c-4784-a9d3-d560d365b358",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b3f779b8-7d93-4dda-ac32-97ee57660917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9377584d-2d94-47ad-958b-5aea7d7d0cd7",
        "cursor": {
          "ref": "4afab11b-602f-4a44-beda-9d24e742f075",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f87360ff-b2ff-4f70-b801-6c0f2f3a656f"
        },
        "item": {
          "id": "9377584d-2d94-47ad-958b-5aea7d7d0cd7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0c172b81-3718-443d-a896-adfb7cc7b295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd63901a-ed4c-42c0-bbed-cad2545c8117",
        "cursor": {
          "ref": "aa49ffd2-7cbc-4dd6-bb07-4b9dd54baec4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a25d8e86-6843-4268-909f-b9dba48ea460"
        },
        "item": {
          "id": "cd63901a-ed4c-42c0-bbed-cad2545c8117",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7c81b7d5-6386-44a2-a098-e83b42dd99bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719a326c-0744-4c68-bca7-fbdcbeac5722",
        "cursor": {
          "ref": "e8c585f3-d581-43de-ace3-c5d45deac422",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2ee40aa7-891b-4a1a-95b1-fe127671930a"
        },
        "item": {
          "id": "719a326c-0744-4c68-bca7-fbdcbeac5722",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e00ce4fd-7ee8-401d-ab95-abdfb737f029",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c39d7-edc7-410e-aca8-edbf9e298f5f",
        "cursor": {
          "ref": "82604ffc-7baa-48ce-9ae7-fd950b94b390",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f90376dc-6d08-4914-8153-68b6da6b961d"
        },
        "item": {
          "id": "c57c39d7-edc7-410e-aca8-edbf9e298f5f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "79dd2dc7-c30b-407b-a0d4-0040ba6bd6b7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "51217ae2-6e2e-48c6-90eb-74c98dea21a4",
        "cursor": {
          "ref": "038ae530-9bac-47db-bc75-8d139f27ae93",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "990602b5-1f0f-4d42-8254-43a2f111726d"
        },
        "item": {
          "id": "51217ae2-6e2e-48c6-90eb-74c98dea21a4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9238196-4461-4d16-86cd-e024916cc5f5",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fec0f7c-fd20-486d-b058-5a9f39fec5dd",
        "cursor": {
          "ref": "9c003193-24b5-4f6d-b5a4-f3f7825150bd",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "42fc6270-8621-4216-a495-f4f733514452"
        },
        "item": {
          "id": "4fec0f7c-fd20-486d-b058-5a9f39fec5dd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "492b302d-0fb6-40d7-8aae-ce18a6e3349d",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
        "cursor": {
          "ref": "aaa967a9-4936-4a93-86c1-21c26bf3737e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48419faf-161b-4373-9f4b-3983ac6e8d1e"
        },
        "item": {
          "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a39726e-4760-40bb-aed3-7f900f6a4cef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
        "cursor": {
          "ref": "aaa967a9-4936-4a93-86c1-21c26bf3737e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48419faf-161b-4373-9f4b-3983ac6e8d1e"
        },
        "item": {
          "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a39726e-4760-40bb-aed3-7f900f6a4cef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
        "cursor": {
          "ref": "aaa967a9-4936-4a93-86c1-21c26bf3737e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "48419faf-161b-4373-9f4b-3983ac6e8d1e"
        },
        "item": {
          "id": "0f289ee3-ff4b-4a15-87ed-cb56b73d10eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a39726e-4760-40bb-aed3-7f900f6a4cef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b040890-2c10-4182-8025-31a256ddb454",
        "cursor": {
          "ref": "c9997636-fd4c-4757-807f-58013525529f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1927a473-aee2-437b-8413-f6a65ab5d444"
        },
        "item": {
          "id": "5b040890-2c10-4182-8025-31a256ddb454",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "30fd59ff-95b8-4b35-8ebe-98bce76c6036",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b03bd-6c65-4c3b-a4b8-dedfd60022b7",
        "cursor": {
          "ref": "e7f14935-07ba-43ec-93b1-43d82ee588c0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4fbf7992-2e4d-4d4d-b609-de4238f79552"
        },
        "item": {
          "id": "cb2b03bd-6c65-4c3b-a4b8-dedfd60022b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d385a332-509a-42cb-81d3-e6b6e73d4239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b03bd-6c65-4c3b-a4b8-dedfd60022b7",
        "cursor": {
          "ref": "e7f14935-07ba-43ec-93b1-43d82ee588c0",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4fbf7992-2e4d-4d4d-b609-de4238f79552"
        },
        "item": {
          "id": "cb2b03bd-6c65-4c3b-a4b8-dedfd60022b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d385a332-509a-42cb-81d3-e6b6e73d4239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e89f25-9bae-46a0-aadd-95279fefab6a",
        "cursor": {
          "ref": "07111b02-7e00-4cc5-9e30-8182222000d7",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "454bb840-cd4c-4fe2-b0ec-55db8d1dce05"
        },
        "item": {
          "id": "e5e89f25-9bae-46a0-aadd-95279fefab6a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d87cf321-c6d1-4362-9df4-2e38dfc8e46f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a0aef9-4d24-4913-9c61-d64ac6c9e6d0",
        "cursor": {
          "ref": "b1206900-f33c-4d3c-9bb3-46fa936092c3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "23111c94-6d2a-48e5-a70b-355504f2fe35"
        },
        "item": {
          "id": "50a0aef9-4d24-4913-9c61-d64ac6c9e6d0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95978842-0ea9-4a81-8f7d-96cc4eccc078",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a0aef9-4d24-4913-9c61-d64ac6c9e6d0",
        "cursor": {
          "ref": "b1206900-f33c-4d3c-9bb3-46fa936092c3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "23111c94-6d2a-48e5-a70b-355504f2fe35"
        },
        "item": {
          "id": "50a0aef9-4d24-4913-9c61-d64ac6c9e6d0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95978842-0ea9-4a81-8f7d-96cc4eccc078",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f8e5d3-aebd-4b6a-a76c-98de3fb7cd05",
        "cursor": {
          "ref": "eeac64a3-c752-472d-874f-2367fb65f1c8",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "89e8637f-0a28-408e-9d44-dcb02347cf72"
        },
        "item": {
          "id": "f2f8e5d3-aebd-4b6a-a76c-98de3fb7cd05",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0511cc9e-f0a1-4ea2-a812-488f35f61075",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}