{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0ddf1473-273a-4010-8f8c-20cb5a70966b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5b24a24-9f56-43e9-8c16-f50556f29a09",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f666717c-dd9a-4a81-84df-9429268fa895",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f1b35a-0d5a-4a2d-806e-5027e43a3901"
                }
              }
            ]
          },
          {
            "id": "c1dd7a8c-a49a-49bb-a7a7-7991c4a4fb90",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae2e638f-0647-4e1a-bb11-82620a57fad2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b37e35a1-0b8b-4987-9f61-e4491cccb13c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "85b76541-3fec-4635-83cb-6cc446130879",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9fa849a-6e0f-4489-bc54-2612908456b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0abbca23-efcb-418c-9f1a-7ed642a20c17",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "776b8664-885a-4248-bb6e-1f579406227c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edeaac05-39cf-4c75-ba8d-fc6844ff0256"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c598ad2-02f5-44fb-b181-e098c93557cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d59822e0-8daf-41ce-bfd1-eedf3e7a6d52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d49d8e28-136c-4256-b7ae-f4afb3e02814",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d5415bf-78cd-4522-a9fc-f9b37b5c01b9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aec18ee8-9d07-46db-82ab-fab5916cc0a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b9813af7-9a33-4af4-8071-20756f74dae1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8aad0296-4e53-45c8-b776-ba468203da34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "020cf6e3-05e2-4d31-8462-268e6d3d6e54"
            }
          }
        ]
      },
      {
        "id": "b151403d-8f92-465a-8e04-6af635ce76a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3e25813e-412b-403a-8072-beb37d268a4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbb6de5a-38b3-4065-90ca-ddf590dfd427",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23d4ca78-8e13-45f5-9520-f148ccbf93e1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd7f579-33e8-49f5-a007-ae8b0d8ff875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8d731b0-aeef-44eb-8361-0c7cca1190ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eb00d9-ceaf-49de-bb10-a3fd465dc2c3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d946d67c-52bb-4152-ab67-5e76a0c26699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2ef4f7d-3b89-4736-add2-2dcbd94986e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4505f361-f322-479b-a61e-c3d566757065",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be8809e-0688-4075-ba70-e7d9961ef984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8de3018-6d3f-442f-808b-669eb2eaa85c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "704f8014-6c38-4e54-956e-511c4a70d2ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a0d8fb5-ed3d-459f-9172-2b4ebcf550e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e23fb6-a9df-4abd-870d-bbff63f63f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45aa1e72-33a8-45d0-b3c4-c3850d42a94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a960427-a468-43b4-ba03-8c8ae7c593ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b10bf2-5c89-4126-a1a1-d8c08505439e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "48fae83a-ba03-4a24-b83d-501868e76afc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "263f327f-57be-4aec-a375-c63be021efc1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b00dbf4-188f-42d4-aebe-151914119a4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b8f2d3b1-1006-4b32-8f95-b2a981013585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddbd641d-574e-4d92-94d5-bb87e5e2b1a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "32e86cc2-65a5-4f91-ac29-66222923f935"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4293881a-0a42-4543-9a11-766183e33650",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54f9a0bd-bf19-4149-bd5b-2f90e0d2bb2d"
            }
          }
        ]
      },
      {
        "id": "ec20c372-3bc7-4ff2-8b0a-ad741670afd2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "326b66a8-278a-446e-804b-a3abc00215f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55b40e77-b1f0-4021-a136-ec5be54c191a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5f970c1e-ac00-4cae-8850-8c385dc0c612",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2a33a5-03d4-4669-b1bb-3b1b3e9cc5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eabae2-74cf-4e34-ad58-15e164ca3152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b39e17-3745-4a48-9a9d-732a2c63d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb1fc1a9-f94d-4c50-8990-8225fb56b501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b31ae-5ea7-458e-b21b-54aff3d76a53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b16d3b-fe01-41d5-8ddd-fbdd07ea2477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477165b6-9fbf-4179-a1e5-5c4f6aa7e546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a8097f-0422-41d5-85d7-2b408cfb4573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67474746-cf26-4902-a74d-cab7732cdef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f063ea02-aca8-426a-8c93-a479bdbf8e5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558953f7-00cd-4d4c-b7ef-eb48dc0d0791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431aae4a-652a-4691-960e-34aa420f5367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a63ad40-4a67-420f-bb05-ed21e70e00b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f36efc-1497-40d6-a81b-47036c66cde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76016e8-7149-4c54-86e0-000d96380735",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cebd30b-fbbc-4a23-ae00-3973e8b582d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a92402-2004-4468-8cbe-0a94f8b48572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f879f7-8606-48cb-a839-e929ad4b148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a09e81-5fdc-459a-b71e-488614324706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c93a26-0b38-475e-bf60-50dfbcba9e38",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d8774-0369-4421-ba88-26210cfef8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfb1fb8-200d-4a90-9ff5-c146c5e34e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03925c2-5162-4668-b939-94091e18a95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd0f947-1f2f-4f42-8084-43ae401cdba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394b01df-027e-4ae6-af4c-e45bef2f3d0b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de60bfd2-2c3e-48ed-8512-6219b9c2c7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2862977e-6516-45d1-a11d-546e0518c37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5daed1-e0a0-4862-8628-c22db4fcc127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "373b9696-ce2d-4c53-8287-509e52c963d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26e67d-437e-4a35-897f-432373b38a84",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b332a3-962d-47f8-9f57-5c50feff2101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ac0d20-9645-4bcf-8ab7-23e685a0b4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec848a2f-de0f-4783-9279-7596d6efff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad6f21ec-9029-4aa1-b915-42de53928b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202de4c1-e0ea-4f67-a033-a587c2672a74",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82369f79-7206-4cc1-a201-cafb3f498d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da69c6f-5001-4732-9bf5-b9288a80282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2054526-c4d5-44bc-b469-e523c6a5b73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "237c050e-eab3-4733-80d3-c98ecc551650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebf2c4d-d76d-4aa3-a985-5e7802ea74d8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba1a3c2-1ddb-4fa4-ad62-867661d375f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271f81ad-92ff-4d7e-86bd-061bdee00295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c0fbd5-044c-49dd-ac89-3a317b5c5554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40d90aac-9be3-4a09-b333-822edc57ee41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c47ed05-2638-4b02-a4d1-4abbf9a2e8df",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5979773f-2959-43ca-b347-38ebfec85977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bc059e-725f-427a-9196-bc6e6a9f03b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68032e6a-706b-48cf-9ada-f2bf3fdf739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "915094fa-5d63-43fe-a9d2-a542b023c03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8d5c7e-016f-4777-ac4e-a99d06313a4f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138b5196-9dbf-4eef-9dfe-cc1553151e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952431b5-a669-4b6f-8ffd-22ca99ef93fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee100ac1-91b0-42f1-a13e-233e813c2b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a7a877b-7300-402b-9bed-5d6337a8badf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bddba38-04e1-4fe2-bbb8-e8d30cff9446",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0280a-f092-48bc-9940-8963173e2df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef06bd2-31a4-49c2-8b24-a5bfe35c1ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db22333-712f-41dd-a4c7-055950e2cd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f91126-e7f8-4818-953a-0746d6185aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afdd82a-826c-4053-a947-225cf2cc53e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa9ebc-893a-4106-aa90-1ee2f7853340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86ab9bc-6b9f-4d76-ae0c-62c1cb5eadce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23764bdb-bfce-498c-a5bb-85a1f79ce43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbdf6ad4-e48f-4cdb-8de4-7853dbc7b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f316a0d0-afb6-42f3-af8f-fb06bc50fdfc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3567ccd8-ad64-4511-85b6-106aa0562622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2216d2-110a-4193-9aef-bade828791ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5b8d1-53b7-4550-8bc6-f5ac3c0149fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2bb961-9275-4072-b840-feef6d048419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c450f0-daa9-4941-b6ff-2ac5af281e48",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e3c13-8c66-415b-9c95-b52f01185622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccae9359-d484-4a1a-b3ce-79744f60b11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22333d9c-f042-4179-89c0-35bffb0ebf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0feb899f-9f5a-43fb-a5a5-e04e965391d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52629e8-24a4-4f12-b289-52517fd702d3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2c9388-ef6d-476c-be8d-1e4b197e371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a2e03-6078-423e-9052-220aad4ccf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870168f2-c43a-4c17-a48b-a1d113775085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6d95183-18df-4aa6-afc8-2304121602a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54f88c6-7a2c-4a92-bfb0-7790237c8cda",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59927db-ab55-4a3b-9744-70d751190e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bafe04-0ac0-459a-9e0e-86a5068ab931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45bbc02-b2f8-46bf-b88f-816fb0a2072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b81e80e5-183a-4af3-bfb4-1c370081c07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f5e68f-9927-4cf4-96e8-8407e4942406",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b757e-522f-4431-a8d7-b837a06f5853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cf3fe9-5479-4a7e-a76b-edfb82e93a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fe8e6f-9ef1-4c92-8691-93dc6aed63e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85dbf5e2-632b-4585-ad99-b8ea8930d01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160565bd-562a-4547-8719-db08eedcb3fa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e473ef7e-6bfc-424c-ae09-0ebf6cc0a339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0a72b5-0319-4786-b401-ecf2107d2773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddc7826-fd2f-4ba4-8010-e99ce58fc61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "687f65dd-f834-4126-bbb4-e43ed1af43b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c675a2-f6b5-4ea1-aa99-f97df1a0b36a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad5c9b2-4ca6-4ff9-a460-04ae5a29e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fce005-de12-48fb-9d58-60f6338cade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aef585b-ed60-4365-9ac0-e32cecdabf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e85ea1-5cfe-4366-a13b-f65f2cca6e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec7e84f-4dd3-4505-83dc-743256c0e5da",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ee8790-6041-45e5-b853-105aa668fb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fdb3d9-26ff-4032-976f-e59a3e158310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2545c42a-7355-4196-a12c-0efed38c3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14366535-0945-42cd-92d6-c810d9f48893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290991d3-37cd-4217-86e8-ca6358e840b9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93bb4da-6218-4d6f-9234-9a717bb454f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e28c263-185e-4ede-a8b8-e65eaf2b28b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfb261f-fb67-4327-8744-7b542e388d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4abb38dc-8073-4cd3-9726-6a428176526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4e6d49-52eb-4613-ab93-f80dc6f08303",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93d4718-6d43-47b5-b72e-b76138c1fe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a51c8ac-4ec4-401c-8867-253c6bb05f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2130cbcf-b710-44a8-b3db-2672fa43720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed17f055-d390-4ab3-9b7d-7ab6129e29f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c752bd-e2b8-4113-b867-9f42d5d38e2e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6182abb4-67ad-400c-9f40-c2f3ed2c9abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226138b8-6faf-43c3-ac10-6fb79e2a9862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724dd2d9-fb48-46dc-8562-b28d802b5fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21cb416b-809c-417a-8b39-03c84f472452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2881ff37-56da-4bb7-8df3-4b393ed778ad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f09d18-63d4-43ff-99a4-fde354f51377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4efe65-ea8f-4ff2-8324-d8c0458eaff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2421d5b2-d611-4f78-a20a-9c72919a59bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8110f1c7-a37f-4569-84ef-c2b58021fef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c647ba-f525-424e-9419-f8b97f493604",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337cacca-7a60-445c-a6fe-cc2e376ae120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683c3043-7fda-415a-aebb-b95a4afdacd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf45501c-d5c7-456a-8279-78a83ca2e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8692f3d7-1a7a-4172-a624-c78272f3f5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c05afb-3712-4118-a73e-b97d92815bf8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de5fcf4-6a05-494b-9d0c-d7ee1b5d0cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f83173a-68b7-4a2c-a402-49cf49b89fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a4655e-6c0c-43e9-8676-eb4d8eb2702e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9980b21f-ab98-496b-a0f6-0e078bd6e32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34132ce-7018-4964-af45-e8d358f2a1a3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c9ca1b-de63-4ae3-96f9-f84f9763ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4b9141-c5f3-4f6c-be32-4bb2638fade3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25c5d3c-35f3-449c-b4b6-a8c92faf27c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8762314d-e645-4b9d-a63f-da2fdb0452d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a1ac8b-d76d-425a-b172-a463305b52ae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8d524e-06a6-46db-8eb4-4ad763e086d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b31cf2b-bd33-424e-a420-52225118dcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23a4569-d648-4ba4-a679-0868fde98b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b501f744-c556-4cab-b5d6-86b7108a2b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf8fce1-b31b-4885-be22-9e4e03ef9e75",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5413983d-f469-4fba-8080-47266a6ad9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e849c86-3f6f-4c69-9836-8af4864d1dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299c8e4d-ca65-4054-a97f-ffacacc21a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9c01d1-8ecf-4fd0-b525-18ef656dc17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9a88a9-7f2c-4ae1-a08b-bc5b49909e0f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af4ec8b-07bb-4c5d-8615-4948d223f7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9499926b-a144-406c-a9f7-3f0828021347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50323b2-9451-4198-96ff-0a2c312b0763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8982f6a7-9592-4f1e-b935-a38f4c1e06f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adee47b5-124b-4f93-ba37-7096dcd273bd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a3c359-cf7d-486d-ad13-35891be758f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9783c9b-f452-493a-a720-3dfab2e18c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea30c517-b8d2-40b5-81ba-e07bde44dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e240f9-573b-450d-9ee7-97d3921c92bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e36525-76ae-487b-b4c3-7b5fc8d83d8b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a68db27-7761-4c0c-bae4-a1c61f63047a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b713bc8f-9c86-49d3-9249-6f72f150250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e568d26-3315-4c88-9ac4-83401ccc8acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9465e64f-3da4-434f-b63f-164312ad39eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdb9188-153d-4fa4-b4ba-a4171bb63c67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bdc196-535e-47e6-adf6-94e3c53fb520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f84a72-9580-4507-948f-3662093836f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af21197-c251-473c-bd95-0a800eec6832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d1ff47-6a75-4a45-b4d7-5fd331e9c2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a33dc3a-2bd9-4871-84c0-b0ba5d661d95",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae29a70-850b-41fd-b407-5fd2bbb56744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c02ceba-6ecf-45c0-8b0a-2628b2afa9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206c869b-d446-4189-9993-1fa14911d533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e86dc1d-b611-4bda-85d1-5981b64e0d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86106b0b-9be4-4e06-a8f7-6371e4e33387",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac23f74-21ca-4055-a9fe-f0d2741d4a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "066b67d6-8588-4f71-bf1b-22f285ed4f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c231ba2b-34db-4337-b947-4ef608a7346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e7b730-743b-4e5c-9498-aa2bd06ef345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add7bbee-f00a-41b4-a3a4-718ab013053d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430856ed-09fe-4921-a28e-d2cb7fb96dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a3311-1808-4bff-bd18-ff0c2d7087ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1f64b6-4714-4d6a-abf2-39536a747909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b394a6-9333-4130-97c9-7bd8a9b19fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c3970-32f5-4d8a-beaf-839154e92126",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cc0b7e-0280-4632-8dc5-bb9851b56954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04058cd-f971-477b-9e55-6fe47d80f890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f635a-9645-4d76-afb0-6c539f2cac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "084daf33-e386-46ed-9c40-3a139cf82c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5807e7b9-b033-4e32-ad94-2107f671912f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d8f1ec-183a-4289-8c96-48a60c2a6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d5a90f-c9a3-4e8f-9d51-0928498d7598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10be4364-dff6-4419-ad5f-ed83d927dd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "736016be-58d5-4418-882a-590888731ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed52828c-823b-4be6-9c5b-dcd8a36ea5f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52524cda-b91c-4e94-bf86-c926a7ef250e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f7c8a-e529-4118-b3b2-d41c0050b182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b714a2-0314-453f-bf6b-5261a9b79203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7edbd1d7-4bd6-40a5-b64b-79ef4836e3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604b8f9f-59dc-44e7-8602-96faa46b0fc3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188dde1b-38db-427a-a027-ab217c37f177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428330b4-06b2-4a72-9d6e-8e14ebbcdd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3408bb59-121d-4c24-891e-7fcc578f5e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d13ed8-3123-4179-a748-53a20f6a204d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac11e0b1-5875-46aa-b983-ccad82c0497e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43385281-cbaa-45dd-bd81-d81e600e3bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404abec8-2582-420e-b619-0b7e737a4a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c8a45b-e631-4afa-a155-623372f5dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "200c0626-b735-4c39-96dd-d12e1abd28d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc08f8-03bf-4bfc-85dd-74095d31434b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c6cfcd-2ff2-47b7-a437-400e095563bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0fb36c-4eb7-4916-a6bc-5bac88af1974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe221b2-c939-4184-93b6-2a10be9092d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6429f88-1755-4d24-9295-1c8c026155d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9c6473-5eea-432e-9c2d-020afc35ae4f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b449ada9-8ce1-4906-ae5a-dd5430b436e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb75ab0-707a-4c84-aad1-897f5a0ceffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6f3c8e-dd35-4066-8158-1cbc5943a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f220eb-4389-4ea1-9ff2-b5eab7fc1adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f70ed61-84b2-4ea5-894c-cd84d7a4ff18",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7567af57-2ca2-42db-a67c-324855e30985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62439fc9-55ef-4c4d-9f09-9f69ee0fc041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911c023d-0bd3-4415-9b3a-a5585b70aa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad74fc6-c979-4453-b6a3-4f51a39e1853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124eb049-f588-4c33-a93e-3cb57da3327b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adcfb46-cad9-45af-b993-a46637ded62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af18c91-ceae-41c1-84a4-1b99a6a2f9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44316dc-5ec0-41fd-ade3-400022ecb78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4321c8-571f-471a-8e26-338ebecb9298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c4da90-69c2-4765-bef7-562e7d713544",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282fd94c-57af-4fd9-ac40-ac54bd1fa2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7404f49-caa0-4a5d-8490-9eabe1b639d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1332832-6576-4bcf-abae-f2a420870d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e86faa51-713f-438b-b0a9-7da87122cd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14800360-6ffe-40a1-b806-267b5ab094ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27080b4e-0838-4b1f-afbe-b6cb2016dadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf361849-3a1d-42a1-95e7-246040a302b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4425859c-0b0d-4be1-bfa1-6fd2c61c8442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62221884-e9c3-4194-9a64-2e17eed9b330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbefd123-4cc6-4a95-8683-260aaa3a2e4d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a188c7ec-f5ae-40a3-a59f-d7a311c326fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4904b563-d1cc-435a-b762-be2f93e39870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1d6180-1267-4806-9a69-28381c9751a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "911cfde7-d97d-4eaa-908f-eb899aadc970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572c5b18-f45b-435b-b65c-c5f7af757f63",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1514470-94e5-4264-a586-5047ca192045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519674f8-858b-4544-870a-696b6bbb8726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdaea19-afc8-491c-bc2f-337cfb04b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6096b7b8-2618-4581-99a9-03be26eb2b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7794f6-02cd-4a3c-ab4e-cddce7daf340",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8336ad8d-d8e4-4302-8a8c-361139d2ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c20c62-8f29-4a12-b201-fa6d6f2e993a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72764d7d-8347-4a00-a609-45ae65698cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eadcfc45-b08e-488d-8174-81315f09c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c63c9-e0cb-4291-a64c-0799d482ef3d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cbb86f-b7e3-43a7-9b9a-61c691490afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c59f1-01e5-4734-a8e2-17a6332793a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61d949-88fb-45dd-8d9c-8a6ef7057d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de381e1f-382e-4cf7-88ea-ae2fe152e94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b586392a-4a65-475e-a6b7-a99465256baa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665f338f-d2ce-4a7a-8973-81f7321424ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bb2898-8d99-4f6e-8d24-3180f1ccf423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1230b75a-fb83-4298-8214-d8512738c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07084c43-aa6e-4341-b908-273b4a802d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32c94ec-4da6-4d3a-93da-06eb38126d44",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05436967-4eb7-443f-886f-e67ed4bf5312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09db4877-b4d7-4133-8a99-96a590ab2c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c780d96-720f-44e0-bdcb-2f3d9c2850e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73d7a2c-7443-46ba-b11c-c9289b9bcdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cad464-c0fd-4f06-9df1-a6c30ae89646",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc91bd8f-2075-4642-9132-7d2114b3c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51380f43-701c-4b43-be45-a0003fce21bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c20c0f-950b-4fe2-b0c4-07228bcc21f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4d6a6d-c81d-4ff1-883f-992d61f3c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecccdbc-2755-4738-8c5a-e4c1eb1a0120",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4595662-b963-4591-894a-86497d0c685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51671702-a93f-4471-889c-8f86b4d6dc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619327c0-9577-438f-a5ad-6d5bfffbe53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8808f536-54f6-48b4-99de-e483daafae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff64d9-151a-4141-a5cb-72a3c4fbceaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49730987-1b8a-4f9f-b1e6-394656f4e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea13a0-2834-418a-a16a-7bb6e27438e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cdd1c4-69a9-4d51-8123-4024d63159c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0cc29a-37ed-435e-879c-a86a1761c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa7b1e7-45dc-45cc-b505-387163a45bb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1091f1b-8d9e-4734-bcfe-beeb674fc161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51542f4-f73c-49d7-955b-cee430c6dd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f398295-89e9-4627-a3a9-d4f7ff05b69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b29d5097-bfdc-455c-91c4-8dc160ca1e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d638341f-3904-45d8-9c07-14695a0b9adf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df410367-22f6-4580-9464-ac3534c69584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642e98a9-a6f5-478e-ab71-debac97862f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a116602-7747-4cc4-a3c9-2a918f1be5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6221e1-526e-49d4-bf09-3e780e4f56c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96169e21-fbd2-4fb9-a115-4eb12f80d7e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78255633-ab97-4743-bfcd-887526fdc5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4938242-8afb-4511-aab1-98e3fb3c1389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae62a31-a40c-48a8-8552-91b4290e8fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c9aab-144a-4d8c-8952-8e5c08f56a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a19903-ff5d-484a-b316-7b1216c5446f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a70fd9f-bf82-489a-bdc2-060fd1591dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf48280a-535a-4a00-9445-956869eba7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccefbfa-6c18-4d30-b777-bf0b347deebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09376fe2-0cb0-481e-b607-a1bf9881d441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c4e712-4809-424b-999d-9c188d27434f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030b272-ecbc-4790-b714-fb5974555f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9e6e27-51a7-4b01-a9b7-a51f393f61c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707d2de1-6952-41df-8397-9b2777d5a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7c8a65-312e-426b-bade-203efec41851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61af494f-4166-4175-ba9f-155a2344dbfe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa35e4c-5e3b-48eb-9d26-4c3c61c95e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f24778e-f9a1-4389-93b4-1b028b872e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e85c6a-b323-4a4d-be30-5c20a447b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe732291-b40a-445b-9d42-e05b8be083d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc9301-f62d-46a9-b6e4-34d97d3350f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe180d89-04ec-4d45-8fff-04fe3ef9f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e8e028-2e4f-45ee-90bb-4f5dfadf318a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3ca989-4216-4212-8b73-9d2209399c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81a1677-598d-49c5-9798-8a37e787b5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620cb129-5b3f-4c58-8ce0-fa04d5362e6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0484a-bdc8-426b-bc90-d420e906045d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55813b0-7ad4-443f-b0e3-87279e1d2ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedd24dd-9989-42ca-ac57-950e30c771e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecf0ce1-2053-47a8-9e6b-7cd7c2f40da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c52461-bfa0-46f8-baa5-5ec5dcd412ea",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ccb44-aa2e-4781-8e8f-aab49463a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d225b013-e336-4b90-a1b2-d40934cb2511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42a2629-3bfc-463a-a31d-8c204db4632b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c23d404-edc0-40e8-ad04-ced547ad06b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a454c6e-0631-404b-93fa-4873d5ea67c8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f75de85-db8f-431a-a652-ff2d3bb57afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e730c37-8553-422a-99ed-e0c565218eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a650ef5-ff10-4bff-a055-1a4a11fadf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44e29062-e7ad-4006-8b7e-ce12a03808d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d4da24-5ab0-4af8-8505-5992e2bdeb39",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014080d5-1d97-40c3-a87a-c55f39aedea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2836eabd-2217-4f9d-a373-21c5ecb547ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0609eaf-a9a8-42b8-9f7b-eee64b34ebb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd0df5b-48bd-4702-9b3f-245ea5b3d3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825ae5f0-feab-4559-bb46-c28bd47a86d3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dc05fb-a2b7-4c70-8870-c436f2c195cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cee794-8b0f-44e7-bbad-32ebd574c651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcab0104-d106-42c2-af54-33b0d4a6be46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ccf4f5-14f4-477d-8ed9-87241a0fb350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f5c282-868d-4bd0-9fab-f954a9cb5b2c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ffa859-d276-4b71-a2d9-357964618178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c76c46-3704-4672-a8bb-45c9fb8673b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe3886c-6c82-4d24-b6eb-5791ca22484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a91230-22e9-462f-8254-3da1874d7254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a5f280-7eef-494e-8cbd-4e714007b5b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc495fc-57d5-42bf-b48c-f1fe3161233d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c654aee6-6a5f-4095-a510-2606dd85c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a86ae-b5b9-4ca2-a383-7ce8069a86f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e44dd23-881e-4db9-be07-0d844eec2745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b86eb36-d8e0-471b-960f-a82a57a4c628",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9822109d-9724-4662-9f86-cc33e7dd53d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb17217c-eac8-435f-b96c-511d887ddf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea36e48-b849-4282-a533-8ebf70e8d389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcee308-ca34-4e58-921d-5a87da0bb1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a382246f-d701-44be-ad3c-cdf54d6eaa48",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712ca0db-f912-4067-b533-95c573bbee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c602817f-ba8f-4f98-91e4-02058e21ad6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da296f8-1969-4785-ad31-82d2da5a8bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5033e49-bb0a-4408-b2b3-db3b01927d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edae565d-ca45-48f6-9c04-84a4506f2e3f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d94bd35-6279-45df-9d84-fc260d0e1ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cce0e6-e7a1-41f9-935d-d10e77451e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15612f3-64fe-48f9-a8fd-17ca494f87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6775021-42d0-4f48-b2ed-0e3e27e9991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672a03cb-5a4e-4036-b4b5-a932553311c0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe3753-1502-4e58-a942-a8efde6084b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064ddf4d-3804-44c0-9736-ccbfc762cd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4793459-faad-4863-b1ac-fcac78673edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4acbd9-0214-43e4-8525-3e0dd2a918d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea686394-4e80-4b20-8e91-2d7fb62f2616",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965e2eb-9c9e-4eda-a89f-e775efe2fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c980aa-c979-4e60-b72c-5d0dc8e112b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abac5d3a-fd1a-4620-bd37-bdebc1c87fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6819cc6a-91a2-4dea-aad9-dc632a1ec7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a413a71-56a1-472b-a976-c682ca2d83f4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58afc5a1-61fd-49bf-b726-c12b91bdc8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8862d5-f8d7-4307-8447-533f7c243671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a4daef-e139-4501-a118-51ee856984da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcfb52e-d4e0-4c53-8820-32decbd3de61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae6c668-0b94-469e-bb69-8541ab696db4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6178be-76a2-46e4-b410-0d92c8725c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3b2f4b-8f2d-4c3c-bf67-4648bf4ee7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d7587-58c0-4e17-b046-616e14a5c78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca32163-9dc3-40cb-8bc6-33efef5fe97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd39016-190b-4084-9def-1eee0775fe7f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e77f8c-92a2-42d1-9578-fb37c43c0f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e7771d-7087-4a97-81e6-492913e028a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5135e-76a6-4d7d-8a0d-ba23705cd9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9e8d2-7cd2-421b-b45c-7dcdf216e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730064d9-46cc-4b70-9b83-afb98a9a7a17",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b71469c-21e6-4b42-8fe0-6573d698fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8475e55-af8f-4c2a-98f4-56d9ee7655ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da51a59-ae6f-4139-8008-72150c16bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13a65f6d-d57e-4c61-b9c7-e49e8976880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d5ccc-9bdd-4dbc-a1e2-0f4651aff85a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b43049b-758e-48b1-b341-2896c47fa4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa344ae-6711-478f-b6c0-851d5570fbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f835110-e029-49a6-97c9-bc75572e891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7122bb1b-5f82-4170-8f9b-e8aaa187d8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf2f62-10ab-4fad-9b99-70edcba1e8a3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be92fff-7189-46fc-9207-a0eb96ea27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749cd148-8865-4af1-a9ce-b7ae2de543aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d942a-8fe5-4248-9a84-2bee90f91f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c36117d-f0f9-424c-a581-e154d333e6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52c50a9-9ce4-4764-8ba0-448fafcf2ba2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2774f44-bd5e-4997-9249-83b305dde66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fe200f-ab00-4a2d-94f4-e4cca828d31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4756ed1b-a506-4726-a6f2-af0c0b61f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3dc5928-b8ec-4200-b3d0-915fb503c6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a38b9-438a-4230-ab2d-cc21346bb2a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703f11ac-e093-4125-9e27-187bf21c442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70202b4-641c-443b-8091-7a8351492f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62aa195-94c1-425c-a075-50fffc48fa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded972f7-8ab3-4f92-af53-cd48ae145e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844dff84-25b8-41e2-b989-afa58b18379a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaaea2c-517a-4f9a-9bf2-f47ce8e8716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9072fb81-f686-45b5-b9ca-9b7f519da41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b28fe5-97d6-4bd4-99e5-3d47b78eb7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7206e9-7e43-48b7-865e-db774a1c753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab96e34a-5f71-4522-b295-47b87f5f3065",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603ac738-7544-4553-931c-d00e757c9631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272138aa-c143-400c-9925-2628f2601773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ae76be-1674-404b-8643-6c33a09fc060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0bdbae-2219-41d0-9435-38dbb618de88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188ae2d8-9be9-4660-b0ec-c8d1165de58a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fda67cd-2657-40bc-953e-7e808d77db8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38814ca4-53eb-44d0-a4d5-eee3c3a3fd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd109a4-289a-49b6-a3a5-38c22d3b7e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "653fe948-ce24-44f4-8175-abc93d5ecf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5c2d37-7f10-4093-88ca-6733f7e1827b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a23e3f-8b38-4e14-ab2d-a3006deca211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdfd196-9a63-41c5-84d6-b464277d944f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80ed55e-c444-4654-8151-a8f823a26da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fbcec3-52d9-4459-beaa-3b418570c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683ade37-1b9f-4ae7-9886-94f1abd7d3e0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d06334-9800-4b85-a3e0-bb5ca55d7c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275c24cb-7b53-410e-9ee6-7f5e9df4b24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cee8118-5797-4edc-8eac-ed00d3965d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26643b29-3fe5-4871-adc2-67cc9d26a075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcf864e-28bb-4752-8ed5-646defbabb33",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767bba1-ad4f-4bdb-91f1-d91e53dad11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf01e94f-2c91-4d7b-84b5-87e13f3ecae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74dd15c-16ec-4261-b1fb-8aaf3095bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6020b561-65f3-4292-94d6-ea0abee38f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cac48c3-548b-4ac4-b098-2690fcc8ee05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18e8b4f-d73a-42b3-801a-1b23acc618c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb7ca69-a069-473a-a18b-5e71fe52aecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba2441b-a603-4cca-9368-12734e107375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d5c052-81d6-48b0-9690-5b352d387ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146bcdb6-708c-4cb7-b5f6-e2225cf6968c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fa86b4-2954-44d7-b75f-b0230d6046db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d838c0b9-544c-42ac-ae7d-18eebd529b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ce9258-8042-49fc-baa5-60b40cba1a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d560114-4d3e-42b3-a8d5-184d697b0503"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e11d930-2159-4578-8ebe-b9d91a86e7e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "580a9cec-4ee8-42a6-94d2-46bd111fdbd8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0acba1-e81d-4def-88dc-b74e21cd742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3208b3d-58d6-4f7c-ad33-9ff3813c0aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4605445b-5c31-4ccf-9cbf-980cf04b0310",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "299dab3c-fda1-4002-b3a4-dc84244b380a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "368bba9e-63e4-420b-ba9f-bda1135c5224",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22ecf5c5-7738-4252-9289-a70000aa79b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fb6f06e-f4dd-4cb1-9c94-bbb4f245f494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50e9d0eb-1269-46a1-be08-b446ed01aaef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e97aa76a-1a33-42e0-9eca-95a210838e26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71f0750a-35a1-4c7a-a1d0-ab3b4a71c7f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03ce3841-9072-4c53-a695-da4d74a056e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdef193f-db49-485e-ac22-c01c60423cfd"
                }
              }
            ]
          },
          {
            "id": "058cf187-e223-4ce2-b1be-679d63abae24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f93685e7-5775-4f65-8579-803a60f34af8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61480411-a4c0-4618-a648-008c12d3faf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34cf7414-0b90-4e10-ad7e-46049a07a66d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ff49add-443f-4a87-a632-068d52e4ac31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "831d232a-a634-4b6a-8d0c-a830587a13bc"
                    }
                  }
                ]
              },
              {
                "id": "336fb350-5279-4c6a-a379-ed69137744b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "736630e9-d386-44b4-a657-f54f1e3fd044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0f7375d-4702-4830-b6d5-e7d3bccff958"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c90b340a-4de5-4742-abb1-9b39d10953fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "579f23dd-ed3c-4803-9d1e-67bf22921e4c"
                    }
                  }
                ]
              },
              {
                "id": "dcd4f522-ab86-421a-a6fd-81c465127ca4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "102702e5-dde0-4fef-8d74-1952ebe755e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c18163b6-7fb1-4b8f-893d-a52e1ebde38c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5c374a6-7f16-412e-918a-1b379c7de5ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a68b93a-f3e0-42b8-abb8-07544916f444"
                    }
                  }
                ]
              },
              {
                "id": "e7d5334f-aba4-48a2-9484-8714407d8519",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63cfe9b8-a8a3-4aeb-8010-e70d88304328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7180b560-ce36-47c1-a066-49985eec0ebc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f15699-c235-4d30-8383-4cc56148e5f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee5bafba-6759-482c-b1f2-1701ab83f2bb"
                    }
                  }
                ]
              },
              {
                "id": "f89821fe-73cc-4902-9ed0-c645f9e6aa64",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47d08184-18a1-4e04-b810-ea039037bc19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "914e8df0-1fb4-4a61-a74e-b302ac40f7df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "730aae31-94a2-4253-9456-2ed2df60944c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50cc2a6a-c7e6-4e43-a599-d094b2c25af0"
                    }
                  }
                ]
              },
              {
                "id": "1e026a97-c290-4d4f-8e71-0978a20ce455",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8a53b5f-2381-4c60-827e-9031bad0808f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccf2687b-9d3d-4df7-97e2-91b85f0f8a09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba64e22-880c-482a-9a9d-da7c7ca8c6d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3658add-9858-4bd5-a753-49fe7247a91d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac860d9b-e225-45d7-bcbc-b11f64803f47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7034d29a-7421-4b02-98c1-dd177f59209c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d2829e5-5d08-4390-857c-a45e198d451d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63189e59-da6c-41a5-b875-2f15748da509"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69d39a80-ea81-4f07-bc02-70cc76196921",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fc3bd0b0-493c-474f-bf29-a115be1d823d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddd99c6e-0a62-40f3-ba4d-ed631439dc51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc73e805-f8e0-4c70-92e5-6ebe325b8ae0"
            }
          }
        ]
      },
      {
        "id": "923b77dc-a1a5-4361-bc54-511e410a23fd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "46ba0b56-9ea6-4bdd-9d4f-1215666864f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "544eaab2-f7a0-4a26-8926-f645ab169bb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb8346dc-efc7-4088-adb5-6e37621b4211",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2828c43f-907e-4863-852c-2cee7f786e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93ee437-47c7-45ef-9ee7-156837385246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd4756-5e03-40c8-bcf7-01b27d7d615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "889624b5-bb16-401b-a63d-9bf5c91ae2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8a171d-aa84-4a26-a276-a44200768d51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eef682-5944-4869-8e73-f9db63a34edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c236a9e0-96c0-4899-8c06-00a77eaed632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2095e-7494-4d8d-b449-0ec1135bc7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "037e5a19-d899-4301-a955-bb2ab64d59c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c23001-4d65-402d-820c-8d84eb0a8cfc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed505c5-ada9-4ab5-a5e9-9dbc7874e307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dce87b4-1930-4e5e-83a8-a37762b92222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7e395-d85b-4156-8f23-944a68a2a014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7880a9-dbc4-4f12-a053-f3e38c9422d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0149f8b7-43f5-4c8f-a730-e155fc081975",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe4fecf-0c28-47b9-9da5-6f5df1cc40c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ce1f74-a81c-441f-9ff9-1aa305e9b93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb2874e-c53e-4d59-b8e0-bee76a9ae289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71bddedb-e0e5-4392-b641-35da012b00f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a6e26a-3fb2-4c7b-8c73-031a67967f75",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ad2111-f43a-4fa2-ad99-b82c13cb2445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e614ff4-5d36-4897-b370-5ba9b75945bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286a2323-5e47-42f0-9fcd-9992e647849c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ad1f13-a16a-4692-b0a8-c728bbf03847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0846835c-ccc7-4799-8df0-5b18293a4549",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5713a77-db12-4fe1-b7ab-a0dbdd37cd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895f440d-9a31-4aee-a5a6-c5ea43cf81e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f61f6a-06ca-4ba4-b0de-30e87f4118eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6bc2f-eb0b-40d3-bf3e-7e0d2dc3eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce79a71a-71dc-49e5-890d-3fb9d5fdaa20",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dadf1a7-4805-488f-a116-4cd5f0184a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b24b303-9ff1-4af8-9e79-668d551bea89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafb4463-c7de-4f85-96fb-ae94f83b6107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe44b30-60bb-44b8-bb55-06dc68739726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e69310-e167-4024-b0ce-4d7e490750fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d193c76-7bf8-4d3d-aaa4-b43ffbed28d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e22d20-616b-490d-8c9e-275d24381e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e0a261-ff61-482f-9dfb-fd97b4ac8d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09567ab-0abd-41fe-9326-7b40671001ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62b8186-30be-4b84-97b6-d07040baf00e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c522a1e4-4876-4c41-8700-d60222d3866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a021aaa-a956-4a91-bece-677ed838712e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dce289-0d7c-4434-8e48-72534f190151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e66ffa-c01f-4bed-92da-78815cf5fc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70de528-13e6-4da1-bd9d-423369fbadac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4add0fb-4ef8-4f11-95b1-c88715c7461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33aa6fa1-7411-4896-a284-b51061f33987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c0e39a-599a-4ccf-a006-68a3fadb26cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75816b2a-b95b-40ba-bf7e-bf591864b263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d582833-34e7-422f-8eb8-a782348c40ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994ea35f-4cc2-4d8c-baa0-1bc832395522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2efadc-ba06-458c-b8a8-cea7459f0362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd7aeb-2c95-417b-ad8c-8f6ee49f63ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed259d3c-d785-41bd-9b03-605df8a999dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4529247e-c523-4a47-9f34-51cafcd0f5e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ed9c88-6b25-4647-9a36-c9ec999d65b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a009679-f62f-4938-a021-237106488ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2db59c-1851-49f1-90d3-ebbaaa73a295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d042c42f-59be-42b9-a691-3aad9f46333f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc4965-aa07-449b-aab1-f87db8e50e80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38b3eea-54dd-4223-8fdf-364f4e02c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032ebb4f-2e91-4404-b992-63e33b8918b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0e7ad2-b6f2-47ef-bacc-ccb706106f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa69af04-e782-4dfd-8799-4ba87d5fde35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce2f7d-9070-44dc-b022-71bef7d30477",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86655a38-75c8-4039-88b5-0425f15d8c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1bdcfa-2fa4-47bf-9848-46e29b618ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55569d0f-b850-45c4-8b9f-d0f815a5ebf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8202375-0327-4303-b7f7-7e765b71786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047bb7d1-1976-448c-944b-eda4e7f5ac8f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8931c5-a928-40ce-842a-4a821cba865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df2bfb7-1aa6-4f3e-bb1b-7ccfcc3202ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c766a-3bc2-4c3e-9748-6231503ec46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2e9316-91c2-4f27-9218-d8fb5fcabd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69a85f9-4c11-4d9d-a283-16e07b3492f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49766d7a-9dc4-49cc-8aef-249b48d4c66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b44b643-991c-4f4b-8009-2bc1554a88b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03318e72-8e17-44f6-8c74-80edb0337ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5098a9be-1317-40f3-82b3-3e0c699cdd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b51f141-1b20-4aa1-a755-df80be5ec2c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a31bcdb-3bac-477e-9123-63cb43a9da75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0783d359-f184-4fe6-a47c-86586bb3cfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dedd42-4632-4a3a-8959-8a5971bf26bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c128467-ce9a-4841-9fb9-ccbdd16c973c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f7278-1835-42c1-ba38-46f941ad299a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189d881e-29f5-4fa9-aadd-60b3df2e6dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21420591-1f6d-4ac3-a195-52162d65b27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09fd3dd-04ae-4467-9d52-141d45eb33cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ad8064-d388-4734-8e05-815c2a925758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b290e6e-0490-40bb-8451-0cd6fffe13f0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32f218-76f6-4f1c-a1e2-5e1e1f245d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afb95ca-23e6-4fdc-980f-29a7ffe780fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1ca7de-b095-43ff-8dd0-17b73abf75f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7328c364-386f-493c-9730-60534a56dda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd533c05-25a2-4576-b6d2-4a7c081b6135",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf1336-4c0a-4bb8-8deb-20a23ded946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78c0d89-d43e-4c1e-9f47-006c9f8561fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e638c7-aad3-4a78-8fdb-a091148f3044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7fc040-cf61-45e4-b56a-6e3d33675cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e355b5-335c-4980-ba04-6eeda2e6f5e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e3c68c-0486-4f60-9f09-873682ea5738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2166b3e-3bf6-48b6-9859-260f49a5c264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ffea0e-1811-43ad-991a-3a6e6dcb3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34782adf-b705-4b59-a6fc-bd4a6244df1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb67a72b-f819-49e8-982a-f75bcce39f34",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c336d8f-2794-4a5e-a441-3c4f168caa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846b5208-16ba-4f35-b279-bb56d11e18b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce08574-aa3b-4741-8f12-9eba02237c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ca1dab-bc9a-431c-96e9-8db778c8a159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f809539b-957d-4192-b674-cc77af3f079e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0028e00d-bfb5-4c9f-a9d7-abf5e809f061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421cb893-e471-4457-8783-12f6fe67a79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcef41c4-454c-46b8-a28c-504dae047816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed242a7c-767b-40db-8af1-fe861c02d7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f69e556-83e2-4aa8-8197-c0033e569a80",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c63c456-17e1-478f-88cb-4a376be28e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad02e665-5e97-4ae2-a148-e92196b8ba3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6114330a-87e4-4c51-8054-026dd07095ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ffdd05-d0de-4107-b139-ad77ccff5ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1972959-238b-4a6e-9f63-5a20d86ab2d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f958fa0-3892-492d-8f9f-3c92e4116db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beda1dd3-26d7-4b96-a592-4194737a4f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf44f44-72a3-44b2-abc1-f026e98a5845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab1b22-dd2e-4e93-9335-72daaa7d257b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e2db96-e703-4796-80a0-857ace77e4ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf0d7c4-4e0b-4585-93ba-5991b8cc0ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecdfc53-b710-46e6-a957-03851299e5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4f0a4-bb5a-465f-99bb-5323bb1884c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4849716-4d67-4537-876b-45be2c7805dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f1b0b6-0131-428d-a2a5-d19a27deb143",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9dc1fe-4781-451c-883e-6eb27a03c857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b3ac61-b30d-45cc-8ed5-b53a2f4f2c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d95e63-274f-43c9-ade0-f743f5324682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9bf033-d971-4709-b4f3-13d010cdfec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3053cc86-99da-4693-9f5f-b8c22783975e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554d170-ba74-469b-a0f1-ee2ba6591228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7a976a-ce5d-4507-acb0-3be5aa9c0903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f407fb9-de28-4571-a0eb-36c032809b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8532636-a9af-4c83-a6ea-3fe91efc00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d24318-b6c6-4635-bde9-c8d64d685bf0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fb2e39-e7b7-4a39-ac8e-cb0167cbaf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5efd74-174c-49b5-b5cd-f53cf88af266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db537565-5f4f-4923-bab0-5dea7f9d8974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f2c4ae-e195-4eb7-ab74-2385e8db3b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576381ff-898b-4845-ac8c-f8b5646a4dea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd04ba-4d70-4dec-8052-d9f928d186af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49891a66-b2af-4438-8806-9714ffce3bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df3a29-6c35-40dd-a604-0f5d0773128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac98c96-56f9-4890-8915-f8ff80694dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77d0ce5-8ec9-4ae9-a702-fb864b23c735",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297c8462-91f4-4524-8d4e-edb876c97d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4f3b79-9d5c-4f47-8c8a-c51a9223803e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23735348-44ec-43ea-8e5f-e0c464cc5ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e09f5f3-6ea4-4107-9e0a-342c90ce3bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a49a3a9-ebb5-4a7d-83bb-5d6d8a00b876",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec36b6-fd23-47ee-a052-676386edf33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da264e9-e4fd-47cc-a510-1859b3bf744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117af6ed-9cb3-4627-a930-fe3eadae56a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38417b1c-eeb0-423c-aaf6-700304256eb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7f7fd30-1159-4eea-9280-293b854405be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80f76027-5681-4891-abbc-a87ac1ac8b6e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1b29b0-fc5e-4fe5-8616-50832ccd0dce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e01fc0b-0caa-4ac5-8da7-cd796c8c19c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823dd90f-1d4b-4811-9172-d672253377e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64211606-0368-4cea-b6c2-80957e747ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "396200e2-237a-482d-a38f-2b6cfc682a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbe12267-09a4-4b65-9b0f-3b542cdbb69b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfcab15e-37f3-49d5-aded-97d6a3d51547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ebd8c7-1d55-4fa8-9591-5b7940c63c9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed79f24e-5b0b-44d4-a347-78099b57bc26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f99d7b0-17c1-4835-ad7f-a6dff00c5a6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b558abc9-2395-4c89-ad78-cae2a3b88786",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f11d7f02-eb1c-4dd5-bb15-61fd4caedf27"
            }
          }
        ]
      },
      {
        "id": "a1354ac2-6a3d-4871-a5bd-07eb896d92b4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9724fbb6-356e-4292-adfd-66ffd1f54e8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d654144e-3b39-45fb-abcb-36c267b287a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad115df5-da16-48df-91a9-348b792e2092",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8a32c7-af6f-4755-b327-891c8917d212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343335a5-a3fb-41e3-96c6-88b16910783d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100a5f9a-38bc-4d4c-a304-1e99472c0579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e17b8e-2235-46ad-b5fb-6d2ca03e9687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1663479-1ccc-4cf4-8b75-1e2a19923d49",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675c3c4c-1673-4002-923b-33b134603bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f13748-0305-424b-bcae-8053fdaae6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e23baf-d9fb-4ff0-a614-97876dc5c01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4861ae11-1ebd-4fff-82e7-505c6429314b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f11037-ed05-4a9e-8063-2bdc44cc8f6e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097a15e-f4c6-4f6b-83de-edc6917dbe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55133879-b9b2-4375-8a5f-180d9efb5628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2765c360-8267-4206-8049-38ece5f5aa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aabfa8c-287f-4ac3-be50-8f932a8807a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c5f3a-a458-49c9-a27b-af7f183e4941",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98c7a7f-c3a0-4ff0-874a-06c673170dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eb8810-c9f0-4fde-b0c0-3a0b37bc212b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b6502a-2d3b-460b-8141-39f4af06fb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da59a410-b6c3-451a-944e-276e6dd086b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52b5656-f74b-491b-89eb-923a424a500f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690434ed-d701-47cb-a740-c39cb8b8fb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ba68a7-ca39-49e4-a333-44411edbf571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c450c1b-f30f-4674-8c26-d66f2a61e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e3cc18-ccf0-442a-9814-6086d81c1288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22540b3-e945-431d-8090-6c828c483a96",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dd0579-f75f-4e4e-8399-d140766338cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4117e2e-3901-461e-8876-48dbe8adf2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f76b36-23a6-40be-9b24-e297f4f1193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29499e56-51e1-4bfb-adeb-58b5f46b3976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1042ad-6093-465d-9d2e-fe9a6ca91b9c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01da3032-aa4a-4200-b629-d8cf13e0f793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5c98d8-b143-469d-a630-6eb1cc3398c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6192c00-aeaf-48b5-97da-5688df4220e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa2b45a-d13a-4cb6-8762-3fe91423ab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c9f617-a21b-4c12-be2c-862b843436f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2409ac7d-70ab-406d-89f2-71710b200b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f08f6-a168-4cd8-ad2a-50b01a0721ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d29c93-0a66-465c-a81c-e84422fad1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "163e2589-b98c-4ac4-95c5-ac3ade9df88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6601dda3-16ba-472a-9fa5-f8f4858df7cd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f14a5a3-dfb7-4d67-a48c-b5b0080cdadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4be851-84bf-4f24-9c21-91b2e7e99a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78063323-77ad-4c9d-8302-285c4fdfe6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ee910c-601d-4f20-9bea-ae3c1a2f26f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6241b6-cb46-48e0-8c75-cfd360255f00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6f3149-c563-4e90-a2f2-bcd5aa6eb452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdee24f-bf2e-4d55-a507-a604b198fe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e734f7d1-d475-43a5-97f4-eabeec571875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84ace05-9821-4ec1-8d35-c42e469efd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a565b4-bfcf-4e1f-8c6d-73bcd0c72c01",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefbf26a-6e68-4bdb-9250-6df060743100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f0f5a5-cc6d-40e2-b8db-d6cbcc96fd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ea2df4-f24b-4c9c-a790-3ea8b20fb75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5ff7e8-dc04-40fc-a42e-874ca58b4ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d17339-7618-4d2e-a2bf-ade81f5f522e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2607163-bf09-4809-bd8e-05a8fcae1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b3c5a9-3a6d-4386-a7da-90c906670a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacebfb-1082-4c1b-8e6e-c6c9d181739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "410317b0-bcbe-4d52-a35b-1fe0fb086043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd13be8-e9c2-4297-b9ca-67db89acde90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0b4c73-b75a-4f50-a726-053f1eea4b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19081f34-1df3-4b81-8a10-3af7d937c390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b716f31-da23-444e-b060-b2d79dcc4f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a34bb4b4-575f-41fa-ad20-eb07da937cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff6b1a4-fa2e-4ed7-8236-4be4bfccc7af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0d95c8-bdeb-4923-9f4b-f15eabba4bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d68e386-0470-44ae-b1a9-c6175ed7425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49c1842-94e1-4991-937d-f7356e0859e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5402a546-35b1-40f4-b5fc-28375d92a2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac218c6-3848-4b95-82b3-8dc3cc792afb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b537f42-c12d-4c9c-b1a7-a00bfc487264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c291b7b5-c296-4b63-9957-bbaf6ed4b652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccac0eb-0778-4fb7-b6ae-77eab23344fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de446d1-69c3-4af4-8ef5-8c9e41b87c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082d0b7e-ec1a-47a7-b50f-550ae7859b34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c42e889-7b99-4a66-b505-07c1e7488746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895b100e-1d33-4770-9843-d4394c5c7a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4759b24-20a4-4005-a909-23ca0593c7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fccc67-e039-4934-bcd5-6f22aa739ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a9628b-f2b2-4d43-a257-4c42c9db6e55",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b908fe-d68f-4990-baae-3cc45774d40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d14335-233c-4ab9-80ce-b1dac62a78ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cf4d49-cdfd-4929-a4df-a3acadcf1c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "378e222c-087f-46d0-bcc0-0fc297194853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f70f4-9b83-48b9-b2b2-2a1a78d4c85f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe6fbf3-1827-41bc-8d63-8d952b8323dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87226d7c-b615-447c-9620-987c49c9c06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7457dc-a5f7-4114-8923-c6492ac657e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad290fd-2b7f-495b-a02c-90cbff6c61d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d044591-eeaf-4612-bbaf-31cab048c0c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dc6f7c-1d6c-419f-bb19-e25dca6e623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6caab2ba-77f4-4349-8192-ff18a7041eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dad3002-317b-4ab9-a39a-afb839d50233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b8ef15-6ef3-436d-92d5-f2a6b0c5ee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb753e5-d50c-4d88-a4f8-27dd3ed5d46f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485d5b24-b3c9-4a17-9a40-6d55fe60ca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c7bd2-d8e1-4e8d-9fde-10ae6aff0901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68768161-46f3-4d23-b897-59ffdea971bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c53305d-8944-4ebd-be91-4ac60c885a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79770153-6c83-48c4-87ed-6be34b0e16ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4dabec-4c5c-499e-9901-e481307a7448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a449ad-87f0-4eb0-9cb1-cf3bcc232d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b6ad2a-d220-48ff-94cd-68e399a00a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1dd720-b449-45a5-8b0a-e87864ecf0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084cdeb7-a8f5-4196-b2c5-f46450fec084",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8fb151-2102-4f50-a27b-fe9347887bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee84c95-9f20-4bde-bc87-b0fd3a7223cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96595a3a-f41a-4c51-b163-b727ca93261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd58b7-6140-43a7-a524-0232422a0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b749bb-637e-4cad-8ab5-7d347e1fb7c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e507800c-8273-482b-931c-28f0138be2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128da980-7690-4c88-a6d8-ec2b2c1009e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e0609-2771-4904-b485-eccee6d5a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdeb47a-0e69-4507-8ac7-5b4cc125deba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0341394-2665-492c-aa21-19f8853a8776",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20173d9-f1fe-4ae6-8dae-5bcec5746773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32866249-3eb6-4603-871c-4b36dad5c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80481a0c-0840-48ff-ac9a-718c600f1b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e3da3b-879c-4165-acee-9f0894e28443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7589638d-2e8a-4767-9e67-1ef2946fbd59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabfeeaf-9817-4105-b365-ac1124df27b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c250de4-68c3-40c1-beb7-e02550953d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00430a2-48c9-4053-bd98-744e0eb89573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81689d0b-1abe-4de6-9fd4-8f99e955ba2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39355b74-f689-4755-9051-410d4be1bccf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795f1f0c-b688-40e4-bb67-862176361193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeaecfb-b8b1-45e5-a53e-66e4597767cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38427f85-36db-4787-b6fd-2f32108e0682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba452673-c6af-460d-837b-03e2ed588aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8561ae-8146-4916-988d-9055e2e52ba8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceca186-37c7-4236-872a-39e231144ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7f1df2-79e7-4ad3-879e-cddb8b321b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2442e6-462a-4442-bb9b-78bf4f0dc75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde4808d-0211-4d20-abc3-b9e785fe46fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db188eb-11f2-46b6-871c-f6c26d9e01c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d528d9-8c7d-4290-aeae-3d0689a14f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf3949-c107-4d54-af3d-184d66d7b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb73383-4952-410f-af79-f6905a39d357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c72923-f424-41eb-afc2-a40d46003f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c7b6b8-6b17-4577-9948-5909ffe3dd60",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298bfc9a-9b75-427c-83b5-61d8800c784b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355d6314-cf55-45e6-9a80-8186a7458b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c57b3d-5458-4f49-9e02-2a40248a788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8a8ba9-9357-4e3f-957d-7e42235eb136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed65cdc-1a44-48b9-b64a-3f39f89a39a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577842fa-b4f5-40d5-8304-090426961811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c056657-d62b-4db0-bec5-780c8be79a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970de17a-a7b1-4e9c-b995-1cdd0ecf2f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2848c87-110a-4aab-a81c-77d0c4ba2d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7ea17e-7967-4ce3-a5ae-70a4491dcf58",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65337a88-7583-4f59-9434-e411b2c2e520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e56ae14-e5e5-4bbb-a050-ceccb451a62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6422cfa3-01bb-480e-af86-88b63de02fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58086e7f-0762-4353-9a2c-bbbc7643aa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361b4cf9-960c-4b84-9ee8-44cf33830d78",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b344a6a9-1076-493a-8f6f-de23b2973bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa25351-8a5d-45c5-a4c3-7a665533a8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f8bb63-bfc6-4f8b-80a6-ab27305c7ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50670da5-bcf5-4e6b-ac95-b7fb749a51b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c11f7f-d6e1-4706-ac71-e85418431853",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b735d9e-643d-4126-8973-2c1cf0aa9800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebad521-2a69-4521-a2b8-52b0615bf854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ad4e1b-479f-4bfc-aad9-e1f86cbd90b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56071493-0662-4f85-a546-8fb442f9c32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7851e628-bd81-4fbe-9cc6-a4d98d4cb832",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd4ebd-99fb-4f38-96ff-c95c768b4ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d88fcba-6238-41e3-9536-a7fd02a6d712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc6d59b-cfe5-4dc9-ad1a-10688f0bb1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5424ab1c-a56d-4dd8-881a-2fdab0f60062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064d75f0-fe58-49af-baf5-2b2b0a2f9c58",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87381a7e-4206-43d1-a8ad-94f6e096dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cae250e-2d19-4ee0-9266-0eae644cfb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368166a6-4169-42c4-a9ca-f52dc3aad66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a787f1e2-a6bd-433d-b1b1-4fb81badb4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fd6edd-3ad3-468e-bb66-c36b565a077e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d24781-102a-4a7a-b941-468f46f16604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed45a13-6d47-4eed-8890-40269a71b490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b339373-fe00-456e-9eb1-8fae4ace2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140f6a73-5448-454a-aa14-ed54c1c1896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a439d-f842-4994-9fbf-e3b2a414a43d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c52027-f52d-4bdf-8e33-4ef9a894de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5957d8-7fc3-4585-b2c7-7e8349c814b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeff6c6-ea53-4b72-b8d4-753f65514c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "965ee275-c0f9-4387-a334-bbc1ddd402e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76ff4d02-0c25-44f1-a309-b186b136d5fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f1fb5e9-1a5a-4c7c-8c77-4f1ea0497d23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6112cc31-2950-41a2-b706-6158c20d7156",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6e108191-e231-4e4e-a597-65dfbbb81792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5a7843-a286-45b7-8109-4f0b5c135b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b255e48-b890-48f9-a9e7-191edeb6e5a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03e652af-996d-47fa-9d32-dab4504d8964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07da3654-6743-4d3f-b6dd-c46418516a63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f00ef501-b436-47aa-a4ea-ee5f9edecf7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38282b9a-dca4-4408-a144-0036b95770dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3127765e-c1d8-4691-a3a0-01d4aeacd476",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df45df3e-442f-42bb-a10c-ff6ded08085a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c1c36a1-b338-4bbf-bc08-6ad41d915e3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d3c69af-0ba9-4d6a-96c1-1c95c5398507"
            }
          }
        ]
      },
      {
        "id": "43c2671d-c6e1-41e6-a3c2-d9f984f79005",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fbc04ab2-f788-4547-a4b7-b00e8144c168",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17cafda5-4add-4e7b-95d8-f3ea7ceda9bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80a7d4af-991b-4ff1-b86d-f98e0f9f4441",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b92658-55e6-454e-a198-cb2aee71408e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519165ea-e8b0-4985-b367-4c9c13bfb8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6c12d1-bda3-40ad-97a9-83bad4d3aab9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb843c27-05a9-401e-9755-80332e17900d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f13ffd-7258-44bf-9ee8-277e4a6be1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd899fc3-0d74-44cf-b63a-b1fa2c72a2da",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccdc175-f374-4ced-909d-ad8767b9af37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e14d8f-14e7-4580-9512-fe1618440594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27015469-2b74-45d4-a535-9d1cbb79d5a2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc726b38-f7f6-4faf-8ff7-e29ef39e8360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10aa5d1-b82f-458f-b3c7-57e1dac0a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628afc22-4e5a-4c8d-b983-abf1171c797d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cd6c27-9a05-43e3-9ad3-e268104e8692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602603c2-f071-4702-83ae-2b6599fe65c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbee072-7003-4313-8f19-e7ac1456ad0a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abafcf-ddbe-4b57-b52c-66b52451463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa40ffc3-a53b-43d1-9e3f-f1cda4a9a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d472f0b-d80b-4e9e-a2c0-c0202d898002",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb95be91-09ff-4e2c-8262-6ccf97ca689b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a8913f-6e26-4f82-a5b7-82f155ef5df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5c362c-ba75-4273-a762-a929d9173bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9b86a1-521a-4cd1-a4ee-94b949ae4c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b92901-d18b-4d54-9b79-a1d95e12c7bd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a338969-5c63-4f39-8eb3-c43b12c5ee0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c124e632-51ad-4ce1-bf2e-ba510bed8956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6967088-2772-453e-b71d-e0583c1ff24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879b3e20-c02c-4804-8cdc-6a7fb88f06a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343ea63a-717a-4ae3-88e2-40e3626c92ca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa327e2-cc70-46bf-b3e0-ef33f48e67e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7566ef4d-7c6f-4c1f-830e-42dbd055d56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3d7682-898c-44a7-b4df-120740263dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf601ad-d66a-46d5-8905-6dd83cb8672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baaa726-8efd-4885-ba60-e71e931f06b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69cd03e-c4d0-4774-8d4c-056643e54e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a9f5c9-b82e-490e-9204-63e8997f1288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d02ba-0565-455a-a548-7764b8630efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73436b7-362f-4d14-b38e-dd2ab0ad6d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f47d723-f3fc-4c16-aabf-f6375c2f047c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e7121c-2e5f-4157-8ec7-178224cf06ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4eff99e-1108-44f6-a52e-afea21478a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de859ce4-3342-42e9-ba32-edb1f93351bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846fa81e-deee-4c1b-baa1-9ea1c99e356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ebc342-5039-4e60-963d-4d3f71a5e618",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ab590-44cc-49d1-a8f7-d08db55416b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dd6329-9d33-487b-b8c8-68ebbb9d0493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc783c53-268d-4d4e-a1ff-8ed61ca1b7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50e7399-2499-4ffd-861b-946508aa160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a92e80-1e21-455a-8ef2-36e8cc440c3b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0394c26-71ff-47ec-b2f6-767c2d19f939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f971849-4342-43c2-aabc-22b252c0e81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8195a66e-c9a2-4bea-9202-95962bbc2bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d363270-8459-41d1-9297-9a81fda6d7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14255d-6df8-47c5-9891-c5e0cc1b6f15",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da6f00-65f3-4542-b2ba-1f7d460d051f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef955d64-6a77-40f6-9358-4e9c0053e30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec780678-153b-4ac9-ac51-a22f25c96fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3587cc0e-27bb-427a-af98-0d5e158cbeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163ad868-25c7-4252-8605-2dcdbd0d4bfc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73649218-c8a4-4ff3-a5fe-e745d4ebc0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f3d645-638d-4ba7-99da-78ad92251201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1d6210-5056-43e9-a082-aa8202d13466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51f30e2-c546-42d6-af73-3b437c39f355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9c9a84-c8db-43f3-aa10-e5799e42bcd6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ed7206-844d-43fc-92ba-7f0a65f222b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df82d3e9-ae3f-4aba-affa-e5c3e7a7423c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d503e35-a02c-44da-bcf6-c476892c6666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f168682-77b0-4472-80cb-d0d161974db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31d7bad-05fd-4d5e-ae97-1df486cc3df5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7984d2b-6bb7-4ea1-9d73-da7d391dce9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1502a1a3-41f2-4e79-857c-4b1988186348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e082fee9-9423-441e-94f6-a8f427d43689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6afce6-d31e-44e8-901d-bb514ea1777d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a8ebd5-59c8-4890-8b22-e7dcd4370e1c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24f9ba-43cf-4c29-b3b9-e037c0e661c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb827dff-7704-4a04-9c16-075a3c03115a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e8331-1e7e-4136-a289-722a929ff942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2015ce2c-6952-4100-976a-6a1fa109e10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6557ed9d-540a-442d-acfe-60ebd5a7b222",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f1ca4d-79a6-4f93-b0fb-5d45de0f78f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9213d3d-a86b-4232-a11b-ca1a086c9d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7b5def-811c-4076-9c13-6b4b3dfa9e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe52b32-235a-4fe1-a3f2-92166a4085de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae986e94-1a81-40bf-9f66-4a2e380c2e7c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a70592-bc12-48a9-a966-11805e9a9746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f78acc8-70f9-4b25-b83c-6ce207422fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa943dc9-8285-420f-8ae1-99e0eff6064c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96e3ecd-c5f1-4b78-9b48-62e330e4ae6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51f9f1b-a3de-4ac1-96a7-d19fb80a55ee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f81bc41-28b3-4d80-baf2-08307ad4a330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb81a8fe-6537-437c-b028-3c6369d8be37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e507f-5267-4372-841d-a881ed3fc6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592546be-923b-4363-b9f1-4ff439e9320b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524d4b7c-403f-43da-9973-d1e95163008e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd432943-ffa6-4647-85a4-15079f55b008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd4def-f61b-4bc0-8f96-49c29459f48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed435880-5d9a-47b7-9527-9613c554dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752adbd0-72b6-4b96-b47c-8e439339a195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d13549-6735-4b18-9696-b534eedd1db3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41119bef-79ad-4857-997a-4e0cb176f0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bbe2a9-81ca-4ad8-98d2-ec16bde3eb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055f6c95-6d35-4ac2-9eae-268808fe34c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b161ab-7e2e-4b3b-83a3-04544195d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89aa9a7-b467-44d7-b153-46cae9d33ff2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eecf2fe-9526-498b-aeda-235b22cdc813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07201cf-7436-42ce-b310-313944d524d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20ce4ad-7190-4684-be52-afc14978db59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9982095c-e7d4-49b7-938b-182b75fa69b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926a221-0dbb-4590-8704-2ecc80143d2e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f380ec5f-83d0-4762-9eb7-950505eb538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4655c762-7b35-4d5f-8da1-e22feed84e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a89d8a-1023-411d-8953-aaa1e5fc24e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0042a2-3571-4371-ae40-25a0b20b5256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0170535d-4ebf-4325-ae82-9371dd289043",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b205fc-9604-4f63-96a4-98bcf7e89316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43033044-3e96-47f9-a54b-d1d8bd25b6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8898133c-c128-4b3c-b32e-b1324c20a88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c060a78f-fbb2-4921-b643-ed60bdc00be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63bf525-bdba-44ba-a5da-dfa77ee39d92",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e32d27-292c-44e1-bb7a-3c42b185c2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33959c99-0873-4f5a-bb3b-90d0ced4feb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bf17cb-4218-4143-99ba-8a345a42c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb812e-7487-4770-aebb-d3da6cb40139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509ff4f0-7b0d-4294-9eeb-676707b481ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d8bca6-4567-4d68-8992-b3403521b534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c410ae-a3f7-45f3-88e9-fd40d0ff0c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cf8389-4e2d-46d9-a23e-a1e3fe7eef0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb691a43-0242-4e67-9245-9844eca30d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9783c426-498e-462c-8598-e297a212c93c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a408a888-d8b5-4ab9-a328-91105c6cdf99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1b35b9-82a4-40f9-b2c4-a7a6de5e985b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93efc8bf-4d5b-4ded-9f00-4d87d32181b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf24ffe4-a925-473c-9de3-35683e03a5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893cf5d6-ddb6-4677-af26-f1b7bc79c1ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696101ca-7259-4b55-a8c4-de44304ad9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754dafeb-538c-4ef5-a5d0-0df31daacb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca62473d-d0e9-4cef-aa24-4369bbc3ca8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feca7c03-517b-4005-b957-1544f82c5ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9820399b-c9b9-40bf-8d53-7966bc2ec09a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb3b9d9-da7c-4dbd-96a5-37fc95d7747e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ae982a-6f11-496b-9e45-325ebc96c5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc148db-e7db-42f8-a49f-12bc4d12b1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebb4eee-bd3b-4c6b-b905-1724ae077f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b917ae7-c753-4157-b055-e65dd5501841",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368bec9e-c14b-48f0-8c6e-073c35819d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c7f96b-01e4-4be2-ac44-b2902c7c1515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66234f9-9dfc-4b4c-949d-0042a89d299c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1586547b-42fe-4c63-806e-0be5d86b4565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5043506b-f3cc-49c0-8c9f-40ae986e340c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4238caef-bd07-4461-97e3-04c78c3be321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bae5d15-6f0f-4807-8432-78c50e842f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1121d95-ea1b-4d84-bf1b-ae67400cf57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18a2888-2282-4361-b65b-dd88a41bcf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5987b6a2-e5c0-4039-b1b5-749e95e3d526",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c07781-d993-4a54-bde4-dfbc07c98e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2db4fc-edc7-4a7b-b1e0-ac9f9c6cd8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d325d5f8-a011-4298-852d-1e63f51284a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c91445-ff3e-477a-99e3-f45017e352cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31243952-7d35-4f0d-b1af-0cc1fb56e397",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60693b2-2843-4c72-922b-e304b43b13a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca060f98-5505-4304-be00-aac812e57c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac98d16-8c2e-4141-87f7-555d8a4c5ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd71fc6f-263f-4d34-958d-b5907124a127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7379fec4-e5f8-461d-bc6b-f20ef3ed7e05",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b64f50-b986-48bd-a9a3-8fd1b25aecd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bac4d21-e45d-41b0-be3d-346e7cb39960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ea2c44-9fca-4b50-aa28-ed078c455806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed3b673-9956-444b-8bfc-b9c6acaa11c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316815e-20b8-4b9f-916b-9341de135780",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3e4449-12d1-4dff-ba1f-1015270d0bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936b08bd-ab76-4bc6-b544-27d5fd269458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a61d096-32b5-4cb8-95e1-046ca4e8aa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6043ea99-984a-48c7-990f-01f2463d9efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c1ceb7-4efe-4cfc-841e-6042302ec955",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e776e4a6-2929-48e0-8b82-e3c8e025e72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5325f127-ea12-40b6-bd07-a7d0b073e94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95be5594-5375-4077-a574-00382f9b919e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf20df14-9e4f-4a67-9a7b-26c6bb0704e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a814d0-0ce0-4642-954f-92840e85364c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fde1fe8-d588-41cb-b8bc-5e91d8118798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0c5470-a245-49d4-a4b7-b15c92847f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccec8656-f676-4740-b76c-95bda44e4ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e09709-6e92-4408-9523-5ac5a93b5b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7bed2f-2e15-41e5-82db-26440ea6fbde",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd5dd9-0546-4add-8c1a-f0b6d48dacfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969617f3-41e5-4a28-bfeb-d8364c88c355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c447ec-575a-4694-8dc7-a4b6499fbc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26d7fef-29a1-41a4-b49e-dbf96be98b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478c611b-e0c7-45cc-a998-ea5b1ac9c0ed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7db4a12-e22e-4f83-b7d2-b2a8a5323bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936df82c-d49d-4c48-8a30-95104fbe6c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c368e789-6862-4a3c-9cd7-769bc088d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f5980e-80bc-4637-a685-d7f89d545df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b189fd-628e-4ad3-8786-43d84f2c6e12",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709cb3e3-6150-4619-aa6e-457f811dcb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c364c84-df61-443a-a1a3-789505ac12bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8420cc-0ccb-4f30-8f05-9dfbe5e38217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e71e52-f54d-4874-a3c4-9a58c5eff417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc018970-64e6-42eb-8324-4c3c06a7ac10",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d7b96d-9762-4575-9776-e5f0da6f5299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa8f608-48cb-457a-b669-4186c83d9c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d30616-6297-4d51-b52a-b5f059e554ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef1ade6-7ed0-4713-9d3a-af80166548c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fb4fd4-c2ce-4fd0-aede-346000ab6023",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4ae107-0d46-4fcb-91fc-5b1db017e457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b48b33-d85e-4a98-bf57-7d1dc099ad01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166b4088-e6d8-42e0-a25f-3f62450373e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66338571-b4fb-476c-a507-83e7880e6665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983152cd-05e2-4a71-a124-00abda8b7bbe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491efd79-5be1-46da-a91e-05ce89c5acad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f28c316-0edb-4c94-b213-af753fd23ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ca1ea6-22f7-4f5e-9ff2-fba8b05047fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e7b299-e2bc-4c50-b138-f8608cfca667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07e95db-d6f4-4f20-a608-a9d2ea9cd6f8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842f3d95-f6ce-4c65-a3a2-d9713a7ad23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9c5d1f-71e3-4363-b28a-7b18c77197aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab872588-a5b2-43ed-81fd-c9350a43ff46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b224c0-c0b6-48ef-abfb-2f53b607ae02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e29d9f3-df3c-4bfb-b0f2-60917968e1c4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde9981a-e006-4dc7-8883-9266c72ebb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a01960-0a2a-45e4-b366-35d785fadfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d77baaf-8aa2-4732-b2e1-af0d0132995e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25e46aa-09a7-4a2b-9ded-107e84f23fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebfc0d1-6c8a-40cb-9400-f5f8dfc046c1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9da0685-06de-4cb3-8d2c-9c1bc56d0d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be9f842-2f14-4433-9ab0-a6f1ce819ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f1d38-ce1c-45df-9b6a-4e04c03cba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a369d3dc-e9b7-4c86-bdfe-c52616545b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad388101-500b-42eb-8fb2-01c08d4caddb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927acc4b-a58e-4509-b54a-a15a8421dffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be7ddfd-916b-45ce-b0c8-c8ebc18ef6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d1f810-c164-4802-afb9-1078d95378d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef4c649-94f9-444b-8a95-edecac81b197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d270fa72-6155-4862-95c8-6d7986226820",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc441dc9-e401-4eb0-b2b0-4b13bdd8cd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60363909-7a20-4dd6-a384-f36e744f8ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267bbd52-f56c-4477-affe-ac4e9c7146d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310e4161-2866-4ce7-9394-3cbeaf657908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc69fd1-98a1-4e53-99df-b5475596ad98",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71142db-3bcb-4436-a518-73cd675a9b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165d0c68-3f13-4125-aa1c-40fc92de4840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ba6265-5618-4ae4-ac63-b62982de245c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98863bb6-3af9-470f-a26e-6f285a3482e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df6d49-ebb1-4c4c-812e-2b151c142071",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4752974f-5d98-486d-8b57-58a6317b3732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4c9f08-71c4-4a48-baa3-7756de2f2fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bcffe1-815c-4e04-8229-61a6e94c9873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27806a2-ed28-415c-8386-c752092118f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67efc27-693a-4f5b-8387-1af546e0b881",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258efa66-b715-436f-9555-bc003d9c0232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec627c7c-efc9-44cc-89dd-481c26896714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1747441e-40df-4517-b1a2-c8501645059d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef0c499-8434-4ae3-b30d-f5d1c52865f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c226b-3358-427e-91df-24c7de6329cf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d311fa8d-7e92-4bfb-9ac1-8d944a6a6591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d871d5-347f-48f9-bea0-aa1375ab151d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc34a14-124d-4122-9761-0b87e235988f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aa9669-8336-4381-b44f-fa5de7ddce91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5adf7b4-17ab-4690-abf5-c37fdbce0097",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05761744-547a-438d-824a-00ee18877084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06166eb2-0012-4809-953d-806a8c2d4474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83298e96-4512-4606-b990-9e4be98d38b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9c66f4-df84-424b-a7dc-111a940f0039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6e747-ace3-4b76-a17a-e82171932a46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631fc00e-e484-4996-973d-3c27717405bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694e14b3-af36-40fb-8ab0-0f426c34c9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b05bbf4-1fc7-492d-97f5-87a342fd7ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad6d0c5-b3ca-4ee9-b3cd-61208a89b520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc41b7ed-bc3b-42b4-89a6-b8eb54cd067f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29346923-fea9-4d53-9ad0-3b20cb84a625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb003e6-15c3-43e1-9d29-7da44d62ea6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6059104c-089e-40b8-b49e-6854a041980e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3f8677-36b2-4f43-b5fb-d6f0de469a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a859f147-47d2-4fe3-a496-86ae21e4b119",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c55c8ee-1ffa-461d-8484-674b3df74358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55c42df-9816-4035-8c54-e0d33202e4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05f09dd-4adc-4077-940e-a0b55bd0ff04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729b78bc-56b4-4e8d-8eee-487575dec882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17999af-9541-49d5-a3a7-c43668acc6e9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1882769a-e022-47eb-a208-c3002263fc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57617b06-aebf-4103-93ed-7e869c2ea828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f04348-ad3c-4720-b290-7168cc7ba9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f1001b-3644-4db5-ad28-4278f66ce5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56105fc0-404d-424d-afdf-c6e2a1388f01",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2acc63-8b5b-42c9-96c7-83a2fd30f619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df543c1b-f966-48b2-9c78-e2f8226bdd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8eaecb-afed-42d8-a160-91b5eecc43f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea4a189-c594-4362-a067-cd7c2f6135a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ec081-65eb-4347-a978-a133dcc5db42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c0a92e-8867-4412-9d1a-3d109cb24cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7b057d-6373-401a-bace-54a20bf24dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617fd25d-4a2d-4bf3-b27b-01f8caafbd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc3901e-9c19-48f7-b474-ecdc4ef98e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b3f50d-f829-47a0-ab2e-62fe3536e0ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2f3815-6d29-4ba9-bedc-91b43e2f33ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf51411-a786-4a78-8ea4-af264bad6502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a912532e-bc85-40a3-8d37-cfcb5b397784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b0f83d-ab87-4064-b753-0c77966e800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc78aedc-a48a-4764-9c9f-705bc064b8f2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76d4c1a-fb69-4e83-9343-681dd31b2bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b04e1cf-4986-4878-914b-3da775c02c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ebfbcd-b871-44fa-9761-642888c40c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a73534f-b595-48bf-9f6b-b0114a139fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a0922c-ac89-4d46-815d-2c04a2bdfaf9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd03265e-2f21-4f0f-9a54-0255ca38e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebecb7b-5234-4fd5-9eaf-46011f090a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5468df52-3d5c-48f8-9658-b26b35a5cc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed0dd96-e21f-41e4-b5da-b0c9966b0de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4f13a4-6573-435d-abf3-63faa18e2b87",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cf93de-e794-4b23-b268-7b95e32aa2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7af80c5-8f81-4e8e-bfa6-846c46fcc607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b492facd-736d-489e-a4ce-6867a863e31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8468d4c3-8d48-4bcd-a7b3-fc7897d43415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cff8331-614b-49d1-acf8-ae054b932901",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584f3858-8515-4d12-9390-6c4746555f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfdd68c-5844-4b26-97ca-97f368b47f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab711e0-2c68-4dd0-9d47-188fa67b0262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4619e8a5-5d19-4a56-a5e2-489f25fb4270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a7f01c-2e39-4c07-b340-4d0218af6e48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59dff08-98a9-4857-96c6-958188913ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5034b3-fdc5-4fd3-aad4-6fc50e33c37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53d1d0-4888-42a5-bbe8-403ca69b1514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac91625-1f44-40de-abfb-405061bd56f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9cfee0-1005-4075-81c0-99bc445948eb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9da48a-8437-4775-8956-9fcf67c4931c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107c5ab9-b0a0-4a59-bb09-1e568de62f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329780e6-ad57-4dec-8902-0e1e0e51192e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e89e7f2-a831-462c-8866-b881a1335e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a10c69d-468d-4dc9-901d-e912e50e5304",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced0070b-72a8-4792-a738-84cdb60487ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd97f315-ef45-4f8c-9924-557ae2a58f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a109b4ba-d1e3-47cc-afef-ab4f31cf8536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b84430-ec7d-4958-984c-0bc65ce85309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c78ebda-bbb2-4775-b1c5-0919410b6f7c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3522fe55-b818-4466-82cb-0ec2248a8dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f98a1f17-6a1c-4394-a43f-a5414f9f9574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6928d3a4-50a3-4101-836e-5c4ead36bce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41148867-c667-4032-8d2f-4cf748086692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decec1ca-105c-4bcb-b11d-cb353f31b324",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d340535e-78d4-48cf-b560-a2f8d1d81862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0689afaf-bf90-49d9-993d-5b18e7e16fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca0cc97-a45b-4a4a-95d9-924b5f1f60be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6934fa-c3cc-4e9d-9ee0-959e5fb9d5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58530436-479d-4ca3-aa1b-a70cfeae6aea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a467ebf8-126e-46a3-a746-5a80f2ac2441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4d4053-c25f-4e01-ab89-b8ade5b0cf07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d2f52a-88a6-4a07-acd6-c3386824db66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986d71a3-0b98-4d8a-95a8-e2145a8faa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c949a33d-fd45-4bb1-9d1b-5d8ce2c6ec12",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da6f73b-eb77-4fba-8304-c5d571c8b773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83d541c9-4df5-499f-bb39-b3b9f4f92c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9435cb1e-9ae2-41d2-87f5-3a8586004f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb714d99-d02a-440c-ad5c-d2e5aed0ff14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56ae7e7-cca3-4150-86de-2b2fae4ab814",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deedf559-8438-4bfb-b6d2-8f705db65e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6450320-37fd-4db2-8235-0ee339a5a9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a665f-25eb-4dc3-9b5f-38ae85deb4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e80d484-3ec2-4ae3-b110-07dee9260482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dfc0c0-294d-4f44-b5ba-edd49def0db2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb324d41-2a9c-48d9-8db9-16e1c9f30287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5c5223-3c72-420d-bdc5-aec09d038def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353b1482-ba89-4b80-b1c8-14fd2a472718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56205f8d-887c-4c91-aaa1-1848a88c6ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71922769-b9be-4f59-904f-6a0fde4acd08",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bb65a2-689a-4d6b-876c-a3f22a3e661f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9f067f-c0b9-4d0a-8bd0-3c74fa87df68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34186cb8-708b-4033-b385-eff19a4469a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351d8df2-1a96-4992-a97a-cb877c99873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6561ed62-cfcd-40c2-b7d9-406502c9e250",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c1e8f-091a-4fc4-b3be-e5db5d172597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be521c7-a71c-4585-95ed-5bcb7c69a47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383df2fa-e02f-4112-82df-0c8f2c0a2c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef809cd8-2805-4fdd-a6a7-810c1eb70c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1921841-0d72-44c7-b2e5-929febd1d03d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585f82d0-288f-471f-abf6-1476e334c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7c63a3-2d62-4151-89df-89e0f018409d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4848cb46-87bb-4365-8569-8352468dc009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8f0b7d-0275-4efa-8394-14f92d8be4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292594a-b09e-410d-9152-8bde55ddf12c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03037038-e840-4638-ad7d-004631eb57a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e48507-51c9-42bb-a885-88eeed3209fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cef2273-3091-4eff-8008-bfd958c959f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31b8fbf-e7e2-4fde-90ba-cef6391cdfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0722f-ecc8-4477-b8a3-22102d0cf5df",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79495e64-b556-4ef1-99b5-a778fc9d4019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189ef450-e373-4c34-a265-21e381105de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86cf652-acaf-46f5-be4f-6a3cdc828d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6087fe-6c8f-4587-80bf-8cd8f4e50900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c8487-56e4-4b8a-9a5f-21f99aabeb79",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae8cd5e-b471-49b9-b860-0ba3656eafc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fc1c1c-c616-42ab-b869-fa943fe151e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffaacff-2298-4943-a343-bba6e5032e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3856ea01-ee73-4320-819d-0b44ffbb54ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1692296b-0efe-4c86-a9d2-967c7cb55774",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf684016-9873-4c12-85c0-dc3af96f2174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e6bb0d-8c67-4672-a820-e76a9a71387f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d315a327-b10b-4b60-b823-a2d02e402820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9ca3ce-f428-43e5-9733-0798d03a53ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71896a4-1daf-4b82-afd6-8d5b6142bf33",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534fa36b-10d0-4e27-be5c-0d2c510ad9b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e5173a-b3b0-47d3-addb-c39e84dd14b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6931a25f-fbab-40bc-b406-026993b71131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94feb3b-0eb4-427d-a709-201ac9d373ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ece3f9-fe68-42d3-ba37-45e761e6434d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76818b5d-d960-4e4c-9a58-6e6a6f2d1004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9275196-dffc-4878-92f0-de4f51bc15bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93ea08d-2a8c-43d9-8b02-d951a5b85830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f022ec7-fe07-478f-b261-a42b093a821a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb40c62-b762-4fad-9ca4-d9d37ca64a04",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7ecd59-9e6d-49ad-bb9a-71e505498c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a4ec1a-dadd-4c39-b50f-a0f65909b043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28bd824-c5f5-4ad6-bf79-506f4ee182d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb4ca30-bf06-4884-8670-001b512e93c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb788609-bdf4-473a-b2e0-73d1f1036905",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceeb8c6-4f65-4196-8ed5-1b5a128aff05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4bcba4-31ae-4b6c-a59e-13ba2b98da3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed66245-1674-4c47-b5aa-11025d4612cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0309780-1640-4174-bd0d-10ca777d54d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70b7498-0b2e-4bc3-8d25-d315abc3246c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a51e201-75ba-4ac5-bb67-62926b880b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7d3c8d-7912-4c61-b3bf-357746490294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951bdb77-86e9-4e73-8616-d65415dd9180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1559ca-df19-4339-b91e-5c299c20444d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f26cd96-5fa3-41cf-879b-de42e2c83a52",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f285ddaf-f716-4df3-ad79-0a1082155443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ea9851-aa51-41c4-9eda-afe3fd35967f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b52c6c-e4fb-42c3-b987-c4de48d0cf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e101cd-7c28-4deb-ae3b-c4dffb4279f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794e36d8-abee-404c-8714-d112f3787964",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1799293-2b37-41fd-8574-59dac2762b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d6f1eb-1f0b-45cc-99f7-e757422e2c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfe0201-5226-4aae-9af3-741b471e0779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839b0a3e-e20f-48bf-9518-011d2a0e8f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3806cf-fd9b-4707-8e9e-a0cb292570b2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0297e5-ac0e-436a-9ad0-f15ce484a144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506851ae-5be6-4b0c-b5ad-e4f9397571f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa3eb3d-a97e-489e-a76b-9ea69fba6de5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca7ba85-230c-4ac4-aac8-66455979598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebc7b1f-099b-46f9-9921-65dcb1bec9f3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e4dc6f-df8c-44d3-a0df-e7abbb46818d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa80081-4f78-4b56-90aa-ec2ac1643774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd851f4-8660-4ff8-861b-008772324a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a14347e-70ed-4530-938f-bb28c2cf6a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c049b4-d92f-4ebe-949a-823def193605",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ba044-5963-48e3-84b7-c6ba1a2a2c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b340c6-2294-4b7d-a9e0-d0cedd11017a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1cfd3c-26c5-447b-9baf-bb24bf6eef16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fd0d08-1475-4f2f-83ac-6da6448fffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a70794-709a-48ca-81e3-af436839ee79",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf7972f-ceab-4d7c-926b-c96b9ea24251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e80760e-3cda-4d1c-a6ec-ff4606df6e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ff8a1-b916-45c8-8cc1-105cdd02bb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203bb1d5-2551-415a-a679-1f4eac305708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5a2f17-5966-4f21-9b23-5848c1263939",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3429cd8d-f64d-4fdd-87a4-c6ffb5684cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e604abe1-8696-45e4-a896-508db26ca010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0614fb-2b91-4116-854b-5000a294515b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac9dd8b-3622-4237-b910-908a74e5589f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3078c1-4060-4ef6-a4fc-78902311e0b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130b2fed-907b-4d42-a1e9-756bfc1a82c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e132ac4-279a-44bd-a244-bc86ba440e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159d9c27-aade-4ce4-81d1-b01f95690a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b51d74-73e1-4fea-8bdb-450c17327b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c62167c-0414-4035-8667-5dad168a677c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad4c903-501d-4755-a77d-6f3b07ee231e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fd87bc-902d-41d8-9412-559eb79c106a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc2b26c-0a4e-490c-b166-05555b961470",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d495e9-88e2-4986-bb1c-b1ec185b711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900f4b39-e593-4ab2-a430-255c4f7ec8da",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415e82c3-9d33-484a-a8d9-a9e429cdaf5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71d3b39-cf36-4f35-be0e-2ce7d404a76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81858005-de3e-4562-8c64-001bb284261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0496753-2fcf-4ec4-9ccd-8f3ba924bcc9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd5bdc7-5fbd-45a3-93e9-1f853887ecc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d339876f-b6d1-41c4-8df5-de83898a268b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca4515a5-d015-416f-ac1d-cea65ef6c148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc3eccfc-523a-462d-bb10-52d2764b3a37"
                    }
                  }
                ]
              },
              {
                "id": "cbe70c75-26ea-4f57-9bfd-6a6f8ac53218",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56372ba4-c45a-4115-a445-425347211eb0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fadb3d-7cb8-42a1-8afe-e6b995417728",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c5e54c39-f28c-4d6c-a9b7-9f46ec895cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da03602c-ef24-43c2-b60f-47ccde041110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c747df6-ad69-490f-8209-98390e4df832"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13c2c89d-dd6c-495c-8208-23e791402ae7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f15a5de4-039e-4d3d-b56d-73e7c6301894"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce1424b6-25b4-4724-bc38-21699b318642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbc028d4-3e58-415d-ad17-397d8efb3443"
                    }
                  }
                ]
              },
              {
                "id": "5c1cf9b8-e808-41d4-8d20-79360dce26f3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "781ded04-79ec-495f-9f3e-516b149ec304",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68526c6-8c9f-48e9-b7d4-e8f5d5097b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2bdd295c-acee-4a36-8c12-b9eeef6ff406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ab2b1-1a58-4713-ac29-cc3d89abdce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea630ad-3f11-42f6-8490-b1afd775afd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60c91c51-4d7c-4776-a279-d406a40a4f0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67903546-5e3f-4fca-af09-f2ac866d256e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e912f755-50b5-4f3a-a994-55b8be2c608a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46966f2c-2751-485c-a560-45ee4338713c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2eabfd0-8eec-4121-8d08-b336033adc1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "964bddc6-f81d-4cdc-9ac3-2498daabc693"
                    }
                  }
                ]
              },
              {
                "id": "eb7c5156-fe0d-4f94-b44e-d14eb7846438",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac1b643-99ca-461b-b109-9917187876b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "069a5b95-c61b-499d-a649-24113be3a5dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af8fcb8-45f6-4a92-b917-236756414493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "666ea833-9c3a-4fbc-9d19-e674ae5aa6fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d383689f-b9ba-4633-8819-550aeb267720",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "405ff342-5f55-44bd-8486-089c2eca48e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70ef2147-4d66-49cf-89e6-7ec3648ead92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32c82747-c740-4ca1-b924-e62f268a38a8"
            }
          }
        ]
      },
      {
        "id": "95539ad5-90fc-43e2-bbb2-0522e0c43568",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e6b0d6f6-df5d-4c62-9389-85412b9c2cb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b695baaf-9626-47f5-ad77-bc12fdba8754",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4797bcbc-b9c1-430e-a280-71a88a690af1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b18f0b-2d69-400b-b4e8-ad5a9c80381e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e24cf06c-1276-4260-b72d-32d9b6e24fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e6e77a-ab8a-47a3-97c6-1db9782f4ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e22fa24-04d8-466b-8a3b-d905f029e2d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07c67c6b-ed3f-4d84-9a76-fa332d401632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b19d9594-8776-4b96-bc31-4e6c98ee1882"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "417bb31a-fea2-4133-9e45-833906072205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d3743e9-8521-4624-b2ad-da064949a0f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6bc8c76-142b-492f-8017-dc8fef10c049",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e94323a6-7810-4f0b-a383-9c0a31d19b8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce7ffe1d-93da-48d6-8c82-7617d1859dc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f1d4bca-58f5-4d7b-a6b5-d7327f9d1c6e"
            }
          }
        ]
      },
      {
        "id": "44e37288-1e3f-4fb3-ac7b-f7ab0d62744c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "28dbfb94-3dca-4fc7-9878-6871d4215f67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f105335-e869-4d8a-a549-6bcf6ba1d3fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "685b3ae2-c26a-45e0-93b8-79fd49a07094",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81aa78d2-6f66-4118-b850-3910c2a3dd41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e6e5bc-a650-4544-b746-70433170ca52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5653aba2-884e-466f-8013-6f428660528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "539bda9e-6a6e-41db-868c-9c566b64d8b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0eac3ba-7fd0-4009-afce-11e85f332b0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7449d02f-ce4d-41c4-a5d9-b7176eff1754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72b1027-866d-4eae-86a6-6ecae7fc9769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fdfdf70-80e3-4bc0-9764-87c821f06cf8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8559ab1f-39a8-483a-9338-23986d45e011",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "616040c3-a143-46a3-a452-5199cb6772c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62aef75d-e5af-49cb-8671-84bdf57fb3fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f55baa-fb9b-47ab-b101-6bc5c017abbe"
            }
          }
        ]
      },
      {
        "id": "baef8f15-fa5f-4965-bdbb-7126ceeb16a7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b7fca7a0-7c97-4ee7-aa48-6fddde92ddc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66a84982-f39e-4a13-85c5-3b6b98b5ec97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "341edffa-a69d-41d8-b92b-39fe3be172ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cd6d55-6117-4d0f-bcd9-bbaf9efb7e90",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "261fae4a-4278-4de9-8d93-5523bce9c022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a245cbf6-3b70-4d56-aa0b-dc08a71e52fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f124d9ca-8d09-467d-a541-17b19400dba0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98caf7a1-545b-45b3-991d-770a0799615b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c21d937-38ef-425f-8ed3-ddfba409ca87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b4e550a-4361-43dd-a590-8dffb7d28d1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbcb5a7c-fb0b-4de1-a2c1-d46ea781b269"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afe45661-44c0-4820-b186-e908ba4febc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d302b51e-f780-4737-9f34-7f7c25ea2074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0b4dc3c-3756-4410-bab4-d862739f6dd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3c8ac52-154f-4fa8-999f-b18f65a623a0"
            }
          }
        ]
      },
      {
        "id": "847b1f16-ab8f-4b1d-b159-6b98106d47f6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1419623-a3e9-44af-8d0f-677883ab0e68",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca8e103-3df1-491a-8c8b-3a6a48cb82b7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e6aee281-f219-4112-9a07-9d9ccc8684ed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e9f3441-6fc8-460f-8487-d64efc3d1ad6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27e536f5-dd31-4841-82b1-980e92031065",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 325.2429577464788,
      "responseMin": 8,
      "responseMax": 7416,
      "responseSd": 924.8582309249155,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693614671561,
      "completed": 1693614776308
    },
    "executions": [
      {
        "id": "b5b24a24-9f56-43e9-8c16-f50556f29a09",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "472d63ad-69b0-4572-8bc0-8e515ef89329",
          "httpRequestId": "953fbcca-df6a-4d58-b868-27810ab67d96"
        },
        "item": {
          "id": "b5b24a24-9f56-43e9-8c16-f50556f29a09",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2d7a1e84-7d28-4130-9790-eefe617fc35e",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "c1dd7a8c-a49a-49bb-a7a7-7991c4a4fb90",
        "cursor": {
          "ref": "8b3f1624-2285-40e4-bddd-278c92250b7a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba14e88f-c1c3-4f79-ba3e-42fe22b84500"
        },
        "item": {
          "id": "c1dd7a8c-a49a-49bb-a7a7-7991c4a4fb90",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea0a250a-6d6a-4d0a-9cdd-4a64fc349d20",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "0abbca23-efcb-418c-9f1a-7ed642a20c17",
        "cursor": {
          "ref": "1c04ffa0-12f4-4c66-b59e-4838017e2a1d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b75eeca7-ee58-4a40-abc7-e1aca4854b55"
        },
        "item": {
          "id": "0abbca23-efcb-418c-9f1a-7ed642a20c17",
          "name": "did_json"
        },
        "response": {
          "id": "d0152fad-215d-4e17-b119-053f111af2ad",
          "status": "OK",
          "code": 200,
          "responseTime": 1175,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d4ca78-8e13-45f5-9520-f148ccbf93e1",
        "cursor": {
          "ref": "7e689780-aa09-43c8-9201-e73629725af9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b928d095-6702-49ab-b8e3-0ff3d600ee0e"
        },
        "item": {
          "id": "23d4ca78-8e13-45f5-9520-f148ccbf93e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "483ea193-18b9-4a6c-85a5-1f04e26b46f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d4ca78-8e13-45f5-9520-f148ccbf93e1",
        "cursor": {
          "ref": "7e689780-aa09-43c8-9201-e73629725af9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b928d095-6702-49ab-b8e3-0ff3d600ee0e"
        },
        "item": {
          "id": "23d4ca78-8e13-45f5-9520-f148ccbf93e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "483ea193-18b9-4a6c-85a5-1f04e26b46f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eb00d9-ceaf-49de-bb10-a3fd465dc2c3",
        "cursor": {
          "ref": "fa153bca-dc0d-4823-a88f-b0eced1d4aab",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4ead0369-920e-4350-86ab-843edfbc1be5"
        },
        "item": {
          "id": "b9eb00d9-ceaf-49de-bb10-a3fd465dc2c3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0eed0d42-f1f7-42e7-986b-e8fd717b3cd7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 405,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4505f361-f322-479b-a61e-c3d566757065",
        "cursor": {
          "ref": "1dc32a4e-44e7-42fd-8f55-f4fa55470335",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "657ce43f-79bf-4533-8cf3-c7eab64645d6"
        },
        "item": {
          "id": "4505f361-f322-479b-a61e-c3d566757065",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0f7b7ffa-ec7d-4122-a91e-8a0b8d1d62ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 249,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0d8fb5-ed3d-459f-9172-2b4ebcf550e9",
        "cursor": {
          "ref": "cfef05cd-0802-4a34-bdd0-bcb87f7bf774",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c697a4b4-7f5b-4d30-9a58-93da57b08ea2"
        },
        "item": {
          "id": "5a0d8fb5-ed3d-459f-9172-2b4ebcf550e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1fac8112-714c-478a-85f2-f28695df5255",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263f327f-57be-4aec-a375-c63be021efc1",
        "cursor": {
          "ref": "264b2fef-a80a-415d-9d9b-403bb860e577",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "92a31a16-628f-4940-b2a7-557d1358228b"
        },
        "item": {
          "id": "263f327f-57be-4aec-a375-c63be021efc1",
          "name": "identifiers"
        },
        "response": {
          "id": "31216f69-54e2-4220-b69e-ec6451b09c42",
          "status": "OK",
          "code": 200,
          "responseTime": 1304,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f970c1e-ac00-4cae-8850-8c385dc0c612",
        "cursor": {
          "ref": "c829db7d-49af-49b8-9a45-627c31b8696c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c796d29c-51b2-4dcc-a9e5-454dd3426a9c"
        },
        "item": {
          "id": "5f970c1e-ac00-4cae-8850-8c385dc0c612",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b195e069-ee7a-4451-932b-20abacb7caec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b31ae-5ea7-458e-b21b-54aff3d76a53",
        "cursor": {
          "ref": "7af86678-1a75-49e7-b712-6068084d04a7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "70063ea6-9698-45e6-b3ed-774e415f2c36"
        },
        "item": {
          "id": "ce3b31ae-5ea7-458e-b21b-54aff3d76a53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9ddbcc22-8059-4f25-b336-550ab39d4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f063ea02-aca8-426a-8c93-a479bdbf8e5d",
        "cursor": {
          "ref": "5b8f2081-491d-4d4a-9a70-d80ab4a2dd27",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cb612bd5-925c-452c-abca-128b0aaa333b"
        },
        "item": {
          "id": "f063ea02-aca8-426a-8c93-a479bdbf8e5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "500ffc81-78d8-4193-bc83-8c033ee150e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76016e8-7149-4c54-86e0-000d96380735",
        "cursor": {
          "ref": "62a2f394-3124-4913-859b-d2ddab911e18",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7bcf0f7c-2b79-4598-a49f-35d0f8ce9f2a"
        },
        "item": {
          "id": "b76016e8-7149-4c54-86e0-000d96380735",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6dd5b53-ebc8-489d-bd90-70d8fa97c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c93a26-0b38-475e-bf60-50dfbcba9e38",
        "cursor": {
          "ref": "1e223673-93a3-4224-8a7b-1e33bed85f07",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3847d658-e5ad-4b68-b828-fa230a84ee6a"
        },
        "item": {
          "id": "41c93a26-0b38-475e-bf60-50dfbcba9e38",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "22d55136-4f58-4517-a8b4-01f3372d9e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394b01df-027e-4ae6-af4c-e45bef2f3d0b",
        "cursor": {
          "ref": "59f0ffef-a2af-46d6-9413-150989ba7bc4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7a1e35fe-352a-46f6-8823-cf17691c6e54"
        },
        "item": {
          "id": "394b01df-027e-4ae6-af4c-e45bef2f3d0b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4daa2690-3ae2-40ea-b6f5-3a268c70205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26e67d-437e-4a35-897f-432373b38a84",
        "cursor": {
          "ref": "b686ba58-4049-4695-a034-e3131de1786f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8bd458cc-7ff4-4a93-bd14-9f2f70f8789a"
        },
        "item": {
          "id": "da26e67d-437e-4a35-897f-432373b38a84",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4838529d-c364-45d8-b398-527cb20399d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202de4c1-e0ea-4f67-a033-a587c2672a74",
        "cursor": {
          "ref": "3e56df54-ed67-4e22-92b1-f881dfd056d3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2efbdfaf-4db6-48ba-b109-da8931a3ff9f"
        },
        "item": {
          "id": "202de4c1-e0ea-4f67-a033-a587c2672a74",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24f232db-e7e6-410b-9849-84ad87a9c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2120,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebf2c4d-d76d-4aa3-a985-5e7802ea74d8",
        "cursor": {
          "ref": "3e71676e-8934-4841-b621-f0314d3044fd",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ed7977b7-deda-42ae-8817-57050eaf8756"
        },
        "item": {
          "id": "7ebf2c4d-d76d-4aa3-a985-5e7802ea74d8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "993c68f8-ad5a-43f3-a85f-578a30269895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c47ed05-2638-4b02-a4d1-4abbf9a2e8df",
        "cursor": {
          "ref": "e828ca99-a98a-4d8a-9235-883b932f8697",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fc18b96-bf75-4775-9d7a-20aee64d0cf9"
        },
        "item": {
          "id": "1c47ed05-2638-4b02-a4d1-4abbf9a2e8df",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aa01aec9-ee10-4923-91b9-b82cd79e4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8d5c7e-016f-4777-ac4e-a99d06313a4f",
        "cursor": {
          "ref": "4fd63a87-b627-4091-aef0-b816f7b9c495",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "03af7aad-79bf-47e3-9338-c8e34f156ee4"
        },
        "item": {
          "id": "aa8d5c7e-016f-4777-ac4e-a99d06313a4f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0392b109-1324-4456-ada2-fee9300e1c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bddba38-04e1-4fe2-bbb8-e8d30cff9446",
        "cursor": {
          "ref": "ebdc1a41-c9fc-4381-9070-8bfab02bda40",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8468575c-512b-48a1-80dc-46ae6116a5ec"
        },
        "item": {
          "id": "3bddba38-04e1-4fe2-bbb8-e8d30cff9446",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "757d6053-3980-44db-b98b-8dc4b2c931da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afdd82a-826c-4053-a947-225cf2cc53e4",
        "cursor": {
          "ref": "ac086290-eff9-44c1-9b79-8eb9f417a770",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "23486aec-c185-4d1d-8772-8dd3173fc4ec"
        },
        "item": {
          "id": "4afdd82a-826c-4053-a947-225cf2cc53e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "102899ee-0d04-4aa6-b3d5-2a6714cc05e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f316a0d0-afb6-42f3-af8f-fb06bc50fdfc",
        "cursor": {
          "ref": "998a1c6f-7a0e-4104-9285-10f99ef7dcc5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a2f7c46b-3cc6-4f09-b200-4b9023ae6eef"
        },
        "item": {
          "id": "f316a0d0-afb6-42f3-af8f-fb06bc50fdfc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd866165-1912-491a-945b-12d31505bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c450f0-daa9-4941-b6ff-2ac5af281e48",
        "cursor": {
          "ref": "8d657114-edee-4efb-a4cd-9acb156ca72a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bbba3315-3046-4563-86d4-7546bbd0f009"
        },
        "item": {
          "id": "69c450f0-daa9-4941-b6ff-2ac5af281e48",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fa1015a3-31d6-443c-a22c-c181a45618a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52629e8-24a4-4f12-b289-52517fd702d3",
        "cursor": {
          "ref": "e125b456-534d-4b9a-8549-5849b595a561",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "803ef6da-d86a-4b33-859f-2fa634286fd6"
        },
        "item": {
          "id": "c52629e8-24a4-4f12-b289-52517fd702d3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dd5d9f90-249c-4a90-ba50-81f5ce46fa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54f88c6-7a2c-4a92-bfb0-7790237c8cda",
        "cursor": {
          "ref": "76e65a30-a570-4438-a5dd-22b99f2a3cfc",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "69760252-99e1-491b-8f19-32f1e13bdc7b"
        },
        "item": {
          "id": "c54f88c6-7a2c-4a92-bfb0-7790237c8cda",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0abd433b-16bc-437e-ba11-54d533f8bedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f5e68f-9927-4cf4-96e8-8407e4942406",
        "cursor": {
          "ref": "c7e2b9c1-59f8-47de-9a27-454162734334",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "34342b7b-7582-4c62-b002-d1a4f0c6ba26"
        },
        "item": {
          "id": "b8f5e68f-9927-4cf4-96e8-8407e4942406",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e1839f75-b2e8-4ec1-afe9-d585c14a3ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160565bd-562a-4547-8719-db08eedcb3fa",
        "cursor": {
          "ref": "b44aa4d2-2e18-47c9-9ef6-1f4efe8ba085",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cfc26cf5-a1a0-42c4-8913-615f60b42e33"
        },
        "item": {
          "id": "160565bd-562a-4547-8719-db08eedcb3fa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f7a88a3d-8a0f-4ccf-b10a-7c4df1e93efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c675a2-f6b5-4ea1-aa99-f97df1a0b36a",
        "cursor": {
          "ref": "badbc27b-3525-4e2a-b29e-6f65f681059f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "497240bd-c3db-462e-9140-cd90244936d7"
        },
        "item": {
          "id": "b1c675a2-f6b5-4ea1-aa99-f97df1a0b36a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f686b6e1-c661-451f-8665-178bf573ee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec7e84f-4dd3-4505-83dc-743256c0e5da",
        "cursor": {
          "ref": "0fcad07b-cbf6-4701-b86c-04242ed6eb9d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "418f7f37-9253-4967-9a19-29d4e79b37c3"
        },
        "item": {
          "id": "bec7e84f-4dd3-4505-83dc-743256c0e5da",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cb2cb5c0-16a9-4935-961c-70e83c09373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290991d3-37cd-4217-86e8-ca6358e840b9",
        "cursor": {
          "ref": "678d49a1-f86b-4ecb-af15-2e4276d849b5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d1e4d218-61db-4a64-b316-bdc35faaa152"
        },
        "item": {
          "id": "290991d3-37cd-4217-86e8-ca6358e840b9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c0c082e0-b21c-4ae6-86f0-c1038064f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4e6d49-52eb-4613-ab93-f80dc6f08303",
        "cursor": {
          "ref": "b8b7a1eb-7f61-4ffb-ad36-c1a009b0292b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2edd8470-8085-48ee-babb-494e69fd97c4"
        },
        "item": {
          "id": "3e4e6d49-52eb-4613-ab93-f80dc6f08303",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "19d47a7c-1381-4b30-96b2-54dd1138c6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c752bd-e2b8-4113-b867-9f42d5d38e2e",
        "cursor": {
          "ref": "4d91e45f-0efb-4af2-b4d7-f69954129fa0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "40a0f6fe-9b30-4ecf-8682-7c1f687efdde"
        },
        "item": {
          "id": "19c752bd-e2b8-4113-b867-9f42d5d38e2e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bb4a8d29-7fe0-4066-b9d5-addc9754e8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2881ff37-56da-4bb7-8df3-4b393ed778ad",
        "cursor": {
          "ref": "9a5d5dd8-5c40-4989-82af-d26c317528a9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eff7f7c2-02e2-4bb5-8d48-59ad65fb4c96"
        },
        "item": {
          "id": "2881ff37-56da-4bb7-8df3-4b393ed778ad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "918ed5b8-b93b-4eed-9b52-b957aeddef49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c647ba-f525-424e-9419-f8b97f493604",
        "cursor": {
          "ref": "4c280916-d905-40dd-93cb-590c427d1e87",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a694e7a-a9a5-4919-99b7-0b34f59c8840"
        },
        "item": {
          "id": "c4c647ba-f525-424e-9419-f8b97f493604",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "94289407-fc2e-45bd-9ea3-3f1fda6b458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c05afb-3712-4118-a73e-b97d92815bf8",
        "cursor": {
          "ref": "3282af76-6f9a-4dd4-90af-a362f97c112a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "efb8757b-9793-400f-9fa7-d0ad5ae0566b"
        },
        "item": {
          "id": "e2c05afb-3712-4118-a73e-b97d92815bf8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1487eec6-cd19-49d4-a82e-d3fe10cd87c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34132ce-7018-4964-af45-e8d358f2a1a3",
        "cursor": {
          "ref": "2aa6057f-2809-4c87-b852-af3561c7d3c8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "10137540-02cd-4805-9e47-96801309cf1b"
        },
        "item": {
          "id": "d34132ce-7018-4964-af45-e8d358f2a1a3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2d8ab5af-9228-42db-8059-80e0d310ce36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a1ac8b-d76d-425a-b172-a463305b52ae",
        "cursor": {
          "ref": "bb94551f-acdb-4bb1-9000-235fe1c62b43",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "75c5fb14-5ce1-41c4-b6ab-fc95f87d9c75"
        },
        "item": {
          "id": "f0a1ac8b-d76d-425a-b172-a463305b52ae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e3526b68-bb9e-40b4-b46d-57733ee0fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf8fce1-b31b-4885-be22-9e4e03ef9e75",
        "cursor": {
          "ref": "e277d298-b9d5-4a5f-a9ee-172c88d358c6",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3bf44e57-ed3d-4342-967c-4a8911b9ead7"
        },
        "item": {
          "id": "ddf8fce1-b31b-4885-be22-9e4e03ef9e75",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "38cb054c-2640-4950-a02a-601341484324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9a88a9-7f2c-4ae1-a08b-bc5b49909e0f",
        "cursor": {
          "ref": "d0c92d47-e7e8-415f-842c-4cd2b8b8e20e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "743e83ee-d4b5-4218-aab6-025537e54cfe"
        },
        "item": {
          "id": "6d9a88a9-7f2c-4ae1-a08b-bc5b49909e0f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8664650d-998c-4a6b-8aea-4881f2f9151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adee47b5-124b-4f93-ba37-7096dcd273bd",
        "cursor": {
          "ref": "4231261c-ff70-4d57-8e65-5ffc4f13c2bb",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8cb1cb45-5ed7-4378-85bf-0be6a95f2677"
        },
        "item": {
          "id": "adee47b5-124b-4f93-ba37-7096dcd273bd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "feeaa138-08d5-4114-a3c5-47b34b228714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e36525-76ae-487b-b4c3-7b5fc8d83d8b",
        "cursor": {
          "ref": "be5f705b-bffa-49e5-ade8-44da1956d3b4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21a4c2f4-6b12-464e-b34e-6ddd122e67c9"
        },
        "item": {
          "id": "c5e36525-76ae-487b-b4c3-7b5fc8d83d8b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "076665e2-2c69-4efe-a164-af94a12a34ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdb9188-153d-4fa4-b4ba-a4171bb63c67",
        "cursor": {
          "ref": "917222ca-5ef2-432d-b08c-76fb3ac21229",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6c4967d2-2f4d-4cc7-adbc-2746da7c503a"
        },
        "item": {
          "id": "5cdb9188-153d-4fa4-b4ba-a4171bb63c67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3ae31452-985e-4adc-86f6-23346c9777f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a33dc3a-2bd9-4871-84c0-b0ba5d661d95",
        "cursor": {
          "ref": "597c6fef-2b1d-4bb4-8a2b-05297598fac9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a5c1969b-a44d-4316-aaba-380b71ed8444"
        },
        "item": {
          "id": "1a33dc3a-2bd9-4871-84c0-b0ba5d661d95",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8060dae7-2491-4846-bd31-5fdafc677cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86106b0b-9be4-4e06-a8f7-6371e4e33387",
        "cursor": {
          "ref": "76d5e1d2-1abf-47e7-bb3c-bd4b45bf557d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7143d007-e066-4ef0-a570-fff7ecfa9283"
        },
        "item": {
          "id": "86106b0b-9be4-4e06-a8f7-6371e4e33387",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f0c85ca-9c9c-46ef-8832-f57cb0039d05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 584,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add7bbee-f00a-41b4-a3a4-718ab013053d",
        "cursor": {
          "ref": "2cc6b7a3-cc8e-4239-9b4d-8e710f2281f7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "552ea8fd-d92e-4e62-bff2-c361902bb660"
        },
        "item": {
          "id": "add7bbee-f00a-41b4-a3a4-718ab013053d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "50161277-5440-4679-85d4-e65592419659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c3970-32f5-4d8a-beaf-839154e92126",
        "cursor": {
          "ref": "5024db5b-7022-409b-91ef-0295fbc2f090",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c356ce1-168c-4499-a744-41a9305c2afb"
        },
        "item": {
          "id": "336c3970-32f5-4d8a-beaf-839154e92126",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "454d2b00-8ef8-4fe4-a45f-bf43d5822efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5807e7b9-b033-4e32-ad94-2107f671912f",
        "cursor": {
          "ref": "4c3de1de-477e-4904-8056-682dd99440bc",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ce1f9b8-c40e-465b-b996-123594698316"
        },
        "item": {
          "id": "5807e7b9-b033-4e32-ad94-2107f671912f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f572dae8-8761-419b-a028-e739e1f0e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed52828c-823b-4be6-9c5b-dcd8a36ea5f8",
        "cursor": {
          "ref": "2bd5b0ec-d997-4ddf-acd1-82c70b7c3b05",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7e8139b4-f90f-4d63-b341-c2c1ada4df21"
        },
        "item": {
          "id": "ed52828c-823b-4be6-9c5b-dcd8a36ea5f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd620ee1-5e4e-4344-8aa0-dfc1db1e9430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b8f9f-59dc-44e7-8602-96faa46b0fc3",
        "cursor": {
          "ref": "b93060f4-caa3-4b5a-8158-485c91d6b2fe",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce9fb4f2-2726-4555-8245-5e7c21a51fda"
        },
        "item": {
          "id": "604b8f9f-59dc-44e7-8602-96faa46b0fc3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "461be086-7a93-43f4-8fda-bd3b5f007d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac11e0b1-5875-46aa-b983-ccad82c0497e",
        "cursor": {
          "ref": "be036571-c0c5-4ced-80f7-e2fbc4347562",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1bf0d112-f54e-4a2f-8428-4fd224d962b3"
        },
        "item": {
          "id": "ac11e0b1-5875-46aa-b983-ccad82c0497e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e775f90b-fa5d-48be-b1dd-5f1b56a3da87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc08f8-03bf-4bfc-85dd-74095d31434b",
        "cursor": {
          "ref": "aac8700a-5b06-4ba6-a263-180ad79bacb7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "96821b57-5828-49d4-a793-d0c3a0703a4b"
        },
        "item": {
          "id": "cfbc08f8-03bf-4bfc-85dd-74095d31434b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b13ccb64-fd37-4898-ba39-41282531969b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 592,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9c6473-5eea-432e-9c2d-020afc35ae4f",
        "cursor": {
          "ref": "b8da4af4-37e6-4831-8c07-989b30c218c7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5c473fd6-221b-450c-8aaa-8a1cf285aff0"
        },
        "item": {
          "id": "3c9c6473-5eea-432e-9c2d-020afc35ae4f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1a255c84-8a98-4412-bfbb-a8c6d210200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f70ed61-84b2-4ea5-894c-cd84d7a4ff18",
        "cursor": {
          "ref": "6cf71eaf-135a-4416-9dc3-8611a430fa19",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c4581445-16b7-4f97-ba73-c3e626f369c6"
        },
        "item": {
          "id": "4f70ed61-84b2-4ea5-894c-cd84d7a4ff18",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "75a91650-fdaa-42ce-9a3c-cb2d4712b228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124eb049-f588-4c33-a93e-3cb57da3327b",
        "cursor": {
          "ref": "8de38baa-84c1-4ef3-bb20-76a511c68354",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72545f07-ef4b-4cb9-9f5a-472a0462ca8e"
        },
        "item": {
          "id": "124eb049-f588-4c33-a93e-3cb57da3327b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b2f8b911-bad4-4fd5-87a0-45cee2b16a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4da90-69c2-4765-bef7-562e7d713544",
        "cursor": {
          "ref": "8613430b-62a7-42e8-9fc7-fc3a96e4a7f9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "174620c2-7ac6-4886-b62f-6bcd6357e03e"
        },
        "item": {
          "id": "13c4da90-69c2-4765-bef7-562e7d713544",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b192a1f3-b22e-42a3-ba19-274d116b5100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14800360-6ffe-40a1-b806-267b5ab094ce",
        "cursor": {
          "ref": "371b23f2-0ad1-46c7-bb4f-e156fbb382bb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf37f3f8-d2c6-46b9-81b8-d2ccc87c356e"
        },
        "item": {
          "id": "14800360-6ffe-40a1-b806-267b5ab094ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eb29b6bb-8b06-4341-ae80-1be4a9bcb4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbefd123-4cc6-4a95-8683-260aaa3a2e4d",
        "cursor": {
          "ref": "6dab500f-32cf-4f38-b33c-461f5b330305",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f836ee4b-215e-45eb-bab1-033582e6b69d"
        },
        "item": {
          "id": "bbefd123-4cc6-4a95-8683-260aaa3a2e4d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dd765fda-f9f4-4ef0-9561-00e33b800ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572c5b18-f45b-435b-b65c-c5f7af757f63",
        "cursor": {
          "ref": "245ba2d5-cac9-4455-a097-99825a01a15d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5742eb49-6d10-4da1-8205-d9944b446250"
        },
        "item": {
          "id": "572c5b18-f45b-435b-b65c-c5f7af757f63",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f4a1fb74-8a6b-4d64-8bb3-2ccb423b1206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7794f6-02cd-4a3c-ab4e-cddce7daf340",
        "cursor": {
          "ref": "ab23d84e-e526-48d6-828b-063d2afca020",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "49cf0148-be56-48e1-8ce0-803c68ba544e"
        },
        "item": {
          "id": "cf7794f6-02cd-4a3c-ab4e-cddce7daf340",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51679a2a-889f-4d78-9e1b-c8dafba1ab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c63c9-e0cb-4291-a64c-0799d482ef3d",
        "cursor": {
          "ref": "b54b7c77-d9fa-45d3-b537-05cbc3bdb021",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "318d75cd-f797-45b5-afed-a19aa49a4f51"
        },
        "item": {
          "id": "090c63c9-e0cb-4291-a64c-0799d482ef3d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a9422dd-79a8-47fc-8bfc-7e07aa8c271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b586392a-4a65-475e-a6b7-a99465256baa",
        "cursor": {
          "ref": "965749bd-d2af-431e-a4ec-ada1b8976f23",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "02037c18-e614-4af0-b4d4-5506567c3790"
        },
        "item": {
          "id": "b586392a-4a65-475e-a6b7-a99465256baa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d3546c0-b6f7-4f42-bac7-5f50aac2f755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32c94ec-4da6-4d3a-93da-06eb38126d44",
        "cursor": {
          "ref": "1b4b8c9c-b895-4f49-801c-d48700782037",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be151928-e3bd-4718-9e49-c3ef3e6167d3"
        },
        "item": {
          "id": "f32c94ec-4da6-4d3a-93da-06eb38126d44",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9c0a8b0b-21b9-4f98-946c-b396937f1939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cad464-c0fd-4f06-9df1-a6c30ae89646",
        "cursor": {
          "ref": "0d5384f7-43bc-4819-a5a0-fc06ecf782dc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "986d82d6-73c9-4edb-a35a-90d923d249f1"
        },
        "item": {
          "id": "75cad464-c0fd-4f06-9df1-a6c30ae89646",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "651e4131-8232-4bbb-b00c-cf0448b07234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecccdbc-2755-4738-8c5a-e4c1eb1a0120",
        "cursor": {
          "ref": "d834d22e-8196-4a00-88aa-8e2ef9059fbe",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f17e1c31-96fd-490d-abda-90f84bef15b8"
        },
        "item": {
          "id": "eecccdbc-2755-4738-8c5a-e4c1eb1a0120",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "522a8b18-dc4b-41b7-896f-63a74254bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff64d9-151a-4141-a5cb-72a3c4fbceaa",
        "cursor": {
          "ref": "04ae8084-a190-4155-a922-70d408cf5bd9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9626912e-be15-48ea-a3b7-7e99e94ea60c"
        },
        "item": {
          "id": "61ff64d9-151a-4141-a5cb-72a3c4fbceaa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "191c3f9a-b38c-4e99-8edf-4b87ce4d1f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa7b1e7-45dc-45cc-b505-387163a45bb8",
        "cursor": {
          "ref": "0ccad41f-af21-41c6-bdec-b0425b74a824",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5ec687d4-f666-47b5-90e2-25769e75f53d"
        },
        "item": {
          "id": "daa7b1e7-45dc-45cc-b505-387163a45bb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dd972e1b-cf62-4b2b-892a-9dcecb6d55e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d638341f-3904-45d8-9c07-14695a0b9adf",
        "cursor": {
          "ref": "61802a6c-dc4b-4070-9d14-3d0b18e4ca5d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35cda65d-4fc5-4b85-80ff-a9212caaaf78"
        },
        "item": {
          "id": "d638341f-3904-45d8-9c07-14695a0b9adf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "66b11939-a33f-4f18-9710-50ee03f389e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96169e21-fbd2-4fb9-a115-4eb12f80d7e5",
        "cursor": {
          "ref": "f59665ab-582d-4044-ba43-59acaee94ad4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0ff52a72-f9be-4cc9-b2be-72c01c9beb5d"
        },
        "item": {
          "id": "96169e21-fbd2-4fb9-a115-4eb12f80d7e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "69a8610b-1490-474f-9125-3c3d9dc18037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a19903-ff5d-484a-b316-7b1216c5446f",
        "cursor": {
          "ref": "8cc01b75-d375-489e-81be-9806d08f4b0b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7733cbe1-ca01-4167-85dc-ac626694692d"
        },
        "item": {
          "id": "e3a19903-ff5d-484a-b316-7b1216c5446f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "67bfc977-eb8f-4066-9996-ed8ad5dfaf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c4e712-4809-424b-999d-9c188d27434f",
        "cursor": {
          "ref": "5a286564-04ab-4804-bcec-79b671498547",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "866b67b2-ab3a-4d8a-b9c7-f9e1067c6712"
        },
        "item": {
          "id": "70c4e712-4809-424b-999d-9c188d27434f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f4dbd9cf-6f79-4175-855e-080bf957e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61af494f-4166-4175-ba9f-155a2344dbfe",
        "cursor": {
          "ref": "7a8255fc-b914-4d1e-bde4-73cbaf803511",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1fc54ffc-f92e-4300-a9df-3a5b5666ff09"
        },
        "item": {
          "id": "61af494f-4166-4175-ba9f-155a2344dbfe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ed7bb62b-5f8a-442e-be33-7d6aaab94573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc9301-f62d-46a9-b6e4-34d97d3350f9",
        "cursor": {
          "ref": "25fef412-4bce-4958-9641-25638aa9f622",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c99e6a98-3011-4939-aa4f-4a04874bdf9a"
        },
        "item": {
          "id": "d7cc9301-f62d-46a9-b6e4-34d97d3350f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d58c81bc-6fb9-4f8b-a085-9059b1e078e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620cb129-5b3f-4c58-8ce0-fa04d5362e6a",
        "cursor": {
          "ref": "21a8cdea-790c-4878-b0ad-b6a3c60f8525",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6a2f0561-64d1-4872-8611-27b89745df14"
        },
        "item": {
          "id": "620cb129-5b3f-4c58-8ce0-fa04d5362e6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d118a8ce-ed95-4a54-95fd-e2b34d75e43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c52461-bfa0-46f8-baa5-5ec5dcd412ea",
        "cursor": {
          "ref": "8b8273c5-7c10-4e14-8abe-975eb5d1ae05",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6fe136a4-c886-44a3-b0ed-905d8a9ac5be"
        },
        "item": {
          "id": "87c52461-bfa0-46f8-baa5-5ec5dcd412ea",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "22d1c8dc-1fee-4766-941d-93e503cd6915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a454c6e-0631-404b-93fa-4873d5ea67c8",
        "cursor": {
          "ref": "d10d2e97-3d06-47fb-bf13-5ad72e30c81a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "850f87e2-b717-4655-86cd-48ed19751d95"
        },
        "item": {
          "id": "1a454c6e-0631-404b-93fa-4873d5ea67c8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bd24fe47-ec0b-4cf0-9be0-39a224ed6844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d4da24-5ab0-4af8-8505-5992e2bdeb39",
        "cursor": {
          "ref": "20962866-f0f1-43df-93a6-46d4d3a60d4b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "26293526-8481-49d9-a24f-f20901fdddf8"
        },
        "item": {
          "id": "b5d4da24-5ab0-4af8-8505-5992e2bdeb39",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f49e3db3-1323-4034-a74e-5456de9a01d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825ae5f0-feab-4559-bb46-c28bd47a86d3",
        "cursor": {
          "ref": "71a6ea68-fa02-4fc4-83cf-6bd0b3486a74",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2083769e-57e4-470c-b9c0-21921ff025f9"
        },
        "item": {
          "id": "825ae5f0-feab-4559-bb46-c28bd47a86d3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "82d157f7-9fff-4d42-b348-2e244903041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f5c282-868d-4bd0-9fab-f954a9cb5b2c",
        "cursor": {
          "ref": "66ac61fa-1868-40fd-bef0-eb48ccc2220f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8063c2bb-00c6-4280-9d87-e735219d580d"
        },
        "item": {
          "id": "46f5c282-868d-4bd0-9fab-f954a9cb5b2c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "158a4561-ce5b-4ee0-b850-155d2bdc068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a5f280-7eef-494e-8cbd-4e714007b5b5",
        "cursor": {
          "ref": "312dd3fc-378d-4275-8a25-af145186f9e1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf6b7a12-0d4b-4741-997a-7fb38dc044d8"
        },
        "item": {
          "id": "25a5f280-7eef-494e-8cbd-4e714007b5b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "505f1d28-c2f1-4e86-b2b1-8781b4b380ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b86eb36-d8e0-471b-960f-a82a57a4c628",
        "cursor": {
          "ref": "0bca06dc-2a99-4be0-8af9-65213e894f47",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "84a940f4-30c5-4050-82d1-6291f43ac17a"
        },
        "item": {
          "id": "7b86eb36-d8e0-471b-960f-a82a57a4c628",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d5690ea1-4ef6-4fd8-862a-f59a800970c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a382246f-d701-44be-ad3c-cdf54d6eaa48",
        "cursor": {
          "ref": "75019b49-ac1f-46aa-94d0-87aa397dab8f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea0c2387-4974-4513-80ec-393e91f0b4e1"
        },
        "item": {
          "id": "a382246f-d701-44be-ad3c-cdf54d6eaa48",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "769f2efd-d9d1-482f-b08a-47f844c6d19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edae565d-ca45-48f6-9c04-84a4506f2e3f",
        "cursor": {
          "ref": "1ce6a6cb-2714-426a-b795-69e7ef66fb2f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c8b3ede5-94a0-4c6f-9d24-2fcb1ec87a05"
        },
        "item": {
          "id": "edae565d-ca45-48f6-9c04-84a4506f2e3f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f49090a-419c-47a7-8b08-8bc8f76968d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672a03cb-5a4e-4036-b4b5-a932553311c0",
        "cursor": {
          "ref": "cd9dac69-530a-400e-9f8c-eadf40d154d4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aa487e84-6a9a-463d-abf5-c6d1f4a63b02"
        },
        "item": {
          "id": "672a03cb-5a4e-4036-b4b5-a932553311c0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "28acdb05-8fcb-4afd-b3fc-c0a199db9245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea686394-4e80-4b20-8e91-2d7fb62f2616",
        "cursor": {
          "ref": "b39cf94f-fc7a-4478-a5b3-3915550fc498",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1987001f-5226-4899-8ca7-0573013a7f8d"
        },
        "item": {
          "id": "ea686394-4e80-4b20-8e91-2d7fb62f2616",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d0c9f4c3-6ec5-42e9-ad8e-ab43c976ca20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a413a71-56a1-472b-a976-c682ca2d83f4",
        "cursor": {
          "ref": "4aaa5580-c084-427c-a1a3-fcfbe8263913",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cad45c54-89b1-497f-8034-76a6d35f14d6"
        },
        "item": {
          "id": "7a413a71-56a1-472b-a976-c682ca2d83f4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0fa393ef-3ed6-41ff-9ced-7913cd5836da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae6c668-0b94-469e-bb69-8541ab696db4",
        "cursor": {
          "ref": "8961a2b8-e3e9-47ed-90bf-d06800b144e8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "496c693b-cc26-4c71-b998-d38ae99df322"
        },
        "item": {
          "id": "6ae6c668-0b94-469e-bb69-8541ab696db4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6ac28ade-cc96-441d-ba93-ed69d751794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd39016-190b-4084-9def-1eee0775fe7f",
        "cursor": {
          "ref": "b3605481-45cf-4d64-acf3-d870c3d195eb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7fa65aa8-c496-4609-be23-b49b8750fa5a"
        },
        "item": {
          "id": "8cd39016-190b-4084-9def-1eee0775fe7f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5ed2fff-a681-43f1-adb7-400d490f0a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730064d9-46cc-4b70-9b83-afb98a9a7a17",
        "cursor": {
          "ref": "a97d7c33-d57b-4f3d-b0d6-62c6804921b0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9ce5f182-2d1d-49dc-8aba-16c87714357b"
        },
        "item": {
          "id": "730064d9-46cc-4b70-9b83-afb98a9a7a17",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ade8a860-ed7a-4132-b3a5-610899716dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d5ccc-9bdd-4dbc-a1e2-0f4651aff85a",
        "cursor": {
          "ref": "9c025769-3524-4257-b20f-e32b3a93ea01",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ce7cda1d-dc5c-494c-82d9-51832aa73d1c"
        },
        "item": {
          "id": "665d5ccc-9bdd-4dbc-a1e2-0f4651aff85a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0daf6b6-76c6-416d-871f-63910d39f20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf2f62-10ab-4fad-9b99-70edcba1e8a3",
        "cursor": {
          "ref": "cda359e1-3225-4a19-8959-190be9c9ea71",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a8eb4091-ff4f-4297-8904-836e09abcb3e"
        },
        "item": {
          "id": "acaf2f62-10ab-4fad-9b99-70edcba1e8a3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "507650db-2bab-414c-a44e-51098f9384b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52c50a9-9ce4-4764-8ba0-448fafcf2ba2",
        "cursor": {
          "ref": "67e83f63-7026-4224-9da6-d196f576b7ef",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ba2f808-1df9-43b8-9f34-7760ae145f79"
        },
        "item": {
          "id": "f52c50a9-9ce4-4764-8ba0-448fafcf2ba2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cf49fc43-2541-4913-ae0c-7aab5e1039b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592a38b9-438a-4230-ab2d-cc21346bb2a3",
        "cursor": {
          "ref": "f603f22c-7e90-44e1-bf33-a678a4188810",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "81361c8f-8c3a-4f18-8551-70384c190153"
        },
        "item": {
          "id": "592a38b9-438a-4230-ab2d-cc21346bb2a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c7e4afef-5e27-4b58-b114-6a374c300a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844dff84-25b8-41e2-b989-afa58b18379a",
        "cursor": {
          "ref": "8297b7f0-f220-4185-8b3f-1636b6bcd556",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "13c9a415-2e95-4bc2-86ab-a96d10a45bd3"
        },
        "item": {
          "id": "844dff84-25b8-41e2-b989-afa58b18379a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a041447c-4a43-4cd5-9a33-9ccd7d9131ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab96e34a-5f71-4522-b295-47b87f5f3065",
        "cursor": {
          "ref": "49db333c-27f7-448f-baf3-b498ac5be824",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c3392e4-4758-469a-9f6f-4722f7e646d7"
        },
        "item": {
          "id": "ab96e34a-5f71-4522-b295-47b87f5f3065",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5d1064a3-4cbe-4f9a-9154-5ee3dc3c052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188ae2d8-9be9-4660-b0ec-c8d1165de58a",
        "cursor": {
          "ref": "94b79b5b-2700-47ae-a7a6-63b756c09ec2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9b162756-740c-402e-ad2e-87e664476537"
        },
        "item": {
          "id": "188ae2d8-9be9-4660-b0ec-c8d1165de58a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b9d2097-0265-4ea8-8074-9c4c5b89dfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5c2d37-7f10-4093-88ca-6733f7e1827b",
        "cursor": {
          "ref": "40330c24-8ba9-4507-8aef-29ba6fe1fbc7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1122bcfc-a03b-4cf3-84fa-9a71bc1a0941"
        },
        "item": {
          "id": "dc5c2d37-7f10-4093-88ca-6733f7e1827b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c052c93-36ea-4b50-9ad7-4b39c7c91f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683ade37-1b9f-4ae7-9886-94f1abd7d3e0",
        "cursor": {
          "ref": "0c409635-6c1e-4fa9-89fd-b37156029ed0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e0ac666-7c11-4cad-9358-672a75ed34bd"
        },
        "item": {
          "id": "683ade37-1b9f-4ae7-9886-94f1abd7d3e0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ce169eb3-af83-4c77-a838-24d69cfbf1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcf864e-28bb-4752-8ed5-646defbabb33",
        "cursor": {
          "ref": "2e258e00-2049-4a38-8e1b-95c2b085b4c9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b0049df0-4412-4bb5-b16d-b6a4c2e3b7f8"
        },
        "item": {
          "id": "3dcf864e-28bb-4752-8ed5-646defbabb33",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d6481647-e95d-4004-ac50-ed2a9168efe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cac48c3-548b-4ac4-b098-2690fcc8ee05",
        "cursor": {
          "ref": "8d6263f5-fbc2-442c-83f9-eba00d0dd92e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b5d5d85-fe81-473e-b6f7-2cbbfb4b92e3"
        },
        "item": {
          "id": "9cac48c3-548b-4ac4-b098-2690fcc8ee05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "01f15558-71b0-4220-9792-68b6e393624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146bcdb6-708c-4cb7-b5f6-e2225cf6968c",
        "cursor": {
          "ref": "d599c127-f1a8-47c9-8941-a887a1d213c5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9b4bbfd3-4a97-4dea-aa91-22cdfd2069dc"
        },
        "item": {
          "id": "146bcdb6-708c-4cb7-b5f6-e2225cf6968c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "566de597-d68b-413c-b40f-e1786bd9f2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580a9cec-4ee8-42a6-94d2-46bd111fdbd8",
        "cursor": {
          "ref": "3a3ccba4-ac97-451d-b1e6-c14892106a31",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ce60725f-f1c2-4d89-8146-c339b0b447fe"
        },
        "item": {
          "id": "580a9cec-4ee8-42a6-94d2-46bd111fdbd8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "99284436-496f-4908-9cc9-0aa6b45c021c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93685e7-5775-4f65-8579-803a60f34af8",
        "cursor": {
          "ref": "aaad2668-d9bf-4322-8835-3eadc430e8c5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c8670d36-141f-4266-8dbf-d94c4b253593"
        },
        "item": {
          "id": "f93685e7-5775-4f65-8579-803a60f34af8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "432e6b44-3853-423d-aa8a-14e623e754c9",
          "status": "Created",
          "code": 201,
          "responseTime": 7273,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "336fb350-5279-4c6a-a379-ed69137744b7",
        "cursor": {
          "ref": "6bb66464-c72b-4048-805d-dd056c0f4eb5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "610a48fd-78fa-4efa-ace4-c211d7f6b45a"
        },
        "item": {
          "id": "336fb350-5279-4c6a-a379-ed69137744b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f310aed4-8fc2-4820-8324-062e841dedc3",
          "status": "Created",
          "code": 201,
          "responseTime": 6825,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd4f522-ab86-421a-a6fd-81c465127ca4",
        "cursor": {
          "ref": "813713b4-e05e-4e33-8c73-57cf45bc5353",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6ec6c4b9-e5d3-4d45-825f-b1c08a71a9aa"
        },
        "item": {
          "id": "dcd4f522-ab86-421a-a6fd-81c465127ca4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "44af863f-bebc-4652-b0e7-76a670f7713c",
          "status": "Created",
          "code": 201,
          "responseTime": 7416,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d5334f-aba4-48a2-9484-8714407d8519",
        "cursor": {
          "ref": "00a19670-d9ed-4fcb-a794-8b33939d38a2",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94f1d2f4-e973-4d93-ae59-0afaa9d64889"
        },
        "item": {
          "id": "e7d5334f-aba4-48a2-9484-8714407d8519",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ac387c60-dc6b-410b-be58-26e6b632e930",
          "status": "Created",
          "code": 201,
          "responseTime": 6770,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89821fe-73cc-4902-9ed0-c645f9e6aa64",
        "cursor": {
          "ref": "92839a6b-a3e1-4e29-b545-d51a99058450",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8987f0e6-b3d6-4bc9-a126-0563c6593de0"
        },
        "item": {
          "id": "f89821fe-73cc-4902-9ed0-c645f9e6aa64",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f9624a7b-5870-4ec9-a4bb-f5d99161ceec",
          "status": "Created",
          "code": 201,
          "responseTime": 6894,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e026a97-c290-4d4f-8e71-0978a20ce455",
        "cursor": {
          "ref": "9df0de43-05c1-4d69-af2c-91de1a8a6681",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6fc6837e-1ebe-4b33-b555-45d9761ce26f"
        },
        "item": {
          "id": "1e026a97-c290-4d4f-8e71-0978a20ce455",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3423c5a-6996-4be0-98f8-43dec0a0c0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "eb8346dc-efc7-4088-adb5-6e37621b4211",
        "cursor": {
          "ref": "291eb7f4-496c-473f-947e-4ea0a7c50933",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "12114fd7-b169-4635-91e5-389a9feba642"
        },
        "item": {
          "id": "eb8346dc-efc7-4088-adb5-6e37621b4211",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3997b5a4-a146-4054-add1-6c121492efc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a171d-aa84-4a26-a276-a44200768d51",
        "cursor": {
          "ref": "7588dc68-b9dc-4297-a304-c7e5b66afe7a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a0e89710-b58b-45d1-ae55-bf7c4c6669f8"
        },
        "item": {
          "id": "7f8a171d-aa84-4a26-a276-a44200768d51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef4dddca-03c8-434f-880c-ef72672872cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c23001-4d65-402d-820c-8d84eb0a8cfc",
        "cursor": {
          "ref": "1cce8635-02b8-4e26-8eb1-14e1d958da62",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5924ac7e-0c21-45b1-9cb9-c1cb6fd359f0"
        },
        "item": {
          "id": "d7c23001-4d65-402d-820c-8d84eb0a8cfc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f214b660-b966-4d52-9b3a-ebcf874e1405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0149f8b7-43f5-4c8f-a730-e155fc081975",
        "cursor": {
          "ref": "9af317b2-656d-40fe-a380-f33ebca8884a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e38e58d-24fb-498f-aad5-272f010f298d"
        },
        "item": {
          "id": "0149f8b7-43f5-4c8f-a730-e155fc081975",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a34ab13a-2d43-4002-a7ff-8ce64a2ba8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6e26a-3fb2-4c7b-8c73-031a67967f75",
        "cursor": {
          "ref": "dd72ee95-cb56-4ad7-a3ab-71e5d497c770",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9bfd0812-058c-4676-82be-435cd9876e06"
        },
        "item": {
          "id": "40a6e26a-3fb2-4c7b-8c73-031a67967f75",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "37b5d9be-7ce4-443b-8d63-4bce8c856e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0846835c-ccc7-4799-8df0-5b18293a4549",
        "cursor": {
          "ref": "a9dbef2d-ac1d-4e45-a655-a9c4fa2fca1a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "87ad4334-542b-4716-96e1-4fc995645917"
        },
        "item": {
          "id": "0846835c-ccc7-4799-8df0-5b18293a4549",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d534628a-b6ba-451d-9800-ff4578907ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce79a71a-71dc-49e5-890d-3fb9d5fdaa20",
        "cursor": {
          "ref": "ea898ab0-8fbb-4fb2-909a-ed5f8a938b5c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e6e21554-4391-4ff8-9c93-07228af0bb0c"
        },
        "item": {
          "id": "ce79a71a-71dc-49e5-890d-3fb9d5fdaa20",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69267f83-526e-460a-b42e-928a3954a396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e69310-e167-4024-b0ce-4d7e490750fb",
        "cursor": {
          "ref": "03699996-2c80-4258-8565-cf27e81c2032",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8e31c33b-8107-46ab-b015-78429317d7f6"
        },
        "item": {
          "id": "38e69310-e167-4024-b0ce-4d7e490750fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d6724e5-2ffb-4c22-9dac-ff0b25db4218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62b8186-30be-4b84-97b6-d07040baf00e",
        "cursor": {
          "ref": "98443a50-b6e6-4bd2-b181-70b03cd1d146",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "36248f98-e131-42cf-a499-c9602a6d0e2f"
        },
        "item": {
          "id": "b62b8186-30be-4b84-97b6-d07040baf00e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "04462c84-f526-4cd8-aa4f-8be0f52a98c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70de528-13e6-4da1-bd9d-423369fbadac",
        "cursor": {
          "ref": "0e6100cd-83f0-4770-8f29-e681348ff0d3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf3e4b5e-f768-4048-8b3a-d0031996e42c"
        },
        "item": {
          "id": "e70de528-13e6-4da1-bd9d-423369fbadac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5cee84f5-b3ba-432c-b77a-00c9afe25270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d582833-34e7-422f-8eb8-a782348c40ee",
        "cursor": {
          "ref": "30f00786-0108-41ef-bd20-8a57928d16b6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "badc9338-e5b5-4b1a-a00c-c352c39ef632"
        },
        "item": {
          "id": "0d582833-34e7-422f-8eb8-a782348c40ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38998227-5bbb-49ba-b0fb-4d5600905441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4529247e-c523-4a47-9f34-51cafcd0f5e1",
        "cursor": {
          "ref": "dcc08aba-c476-4387-a629-111d5798786d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ec71a499-463b-4d9d-b376-a15607e15376"
        },
        "item": {
          "id": "4529247e-c523-4a47-9f34-51cafcd0f5e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b22c3d5-59ab-42e4-af0f-3a4e3aed6976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc4965-aa07-449b-aab1-f87db8e50e80",
        "cursor": {
          "ref": "31b7c6e2-9ae3-451a-9f88-d448d1e535d9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4cae0b0a-4110-436d-b9b4-ba6fa0c6d0e6"
        },
        "item": {
          "id": "cebc4965-aa07-449b-aab1-f87db8e50e80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b1c373a-896d-4309-89b5-3655b9948716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce2f7d-9070-44dc-b022-71bef7d30477",
        "cursor": {
          "ref": "fbc71ef0-316f-4840-8496-c5be31b62d4b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6a469eab-4ede-4364-8a9f-b159cb2f7af4"
        },
        "item": {
          "id": "9fce2f7d-9070-44dc-b022-71bef7d30477",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "482edf28-a988-4bd2-b022-d07619c26fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047bb7d1-1976-448c-944b-eda4e7f5ac8f",
        "cursor": {
          "ref": "6e1c1f58-5af3-4f24-98aa-10f3ada2ba97",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ee12800f-4b22-4ca9-b0d8-bc1a3f8ce051"
        },
        "item": {
          "id": "047bb7d1-1976-448c-944b-eda4e7f5ac8f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e756fbe2-d8fa-47a0-93c0-3fdd5599c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69a85f9-4c11-4d9d-a283-16e07b3492f8",
        "cursor": {
          "ref": "e572ac2c-4f35-4cb3-86ab-698ae95249b6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7f7888ce-d0c7-4ae2-bbff-9540a04e2bce"
        },
        "item": {
          "id": "a69a85f9-4c11-4d9d-a283-16e07b3492f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8562001b-53c1-4d58-9af2-502b65ff860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b51f141-1b20-4aa1-a755-df80be5ec2c5",
        "cursor": {
          "ref": "764c588e-65bc-4e42-8856-ba11d65d4791",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ff74fb80-5128-4c57-91b9-d3e47414b62c"
        },
        "item": {
          "id": "0b51f141-1b20-4aa1-a755-df80be5ec2c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c3d160d5-aa5f-4fc0-a1a5-284fb3b16ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f7278-1835-42c1-ba38-46f941ad299a",
        "cursor": {
          "ref": "5ab29869-8bfb-4852-ade0-027d9252981f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dca55f05-1188-47a0-b5a9-8fec82bb00ea"
        },
        "item": {
          "id": "5b3f7278-1835-42c1-ba38-46f941ad299a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "08b4525d-331f-42fe-a04e-ac10544c625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b290e6e-0490-40bb-8451-0cd6fffe13f0",
        "cursor": {
          "ref": "3c8f0d31-2ed9-4553-bca7-e4976e952f27",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ce529b8-77e6-491f-a781-d5dcfee39030"
        },
        "item": {
          "id": "3b290e6e-0490-40bb-8451-0cd6fffe13f0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "515f7593-95eb-432c-86c1-fd7ed73a0c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd533c05-25a2-4576-b6d2-4a7c081b6135",
        "cursor": {
          "ref": "40cd0cf3-0e49-48e2-9768-ea99592476d6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ff278bd9-c536-491f-bef2-9e6934c811af"
        },
        "item": {
          "id": "dd533c05-25a2-4576-b6d2-4a7c081b6135",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9905b104-f510-49ba-8b31-ad46006f77c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e355b5-335c-4980-ba04-6eeda2e6f5e8",
        "cursor": {
          "ref": "cf1c9aa9-581a-4074-96c0-60cf54c8551d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "516338a4-a35e-4299-9ead-8a4373db0797"
        },
        "item": {
          "id": "c7e355b5-335c-4980-ba04-6eeda2e6f5e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a46e6210-4a37-4494-bd22-d326ee14adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb67a72b-f819-49e8-982a-f75bcce39f34",
        "cursor": {
          "ref": "e567dcee-8693-41ca-b55f-2104c04a7eeb",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c6b02fa0-82ce-4be4-8627-6eb467d945f3"
        },
        "item": {
          "id": "cb67a72b-f819-49e8-982a-f75bcce39f34",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "27cf0a0f-ce14-441b-83b9-226cf3035b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f809539b-957d-4192-b674-cc77af3f079e",
        "cursor": {
          "ref": "e186aef0-a2b0-4472-ba9d-b2e3a3a0c64d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "562ca88a-53df-47a2-9798-853351041412"
        },
        "item": {
          "id": "f809539b-957d-4192-b674-cc77af3f079e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22e089f5-afe8-42ff-9d44-a63b6398a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f69e556-83e2-4aa8-8197-c0033e569a80",
        "cursor": {
          "ref": "c68fd9a0-7631-483d-94fc-f2d7c8c3595f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5fbfcffc-df7a-4abb-8686-cc80034fe3dc"
        },
        "item": {
          "id": "4f69e556-83e2-4aa8-8197-c0033e569a80",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3b66518a-8093-42c5-8d15-d6690d6378f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1972959-238b-4a6e-9f63-5a20d86ab2d3",
        "cursor": {
          "ref": "179b731c-3e84-45bf-bf04-f5b7a20f2701",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "508d75cd-1ffa-41a0-8889-af2cb53a7329"
        },
        "item": {
          "id": "c1972959-238b-4a6e-9f63-5a20d86ab2d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0db42e3c-baad-4ccb-a38c-36a2633e40eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e2db96-e703-4796-80a0-857ace77e4ca",
        "cursor": {
          "ref": "a1b17d75-c041-46e6-871b-30d9dac82945",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "413aa728-6139-4035-8829-d993039c8d30"
        },
        "item": {
          "id": "61e2db96-e703-4796-80a0-857ace77e4ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7abc48bf-39a2-4b7b-80dd-0ecaedacb4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f1b0b6-0131-428d-a2a5-d19a27deb143",
        "cursor": {
          "ref": "c5360ce5-fe23-46a3-96c9-dbbd3e70aa74",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ebc6117d-7d9c-4a09-a766-e2f7f4c5e435"
        },
        "item": {
          "id": "43f1b0b6-0131-428d-a2a5-d19a27deb143",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8935b008-c7c2-4ec2-9034-48053ea7be54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3053cc86-99da-4693-9f5f-b8c22783975e",
        "cursor": {
          "ref": "08fcf95f-2ad9-4b3e-94d4-6c5ae4584102",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79d3aa3c-00d6-4860-8023-a1de4c883226"
        },
        "item": {
          "id": "3053cc86-99da-4693-9f5f-b8c22783975e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8ceebe1-4f78-4429-8941-9e033ca4b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d24318-b6c6-4635-bde9-c8d64d685bf0",
        "cursor": {
          "ref": "46c51a5e-adae-49fb-b3eb-6c00fd1eb075",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e4bf89a7-0391-453d-8d59-f9b96459a797"
        },
        "item": {
          "id": "04d24318-b6c6-4635-bde9-c8d64d685bf0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "311ef33e-f989-4de2-936d-fe5318da28fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576381ff-898b-4845-ac8c-f8b5646a4dea",
        "cursor": {
          "ref": "59159851-a523-4bd3-b03a-b61a6c77b2dc",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6f962877-2bbb-49e2-ac6c-5871ad6e9c25"
        },
        "item": {
          "id": "576381ff-898b-4845-ac8c-f8b5646a4dea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e48a8211-9224-44f6-9225-34051e6526bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77d0ce5-8ec9-4ae9-a702-fb864b23c735",
        "cursor": {
          "ref": "111461e6-497e-494c-91cf-b6280e14ed24",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c2fe370d-6af9-48f5-b980-2ffa3b0cf82a"
        },
        "item": {
          "id": "f77d0ce5-8ec9-4ae9-a702-fb864b23c735",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5bda38e1-456c-43e4-9782-579fb96327f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a49a3a9-ebb5-4a7d-83bb-5d6d8a00b876",
        "cursor": {
          "ref": "52d49bdb-a84f-4c01-84af-0684dfd78d77",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9dae9150-199d-4020-88fe-75ece061dfec"
        },
        "item": {
          "id": "3a49a3a9-ebb5-4a7d-83bb-5d6d8a00b876",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b40b489-3629-44f4-a8cd-f7e6bdab700d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f76027-5681-4891-abbc-a87ac1ac8b6e",
        "cursor": {
          "ref": "eb4ad7b0-94ed-4f29-a476-0eb74c9fd138",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a762a71e-c437-4bed-9107-40d38cad7081"
        },
        "item": {
          "id": "80f76027-5681-4891-abbc-a87ac1ac8b6e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb6f05c7-5000-4166-8eba-b2acb9d93349",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad115df5-da16-48df-91a9-348b792e2092",
        "cursor": {
          "ref": "0d547d24-4b04-42a6-a6ca-37229359ce90",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0151b9de-e1d2-4b6e-83b5-20c3df11e6ea"
        },
        "item": {
          "id": "ad115df5-da16-48df-91a9-348b792e2092",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f0f395b-e2b1-425b-bf39-82ef05cff30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1663479-1ccc-4cf4-8b75-1e2a19923d49",
        "cursor": {
          "ref": "59777477-cefb-4624-b0e7-b25d91b7f980",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "871217ef-07ad-4ee7-8588-3047d9b82854"
        },
        "item": {
          "id": "d1663479-1ccc-4cf4-8b75-1e2a19923d49",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "708f9921-5c97-4332-a669-9bc59659bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f11037-ed05-4a9e-8063-2bdc44cc8f6e",
        "cursor": {
          "ref": "c723e8cd-899f-478a-be94-d955ad59d765",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a35a1d2-94ec-4bb0-9466-702608e47a24"
        },
        "item": {
          "id": "10f11037-ed05-4a9e-8063-2bdc44cc8f6e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b461976b-e92d-40fd-ae0c-5b48d459f619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c5f3a-a458-49c9-a27b-af7f183e4941",
        "cursor": {
          "ref": "ff00e209-62b4-4e8c-a9ce-fcf6e481eb04",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d9293693-0827-4f42-a0dc-66479a29fef0"
        },
        "item": {
          "id": "958c5f3a-a458-49c9-a27b-af7f183e4941",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40e9d2ba-8436-4666-9366-499177cdbd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52b5656-f74b-491b-89eb-923a424a500f",
        "cursor": {
          "ref": "0c4dd788-7722-48b2-9208-8bb371f1abc3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "df4ed2f5-75a9-4c27-be3f-bf972e1bcf10"
        },
        "item": {
          "id": "f52b5656-f74b-491b-89eb-923a424a500f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c799bbfc-e41d-4b9a-b499-cc79a3e4c151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22540b3-e945-431d-8090-6c828c483a96",
        "cursor": {
          "ref": "88148830-b116-43d3-ab30-17fa844efc25",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e2db98f0-5810-4061-b275-036b067de0d9"
        },
        "item": {
          "id": "d22540b3-e945-431d-8090-6c828c483a96",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2720575e-620b-48c6-b8ab-6936ce55be82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1042ad-6093-465d-9d2e-fe9a6ca91b9c",
        "cursor": {
          "ref": "c1425a9e-0581-433a-8838-2d8cb8a1d344",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3001bae1-7b9f-49b2-99b9-30c56c5fc677"
        },
        "item": {
          "id": "7e1042ad-6093-465d-9d2e-fe9a6ca91b9c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fd8d3009-f7aa-4df8-83b0-648407bd51fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c9f617-a21b-4c12-be2c-862b843436f6",
        "cursor": {
          "ref": "6faefdde-b225-4f9e-a438-6f4ecd1ba24e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea48839e-7d2b-43b6-a839-7f854555316d"
        },
        "item": {
          "id": "a3c9f617-a21b-4c12-be2c-862b843436f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "98ea433b-2fa6-444d-b9f0-efc74a1037c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6601dda3-16ba-472a-9fa5-f8f4858df7cd",
        "cursor": {
          "ref": "277f4d3c-ba06-4a39-aae5-365359360b45",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "39809f49-1d26-4517-9aaf-fd9189a1daa9"
        },
        "item": {
          "id": "6601dda3-16ba-472a-9fa5-f8f4858df7cd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cbe2fef6-0d25-4391-923c-315706200014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6241b6-cb46-48e0-8c75-cfd360255f00",
        "cursor": {
          "ref": "9855e62d-1a8e-4ae4-ac9e-a8590d72faf0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3bd48771-8211-4e09-8e9c-3cc849f8e2a7"
        },
        "item": {
          "id": "3b6241b6-cb46-48e0-8c75-cfd360255f00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "31a4135f-20dc-4310-b6d5-cfd1e99dc08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a565b4-bfcf-4e1f-8c6d-73bcd0c72c01",
        "cursor": {
          "ref": "69f0a444-b7fe-4789-bb9c-18e9b1a3f145",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ae0c1c1-4402-44cd-bae8-dce55569f226"
        },
        "item": {
          "id": "37a565b4-bfcf-4e1f-8c6d-73bcd0c72c01",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7382bfd-1752-464a-be3a-8cf43116f63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d17339-7618-4d2e-a2bf-ade81f5f522e",
        "cursor": {
          "ref": "6606dfff-c86f-4649-abcc-bec97093739d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f2b2fe53-3624-41ba-9e6e-c97c5ed8ac7e"
        },
        "item": {
          "id": "d8d17339-7618-4d2e-a2bf-ade81f5f522e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fd71aabf-2d1a-4eff-b312-a378c5492350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd13be8-e9c2-4297-b9ca-67db89acde90",
        "cursor": {
          "ref": "312c1ded-1cec-4575-b135-f5c171c4f358",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a749c74e-76e9-4272-a65e-287efd76dae9"
        },
        "item": {
          "id": "edd13be8-e9c2-4297-b9ca-67db89acde90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c0603cd-2700-4948-9b4f-130c2de1a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff6b1a4-fa2e-4ed7-8236-4be4bfccc7af",
        "cursor": {
          "ref": "a840cccb-21ab-4d38-adec-050f8482654b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ba265e8f-b9f4-4d8c-ab77-5c0e736fe602"
        },
        "item": {
          "id": "aff6b1a4-fa2e-4ed7-8236-4be4bfccc7af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e98c4daf-333e-49cb-b548-37cd0f67d376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac218c6-3848-4b95-82b3-8dc3cc792afb",
        "cursor": {
          "ref": "8b60fbfd-51c4-408a-b3c6-3d4e33d4ea34",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d86673a8-ff3d-4e5d-b8ad-8e7274a081b3"
        },
        "item": {
          "id": "3ac218c6-3848-4b95-82b3-8dc3cc792afb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e72ef7c2-26da-494b-a516-2784c90f0bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082d0b7e-ec1a-47a7-b50f-550ae7859b34",
        "cursor": {
          "ref": "d7029ba8-071b-47df-891a-8968513fdbae",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a578ba8-4770-47bc-93ee-cbfca16fa8d8"
        },
        "item": {
          "id": "082d0b7e-ec1a-47a7-b50f-550ae7859b34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11df3df7-46ae-4b3a-b487-d06950a41dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a9628b-f2b2-4d43-a257-4c42c9db6e55",
        "cursor": {
          "ref": "0b219ad8-a6b6-418e-a570-fa070ae06108",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "da7802af-c230-4d01-a395-4de6ba04d616"
        },
        "item": {
          "id": "e6a9628b-f2b2-4d43-a257-4c42c9db6e55",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eb97e7ab-89d2-4e1b-816d-c7d2ae11c429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f70f4-9b83-48b9-b2b2-2a1a78d4c85f",
        "cursor": {
          "ref": "60ccd8cf-2f14-47c2-b06a-06e231885c74",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "698a34a4-0591-4907-9870-f568aa858578"
        },
        "item": {
          "id": "1a8f70f4-9b83-48b9-b2b2-2a1a78d4c85f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2b30cf7f-c757-4964-a405-9b6ad1bca998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d044591-eeaf-4612-bbaf-31cab048c0c8",
        "cursor": {
          "ref": "efac8cfc-6154-4f1d-a312-dfcc7173aead",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "519c3d15-f920-4ae0-a4c1-21b3d0cb4f40"
        },
        "item": {
          "id": "3d044591-eeaf-4612-bbaf-31cab048c0c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bb8bb3c2-9489-4eb7-bde1-68938ff841c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb753e5-d50c-4d88-a4f8-27dd3ed5d46f",
        "cursor": {
          "ref": "c27150c9-045c-4405-9648-392003a194e7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3bedf055-3637-429a-b99b-3565b43c9c0b"
        },
        "item": {
          "id": "6bb753e5-d50c-4d88-a4f8-27dd3ed5d46f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ea9c4af-ea13-41e3-b2e9-4da32a1d0378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79770153-6c83-48c4-87ed-6be34b0e16ab",
        "cursor": {
          "ref": "efc71a55-c5cf-4d28-bd5e-c65f659bf514",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a4838a2e-b383-499b-8789-3ad49be14149"
        },
        "item": {
          "id": "79770153-6c83-48c4-87ed-6be34b0e16ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eefd6e65-a324-4b87-a877-39b47708d300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084cdeb7-a8f5-4196-b2c5-f46450fec084",
        "cursor": {
          "ref": "665332c6-ef90-43ef-b100-25c3cb625939",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc3c6bd5-dcef-4fe7-9633-0b18ea8d3465"
        },
        "item": {
          "id": "084cdeb7-a8f5-4196-b2c5-f46450fec084",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e55328c9-3368-47e0-aa10-8f8ecb151d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b749bb-637e-4cad-8ab5-7d347e1fb7c5",
        "cursor": {
          "ref": "b3b8bd7a-824a-4d34-a0df-e8ccad88b767",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b5e8add1-8a5c-40c5-a5f1-29854024e1dd"
        },
        "item": {
          "id": "02b749bb-637e-4cad-8ab5-7d347e1fb7c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a5a95e0-2485-435d-bd43-75b4b0525e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0341394-2665-492c-aa21-19f8853a8776",
        "cursor": {
          "ref": "34da7a35-4bf5-4a5b-8945-3182d6f1aaac",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "72ed1154-d76a-4a49-995d-ae036cc82d04"
        },
        "item": {
          "id": "e0341394-2665-492c-aa21-19f8853a8776",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1a74cf2-42e6-48b3-b42b-21d82d6866cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7589638d-2e8a-4767-9e67-1ef2946fbd59",
        "cursor": {
          "ref": "2aefc0d8-2d79-4ea4-834f-796d57fcb0f1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c0672a9a-0411-4f0a-a2c6-35447f0516da"
        },
        "item": {
          "id": "7589638d-2e8a-4767-9e67-1ef2946fbd59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35bbac0a-9c75-4800-8d1b-18f4279ea6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39355b74-f689-4755-9051-410d4be1bccf",
        "cursor": {
          "ref": "13fd3df5-de1b-437a-bcf3-e6c420dfa75d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "06a4d124-73e5-4ff4-a7bd-1d641fd753e0"
        },
        "item": {
          "id": "39355b74-f689-4755-9051-410d4be1bccf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "150cfcec-f1f3-4e9c-ba81-2be15432a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8561ae-8146-4916-988d-9055e2e52ba8",
        "cursor": {
          "ref": "b4cdf2b8-9f3a-45cb-971f-7ecc9983ad0b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3eafb10d-375d-4047-8af5-38945872855a"
        },
        "item": {
          "id": "ec8561ae-8146-4916-988d-9055e2e52ba8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "518ad697-45ba-4da7-acf1-b236312fa602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db188eb-11f2-46b6-871c-f6c26d9e01c2",
        "cursor": {
          "ref": "b4f30922-5b5b-4905-8178-0dc68fe99dc7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "797adeaf-e963-4603-bc14-17724a8e8471"
        },
        "item": {
          "id": "6db188eb-11f2-46b6-871c-f6c26d9e01c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1c384588-af32-40d0-b726-b79935aef4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c7b6b8-6b17-4577-9948-5909ffe3dd60",
        "cursor": {
          "ref": "7e260feb-5465-453f-ba68-6de6c25d77a0",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "97cebe7c-09e5-4668-9f28-8ff4b8048a11"
        },
        "item": {
          "id": "35c7b6b8-6b17-4577-9948-5909ffe3dd60",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "93382a6d-1b7f-4302-bd2c-aa3b9900cad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed65cdc-1a44-48b9-b64a-3f39f89a39a4",
        "cursor": {
          "ref": "61259d3c-29f7-4e9c-a994-cec40bd8db5b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "358b19cb-4d32-49ef-aa37-bb679cd37e2a"
        },
        "item": {
          "id": "5ed65cdc-1a44-48b9-b64a-3f39f89a39a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e581b06-7e75-4f64-9a4b-7d45e4265ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7ea17e-7967-4ce3-a5ae-70a4491dcf58",
        "cursor": {
          "ref": "c9c5d635-a79b-4a27-be4e-2ecb53703219",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0b597525-34ca-4d2c-a302-7d3bf772336b"
        },
        "item": {
          "id": "fa7ea17e-7967-4ce3-a5ae-70a4491dcf58",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "129388f8-01ab-4c1d-b036-d86d819b1fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b4cf9-960c-4b84-9ee8-44cf33830d78",
        "cursor": {
          "ref": "62bec7b2-9cc4-4395-99b9-8414c24178c2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9bdfcb58-e109-47cd-ae4f-d32cf042bf4f"
        },
        "item": {
          "id": "361b4cf9-960c-4b84-9ee8-44cf33830d78",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "38598ae6-7aa0-44a7-bee6-04ced0e22066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c11f7f-d6e1-4706-ac71-e85418431853",
        "cursor": {
          "ref": "aabe6a31-9c54-45f9-b377-faaf41f67502",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "847263ff-8626-4c2b-8be2-e4de1ebb72ae"
        },
        "item": {
          "id": "13c11f7f-d6e1-4706-ac71-e85418431853",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8eb45964-5775-470a-8742-1796a9e3bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7851e628-bd81-4fbe-9cc6-a4d98d4cb832",
        "cursor": {
          "ref": "f49485f7-7ad4-41c4-a539-2ddd63ec7350",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4aed0211-108d-44a1-a2bd-42747f48a58d"
        },
        "item": {
          "id": "7851e628-bd81-4fbe-9cc6-a4d98d4cb832",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cb102397-db07-4463-8b36-9acac351cb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064d75f0-fe58-49af-baf5-2b2b0a2f9c58",
        "cursor": {
          "ref": "b96d1246-bb4c-4d55-a211-93df45b6a978",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8272402a-3584-4f1e-ac57-25aeba656ee6"
        },
        "item": {
          "id": "064d75f0-fe58-49af-baf5-2b2b0a2f9c58",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d993155c-8aff-4a67-ab12-99611d453712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fd6edd-3ad3-468e-bb66-c36b565a077e",
        "cursor": {
          "ref": "f0096ba7-8848-4069-a56b-83d5f70d9968",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0927b57-e9c9-4f6b-9f14-4a8638bea428"
        },
        "item": {
          "id": "e0fd6edd-3ad3-468e-bb66-c36b565a077e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2436e22d-e797-482f-95d2-e349da7966ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a439d-f842-4994-9fbf-e3b2a414a43d",
        "cursor": {
          "ref": "0711bcbd-f419-4862-bd02-458976e58fd0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "48651c67-2ee6-4317-946c-948c78e6fb37"
        },
        "item": {
          "id": "b04a439d-f842-4994-9fbf-e3b2a414a43d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a50b3d7-a8c4-406b-8c5e-309f90f11da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1fb5e9-1a5a-4c7c-8c77-4f1ea0497d23",
        "cursor": {
          "ref": "9db3678b-7e8c-4a0d-a82e-3d1fd724b838",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c9c4cef-71c5-4b7d-8b69-88e6f2eabe9d"
        },
        "item": {
          "id": "5f1fb5e9-1a5a-4c7c-8c77-4f1ea0497d23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c54e968d-406d-4284-96e2-b501dcb4be1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a7d4af-991b-4ff1-b86d-f98e0f9f4441",
        "cursor": {
          "ref": "62a4167f-ae84-445f-b55a-bd9710c9044e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ab83999-d7f8-40e0-ae08-7265f16b0a9a"
        },
        "item": {
          "id": "80a7d4af-991b-4ff1-b86d-f98e0f9f4441",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "56c51e0d-66c3-474d-ab6f-2c9d9aa10c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c12d1-bda3-40ad-97a9-83bad4d3aab9",
        "cursor": {
          "ref": "9e9aa7c3-d375-4df5-87fd-5936f710fdff",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1ccab9f-4b1c-4465-98d7-da17277f9aa0"
        },
        "item": {
          "id": "3b6c12d1-bda3-40ad-97a9-83bad4d3aab9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "40c5b0d9-2d4b-4627-bd55-97d76a1598e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd899fc3-0d74-44cf-b63a-b1fa2c72a2da",
        "cursor": {
          "ref": "1cae659f-5a36-4b76-b230-24dfc0f2f2a4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c44e97d2-41f8-4f54-a1fc-f95a89f73e92"
        },
        "item": {
          "id": "cd899fc3-0d74-44cf-b63a-b1fa2c72a2da",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "df401e9e-14ba-40a2-8b6d-c8e62346f5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27015469-2b74-45d4-a535-9d1cbb79d5a2",
        "cursor": {
          "ref": "c5dab314-f51d-4e39-8a9c-1a8880728853",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5e5869de-7ace-40cf-9598-e08acec2f1a9"
        },
        "item": {
          "id": "27015469-2b74-45d4-a535-9d1cbb79d5a2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8b52c9bb-dbcf-4e43-add2-7734f9244198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628afc22-4e5a-4c8d-b983-abf1171c797d",
        "cursor": {
          "ref": "212549ac-4980-43b0-a87a-0278aa9faf80",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1002d0fb-c33c-459b-add1-88fff7a8444a"
        },
        "item": {
          "id": "628afc22-4e5a-4c8d-b983-abf1171c797d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "82e6ea5b-1257-49b4-9c5b-cec9b34764f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbee072-7003-4313-8f19-e7ac1456ad0a",
        "cursor": {
          "ref": "a9687fe8-5f5c-4d1d-9468-aedd1dd93e12",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f2d6c043-e0d5-4387-966e-424472c00170"
        },
        "item": {
          "id": "2dbee072-7003-4313-8f19-e7ac1456ad0a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "797a593a-68a1-42e8-ba6b-9a6108dad0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d472f0b-d80b-4e9e-a2c0-c0202d898002",
        "cursor": {
          "ref": "10b5a926-5d4e-4f8c-85ff-fabf310f57bb",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "52e71778-37e2-43d3-b0f2-fecf89cf7077"
        },
        "item": {
          "id": "7d472f0b-d80b-4e9e-a2c0-c0202d898002",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f982010-1317-450c-bb7e-cc4da9af3257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b92901-d18b-4d54-9b79-a1d95e12c7bd",
        "cursor": {
          "ref": "da9423a3-1880-4454-b22a-72bcc4bcd426",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b33a380-b6ef-4283-99b1-168cc6fc3b04"
        },
        "item": {
          "id": "e2b92901-d18b-4d54-9b79-a1d95e12c7bd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6a8016ea-0af3-42dc-a5ca-48bbef2e6bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343ea63a-717a-4ae3-88e2-40e3626c92ca",
        "cursor": {
          "ref": "aa931450-1b98-47fb-96e3-b89de114320b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bff1fe6a-5e3a-48f2-8284-45afa0a5a2c9"
        },
        "item": {
          "id": "343ea63a-717a-4ae3-88e2-40e3626c92ca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f82cee7e-9abf-4c39-b882-f81148cf6f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baaa726-8efd-4885-ba60-e71e931f06b0",
        "cursor": {
          "ref": "42200d7c-af47-4fc4-832a-e8b8b6b8a2a7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eb4d8738-b6ca-4574-a7c3-882c913044f1"
        },
        "item": {
          "id": "0baaa726-8efd-4885-ba60-e71e931f06b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "642125df-0be6-4dbe-8880-7c5112ec3cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f47d723-f3fc-4c16-aabf-f6375c2f047c",
        "cursor": {
          "ref": "3b9c8021-fc5f-4058-9331-092eafcfb791",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "27625c9f-5964-4ee8-bede-fd50bb3376da"
        },
        "item": {
          "id": "2f47d723-f3fc-4c16-aabf-f6375c2f047c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2bf11659-48de-4ce1-8258-05b78f96ff44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ebc342-5039-4e60-963d-4d3f71a5e618",
        "cursor": {
          "ref": "6da6eee4-7fdf-42fa-8f13-802dfad01a8b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "159f6c39-590c-4521-9a88-9959cc195fbf"
        },
        "item": {
          "id": "e7ebc342-5039-4e60-963d-4d3f71a5e618",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1b668b07-7636-434c-aa97-3a53b9dcf034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a92e80-1e21-455a-8ef2-36e8cc440c3b",
        "cursor": {
          "ref": "ab818484-632d-47aa-8e3e-06f30c630c7f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3fcad785-9e42-46df-80f4-2258fa346d2d"
        },
        "item": {
          "id": "62a92e80-1e21-455a-8ef2-36e8cc440c3b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aa0e3052-4ac1-4ec8-8e62-c7aff4ac7ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14255d-6df8-47c5-9891-c5e0cc1b6f15",
        "cursor": {
          "ref": "93540acf-a754-4ed7-a2eb-5e5675417ec0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a3186bba-9d21-4b5c-a723-e550ecbe1593"
        },
        "item": {
          "id": "ee14255d-6df8-47c5-9891-c5e0cc1b6f15",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fe1cb889-4cae-4261-a316-f8f5157edfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163ad868-25c7-4252-8605-2dcdbd0d4bfc",
        "cursor": {
          "ref": "b6d4fdef-0e4a-43b1-b9ef-e53ed18631a7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd6d8dea-bd58-4836-b70a-dde54420d0ff"
        },
        "item": {
          "id": "163ad868-25c7-4252-8605-2dcdbd0d4bfc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a78aa3b4-3ff9-4b50-930f-2215de074c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9c9a84-c8db-43f3-aa10-e5799e42bcd6",
        "cursor": {
          "ref": "a7a1a202-2311-4d79-8c97-56c969a511b6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e32aeed9-22c9-45ac-832a-82765b6be1e4"
        },
        "item": {
          "id": "0f9c9a84-c8db-43f3-aa10-e5799e42bcd6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d88572ed-5ae5-4246-b6a4-20dbef99c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31d7bad-05fd-4d5e-ae97-1df486cc3df5",
        "cursor": {
          "ref": "31668ac0-4a23-4cb4-ba1b-a408f1b693b6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0315dcf0-047b-48c6-954a-b58ed7122f17"
        },
        "item": {
          "id": "f31d7bad-05fd-4d5e-ae97-1df486cc3df5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "52926ab2-12a7-41a8-979c-26e2207a4f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a8ebd5-59c8-4890-8b22-e7dcd4370e1c",
        "cursor": {
          "ref": "f97aabb2-d68b-4adb-a922-aac9ac6a8dce",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11ff6144-dd30-4d24-a767-66b3f8c1e486"
        },
        "item": {
          "id": "a2a8ebd5-59c8-4890-8b22-e7dcd4370e1c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee55326a-5320-4594-8733-92193e4c4da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6557ed9d-540a-442d-acfe-60ebd5a7b222",
        "cursor": {
          "ref": "1bdf4277-d55d-457e-a8d4-59e82e832894",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "73b03641-df9a-4e9e-a4b5-3ba46befeee0"
        },
        "item": {
          "id": "6557ed9d-540a-442d-acfe-60ebd5a7b222",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8a43a789-d252-4e14-9b83-984bcd55b614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae986e94-1a81-40bf-9f66-4a2e380c2e7c",
        "cursor": {
          "ref": "b174f123-ddfb-490a-9863-5d55cfbc67b4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0ee403f1-de19-41f4-9b5d-0d5dd1ad6ebd"
        },
        "item": {
          "id": "ae986e94-1a81-40bf-9f66-4a2e380c2e7c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7bb66d3c-2c75-41e1-b16d-083c6f5ca56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51f9f1b-a3de-4ac1-96a7-d19fb80a55ee",
        "cursor": {
          "ref": "73ec79b6-37d5-457d-b65f-a3120cf1629d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "24e37144-aa8c-4f21-b779-de5f4f41b06d"
        },
        "item": {
          "id": "e51f9f1b-a3de-4ac1-96a7-d19fb80a55ee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5a6c345b-5cf4-437e-b73c-c70764721701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524d4b7c-403f-43da-9973-d1e95163008e",
        "cursor": {
          "ref": "485d105b-c55d-44c7-8261-0c49664bf71d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "18466dff-7280-4245-8db9-6fbdc2f00c1f"
        },
        "item": {
          "id": "524d4b7c-403f-43da-9973-d1e95163008e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fb051c56-c984-4993-b02c-69f248926983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d13549-6735-4b18-9696-b534eedd1db3",
        "cursor": {
          "ref": "204cd6fb-b955-43a3-a94c-da1e3a3ee838",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "540e2820-c524-491f-816d-049d31db6d66"
        },
        "item": {
          "id": "17d13549-6735-4b18-9696-b534eedd1db3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a4a4030-4b72-4b52-8ce8-700164a949e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89aa9a7-b467-44d7-b153-46cae9d33ff2",
        "cursor": {
          "ref": "8e11a643-cd74-4135-a621-5004709545a3",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8f0c817-d28b-4404-9b67-b176ee323da3"
        },
        "item": {
          "id": "b89aa9a7-b467-44d7-b153-46cae9d33ff2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "66341dcf-0f30-4fa1-a590-c1eec73c66cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926a221-0dbb-4590-8704-2ecc80143d2e",
        "cursor": {
          "ref": "a051498d-3125-42a5-b605-d524f64db1a9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "275621eb-adaf-49bd-afe9-789940183557"
        },
        "item": {
          "id": "a926a221-0dbb-4590-8704-2ecc80143d2e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c2ed10f5-928c-4bab-a10b-9ee43d4d8b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0170535d-4ebf-4325-ae82-9371dd289043",
        "cursor": {
          "ref": "666bd85e-9c9f-4a59-951f-64e6a8bfaf94",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "02903b39-a08f-4fa8-a325-97b633f498eb"
        },
        "item": {
          "id": "0170535d-4ebf-4325-ae82-9371dd289043",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "020d2a90-10ff-48b6-8eae-53aa002f7a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63bf525-bdba-44ba-a5da-dfa77ee39d92",
        "cursor": {
          "ref": "9ed0aa20-1286-4986-ab7c-4686aad0981a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6dcf47d3-b138-4683-a6cf-7776d289ceb8"
        },
        "item": {
          "id": "a63bf525-bdba-44ba-a5da-dfa77ee39d92",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e06c35f7-3c64-4159-9b6c-9abde2b6e5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509ff4f0-7b0d-4294-9eeb-676707b481ba",
        "cursor": {
          "ref": "53754646-80c9-40fb-b9ea-13f6a5430079",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8a235c32-d69f-4726-96eb-4f25b6882776"
        },
        "item": {
          "id": "509ff4f0-7b0d-4294-9eeb-676707b481ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4a62cd60-0b8e-4a52-bfd5-8d62706dc939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9783c426-498e-462c-8598-e297a212c93c",
        "cursor": {
          "ref": "69b883e5-0bed-4df3-8717-577765d795f7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dc893a08-9727-4262-9490-5374c7ba6d65"
        },
        "item": {
          "id": "9783c426-498e-462c-8598-e297a212c93c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4793fef5-58fa-4ae2-b8e6-fe5e562725b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893cf5d6-ddb6-4677-af26-f1b7bc79c1ac",
        "cursor": {
          "ref": "cda9c535-b452-4ddc-abc9-da0c1b2166c0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "57319830-7bb8-4217-be9b-42c484b5b9dc"
        },
        "item": {
          "id": "893cf5d6-ddb6-4677-af26-f1b7bc79c1ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "90390d0d-f536-4a6c-b56b-31dbccca9875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9820399b-c9b9-40bf-8d53-7966bc2ec09a",
        "cursor": {
          "ref": "af2e5b50-9415-4cf0-813b-a0d5d6dff545",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "84af005a-3003-4044-938f-8aca86496cea"
        },
        "item": {
          "id": "9820399b-c9b9-40bf-8d53-7966bc2ec09a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3c84e0c3-c9f7-4a52-bae5-f0bc593a9e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b917ae7-c753-4157-b055-e65dd5501841",
        "cursor": {
          "ref": "be3aca19-84dd-4d80-9de3-12707b4be5ce",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75baf37d-235a-46e0-b625-99ba61f37843"
        },
        "item": {
          "id": "2b917ae7-c753-4157-b055-e65dd5501841",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ede83e0-5944-4870-8692-06912e8af138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5043506b-f3cc-49c0-8c9f-40ae986e340c",
        "cursor": {
          "ref": "331692b4-f87a-4993-9cef-13567e4afd2a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a606d176-ea31-4b3d-8b6c-bb186a39960d"
        },
        "item": {
          "id": "5043506b-f3cc-49c0-8c9f-40ae986e340c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "01427d2b-582f-4110-a6f9-b232bace3ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5987b6a2-e5c0-4039-b1b5-749e95e3d526",
        "cursor": {
          "ref": "20ea0462-6b28-4b4e-96a6-b8269ce57cbd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "edd8fc1f-8177-4c22-8184-026a377a21c2"
        },
        "item": {
          "id": "5987b6a2-e5c0-4039-b1b5-749e95e3d526",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cd40072d-5ff1-4b8f-90d5-97530bdd5420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31243952-7d35-4f0d-b1af-0cc1fb56e397",
        "cursor": {
          "ref": "1fb4395b-5c07-4e33-9dbb-64d93a4a45cf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e343eecf-419b-47fe-aa06-e31e823854cb"
        },
        "item": {
          "id": "31243952-7d35-4f0d-b1af-0cc1fb56e397",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "16fbfb7e-d063-4ba8-975b-06fb52613814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7379fec4-e5f8-461d-bc6b-f20ef3ed7e05",
        "cursor": {
          "ref": "622d3a58-348e-4a18-8dd6-7c35768f6e3e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "33fd84b2-01c3-453f-8b4a-5682e7f98f57"
        },
        "item": {
          "id": "7379fec4-e5f8-461d-bc6b-f20ef3ed7e05",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55b382e8-40c8-49ab-b3ac-e0b8547234f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316815e-20b8-4b9f-916b-9341de135780",
        "cursor": {
          "ref": "993c7ebb-f362-4285-b580-51d846d9348d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e9099be6-c7ed-4b9e-8260-75281e72f3f8"
        },
        "item": {
          "id": "6316815e-20b8-4b9f-916b-9341de135780",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8c784ef5-e204-4200-ad57-ce1c89830eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c1ceb7-4efe-4cfc-841e-6042302ec955",
        "cursor": {
          "ref": "36f1f86a-d0f1-42e5-af19-dc7ac2e6b8a8",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "426100d6-f6e8-4010-a179-80abd41e8985"
        },
        "item": {
          "id": "31c1ceb7-4efe-4cfc-841e-6042302ec955",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d72fb297-297d-4145-8f22-d015243157eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a814d0-0ce0-4642-954f-92840e85364c",
        "cursor": {
          "ref": "1408607e-0ff7-4ffd-9633-8ecf26c6c046",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b2a3e79b-51ce-45f3-b907-d6938edd4ae1"
        },
        "item": {
          "id": "88a814d0-0ce0-4642-954f-92840e85364c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5987a414-62e5-4d36-8e3e-3f5e9bc16a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7bed2f-2e15-41e5-82db-26440ea6fbde",
        "cursor": {
          "ref": "bea1756d-d318-415f-a495-325d7a8f55fb",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e0ddc969-ca8a-47b2-a0b7-b91857bb7450"
        },
        "item": {
          "id": "ef7bed2f-2e15-41e5-82db-26440ea6fbde",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4d0e1772-8420-4863-9b4e-58808cf219a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478c611b-e0c7-45cc-a998-ea5b1ac9c0ed",
        "cursor": {
          "ref": "6f5090be-45ae-440e-b16d-7cde6fcbdace",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6a3b5fb6-e19f-4b97-8e55-796d5295dabb"
        },
        "item": {
          "id": "478c611b-e0c7-45cc-a998-ea5b1ac9c0ed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fdbe6a61-5152-4aaa-84ba-bf6a09415825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b189fd-628e-4ad3-8786-43d84f2c6e12",
        "cursor": {
          "ref": "4898ce3d-b567-41b7-87cf-86d9f4f053cd",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a042e729-3ddb-479f-b567-25e138c2a3ca"
        },
        "item": {
          "id": "e6b189fd-628e-4ad3-8786-43d84f2c6e12",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7a91883f-0497-4243-8194-f483c249eb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc018970-64e6-42eb-8324-4c3c06a7ac10",
        "cursor": {
          "ref": "c762dedc-be57-4b33-862a-23016203fded",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e46c2b4-2b73-423f-8f8b-74cfb15f6e5f"
        },
        "item": {
          "id": "cc018970-64e6-42eb-8324-4c3c06a7ac10",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c1d88d7b-8d5a-4b9c-a56f-f71b81eca413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fb4fd4-c2ce-4fd0-aede-346000ab6023",
        "cursor": {
          "ref": "79d95967-ce27-4067-a6c7-7567cfcc6cff",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f09d1d7a-b57a-44a8-afad-ac2a3c282c6a"
        },
        "item": {
          "id": "a7fb4fd4-c2ce-4fd0-aede-346000ab6023",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fddcc927-8a9c-488d-ab6d-1320e435ec88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983152cd-05e2-4a71-a124-00abda8b7bbe",
        "cursor": {
          "ref": "c6b07a32-cd68-4a08-b2aa-2238267b9576",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "efd14e20-7fc9-4376-9d85-142f506db2cb"
        },
        "item": {
          "id": "983152cd-05e2-4a71-a124-00abda8b7bbe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "24cf72bc-96f4-4314-8594-6e0639c4bbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e95db-d6f4-4f20-a608-a9d2ea9cd6f8",
        "cursor": {
          "ref": "4fa32d31-53f2-43b0-93e0-c5bab0b2a406",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b26c7769-e718-4522-9554-b9e4d6d762fc"
        },
        "item": {
          "id": "d07e95db-d6f4-4f20-a608-a9d2ea9cd6f8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d6c60ba0-aacc-450c-884e-5869ad93223f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e29d9f3-df3c-4bfb-b0f2-60917968e1c4",
        "cursor": {
          "ref": "24fd89c6-abc4-42e3-b934-b8165b1f7887",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54455063-fe25-4e27-a600-ec5a677d7b00"
        },
        "item": {
          "id": "3e29d9f3-df3c-4bfb-b0f2-60917968e1c4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "61a7c080-d370-4195-83da-25133a46877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebfc0d1-6c8a-40cb-9400-f5f8dfc046c1",
        "cursor": {
          "ref": "d8505f29-63f7-40c0-a0fd-86dea1bf8e52",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f6b44edd-3ccf-4e67-a6e5-c8a9386afe0e"
        },
        "item": {
          "id": "eebfc0d1-6c8a-40cb-9400-f5f8dfc046c1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b086d2db-f28c-40c5-8428-608acb854a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad388101-500b-42eb-8fb2-01c08d4caddb",
        "cursor": {
          "ref": "eec2dfdf-6261-4609-b008-04d09f1422bb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "893a8e4b-6dd3-4264-8feb-90766e153383"
        },
        "item": {
          "id": "ad388101-500b-42eb-8fb2-01c08d4caddb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49d7cebb-f43a-48d5-a6df-f0a45479d9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d270fa72-6155-4862-95c8-6d7986226820",
        "cursor": {
          "ref": "6c45b540-0a7f-447f-a63e-4052e2c57acd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5e9be9f3-66cb-4e57-b790-4d915e0428ec"
        },
        "item": {
          "id": "d270fa72-6155-4862-95c8-6d7986226820",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7252c430-ef4f-4b7f-9875-b8c118e3fe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc69fd1-98a1-4e53-99df-b5475596ad98",
        "cursor": {
          "ref": "88dc44d8-fed5-4362-b34e-fa46655cf39e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e67dd93b-0a10-4e93-81b9-cc36e7985bf7"
        },
        "item": {
          "id": "0fc69fd1-98a1-4e53-99df-b5475596ad98",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "18b05805-60c2-4197-a8d0-111bcc52f7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df6d49-ebb1-4c4c-812e-2b151c142071",
        "cursor": {
          "ref": "b39de0d0-47ea-4f10-ac29-c3d6957e6abc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9430db04-8f7c-4127-aa4e-7cf9b8861bc1"
        },
        "item": {
          "id": "26df6d49-ebb1-4c4c-812e-2b151c142071",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04585046-ff19-45fc-85cc-6aa309ea3965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67efc27-693a-4f5b-8387-1af546e0b881",
        "cursor": {
          "ref": "d29f7735-182c-4a94-954a-ab296395acb7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "671ad1b8-fa15-4596-b18c-8f101a2767c7"
        },
        "item": {
          "id": "f67efc27-693a-4f5b-8387-1af546e0b881",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "452e67d8-da9a-4b80-9f91-84b8b0f07214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c226b-3358-427e-91df-24c7de6329cf",
        "cursor": {
          "ref": "328c2efa-16f1-4249-b998-e9b41883a371",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c317bebd-c256-4a2c-b3d3-c54726dfd0a0"
        },
        "item": {
          "id": "a07c226b-3358-427e-91df-24c7de6329cf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "689de8eb-57b3-467a-bb31-4fc5711f4c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5adf7b4-17ab-4690-abf5-c37fdbce0097",
        "cursor": {
          "ref": "acd71263-9333-43c6-a598-4cae46578d1b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "36bcc487-594a-4f08-a698-81211447ef3c"
        },
        "item": {
          "id": "a5adf7b4-17ab-4690-abf5-c37fdbce0097",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cb2faefe-c71b-4f7b-826e-1d9fb8d648df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6e747-ace3-4b76-a17a-e82171932a46",
        "cursor": {
          "ref": "3a9bd352-c23f-4773-8503-680e78768e7e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db9b6f4e-1378-4f9d-8baa-3f2c0b7e224d"
        },
        "item": {
          "id": "09c6e747-ace3-4b76-a17a-e82171932a46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0c70d46f-b0af-4773-9ecb-7dbb3d996b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc41b7ed-bc3b-42b4-89a6-b8eb54cd067f",
        "cursor": {
          "ref": "817c258a-6bff-4058-82a6-c1681e952669",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4e0a0bdb-3068-4f6c-9a71-072efb3c70ad"
        },
        "item": {
          "id": "bc41b7ed-bc3b-42b4-89a6-b8eb54cd067f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aeaad39c-4c70-4c60-8ad0-07becd565473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a859f147-47d2-4fe3-a496-86ae21e4b119",
        "cursor": {
          "ref": "223661a8-3e6c-4565-a8f4-46884a280869",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbb5df8f-96bf-47f2-9097-f688dc58c395"
        },
        "item": {
          "id": "a859f147-47d2-4fe3-a496-86ae21e4b119",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "796b7213-4e8f-492b-b9f4-9238d7236a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17999af-9541-49d5-a3a7-c43668acc6e9",
        "cursor": {
          "ref": "c137eeae-35bf-4eff-8631-bc0d326cc686",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f5fd2846-f97d-4a72-b7ae-219d622c8832"
        },
        "item": {
          "id": "d17999af-9541-49d5-a3a7-c43668acc6e9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a06c1002-b561-4201-ba46-fc73c3590916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56105fc0-404d-424d-afdf-c6e2a1388f01",
        "cursor": {
          "ref": "6cc6ac04-4917-444d-bcb4-3e9c277b5150",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "784883c4-6b03-4253-a4a8-cfaced76a60c"
        },
        "item": {
          "id": "56105fc0-404d-424d-afdf-c6e2a1388f01",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e1577724-5db3-40fa-8ee1-dd79fd52a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ec081-65eb-4347-a978-a133dcc5db42",
        "cursor": {
          "ref": "7a4ee1c4-ff27-4261-a37c-22689670de43",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fff13c27-ad4c-4e30-b673-ce66681a451b"
        },
        "item": {
          "id": "538ec081-65eb-4347-a978-a133dcc5db42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "218c7712-3bcc-495c-9b5c-597266591ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b3f50d-f829-47a0-ab2e-62fe3536e0ee",
        "cursor": {
          "ref": "fe7f9403-7849-4adc-abd5-3d3b88e40a49",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b6fff00a-3b92-476d-805e-11d0ecaa954e"
        },
        "item": {
          "id": "66b3f50d-f829-47a0-ab2e-62fe3536e0ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d51737d4-18d9-4f85-b2c5-c134d2cc8374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc78aedc-a48a-4764-9c9f-705bc064b8f2",
        "cursor": {
          "ref": "258e2bc9-7de0-42a9-8055-1c7b901f136f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ca9e91e-02c4-4951-950b-e07b22fda411"
        },
        "item": {
          "id": "fc78aedc-a48a-4764-9c9f-705bc064b8f2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "805bf895-bca0-4b73-be7c-74721f7cf515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a0922c-ac89-4d46-815d-2c04a2bdfaf9",
        "cursor": {
          "ref": "81229a81-f1ea-4512-9319-72d4ebcf87fc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cc25581e-10d7-43ce-9dcd-9ccef87a625e"
        },
        "item": {
          "id": "11a0922c-ac89-4d46-815d-2c04a2bdfaf9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d566ee50-df29-43a7-b6ab-18bd40f8f062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f13a4-6573-435d-abf3-63faa18e2b87",
        "cursor": {
          "ref": "1e13d195-7d82-4e6e-a9b7-3a69bbd8219c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cee25d6e-d0b2-447c-ba38-e80399f7ec6d"
        },
        "item": {
          "id": "fb4f13a4-6573-435d-abf3-63faa18e2b87",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2102ff97-0ef8-4906-9ac5-61574346750c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cff8331-614b-49d1-acf8-ae054b932901",
        "cursor": {
          "ref": "8f7a12fd-6e21-491b-82f2-f6b1a9b7df98",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3eb34bb-1229-4ab9-8bbd-4b417d6a3de5"
        },
        "item": {
          "id": "5cff8331-614b-49d1-acf8-ae054b932901",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "75276004-0c4d-4212-aa46-82f1fc94246f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a7f01c-2e39-4c07-b340-4d0218af6e48",
        "cursor": {
          "ref": "9a148401-b072-4fb5-9ec5-e0f047a877b6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29259705-ca75-43cb-93c8-0ef13dbcdc9a"
        },
        "item": {
          "id": "d5a7f01c-2e39-4c07-b340-4d0218af6e48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "159bd0f5-1016-4cee-8872-0d0fbbed7141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9cfee0-1005-4075-81c0-99bc445948eb",
        "cursor": {
          "ref": "2350d0fc-4a42-4839-a1de-51f3abf73f45",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f8a10edc-9c6d-4720-a656-b098dc307d07"
        },
        "item": {
          "id": "cf9cfee0-1005-4075-81c0-99bc445948eb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b3736241-4c76-4f41-8791-f3cc57098892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a10c69d-468d-4dc9-901d-e912e50e5304",
        "cursor": {
          "ref": "fc4abd15-6e22-43eb-8664-e45ecd59ed79",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d8f70409-8d47-499e-90b4-53a47dd8e965"
        },
        "item": {
          "id": "6a10c69d-468d-4dc9-901d-e912e50e5304",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fe2aa1b3-1f65-407c-9a95-1ef9c6ba6c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c78ebda-bbb2-4775-b1c5-0919410b6f7c",
        "cursor": {
          "ref": "f0fa9403-b7b8-476e-9ee3-c10a97b6bb7e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3658c59a-4ab9-4e76-9df0-83f23d8b8618"
        },
        "item": {
          "id": "7c78ebda-bbb2-4775-b1c5-0919410b6f7c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9ab5a18e-c334-4b7d-8ef9-a2e64e1a07ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decec1ca-105c-4bcb-b11d-cb353f31b324",
        "cursor": {
          "ref": "46948b84-4d15-4b4d-848b-587682b5504a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "56f19e35-6b1e-4c52-bd37-274394f5d8fe"
        },
        "item": {
          "id": "decec1ca-105c-4bcb-b11d-cb353f31b324",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "82b3f115-36cc-4dd5-8d06-2a811face9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58530436-479d-4ca3-aa1b-a70cfeae6aea",
        "cursor": {
          "ref": "983d6bd5-174c-482e-a5f8-f71a94061623",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8baeb20-1c04-4480-b9c9-ec0dd8623f3d"
        },
        "item": {
          "id": "58530436-479d-4ca3-aa1b-a70cfeae6aea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5c560ccc-5ddf-46f4-a725-c5fde7920d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c949a33d-fd45-4bb1-9d1b-5d8ce2c6ec12",
        "cursor": {
          "ref": "cd6cb315-cd52-44ae-921c-9fa4fda4d6fc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7843831d-7c9b-4769-9b46-3a054a6df50b"
        },
        "item": {
          "id": "c949a33d-fd45-4bb1-9d1b-5d8ce2c6ec12",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c83f21fe-43c7-45c6-a139-7ffe7dd6fd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56ae7e7-cca3-4150-86de-2b2fae4ab814",
        "cursor": {
          "ref": "913ab491-c9c6-4260-9cea-42970bd4f250",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "17fa3efb-e36f-4c85-9aa5-6d6556248790"
        },
        "item": {
          "id": "f56ae7e7-cca3-4150-86de-2b2fae4ab814",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "df4da7b3-7034-4b0e-8f3b-075878f6afca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dfc0c0-294d-4f44-b5ba-edd49def0db2",
        "cursor": {
          "ref": "2fb732ac-5903-452c-b662-9ae401b3fdd0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8e4af592-0059-4a7c-b613-a3a2efc9b98e"
        },
        "item": {
          "id": "28dfc0c0-294d-4f44-b5ba-edd49def0db2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6d6be3e7-bd4c-43c2-9b4d-393902f5a8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71922769-b9be-4f59-904f-6a0fde4acd08",
        "cursor": {
          "ref": "3e0ef5ec-ac9d-4490-9dc0-e3dbc0f18d44",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f282e8c2-ddb9-4296-ab0e-d6c780859daa"
        },
        "item": {
          "id": "71922769-b9be-4f59-904f-6a0fde4acd08",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "036856a2-bc67-4e2f-b1d8-2d3911353ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6561ed62-cfcd-40c2-b7d9-406502c9e250",
        "cursor": {
          "ref": "daa11929-174f-4619-ba64-7d9cbcdfcf02",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fb71524f-97e2-45e4-9e97-271c19eec1c9"
        },
        "item": {
          "id": "6561ed62-cfcd-40c2-b7d9-406502c9e250",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7bd323dd-cb19-4aaa-b3fe-982ad9d0e8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1921841-0d72-44c7-b2e5-929febd1d03d",
        "cursor": {
          "ref": "ffd1ca53-84c3-4de0-9e87-3750953f99a9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "95dd3787-618e-4b6a-b438-3cec7faae444"
        },
        "item": {
          "id": "a1921841-0d72-44c7-b2e5-929febd1d03d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d42119da-f823-477e-954a-3cd01307cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292594a-b09e-410d-9152-8bde55ddf12c",
        "cursor": {
          "ref": "b121aa82-0a87-4957-8584-f303da3ab03c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "33dc9550-63a7-4081-91a1-135d8c342b9b"
        },
        "item": {
          "id": "3292594a-b09e-410d-9152-8bde55ddf12c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ff75b30-6a84-44d1-8a77-b744560f29cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0722f-ecc8-4477-b8a3-22102d0cf5df",
        "cursor": {
          "ref": "1bfd7479-f3fc-4000-a977-4123a25c08a3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "05d589ca-9a01-48ee-849f-61d804af3127"
        },
        "item": {
          "id": "4cc0722f-ecc8-4477-b8a3-22102d0cf5df",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cee93bbd-8c2d-42e5-ae18-e611f6313ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c8487-56e4-4b8a-9a5f-21f99aabeb79",
        "cursor": {
          "ref": "6f7e6843-3109-4e49-b4fd-f849c4b57aa4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "49b3ec0a-9c88-4653-a6fb-73cd5f8431f2"
        },
        "item": {
          "id": "517c8487-56e4-4b8a-9a5f-21f99aabeb79",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2caefe4-e63a-4811-baf2-21ac7674a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1692296b-0efe-4c86-a9d2-967c7cb55774",
        "cursor": {
          "ref": "0e29480f-5f71-45d4-bc73-4801a62a4e0f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5197a173-b66a-4ccc-89f4-8979b4bdf628"
        },
        "item": {
          "id": "1692296b-0efe-4c86-a9d2-967c7cb55774",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3b02ce89-946d-4b8a-93d9-b68edc819f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71896a4-1daf-4b82-afd6-8d5b6142bf33",
        "cursor": {
          "ref": "ebc3be33-aec1-4848-a2b4-e500fa7580b4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2c6a8465-461b-43e7-a8a4-d875cd58dbd6"
        },
        "item": {
          "id": "d71896a4-1daf-4b82-afd6-8d5b6142bf33",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "87956358-95ba-4abf-9a83-c7b368e12ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ece3f9-fe68-42d3-ba37-45e761e6434d",
        "cursor": {
          "ref": "61a3b028-f050-48a8-b2d4-ebc39a0a87fb",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "338504f8-824b-40e6-a124-b574f73e5b4f"
        },
        "item": {
          "id": "75ece3f9-fe68-42d3-ba37-45e761e6434d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a70ba929-8587-492e-8e18-74414e09f2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb40c62-b762-4fad-9ca4-d9d37ca64a04",
        "cursor": {
          "ref": "9fd820a1-6673-4681-8d9f-0cacd56494b5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "35f5a3ef-aa81-45f2-9eac-2506428003af"
        },
        "item": {
          "id": "3fb40c62-b762-4fad-9ca4-d9d37ca64a04",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e1097ff4-c543-4765-a535-60b4e12cd435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb788609-bdf4-473a-b2e0-73d1f1036905",
        "cursor": {
          "ref": "45307a73-fe50-487b-b4ea-76ea8fb86dec",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "131ec725-d22a-47ea-abd9-ff3b4345f25b"
        },
        "item": {
          "id": "eb788609-bdf4-473a-b2e0-73d1f1036905",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5f40fd86-f570-427d-b805-160e23021843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70b7498-0b2e-4bc3-8d25-d315abc3246c",
        "cursor": {
          "ref": "d9c20097-d3a7-4bb3-861d-5aaeaa70b9e1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0854d23e-5958-464d-9ffb-625ae622f721"
        },
        "item": {
          "id": "c70b7498-0b2e-4bc3-8d25-d315abc3246c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "94e45a83-9d21-4564-8499-60e8d9274b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26cd96-5fa3-41cf-879b-de42e2c83a52",
        "cursor": {
          "ref": "f09bbbad-0eb2-4198-8acf-0e7c10f13f4f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "46ad7a2d-dc1a-422f-b3a2-99e2625a6f2a"
        },
        "item": {
          "id": "8f26cd96-5fa3-41cf-879b-de42e2c83a52",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ab5c9a6c-f26c-4a6c-bfde-bc5a77da300e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794e36d8-abee-404c-8714-d112f3787964",
        "cursor": {
          "ref": "cb7430da-1134-4b1a-9526-7a02d2cdd9cd",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5c1b36d6-c7e3-4c8a-b10d-f0e8ce86167a"
        },
        "item": {
          "id": "794e36d8-abee-404c-8714-d112f3787964",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a81d12f6-ce85-47b0-a16e-eb8205018d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3806cf-fd9b-4707-8e9e-a0cb292570b2",
        "cursor": {
          "ref": "6d02b949-0d0c-47ff-8daf-0cdd346d03e2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "04ba3f60-8ea4-4aee-b201-cef9f3ac757e"
        },
        "item": {
          "id": "ae3806cf-fd9b-4707-8e9e-a0cb292570b2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fd71d78a-fc31-4836-9522-b3dc1d1fda89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebc7b1f-099b-46f9-9921-65dcb1bec9f3",
        "cursor": {
          "ref": "27763f70-402c-4c3d-b2e8-f4eed9c91508",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1bda52b1-a8e1-48bd-ae67-4a91fd3d66ed"
        },
        "item": {
          "id": "4ebc7b1f-099b-46f9-9921-65dcb1bec9f3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f5bf8d76-a817-4208-a407-265bc47fe634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c049b4-d92f-4ebe-949a-823def193605",
        "cursor": {
          "ref": "3400de93-ab9f-4780-8035-bf3dcbfb261a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "528339b2-2bfc-4a22-8764-e2ce96b057b3"
        },
        "item": {
          "id": "76c049b4-d92f-4ebe-949a-823def193605",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "81742c02-4bfa-453f-b500-81b7e02a1e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a70794-709a-48ca-81e3-af436839ee79",
        "cursor": {
          "ref": "4dd0a89e-063d-4b11-b914-5038d1c31026",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e8f7b162-21a8-4cef-892d-3b6c9634ca1c"
        },
        "item": {
          "id": "08a70794-709a-48ca-81e3-af436839ee79",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c9792cfb-782f-4bfc-9483-ff7b8725eeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a2f17-5966-4f21-9b23-5848c1263939",
        "cursor": {
          "ref": "eefd8cc7-903a-41ac-8aa5-6ea40b26daa1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "55068368-fbc4-4af3-b430-f4b762dfb514"
        },
        "item": {
          "id": "3f5a2f17-5966-4f21-9b23-5848c1263939",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "732a1bec-5b4c-4b75-bceb-987e45a87e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3078c1-4060-4ef6-a4fc-78902311e0b4",
        "cursor": {
          "ref": "9f3f5cad-0e2e-4ade-b38b-c502f478c853",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f72c517e-56f9-4a22-ab96-a46fafe289f6"
        },
        "item": {
          "id": "6f3078c1-4060-4ef6-a4fc-78902311e0b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "84a59122-c560-417a-b380-394c2c314e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c62167c-0414-4035-8667-5dad168a677c",
        "cursor": {
          "ref": "05ce4623-e633-4d7c-8ac4-9a92e9285a91",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a444df00-14b3-40f7-8420-ecbe86605858"
        },
        "item": {
          "id": "6c62167c-0414-4035-8667-5dad168a677c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f31c58c-3be1-4a1f-bcc0-6bf905ce0e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900f4b39-e593-4ab2-a430-255c4f7ec8da",
        "cursor": {
          "ref": "a3a7411b-9826-44a1-8587-8fe8d12deeba",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8c984d5e-cc52-4075-88ed-10ff21c905de"
        },
        "item": {
          "id": "900f4b39-e593-4ab2-a430-255c4f7ec8da",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "538a518a-0222-4e57-bbc2-00a69b01a8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56372ba4-c45a-4115-a445-425347211eb0",
        "cursor": {
          "ref": "39ad8d1f-c7ae-41cc-82c5-434913244eb1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fbfd3df0-fa9b-4f4f-a1dd-047d182a4a3d"
        },
        "item": {
          "id": "56372ba4-c45a-4115-a445-425347211eb0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a1b045aa-b273-4069-9e06-b8f47764a1a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781ded04-79ec-495f-9f3e-516b149ec304",
        "cursor": {
          "ref": "754dd927-7dc1-4fed-b64e-5b5f5453f30e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "69f8056e-453d-4b52-9f8b-51ed8691d25b"
        },
        "item": {
          "id": "781ded04-79ec-495f-9f3e-516b149ec304",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c577ca6b-d95c-46b2-ac7a-1127ab775060",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "67903546-5e3f-4fca-af09-f2ac866d256e",
        "cursor": {
          "ref": "ae9a285a-3f42-480d-a843-0bce04c9ee46",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ecc19b78-b960-4c7f-aa56-3adf2650911e"
        },
        "item": {
          "id": "67903546-5e3f-4fca-af09-f2ac866d256e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5f9c2db-7c06-42a4-b9fb-e09073cdf908",
          "status": "OK",
          "code": 200,
          "responseTime": 1574,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7c5156-fe0d-4f94-b44e-d14eb7846438",
        "cursor": {
          "ref": "525b9ead-4f20-45e5-8539-e120e427e97e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6c6ddfab-1f77-45e2-8ec8-372d305dacb1"
        },
        "item": {
          "id": "eb7c5156-fe0d-4f94-b44e-d14eb7846438",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bfa17dfd-c553-4613-bf66-495f1bc1a69a",
          "status": "OK",
          "code": 200,
          "responseTime": 1264,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4797bcbc-b9c1-430e-a280-71a88a690af1",
        "cursor": {
          "ref": "a0cb6d4a-84a4-4fd3-8a2d-866a72a3bd1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb25955c-0704-4908-b646-e94de607549f"
        },
        "item": {
          "id": "4797bcbc-b9c1-430e-a280-71a88a690af1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85b0f4ad-2a56-431d-b192-756e39eba773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4797bcbc-b9c1-430e-a280-71a88a690af1",
        "cursor": {
          "ref": "a0cb6d4a-84a4-4fd3-8a2d-866a72a3bd1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cb25955c-0704-4908-b646-e94de607549f"
        },
        "item": {
          "id": "4797bcbc-b9c1-430e-a280-71a88a690af1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85b0f4ad-2a56-431d-b192-756e39eba773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b3ae2-c26a-45e0-93b8-79fd49a07094",
        "cursor": {
          "ref": "c6b81842-edc9-4b61-87a1-fa2b22dae761",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3f1e87e8-55da-4e5f-8225-832d05f1cc64"
        },
        "item": {
          "id": "685b3ae2-c26a-45e0-93b8-79fd49a07094",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "accebe2b-f210-4513-926c-c728e0733564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341edffa-a69d-41d8-b92b-39fe3be172ae",
        "cursor": {
          "ref": "bd3b9bd7-f9a2-4dee-8865-ac8ba3f56dd1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "91bd871c-2358-49bb-8b91-a066402d6397"
        },
        "item": {
          "id": "341edffa-a69d-41d8-b92b-39fe3be172ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc4205ef-d5a3-475a-ac14-14a95623fece",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}